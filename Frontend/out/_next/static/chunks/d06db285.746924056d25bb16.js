"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[48],{8477:function(e,t,n){var a="/index.js";n.r(t),n.d(t,{Human:function(){return L0},default:function(){return L0},defaults:function(){return A},env:function(){return iZ}});var r=n(4224),s=n(436).Buffer,i=Object.defineProperty,o=(e,t)=>{for(var n in(e=>{i(e,"__esModule",{value:!0})})(e),t)i(e,n,{get:t[n],enumerable:!0})},l=(e,t,n)=>(((e,t,n)=>{t in e?i(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n})(e,"symbol"!==typeof t?t+"":t,n),n),u=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)},c=(e,t,n)=>(u(e,t,"read from private field"),n?n.call(e):t.get(e)),d=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},p=(e,t,n,a)=>(u(e,t,"write to private field"),a?a.call(e,n):t.set(e,n),n);function h(...e){const t=new Date,n=`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds().toString().padStart(3,"0")}`;e&&console.log(n,"Human:",...e)}function f(e,t){const n=e.endsWith("/")?"":"/",a=t.startsWith(".")||t.startsWith("/")||t.startsWith("http:")||t.startsWith("https:")||t.startsWith("file:")?`${t}`:`${e}${n}${t}`;if(!a.toLocaleLowerCase().includes(".json"))throw new Error(`modelpath error: expecting json file: ${a}`);return a}var m=()=>"undefined"!==typeof performance?performance.now():parseInt((Number(r.hrtime.bigint())/1e3/1e3).toString());function g(e,t,n="config",a=[]){for(const r of Object.keys(t))if("object"===typeof t[r])g(e[r],t[r],r,a);else{const s=e&&"undefined"!==typeof e[r];s||a.push({reason:"unknown property",where:`${n}.${r} = ${t[r]}`});const i=e&&typeof e[r]===typeof t[r];s&&!i&&a.push({reason:"property type mismatch",where:`${n}.${r} = ${t[r]}`,expected:typeof e[r]})}return t.debug&&"config"===n&&a.length>0&&h("invalid configuration",a),a}function y(...e){const t=e=>e&&"object"===typeof e;return e.reduce(((e,n)=>(Object.keys(n||{}).forEach((a=>{const r=e[a],s=n[a];Array.isArray(r)&&Array.isArray(s)?e[a]=r.concat(...s):t(r)&&t(s)?e[a]=y(r,s):e[a]=s})),e)),{})}var A={backend:"",modelBasePath:"",wasmPath:"",debug:!0,async:!0,warmup:"full",cacheSensitivity:.7,skipAllowed:!1,deallocate:!1,filter:{enabled:!0,equalization:!1,width:0,height:0,flip:!1,return:!0,brightness:0,contrast:0,sharpness:0,blur:0,saturation:0,hue:0,negative:!1,sepia:!1,vintage:!1,kodachrome:!1,technicolor:!1,polaroid:!1,pixelate:0},gesture:{enabled:!0},face:{enabled:!0,detector:{modelPath:"blazeface.json",rotation:!0,maxDetected:1,skipFrames:99,skipTime:2500,minConfidence:.2,iouThreshold:.1,cropFactor:1.6,mask:!1,return:!1},mesh:{enabled:!0,modelPath:"facemesh.json"},iris:{enabled:!0,modelPath:"iris.json"},emotion:{enabled:!0,minConfidence:.1,skipFrames:99,skipTime:1500,modelPath:"emotion.json"},description:{enabled:!0,modelPath:"faceres.json",skipFrames:99,skipTime:3e3,minConfidence:.1},antispoof:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"antispoof.json"},liveness:{enabled:!1,skipFrames:99,skipTime:4e3,modelPath:"liveness.json"}},body:{enabled:!0,modelPath:"movenet-lightning.json",maxDetected:-1,minConfidence:.3,skipFrames:1,skipTime:200},hand:{enabled:!0,rotation:!0,skipFrames:99,skipTime:1e3,minConfidence:.5,iouThreshold:.2,maxDetected:-1,landmarks:!0,detector:{modelPath:"handtrack.json"},skeleton:{modelPath:"handlandmark-full.json"}},object:{enabled:!1,modelPath:"mb3-centernet.json",minConfidence:.2,iouThreshold:.4,maxDetected:10,skipFrames:99,skipTime:2e3},segmentation:{enabled:!1,modelPath:"selfie.json",blur:8}},x={};o(x,{Abs:()=>tt,Acos:()=>nt,Acosh:()=>at,AdadeltaOptimizer:()=>Gh,AdagradOptimizer:()=>Hh,AdamOptimizer:()=>jh,AdamaxOptimizer:()=>qh,Add:()=>rt,AddN:()=>st,All:()=>it,Any:()=>ot,ArgMax:()=>lt,ArgMin:()=>ut,Asin:()=>ct,Asinh:()=>dt,Atan:()=>pt,Atan2:()=>ft,Atanh:()=>ht,AvgPool:()=>mt,AvgPool3D:()=>yt,AvgPool3DGrad:()=>At,AvgPoolGrad:()=>gt,BackendWasm:()=>EK,BatchMatMul:()=>xt,BatchToSpaceND:()=>bt,Bincount:()=>vt,BroadcastArgs:()=>kt,BroadcastTo:()=>wt,Callback:()=>lI,CallbackList:()=>jA,Cast:()=>It,Ceil:()=>St,ClipByValue:()=>Nt,Complex:()=>Tt,ComplexAbs:()=>Ct,Concat:()=>Et,Conv2D:()=>Rt,Conv2DBackpropFilter:()=>Ft,Conv2DBackpropInput:()=>$t,Conv3D:()=>Mt,Conv3DBackpropFilterV2:()=>zt,Conv3DBackpropInputV2:()=>_t,Cos:()=>Ot,Cosh:()=>Dt,CropAndResize:()=>Lt,Cumsum:()=>Pt,CustomCallback:()=>KA,DataStorage:()=>Z,DenseBincount:()=>Wt,DepthToSpace:()=>Bt,DepthwiseConv2dNative:()=>Ut,DepthwiseConv2dNativeBackpropFilter:()=>Vt,DepthwiseConv2dNativeBackpropInput:()=>Gt,Diag:()=>Ht,Dilation2D:()=>jt,Dilation2DBackpropFilter:()=>Xt,Dilation2DBackpropInput:()=>qt,ENV:()=>Je,EarlyStopping:()=>dI,Einsum:()=>Zt,Elu:()=>Yt,EluGrad:()=>Jt,Environment:()=>Xe,Equal:()=>en,Erf:()=>Qt,Exp:()=>tn,ExpandDims:()=>nn,Expm1:()=>an,FFT:()=>rn,Fill:()=>sn,FlipLeftRight:()=>on,Floor:()=>ln,FloorDiv:()=>un,FromPixels:()=>nr,FusedBatchNorm:()=>cn,FusedConv2D:()=>sr,FusedDepthwiseConv2D:()=>ir,GPGPUContext:()=>m_,GatherNd:()=>pn,GatherV2:()=>dn,GraphModel:()=>HS,Greater:()=>hn,GreaterEqual:()=>fn,History:()=>XA,IFFT:()=>gn,Identity:()=>mn,Imag:()=>yn,InputSpec:()=>zA,IsFinite:()=>An,IsInf:()=>xn,IsNan:()=>bn,KernelBackend:()=>Y,LRN:()=>Fn,LRNGrad:()=>$n,LayerVariable:()=>FA,LayersModel:()=>ib,LeakyRelu:()=>vn,Less:()=>wn,LessEqual:()=>kn,LinSpace:()=>In,Log:()=>Sn,Log1p:()=>Nn,LogSoftmax:()=>Rn,LogicalAnd:()=>Tn,LogicalNot:()=>Cn,LogicalOr:()=>En,MathBackendCPU:()=>dT,MathBackendWebGL:()=>AO,Max:()=>Mn,MaxPool:()=>_n,MaxPool3D:()=>Dn,MaxPool3DGrad:()=>Pn,MaxPoolGrad:()=>On,MaxPoolWithArgmax:()=>Ln,Maximum:()=>zn,Mean:()=>Wn,Min:()=>Bn,Minimum:()=>Un,MirrorPad:()=>Vn,Mod:()=>Gn,MomentumOptimizer:()=>Kh,Multinomial:()=>Hn,Multiply:()=>jn,Neg:()=>qn,NonMaxSuppressionV3:()=>Kn,NonMaxSuppressionV4:()=>Zn,NonMaxSuppressionV5:()=>Yn,NotEqual:()=>Xn,OP_SCOPE_SUFFIX:()=>Os,OneHot:()=>Qn,OnesLike:()=>Jn,Optimizer:()=>Vh,OptimizerConstructors:()=>Yh,Pack:()=>ea,PadV2:()=>ta,Pool:()=>na,Pow:()=>aa,Prelu:()=>ra,Prod:()=>sa,RMSPropOptimizer:()=>Zh,RNN:()=>Av,Range:()=>ia,Rank:()=>ss,Real:()=>oa,RealDiv:()=>Kt,Reciprocal:()=>la,Reduction:()=>xh,Relu:()=>ua,Relu6:()=>ma,Reshape:()=>ca,ResizeBilinear:()=>ha,ResizeBilinearGrad:()=>fa,ResizeNearestNeighbor:()=>da,ResizeNearestNeighborGrad:()=>pa,Reverse:()=>ga,RotateWithOffset:()=>ar,Round:()=>ya,Rsqrt:()=>Aa,SGDOptimizer:()=>Xh,ScatterNd:()=>xa,Select:()=>ba,Selu:()=>va,Sequential:()=>db,Sigmoid:()=>Na,Sign:()=>Sa,Sin:()=>ka,Sinh:()=>Ia,Slice:()=>wa,Softmax:()=>$a,Softplus:()=>Ta,SpaceToBatchND:()=>Ra,SparseFillEmptyRows:()=>Ma,SparseReshape:()=>za,SparseSegmentMean:()=>_a,SparseSegmentSum:()=>Oa,SparseToDense:()=>Da,SplitV:()=>Fa,Sqrt:()=>Ca,Square:()=>La,SquaredDifference:()=>Pa,Step:()=>tr,StridedSlice:()=>Wa,StringNGrams:()=>Ba,StringSplit:()=>Ua,StringToHashBucketFast:()=>Va,Sub:()=>Ga,Sum:()=>Ea,SymbolicTensor:()=>_A,Tan:()=>Ha,Tanh:()=>ja,Tensor:()=>Yr,TensorBuffer:()=>Xr,Tile:()=>qa,TopK:()=>Xa,Transform:()=>Ka,Transpose:()=>Za,Unique:()=>Ya,Unpack:()=>Ja,UnsortedSegmentSum:()=>Qa,Variable:()=>Jr,ZerosLike:()=>er,_FusedMatMul:()=>rr,abs:()=>Rl,acos:()=>Fl,acosh:()=>$l,add:()=>Nl,addN:()=>Ml,all:()=>zl,any:()=>_l,argMax:()=>Ol,argMin:()=>Dl,asin:()=>Pl,asinh:()=>Ll,atan:()=>Wl,atan2:()=>Bl,atanh:()=>Ul,avgPool:()=>ru,avgPool3d:()=>su,backend:()=>Il,backend_util:()=>tf,basicLSTMCell:()=>cu,batchNorm:()=>pu,batchNorm2d:()=>hu,batchNorm3d:()=>fu,batchNorm4d:()=>mu,batchToSpaceND:()=>du,bincount:()=>gu,booleanMaskAsync:()=>Ap,broadcastArgs:()=>yu,broadcastTo:()=>Au,broadcast_util:()=>so,browser:()=>co,buffer:()=>Mi,callbacks:()=>pI,cast:()=>zi,ceil:()=>xu,clipByValue:()=>bu,clone:()=>_i,complex:()=>Ps,concat:()=>iu,concat1d:()=>vu,concat2d:()=>wu,concat3d:()=>ku,concat4d:()=>Iu,constraints:()=>mg,conv1d:()=>Nu,conv2d:()=>Su,conv2dTranspose:()=>Cu,conv3d:()=>Eu,conv3dTranspose:()=>Fu,copyRegisteredKernels:()=>Ar,cos:()=>$u,cosh:()=>Mu,cosineWindow:()=>Tp,cumsum:()=>zu,customGrad:()=>bc,data:()=>XS,denseBincount:()=>_u,deprecationWarn:()=>ll,depthToSpace:()=>Ou,depthwiseConv2d:()=>Du,deregisterOp:()=>xI,device_util:()=>Ns,diag:()=>Pu,dilation2d:()=>Lu,disableDeprecationWarnings:()=>ol,dispose:()=>fl,disposeVariables:()=>ul,div:()=>Cl,divNoNan:()=>Vu,dot:()=>Gu,dropout:()=>Sp,einsum:()=>Hu,elu:()=>ju,enableDebugMode:()=>il,enableProdMode:()=>sl,enclosingPowerOfTwo:()=>Np,engine:()=>cl,env:()=>Ze,equal:()=>Wu,erf:()=>qu,exp:()=>Xu,expandDims:()=>Ku,expm1:()=>Zu,eye:()=>Ju,fft:()=>qd,fill:()=>Qu,findBackend:()=>vl,findBackendFactory:()=>wl,floor:()=>ec,floorDiv:()=>Tl,forceHalfFloat:()=>bO,fused:()=>Ep,gather:()=>tc,gatherND:()=>Ip,gather_util:()=>Ao,getBackend:()=>xl,getGradient:()=>pr,getKernel:()=>dr,getKernelsForBackend:()=>hr,getThreadsCount:()=>VK,gpgpu_util:()=>jz,grad:()=>mc,grads:()=>gc,greater:()=>nc,greaterEqual:()=>ac,ifft:()=>Xd,imag:()=>rc,image:()=>Ph,inTopKAsync:()=>Cp,initializers:()=>ty,input:()=>mb,io:()=>Di,irfft:()=>Kd,isFinite:()=>sc,isInf:()=>ic,isNaN:()=>oc,keep:()=>ml,kernel_impls:()=>nm,layers:()=>bA,leakyRelu:()=>lc,less:()=>uc,lessEqual:()=>cc,linalg:()=>Lh,linspace:()=>dc,loadGraphModel:()=>jS,loadLayersModel:()=>fb,localResponseNormalization:()=>pc,log:()=>hc,log1p:()=>fc,logSigmoid:()=>Ic,logSoftmax:()=>Cc,logSumExp:()=>Dc,logicalAnd:()=>Pc,logicalNot:()=>Lc,logicalOr:()=>Wc,logicalXor:()=>Bc,losses:()=>Wh,matMul:()=>to,math:()=>eo,max:()=>Sc,maxPool:()=>Uc,maxPool3d:()=>Vc,maxPoolWithArgmax:()=>Gc,maximum:()=>Hc,mean:()=>jc,memory:()=>dl,meshgrid:()=>Kc,metrics:()=>Bk,min:()=>Zc,minimum:()=>Yc,mirrorPad:()=>Jc,mod:()=>Qc,model:()=>pb,models:()=>aI,moments:()=>td,movingAverage:()=>vp,mul:()=>El,multiRNNCell:()=>nd,multinomial:()=>ad,neg:()=>wc,nextFrame:()=>ef,norm:()=>bp,notEqual:()=>rd,oneHot:()=>no,ones:()=>Xc,onesLike:()=>sd,op:()=>Ds,outerProduct:()=>id,pad:()=>od,pad1d:()=>ld,pad2d:()=>ud,pad3d:()=>cd,pad4d:()=>dd,pool:()=>hd,pow:()=>fd,prelu:()=>md,print:()=>Oi,prod:()=>gd,profile:()=>pl,rand:()=>yd,randomGamma:()=>bd,randomNormal:()=>vd,randomUniform:()=>wd,range:()=>kd,ready:()=>Al,real:()=>Id,reciprocal:()=>Sd,registerBackend:()=>kl,registerCallbackConstructor:()=>gb,registerGradient:()=>mr,registerKernel:()=>fr,registerOp:()=>yI,regularizers:()=>rI,relu:()=>Nd,relu6:()=>Td,removeBackend:()=>bl,reshape:()=>au,reverse:()=>Cd,reverse1d:()=>Ed,reverse2d:()=>Rd,reverse3d:()=>Fd,reverse4d:()=>$d,rfft:()=>Yd,round:()=>Md,rsqrt:()=>zd,scalar:()=>_d,scatterND:()=>wp,scatter_util:()=>bo,selu:()=>Od,separableConv2d:()=>Dd,sequential:()=>hb,serialization:()=>Uo,setBackend:()=>yl,setPlatform:()=>Sl,setThreadsCount:()=>UK,setWasmPath:()=>PK,setWasmPaths:()=>LK,setWebGLContext:()=>mM,setdiff1dAsync:()=>Pd,shared:()=>pT,sigmoid:()=>ou,sign:()=>Ld,signal:()=>Dh,sin:()=>Wd,sinh:()=>Bd,slice:()=>lu,slice1d:()=>Ud,slice2d:()=>Vd,slice3d:()=>Gd,slice4d:()=>Hd,slice_util:()=>Io,softmax:()=>jd,softplus:()=>kc,spaceToBatchND:()=>pd,sparse:()=>Bh,sparseToDense:()=>kp,spectral:()=>Oh,split:()=>Zd,sqrt:()=>Jd,square:()=>ed,squaredDifference:()=>Qd,squeeze:()=>ep,stack:()=>tp,step:()=>np,stridedSlice:()=>ap,string:()=>Uh,sub:()=>Nc,sum:()=>Tc,sumOutType:()=>ps,tan:()=>rp,tanh:()=>uu,tensor:()=>Ws,tensor1d:()=>sp,tensor2d:()=>ip,tensor3d:()=>po,tensor4d:()=>op,tensor5d:()=>lp,tensor6d:()=>up,tensor_util:()=>Qr,test_util:()=>jo,tidy:()=>hl,tile:()=>Yu,time:()=>gl,topk:()=>cp,train:()=>Jh,transpose:()=>ao,truncatedNormal:()=>dp,unique:()=>pp,unregisterGradient:()=>yr,unregisterKernel:()=>gr,unsortedSegmentSum:()=>hp,unstack:()=>fp,upcastType:()=>ds,util:()=>br,valueAndGrad:()=>yc,valueAndGrads:()=>Ac,variable:()=>mp,variableGrads:()=>xc,version:()=>jK,version_converter:()=>qS,version_core:()=>rl,version_cpu:()=>gE,version_layers:()=>Mx,version_wasm:()=>GK,version_webgl:()=>xO,webgl:()=>vO,webgl_util:()=>pM,webgpu:()=>xj,where:()=>Bu,whereAsync:()=>yp,zeros:()=>qc,zerosLike:()=>Uu});var b=Object.create,v=Object.defineProperty,w=Object.getOwnPropertyDescriptor,k=Object.getOwnPropertyNames,I=Object.getPrototypeOf,S=Object.prototype.hasOwnProperty,N=e=>v(e,"__esModule",{value:!0}),T=(e,t)=>function(){return t||(0,e[Object.keys(e)[0]])((t={exports:{}}).exports,t),t.exports},C=(e,t)=>{for(var n in N(e),t)v(e,n,{get:t[n],enumerable:!0})},E=e=>((e,t,n)=>{if(t&&"object"===typeof t||"function"===typeof t)for(let a of k(t))S.call(e,a)||"default"===a||v(e,a,{get:()=>t[a],enumerable:!(n=w(t,a))||n.enumerable});return e})(N(v(null!=e?b(I(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e),R=T({"src/node_modules/long/src/long.js"(e,t){t.exports=a;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(N){}function a(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}a.prototype.__isLong__,Object.defineProperty(a.prototype,"__isLong__",{value:!0}),a.isLong=r;var s={},i={};function o(e,t){var n,a,r;return t?(r=0<=(e>>>=0)&&e<256)&&(a=i[e])?a:(n=u(e,(0|e)<0?-1:0,!0),r&&(i[e]=n),n):(r=-128<=(e|=0)&&e<128)&&(a=s[e])?a:(n=u(e,e<0?-1:0,!1),r&&(s[e]=n),n)}function l(e,t){if(isNaN(e))return t?A:y;if(t){if(e<0)return A;if(e>=f)return k}else{if(e<=-m)return I;if(e+1>=m)return w}return e<0?l(-e,t).neg():u(e%h|0,e/h|0,t)}function u(e,t,n){return new a(e,t,n)}a.fromInt=o,a.fromNumber=l,a.fromBits=u;var c=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return d(e.substring(1),t,n).neg();for(var r=l(c(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);if(o<8){var p=l(c(n,o));s=s.mul(p).add(l(u))}else s=(s=s.mul(r)).add(l(u))}return s.unsigned=t,s}function p(e,t){return"number"===typeof e?l(e,t):"string"===typeof e?d(e,t):u(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}a.fromString=d,a.fromValue=p;var h=4294967296,f=h*h,m=f/2,g=o(1<<24),y=o(0);a.ZERO=y;var A=o(0,!0);a.UZERO=A;var x=o(1);a.ONE=x;var b=o(1,!0);a.UONE=b;var v=o(-1);a.NEG_ONE=v;var w=u(-1,2147483647,!1);a.MAX_VALUE=w;var k=u(-1,-1,!0);a.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);a.MIN_VALUE=I;var S=a.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=l(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=l(c(e,6),this.unsigned),s=this,i="";;){var o=s.div(r),u=(s.sub(o.mul(r)).toInt()>>>0).toString(e);if((s=o).isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1===(1&this.low)},S.isEven=function(){return 0===(1&this.low)},S.equals=function(e){return r(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(x)},S.neg=S.negate,S.add=function(e){r(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,d=0,h=0,f=0;return h+=(f+=s+(65535&e.low))>>>16,d+=(h+=a+l)>>>16,c+=(d+=n+o)>>>16,c+=t+i,u((h&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=p(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return y;if(r(e)||(e=p(e)),n)return u(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(I))return e.isOdd()?I:y;if(e.eq(I))return this.isOdd()?I:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return l(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,c=65535&e.high,d=e.low>>>16,h=65535&e.low,f=0,m=0,A=0,x=0;return A+=(x+=i*h)>>>16,m+=(A+=s*h)>>>16,A&=65535,m+=(A+=i*d)>>>16,f+=(m+=a*h)>>>16,m&=65535,f+=(m+=s*d)>>>16,m&=65535,f+=(m+=i*c)>>>16,f+=t*h+a*d+s*c+i*o,u((A&=65535)<<16|(x&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=p(e)),e.isZero())throw Error("division by zero");var t,a,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?A:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return A;if(e.gt(this.shru(1)))return b;s=A}else{if(this.eq(I))return e.eq(x)||e.eq(v)?I:e.eq(I)?x:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?x:v:(a=this.sub(e.mul(t)),s=t.add(a.div(e)));if(e.eq(I))return this.unsigned?A:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(a=this;a.gte(e);){t=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:c(2,i-48),d=l(t),h=d.mul(e);h.isNegative()||h.gt(a);)h=(d=l(t-=o,this.unsigned)).mul(e);d.isZero()&&(d=x),s=s.add(d),a=a.sub(h)}return s},S.div=S.divide,S.modulo=function(e){return r(e)||(e=p(e)),n?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=p(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=p(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=p(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},a.fromBytes=function(e,t,n){return n?a.fromBytesLE(e,t):a.fromBytesBE(e,t)},a.fromBytesLE=function(e,t){return new a(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},a.fromBytesBE=function(e,t){return new a(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}}}),F=T({"(disabled):src/node_modules/node-fetch/browser.js"(){}}),$=T({"(disabled):util"(){}}),M=T({"src/node_modules/seedrandom/lib/alea.js"(e,t){!function(e,t,n){function a(e){var t=this,n=function(){var e=4022871197;return function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function r(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new a(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&r(s,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),z=T({"src/node_modules/seedrandom/lib/xor128.js"(e,t){!function(e,t,n){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new a(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&r(s,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),_=T({"src/node_modules/seedrandom/lib/xorwow.js"(e,t){!function(e,t,n){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new a(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&r(s,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),O=T({"src/node_modules/seedrandom/lib/xorshift7.js"(e,t){!function(e,t,n){function a(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function r(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new a(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&r(s,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),D=T({"src/node_modules/seedrandom/lib/xor4096.js"(e,t){!function(e,t,n){function a(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,s=t.i;return t.w=a=a+1640531527|0,n=r[s+34&127],e=r[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[s]=n^e,t.i=s,n+(a^a>>>16)|0},function(e,t){var n,a,r,s,i,o=[],l=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,l=Math.max(l,t.length)),r=0,s=-32;s<l;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(i=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(i=i+1640531527|0,r=0==(n=o[127&s]^=a+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,s=512;s>0;--s)a=o[r+34&127],n=o[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,o[r]=a^n;e.w=i,e.X=o,e.i=r}(t,e)}function r(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new a(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&r(s,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),P=T({"src/node_modules/seedrandom/lib/tychei.js"(e,t){!function(e,t,n){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function r(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new a(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&r(s,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)}}),L=T({"(disabled):crypto"(){}}),W=T({"src/node_modules/seedrandom/seedrandom.js"(e,t){!function(e,a,r){var s,i=256,o=r.pow(i,6),l=r.pow(2,52),u=2*l,c=255;function d(t,n,c){var d=[],y=m(f((n=1==n?{entropy:!0}:n||{}).entropy?[t,g(a)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(i):(t=new Uint8Array(i),(e.crypto||e.msCrypto).getRandomValues(t)),g(t)}catch(o){var n=e.navigator,r=n&&n.plugins;return[+new Date,e,r,e.screen,g(a)]}}():t,3),d),A=new p(d),x=function(){for(var e=A.g(6),t=o,n=0;e<l;)e=(e+n)*i,t*=i,n=A.g(1);for(;e>=u;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|A.g(4)},x.quick=function(){return A.g(4)/4294967296},x.double=x,m(g(A.S),a),(n.pass||c||function(e,t,n,a){return a&&(a.S&&h(a,A),e.state=function(){return h(A,{})}),n?(r.random=e,t):e})(x,y,"global"in n?n.global:this==r,n.state)}function p(e){var t,n=e.length,a=this,r=0,s=a.i=a.j=0,o=a.S=[];for(n||(e=[n++]);r<i;)o[r]=r++;for(r=0;r<i;r++)o[r]=o[s=c&s+e[r%n]+(t=o[r])],o[s]=t;(a.g=function(e){for(var t,n=0,r=a.i,s=a.j,o=a.S;e--;)t=o[r=c&r+1],n=n*i+o[c&(o[r]=o[s=c&s+t])+(o[s]=t)];return a.i=r,a.j=s,n})(i)}function h(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(f(e[n],t-1))}catch(s){}return a.length?a:"string"==r?e:e+"\0"}function m(e,t){for(var n,a=e+"",r=0;r<a.length;)t[c&r]=c&(n^=19*t[c&r])+a.charCodeAt(r++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(m(r.random(),a),"object"==typeof t&&t.exports){t.exports=d;try{s=L()}catch(y){}}else"function"==typeof define&&n.amdO?define((function(){return d})):r.seedrandom=d}("undefined"!==typeof self?self:e,[],Math)}}),B=T({"src/node_modules/seedrandom/index.js"(e,t){var n=M(),a=z(),r=_(),s=O(),i=D(),o=P(),l=W();l.alea=n,l.xor128=a,l.xorwow=r,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l}}),U=T({"(disabled):src/node_modules/string_decoder/index.js"(){}}),V=T({"(disabled):fs"(){}}),G=T({"(disabled):path"(){}}),H=T({"(disabled):worker_threads"(){}}),j=T({"(disabled):perf_hooks"(){}}),q=T({"(disabled):os"(){}}),X=T({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm-threaded-simd.js"(e,t){var s=function(){var e="undefined"!==typeof document&&document.currentScript?document.currentScript.src:void 0;return e=e||a,function(t){function a(){return z.buffer!=D&&ie(z.buffer),P}function s(){return z.buffer!=D&&ie(z.buffer),L}function i(){return z.buffer!=D&&ie(z.buffer),W}function o(){return z.buffer!=D&&ie(z.buffer),B}function l(){return z.buffer!=D&&ie(z.buffer),U}var u,c,d,p="undefined"!==typeof(t=t||{})?t:{};p.ready=new Promise((function(e,t){u=e,c=t})),"undefined"!==typeof r&&r.listeners&&(d={uncaughtException:r.listeners("uncaughtException"),unhandledRejection:r.listeners("unhandledRejection")});var h,f={};for(h in p)p.hasOwnProperty(h)&&(f[h]=p[h]);var m=[],g=function(e,t){throw t},y=!1,A=!1,x=!1,b=!1;y="object"===typeof window,A="function"===typeof importScripts,x="object"===typeof r&&"object"===typeof r.versions&&"string"===typeof r.versions.node,b=!y&&!x&&!A;var v=p.ENVIRONMENT_IS_PTHREAD||!1;v&&(D=p.buffer);var w,k,I,S,N,T="";function C(e){return p.locateFile?p.locateFile(e,T):T+e}if(x){var E;T=A?G().dirname(T)+"/":"//",w=function(e,t){return S||(S=V()),N||(N=G()),e=N.normalize(e),S.readFileSync(e,t?null:"utf8")},I=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),K(t.buffer),t},r.argv.length>1&&r.argv[1].replace(/\\/g,"/"),m=r.argv.slice(2),r.on("uncaughtException",(function(e){if(!(e instanceof kn))throw e})),r.on("unhandledRejection",Ne),g=function(e){r.exit(e)},p.inspect=function(){return"[Emscripten Module object]"};try{E=H()}catch(Tn){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),Tn}n.g.Worker=E.Worker}else b?("undefined"!=typeof read&&(w=function(e){return read(e)}),I=function(e){var t;return"function"===typeof readbuffer?new Uint8Array(readbuffer(e)):(K("object"===typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?m=scriptArgs:"undefined"!=typeof arguments&&(m=arguments),"function"===typeof quit&&(g=function(e){quit(e)}),"undefined"!==typeof print&&("undefined"===typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!==typeof printErr?printErr:print)):(y||A)&&(A?T=self.location.href:"undefined"!==typeof document&&document.currentScript&&(T=document.currentScript.src),"undefined"!==typeof e&&e&&(T=e),T=0!==T.indexOf("blob:")?T.substr(0,T.lastIndexOf("/")+1):"",x?(w=function(e,t){return S||(S=V()),N||(N=G()),e=N.normalize(e),S.readFileSync(e,t?null:"utf8")},I=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),K(t.buffer),t}):(w=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},A&&(I=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),k=function(e,t,n){var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onload=function(){200==a.status||0==a.status&&a.response?t(a.response):n()},a.onerror=n,a.send(null)}),function(e){document.title=e});x&&"undefined"===typeof performance&&(n.g.performance=j().performance);var R=p.print||console.log.bind(console),F=p.printErr||console.warn.bind(console);for(h in f)f.hasOwnProperty(h)&&(p[h]=f[h]);function $(e){$.shown||($.shown={}),$.shown[e]||($.shown[e]=1,F(e))}f=null,p.arguments&&(m=p.arguments),p.thisProgram&&p.thisProgram,p.quit&&(g=p.quit);var M;Atomics.load,Atomics.store,Atomics.compareExchange;p.wasmBinary&&(M=p.wasmBinary);var z,_,O=p.noExitRuntime||!0;"object"!==typeof WebAssembly&&Ne("no native wasm support detected");var D,P,L,W,B,U,X=!1;function K(e,t){e||Ne("Assertion failed: "+t)}function Z(e){var t=p["_"+e];return K(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function Y(e,t,n,a,r){var s={string:function(e){var t=0;if(null!==e&&void 0!==e&&0!==e){var n=1+(e.length<<2);ne(e,t=An(n),n)}return t},array:function(e){var t=An(e.length);return re(e,t),t}};var i=Z(e),o=[],l=0;if(a)for(var u=0;u<a.length;u++){var c=s[n[u]];c?(0===l&&(l=gn()),o[u]=c(a[u])):o[u]=a[u]}var d,p=i.apply(null,o);return d=p,p="string"===t?ee(d):"boolean"===t?Boolean(d):d,0!==l&&yn(l),p}function J(e,t,n,a){var r=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&r&&!a?Z(e):function(){return Y(e,t,n,arguments)}}function Q(e,t,n){for(var a=t+n,r="";!(t>=a);){var s=e[t++];if(!s)return r;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)r+=String.fromCharCode(s);else{var l=s-65536;r+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else r+=String.fromCharCode((31&s)<<6|i)}else r+=String.fromCharCode(s)}return r}function ee(e,t){return e?Q(s(),e,t):""}function te(e,t,n,a){if(!(a>0))return 0;for(var r=n,s=n+a-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343)o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i);if(o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-r}function ne(e,t,n){return te(e,s(),t,n)}function ae(e){for(var t=0,n=0;n<e.length;++n){var a=e.charCodeAt(n);a>=55296&&a<=57343&&(a=65536+((1023&a)<<10)|1023&e.charCodeAt(++n)),a<=127?++t:t+=a<=2047?2:a<=65535?3:4}return t}function re(e,t){a().set(e,t)}function se(e,t){return e%t>0&&(e+=t-e%t),e}function ie(e){D=e,p.HEAP8=P=new Int8Array(e),p.HEAP16=new Int16Array(e),p.HEAP32=W=new Int32Array(e),p.HEAPU8=L=new Uint8Array(e),p.HEAPU16=new Uint16Array(e),p.HEAPU32=B=new Uint32Array(e),p.HEAPF32=new Float32Array(e),p.HEAPF64=U=new Float64Array(e)}var oe,le=p.INITIAL_MEMORY||16777216;if(v)z=p.wasmMemory,D=p.buffer;else if(p.wasmMemory)z=p.wasmMemory;else if(!((z=new WebAssembly.Memory({initial:le/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw F("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");z&&(D=z.buffer),le=D.byteLength,ie(D);var ue=[],ce=[],de=[],pe=[],he=[];function fe(){if(!v){if(p.preRun)for("function"==typeof p.preRun&&(p.preRun=[p.preRun]);p.preRun.length;)xe(p.preRun.shift());Pe(ue)}}function me(){!0,v||Pe(ce)}function ge(){v||Pe(de)}function ye(){v||!0}function Ae(){if(!v){if(p.postRun)for("function"==typeof p.postRun&&(p.postRun=[p.postRun]);p.postRun.length;)be(p.postRun.shift());Pe(he)}}function xe(e){ue.unshift(e)}function be(e){he.unshift(e)}v||ce.push({func:function(){en()}});var ve=0,we=null,ke=null;function Ie(e){K(!v,"addRunDependency cannot be used in a pthread worker"),ve++,p.monitorRunDependencies&&p.monitorRunDependencies(ve)}function Se(e){if(ve--,p.monitorRunDependencies&&p.monitorRunDependencies(ve),0==ve&&(null!==we&&(clearInterval(we),we=null),ke)){var t=ke;ke=null,t()}}function Ne(e){p.onAbort&&p.onAbort(e),v&&console.error("Pthread aborting at "+(new Error).stack),F(e+=""),X=!0,1,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw c(t),t}function Te(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}p.preloadedImages={},p.preloadedAudios={};var Ce="data:application/octet-stream;base64,";function Ee(e){return Te(e,Ce)}var Re="file://";function Fe(e){return Te(e,Re)}var $e="tfjs-backend-wasm-threaded-simd.wasm";function Me(e){try{if(e==$e&&M)return new Uint8Array(M);if(I)return I(e);throw"both async and sync fetching of the wasm failed"}catch(t){Ne(t)}}function ze(){if(!M&&(y||A)){if("function"===typeof fetch&&!Fe($e))return fetch($e,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+$e+"'";return e.arrayBuffer()})).catch((function(){return Me($e)}));if(k)return new Promise((function(e,t){k($e,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Me($e)}))}function _e(){var e={a:Qt};function t(e,t){var n=e.exports;if(p.asm=n,oe=p.asm.nb,_=t,!v){var a=He.unusedWorkers.length;He.unusedWorkers.forEach((function(e){He.loadWasmModuleToWorker(e,(function(){--a||Se()}))}))}}function n(e){t(e.instance,e.module)}function a(t){return ze().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){F("failed to asynchronously prepare wasm: "+e),Ne(e)}))}if(v||Ie(),p.instantiateWasm)try{return p.instantiateWasm(e,t)}catch(Tn){return F("Module.instantiateWasm callback failed with error: "+Tn),!1}return(M||"function"!==typeof WebAssembly.instantiateStreaming||Ee($e)||Fe($e)||"function"!==typeof fetch?a(n):fetch($e,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return F("wasm streaming compile failed: "+e),F("falling back to ArrayBuffer instantiation"),a(n)}))}))).catch(c),{}}Ee($e)||($e=C($e));var Oe={10216:function(){throw"Canceled!"},10234:function(e,t){setTimeout((function(){dn(e,t)}),0)}};function De(){He.initRuntime()}function Pe(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"===typeof n?void 0===t.arg?oe.get(n)():oe.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(p)}}var Le={EPERM:63,ENOENT:44,ESRCH:71,EINTR:27,EIO:29,ENXIO:60,E2BIG:1,ENOEXEC:45,EBADF:8,ECHILD:12,EAGAIN:6,EWOULDBLOCK:6,ENOMEM:48,EACCES:2,EFAULT:21,ENOTBLK:105,EBUSY:10,EEXIST:20,EXDEV:75,ENODEV:43,ENOTDIR:54,EISDIR:31,EINVAL:28,ENFILE:41,EMFILE:33,ENOTTY:59,ETXTBSY:74,EFBIG:22,ENOSPC:51,ESPIPE:70,EROFS:69,EMLINK:34,EPIPE:64,EDOM:18,ERANGE:68,ENOMSG:49,EIDRM:24,ECHRNG:106,EL2NSYNC:156,EL3HLT:107,EL3RST:108,ELNRNG:109,EUNATCH:110,ENOCSI:111,EL2HLT:112,EDEADLK:16,ENOLCK:46,EBADE:113,EBADR:114,EXFULL:115,ENOANO:104,EBADRQC:103,EBADSLT:102,EDEADLOCK:16,EBFONT:101,ENOSTR:100,ENODATA:116,ETIME:117,ENOSR:118,ENONET:119,ENOPKG:120,EREMOTE:121,ENOLINK:47,EADV:122,ESRMNT:123,ECOMM:124,EPROTO:65,EMULTIHOP:36,EDOTDOT:125,EBADMSG:9,ENOTUNIQ:126,EBADFD:127,EREMCHG:128,ELIBACC:129,ELIBBAD:130,ELIBSCN:131,ELIBMAX:132,ELIBEXEC:133,ENOSYS:52,ENOTEMPTY:55,ENAMETOOLONG:37,ELOOP:32,EOPNOTSUPP:138,EPFNOSUPPORT:139,ECONNRESET:15,ENOBUFS:42,EAFNOSUPPORT:5,EPROTOTYPE:67,ENOTSOCK:57,ENOPROTOOPT:50,ESHUTDOWN:140,ECONNREFUSED:14,EADDRINUSE:3,ECONNABORTED:13,ENETUNREACH:40,ENETDOWN:38,ETIMEDOUT:73,EHOSTDOWN:142,EHOSTUNREACH:23,EINPROGRESS:26,EALREADY:7,EDESTADDRREQ:17,EMSGSIZE:35,EPROTONOSUPPORT:66,ESOCKTNOSUPPORT:137,EADDRNOTAVAIL:4,ENETRESET:39,EISCONN:30,ENOTCONN:53,ETOOMANYREFS:141,EUSERS:136,EDQUOT:19,ESTALE:72,ENOTSUP:138,ENOMEDIUM:148,EILSEQ:25,EOVERFLOW:61,ECANCELED:11,ENOTRECOVERABLE:56,EOWNERDEAD:62,ESTRPIPE:135};function We(e,t){if(e<=0||e>a().length||!0&e||t<0)return-28;if(0==t)return 0;t>=2147483647&&(t=1/0);var n=Atomics.load(i(),wn>>2),r=0;if(n==e&&(Atomics.compareExchange(i(),wn>>2,n,0)==n&&(r=1,--t<=0)))return 1;var s=Atomics.notify(i(),e>>2,t);if(s>=0)return s+r;throw"Atomics.notify returned an unexpected value "+s}function Be(e){if(v)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";i()[e+12>>2]=0;var t=He.pthreads[e];t.worker.terminate(),He.freeThreadData(t),He.runningWorkers.splice(He.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function Ue(e){if(v)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";He.pthreads[e].worker.postMessage({cmd:"cancel"})}function Ve(e){if(v)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";var t=He.pthreads[e];if(t){i()[e+12>>2]=0;var n=t.worker;He.returnWorkerToPool(n)}}p._emscripten_futex_wake=We;var Ge,He={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=0;e<8;++e)He.allocateUnusedWorker()},initRuntime:function(){for(var e=tn(228),t=0;t<57;++t)o()[e/4+t]=0;i()[e+12>>2]=e;var n=e+152;i()[n>>2]=n;var a=tn(512);for(t=0;t<128;++t)o()[a/4+t]=0;Atomics.store(o(),e+100>>2,a),Atomics.store(o(),e+40>>2,e),mn(e,!A,1),un(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;He.threadExitHandlers.length>0;)He.threadExitHandlers.pop()();v&&sn()&&on()},runExitHandlersAndDeinitThread:function(e,t){Atomics.store(o(),e+56>>2,1),Atomics.store(o(),e+60>>2,0),He.runExitHandlers(),Atomics.store(o(),e+4>>2,t),Atomics.store(o(),e+0>>2,1),We(e+0,2147483647),mn(0,0,0)},threadExit:function(e){var t=sn();t&&(He.runExitHandlersAndDeinitThread(t,e),v&&postMessage({cmd:"exit"}))},threadCancel:function(){He.runExitHandlersAndDeinitThread(sn(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in He.pthreads){(a=He.pthreads[e])&&a.worker&&He.returnWorkerToPool(a.worker)}He.pthreads={};for(var t=0;t<He.unusedWorkers.length;++t){(n=He.unusedWorkers[t]).terminate()}He.unusedWorkers=[];for(t=0;t<He.runningWorkers.length;++t){var n,a=(n=He.runningWorkers[t]).pthread;He.freeThreadData(a),n.terminate()}He.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=i()[e.threadInfoStruct+100>>2];i()[e.threadInfoStruct+100>>2]=0,nn(t),nn(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&nn(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){He.runWithoutMainThreadQueuedCalls((function(){delete He.pthreads[e.pthread.threadInfoStruct],He.unusedWorkers.push(e),He.runningWorkers.splice(He.runningWorkers.indexOf(e),1),He.freeThreadData(e.pthread),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){i()[vn>>2]=0;try{e()}finally{i()[vn>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(t,n){t.onmessage=function(e){var a=e.data,r=a.cmd;if(t.pthread&&(He.currentProxiedOperationCallerThread=t.pthread.threadInfoStruct),a.targetThread&&a.targetThread!=sn()){var s=He.pthreads[a.targetThread];return s?s.worker.postMessage(e.data,a.transferList):console.error('Internal error! Worker sent a message "'+r+'" to target pthread '+a.targetThread+", but that thread no longer exists!"),void(He.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===r)ln();else if("spawnThread"===r)Ut(e.data);else if("cleanupThread"===r)Ve(a.thread);else if("killThread"===r)Be(a.thread);else if("cancelThread"===r)Ue(a.thread);else if("loaded"===r)t.loaded=!0,n&&n(t),t.runPthread&&(t.runPthread(),delete t.runPthread);else if("print"===r)R("Thread "+a.threadId+": "+a.text);else if("printErr"===r)F("Thread "+a.threadId+": "+a.text);else if("alert"===r)alert("Thread "+a.threadId+": "+a.text);else if("exit"===r){t.pthread&&Atomics.load(o(),t.pthread.threadInfoStruct+64>>2)&&He.returnWorkerToPool(t)}else if("exitProcess"===r)try{Sn(a.returnCode)}catch(i){if(i instanceof kn)return;throw i}else"cancelDone"===r?He.returnWorkerToPool(t):"objectTransfer"===r?He.receiveObjectTransfer(e.data):"setimmediate"===e.data.target?t.postMessage(e.data):F("worker sent an unknown command "+r);He.currentProxiedOperationCallerThread=void 0},t.onerror=function(e){F("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},x&&(t.on("message",(function(e){t.onmessage({data:e})})),t.on("error",(function(e){t.onerror(e)})),t.on("exit",(function(e){}))),t.postMessage({cmd:"load",urlOrBlob:p.mainScriptUrlOrBlob||e,wasmMemory:z,wasmModule:_})},allocateUnusedWorker:function(){var e=C("tfjs-backend-wasm-threaded-simd.worker.js");He.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==He.unusedWorkers.length&&(He.allocateUnusedWorker(),He.loadWasmModuleToWorker(He.unusedWorkers[0])),He.unusedWorkers.length>0?He.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function je(e,t){xn(e,t),yn(e)}function qe(){return O}function Xe(e,t){return oe.get(e)(t)}function Ke(e,t,n,a){Ne("Assertion failed: "+ee(e)+", at: "+[t?ee(t):"unknown filename",n,a?ee(a):"unknown function"])}function Ze(e,t){_main(e,t)}function Ye(e){return i()[an()>>2]=e,e}function Je(e,t){if(v)return it(1,1,e,t)}function Qe(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(v)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=He.pthreads[e],a=n&&n.worker;if(!a)return;a.postMessage({cmd:"processThreadQueue"})}return 1}function et(){Ne()}function tt(e,t,n){var a=ut(t,n);return Oe[e].apply(null,a)}function nt(e,t){}function at(e,t,n){if(e<=0||e>a().length||!0&e)return-28;if(y){if(Atomics.load(i(),e>>2)!=t)return-6;var r=performance.now(),s=r+n;for(Atomics.exchange(i(),wn>>2,e);;){if((r=performance.now())>s)return Atomics.exchange(i(),wn>>2,0),-73;if(0==Atomics.exchange(i(),wn>>2,0))break;if(ln(),Atomics.load(i(),e>>2)!=t)return-6;Atomics.exchange(i(),wn>>2,e)}return 0}var o=Atomics.wait(i(),e>>2,t,n);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o}function rt(e,t,n){s().copyWithin(e,t,t+n)}function st(){return x?q().cpus().length:navigator.hardwareConcurrency}function it(e,t){for(var n=arguments.length-2,a=gn(),r=n,s=An(8*r),i=s>>3,o=0;o<n;o++){var u=arguments[2+o];l()[i+o]=u}var c=hn(e,r,s,t);return yn(a),c}p.establishStackSpace=je,p.getNoExitRuntime=qe,p.invokeEntryPoint=Xe,Ge=x?function(){var e=r.hrtime();return 1e3*e[0]+e[1]/1e6}:v?function(){return performance.now()-p.__performance_now_clock_drift}:"undefined"!==typeof dateNow?dateNow:function(){return performance.now()};var ot=[],lt=[];function ut(e,t){var n;for(lt.length=0,t>>=2;n=s()[e++];){var a=n<105;a&&1&t&&t++,lt.push(a?l()[t++>>1]:i()[t]),++t}return lt}function ct(e,t,n){ot.length=t;for(var a=n>>3,r=0;r<t;r++)ot[r]=l()[a+r];return(e<0?Oe[-e-1]:Jt[e]).apply(null,ot)}function dt(){return s().length}function pt(e){try{return z.grow(e-D.byteLength+65535>>>16),ie(z.buffer),1}catch(Tn){}}function ht(e){var t=dt();if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var a=1;a<=4;a*=2){var r=t*(1+.2/a);if(r=Math.min(r,e+100663296),pt(Math.min(n,se(Math.max(e,r),65536))))return!0}return!1}var ft={inEventHandler:0,removeAllEventListeners:function(){for(var e=ft.eventHandlers.length-1;e>=0;--e)ft._removeHandler(e);ft.eventHandlers=[],ft.deferredCalls=[]},registerRemoveEventListeners:function(){ft.removeEventListenersRegistered||(pe.push(ft.removeAllEventListeners),ft.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function a(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var r in ft.deferredCalls){var s=ft.deferredCalls[r];if(s.targetFunction==e&&a(s.argsList,n))return}ft.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),ft.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<ft.deferredCalls.length;++t)ft.deferredCalls[t].targetFunction==e&&(ft.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return ft.inEventHandler&&ft.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(ft.canPerformEventHandlerRequests())for(var e=0;e<ft.deferredCalls.length;++e){var t=ft.deferredCalls[e];ft.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<ft.eventHandlers.length;++n)ft.eventHandlers[n].target!=e||t&&t!=ft.eventHandlers[n].eventTypeString||ft._removeHandler(n--)},_removeHandler:function(e){var t=ft.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),ft.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++ft.inEventHandler,ft.currentEventHandler=e,ft.runDeferredCalls(),e.handlerFunc(t),ft.runDeferredCalls(),--ft.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),ft.eventHandlers.push(e),ft.registerRemoveEventListeners();else for(var n=0;n<ft.eventHandlers.length;++n)ft.eventHandlers[n].target==e.target&&ft.eventHandlers[n].eventTypeString==e.eventTypeString&&ft._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,a,r){var s=gn(),o=An(12);i()[o>>2]=n,i()[o+4>>2]=a,i()[o+8>>2]=r,fn(0,e,637534208,t,a,o),yn(s)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return He.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function mt(e){var t=ae(e)+1,n=tn(t);return ne(e,n,t),n}function gt(e,t,n,a){var r=gn(),s=An(12),o=0;t&&(o=mt(t)),i()[s>>2]=o,i()[s+4>>2]=n,i()[s+8>>2]=a,fn(0,e,657457152,0,o,s),yn(r)}function yt(e,t,n,a){gt(e,t=t?ee(t):"",n,a)}function At(e){return e>2?ee(e):e}var xt=[0,"undefined"!==typeof document?document:0,"undefined"!==typeof window?window:0];function bt(e){return e=At(e),xt[e]||("undefined"!==typeof document?document.querySelector(e):void 0)}function vt(e){return bt(e)}function wt(e,t,n){var a=vt(e);if(!a)return-4;if(a.canvasSharedPtr&&(i()[a.canvasSharedPtr>>2]=t,i()[a.canvasSharedPtr+4>>2]=n),!a.offscreenCanvas&&a.controlTransferredOffscreen)return a.canvasSharedPtr?(yt(i()[a.canvasSharedPtr+8>>2],e,t,n),1):-4;a.offscreenCanvas&&(a=a.offscreenCanvas);var r=!1;if(a.GLctxObject&&a.GLctxObject.GLctx){var s=a.GLctxObject.GLctx.getParameter(2978);r=0===s[0]&&0===s[1]&&s[2]===a.width&&s[3]===a.height}return a.width=t,a.height=n,r&&a.GLctxObject.GLctx.viewport(0,0,t,n),0}function kt(e,t,n){return v?it(2,1,e,t,n):wt(e,t,n)}function It(e,t,n){return vt(e)?wt(e,t,n):kt(e,t,n)}function St(e){}function Nt(e,t){}function Tt(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)return e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,a,r){t.drawArraysInstancedANGLE(e,n,a,r)},e.drawElementsInstanced=function(e,n,a,r,s){t.drawElementsInstancedANGLE(e,n,a,r,s)},1}function Ct(e){var t=e.getExtension("OES_vertex_array_object");if(t)return e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)},1}function Et(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)return e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)},1}function Rt(e){return!!(e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw"))}var Ft={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){Ft.lastError||(Ft.lastError=e)},getNewId:function(e){for(var t=Ft.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,a){for(var r="",s=0;s<t;++s){var o=a?i()[a+4*s>>2]:-1;r+=ee(i()[n+4*s>>2],o<0?void 0:o)}return r},createContext:function(e,t){var n=e.getContext("webgl",t);return n?Ft.registerContext(n,t):0},registerContext:function(e,t){var n=tn(8);i()[n+4>>2]=sn();var a={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=a),Ft.contexts[n]=a,("undefined"===typeof t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&Ft.initExtensions(a),n},makeContextCurrent:function(e){return Ft.currentContext=Ft.contexts[e],p.ctx=_t=Ft.currentContext&&Ft.currentContext.GLctx,!(e&&!_t)},getContext:function(e){return Ft.contexts[e]},deleteContext:function(e){Ft.currentContext===Ft.contexts[e]&&(Ft.currentContext=null),"object"===typeof ft&&ft.removeAllHandlersOnTarget(Ft.contexts[e].GLctx.canvas),Ft.contexts[e]&&Ft.contexts[e].GLctx.canvas&&(Ft.contexts[e].GLctx.canvas.GLctxObject=void 0),nn(Ft.contexts[e].handle),Ft.contexts[e]=null},initExtensions:function(e){if(e||(e=Ft.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;Tt(t),Ct(t),Et(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),Rt(t),(t.getSupportedExtensions()||[]).forEach((function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&t.getExtension(e)}))}},populateUniformTable:function(e){for(var t=Ft.programs[e],n=Ft.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},a=n.uniforms,r=_t.getProgramParameter(t,35718),s=0;s<r;++s){var i=_t.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var l=_t.getUniformLocation(t,o);if(l){var u=Ft.getNewId(Ft.uniforms);a[o]=[i.size,u],Ft.uniforms[u]=l;for(var c=1;c<i.size;++c){var d=o+"["+c+"]";l=_t.getUniformLocation(t,d),u=Ft.getNewId(Ft.uniforms),Ft.uniforms[u]=l}}}}},$t=["default","low-power","high-performance"];function Mt(e,t){var n=t>>2,a=i()[n+6],r={alpha:!!i()[n+0],depth:!!i()[n+1],stencil:!!i()[n+2],antialias:!!i()[n+3],premultipliedAlpha:!!i()[n+4],preserveDrawingBuffer:!!i()[n+5],powerPreference:$t[a],failIfMajorPerformanceCaveat:!!i()[n+7],majorVersion:i()[n+8],minorVersion:i()[n+9],enableExtensionsByDefault:i()[n+10],explicitSwapControl:i()[n+11],proxyContextToMainThread:i()[n+12],renderViaOffscreenBackBuffer:i()[n+13]},s=vt(e);return s?r.explicitSwapControl?0:Ft.createContext(s,r):0}function zt(e,t){return Mt(e,t)}var _t,Ot={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Ot.buffers[e];0===t||10===t?((1===e?R:F)(Q(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Ot.varargs+=4,i()[Ot.varargs-4>>2]},getStr:function(e){return ee(e)},get64:function(e,t){return e}};function Dt(e){return v?it(3,1,e):0}function Pt(e,t,n,a,r){if(v)return it(4,1,e,t,n,a,r)}function Lt(e,t,n,a){if(v)return it(5,1,e,t,n,a);for(var r=0,o=0;o<n;o++){for(var l=i()[t+8*o>>2],u=i()[t+(8*o+4)>>2],c=0;c<u;c++)Ot.printChar(e,s()[l+c]);r+=u}return i()[a>>2]=r,0}function Wt(e){var t=He.threadExitHandlers.pop();e&&t()}function Bt(e,t){He.threadExitHandlers.push((function(){oe.get(e)(t)}))}function Ut(e){if(v)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=He.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";He.runningWorkers.push(t);for(var n=tn(512),a=0;a<128;++a)i()[n+4*a>>2]=0;var r=e.stackBase+e.stackSize,s=He.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},l=s.threadInfoStruct>>2;Atomics.store(o(),l+16,e.detached),Atomics.store(o(),l+25,n),Atomics.store(o(),l+10,s.threadInfoStruct),Atomics.store(o(),l+20,e.stackSize),Atomics.store(o(),l+19,r),Atomics.store(o(),l+26,e.stackSize),Atomics.store(o(),l+28,r),Atomics.store(o(),l+29,e.detached);var u=rn()+40;Atomics.store(o(),l+43,u),t.pthread=s;var c={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){c.time=performance.now(),t.postMessage(c,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function Vt(e,t,n,a){if("undefined"===typeof SharedArrayBuffer)return F("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return F("pthread_create called with a null thread pointer!"),28;var r=[];if(v&&0===r.length)return pn(687865856,e,t,n,a);var s=0,l=0,u=0;t&&-1!=t?(s=i()[t>>2],s+=81920,l=i()[t+8>>2],u=0!==i()[t+12>>2]):s=2097152;var c=0==l;c?l=bn(16,s):K((l-=s)>0);for(var d=tn(228),p=0;p<57;++p)o()[(d>>2)+p]=0;i()[e>>2]=d,i()[d+12>>2]=d;var h=d+152;i()[h>>2]=h;var f={stackBase:l,stackSize:s,allocatedOwnStack:c,detached:u,startRoutine:n,pthread_ptr:d,arg:a,transferList:r};return v?(f.cmd="spawnThread",postMessage(f,r)):Ut(f),0}function Gt(){if(v){var e=sn();if(e)if(!Atomics.load(o(),e+56>>2))if(2==Atomics.load(o(),e+0>>2))throw"Canceled!"}}function Ht(){x||A||$("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function jt(e,t,n){if(!e)return F("pthread_join attempted on a null thread pointer!"),Le.ESRCH;if(v&&sn()==e)return F("PThread "+e+" is attempting to join to itself!"),Le.EDEADLK;if(!v&&cn()==e)return F("Main thread "+e+" is attempting to join to itself!"),Le.EDEADLK;if(i()[e+12>>2]!==e)return F("pthread_join attempted on thread "+e+", which does not point to a valid thread, or does not exist anymore!"),Le.ESRCH;if(Atomics.load(o(),e+64>>2))return F("Attempted to join thread "+e+", which was already detached!"),Le.EINVAL;for(n&&Ht();;){var a=Atomics.load(o(),e+0>>2);if(1==a){var r=Atomics.load(o(),e+4>>2);return t&&(i()[t>>2]=r),Atomics.store(o(),e+64>>2,1),v?postMessage({cmd:"cleanupThread",thread:e}):Ve(e),0}if(!n)return Le.EBUSY;Gt(),v||ln(),at(e+0,a,v?100:1)}}function qt(e,t){return jt(e,t,!0)}function Xt(e){if(v)return it(6,1,e);switch(e){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"===typeof navigator&&navigator.hardwareConcurrency||1}return Ye(28),-1}v||He.initMainThreadBlock();var Kt,Zt,Yt,Jt=[null,Je,kt,Dt,Pt,Lt,Xt],Qt={e:Ke,r:Ze,x:Qe,b:et,y:tt,j:nt,d:at,c:We,f:Ge,p:rt,A:st,u:ct,q:ht,v:It,i:St,s:Nt,w:zt,l:Dt,n:Pt,g:Lt,o:De,a:z||p.wasmMemory,z:Wt,k:Bt,h:Vt,m:qt,t:Xt},en=(_e(),p.___wasm_call_ctors=function(){return(en=p.___wasm_call_ctors=p.asm.B).apply(null,arguments)}),tn=(p._init=function(){return(p._init=p.asm.C).apply(null,arguments)},p._init_with_threads_count=function(){return(p._init_with_threads_count=p.asm.D).apply(null,arguments)},p._get_threads_count=function(){return(p._get_threads_count=p.asm.E).apply(null,arguments)},p._register_tensor=function(){return(p._register_tensor=p.asm.F).apply(null,arguments)},p._dispose_data=function(){return(p._dispose_data=p.asm.G).apply(null,arguments)},p._dispose=function(){return(p._dispose=p.asm.H).apply(null,arguments)},p._Abs=function(){return(p._Abs=p.asm.I).apply(null,arguments)},p._Add=function(){return(p._Add=p.asm.J).apply(null,arguments)},p._AddN=function(){return(p._AddN=p.asm.K).apply(null,arguments)},p._All=function(){return(p._All=p.asm.L).apply(null,arguments)},p._Any=function(){return(p._Any=p.asm.M).apply(null,arguments)},p._ArgMax=function(){return(p._ArgMax=p.asm.N).apply(null,arguments)},p._AvgPool=function(){return(p._AvgPool=p.asm.O).apply(null,arguments)},p._BatchMatMul=function(){return(p._BatchMatMul=p.asm.P).apply(null,arguments)},p._Ceil=function(){return(p._Ceil=p.asm.Q).apply(null,arguments)},p._ClipByValue=function(){return(p._ClipByValue=p.asm.R).apply(null,arguments)},p._Conv2D=function(){return(p._Conv2D=p.asm.S).apply(null,arguments)},p._Conv2DBackpropInput=function(){return(p._Conv2DBackpropInput=p.asm.T).apply(null,arguments)},p._Cos=function(){return(p._Cos=p.asm.U).apply(null,arguments)},p._Cosh=function(){return(p._Cosh=p.asm.V).apply(null,arguments)},p._CropAndResize=function(){return(p._CropAndResize=p.asm.W).apply(null,arguments)},p._Cumsum=function(){return(p._Cumsum=p.asm.X).apply(null,arguments)},p._DepthToSpace=function(){return(p._DepthToSpace=p.asm.Y).apply(null,arguments)},p._DepthwiseConv2dNative=function(){return(p._DepthwiseConv2dNative=p.asm.Z).apply(null,arguments)},p._Elu=function(){return(p._Elu=p.asm._).apply(null,arguments)},p._Equal=function(){return(p._Equal=p.asm.$).apply(null,arguments)},p._Exp=function(){return(p._Exp=p.asm.aa).apply(null,arguments)},p._FlipLeftRight=function(){return(p._FlipLeftRight=p.asm.ba).apply(null,arguments)},p._Floor=function(){return(p._Floor=p.asm.ca).apply(null,arguments)},p._FloorDiv=function(){return(p._FloorDiv=p.asm.da).apply(null,arguments)},p._FusedBatchNorm=function(){return(p._FusedBatchNorm=p.asm.ea).apply(null,arguments)},p._FusedConv2D=function(){return(p._FusedConv2D=p.asm.fa).apply(null,arguments)},p._FusedDepthwiseConv2D=function(){return(p._FusedDepthwiseConv2D=p.asm.ga).apply(null,arguments)},p._Gather=function(){return(p._Gather=p.asm.ha).apply(null,arguments)},p._GatherNd=function(){return(p._GatherNd=p.asm.ia).apply(null,arguments)},p._Greater=function(){return(p._Greater=p.asm.ja).apply(null,arguments)},p._GreaterEqual=function(){return(p._GreaterEqual=p.asm.ka).apply(null,arguments)},p._LeakyRelu=function(){return(p._LeakyRelu=p.asm.la).apply(null,arguments)},p._Less=function(){return(p._Less=p.asm.ma).apply(null,arguments)},p._LessEqual=function(){return(p._LessEqual=p.asm.na).apply(null,arguments)},p._Log=function(){return(p._Log=p.asm.oa).apply(null,arguments)},p._LogicalAnd=function(){return(p._LogicalAnd=p.asm.pa).apply(null,arguments)},p._Max=function(){return(p._Max=p.asm.qa).apply(null,arguments)},p._MaxPool=function(){return(p._MaxPool=p.asm.ra).apply(null,arguments)},p._Maximum=function(){return(p._Maximum=p.asm.sa).apply(null,arguments)},p._Mean=function(){return(p._Mean=p.asm.ta).apply(null,arguments)},p._Min=function(){return(p._Min=p.asm.ua).apply(null,arguments)},p._Minimum=function(){return(p._Minimum=p.asm.va).apply(null,arguments)},p._MirrorPad=function(){return(p._MirrorPad=p.asm.wa).apply(null,arguments)},p._Multiply=function(){return(p._Multiply=p.asm.xa).apply(null,arguments)},p._Neg=function(){return(p._Neg=p.asm.ya).apply(null,arguments)},p._NonMaxSuppressionV3=function(){return(p._NonMaxSuppressionV3=p.asm.za).apply(null,arguments)},p._NonMaxSuppressionV4=function(){return(p._NonMaxSuppressionV4=p.asm.Aa).apply(null,arguments)},p._NonMaxSuppressionV5=function(){return(p._NonMaxSuppressionV5=p.asm.Ba).apply(null,arguments)},p._NotEqual=function(){return(p._NotEqual=p.asm.Ca).apply(null,arguments)},p._OneHot=function(){return(p._OneHot=p.asm.Da).apply(null,arguments)},p._PadV2=function(){return(p._PadV2=p.asm.Ea).apply(null,arguments)},p._Pow=function(){return(p._Pow=p.asm.Fa).apply(null,arguments)},p._Prelu=function(){return(p._Prelu=p.asm.Ga).apply(null,arguments)},p._Prod=function(){return(p._Prod=p.asm.Ha).apply(null,arguments)},p._RealDiv=function(){return(p._RealDiv=p.asm.Ia).apply(null,arguments)},p._Relu=function(){return(p._Relu=p.asm.Ja).apply(null,arguments)},p._Relu6=function(){return(p._Relu6=p.asm.Ka).apply(null,arguments)},p._ResizeBilinear=function(){return(p._ResizeBilinear=p.asm.La).apply(null,arguments)},p._Reverse=function(){return(p._Reverse=p.asm.Ma).apply(null,arguments)},p._RotateWithOffset=function(){return(p._RotateWithOffset=p.asm.Na).apply(null,arguments)},p._Round=function(){return(p._Round=p.asm.Oa).apply(null,arguments)},p._Rsqrt=function(){return(p._Rsqrt=p.asm.Pa).apply(null,arguments)},p._ScatterNd=function(){return(p._ScatterNd=p.asm.Qa).apply(null,arguments)},p._SelectV2=function(){return(p._SelectV2=p.asm.Ra).apply(null,arguments)},p._Sigmoid=function(){return(p._Sigmoid=p.asm.Sa).apply(null,arguments)},p._Sin=function(){return(p._Sin=p.asm.Ta).apply(null,arguments)},p._Softmax=function(){return(p._Softmax=p.asm.Ua).apply(null,arguments)},p._SparseFillEmptyRows=function(){return(p._SparseFillEmptyRows=p.asm.Va).apply(null,arguments)},p._SparseReshape=function(){return(p._SparseReshape=p.asm.Wa).apply(null,arguments)},p._SparseSegmentReduction=function(){return(p._SparseSegmentReduction=p.asm.Xa).apply(null,arguments)},p._Sqrt=function(){return(p._Sqrt=p.asm.Ya).apply(null,arguments)},p._Square=function(){return(p._Square=p.asm.Za).apply(null,arguments)},p._SquaredDifference=function(){return(p._SquaredDifference=p.asm._a).apply(null,arguments)},p._Step=function(){return(p._Step=p.asm.$a).apply(null,arguments)},p._StridedSlice=function(){return(p._StridedSlice=p.asm.ab).apply(null,arguments)},p._Sub=function(){return(p._Sub=p.asm.bb).apply(null,arguments)},p._Sum=function(){return(p._Sum=p.asm.cb).apply(null,arguments)},p._Tan=function(){return(p._Tan=p.asm.db).apply(null,arguments)},p._Tanh=function(){return(p._Tanh=p.asm.eb).apply(null,arguments)},p._Tile=function(){return(p._Tile=p.asm.fb).apply(null,arguments)},p._TopK=function(){return(p._TopK=p.asm.gb).apply(null,arguments)},p._Transform=function(){return(p._Transform=p.asm.hb).apply(null,arguments)},p._Transpose=function(){return(p._Transpose=p.asm.ib).apply(null,arguments)},p.__FusedMatMul=function(){return(p.__FusedMatMul=p.asm.jb).apply(null,arguments)},p._malloc=function(){return(tn=p._malloc=p.asm.kb).apply(null,arguments)}),nn=p._free=function(){return(nn=p._free=p.asm.lb).apply(null,arguments)},an=p.___errno_location=function(){return(an=p.___errno_location=p.asm.mb).apply(null,arguments)},rn=p._emscripten_get_global_libc=function(){return(rn=p._emscripten_get_global_libc=p.asm.ob).apply(null,arguments)},sn=p._pthread_self=function(){return(sn=p._pthread_self=p.asm.pb).apply(null,arguments)},on=p.___pthread_tsd_run_dtors=function(){return(on=p.___pthread_tsd_run_dtors=p.asm.qb).apply(null,arguments)},ln=p._emscripten_main_thread_process_queued_calls=function(){return(ln=p._emscripten_main_thread_process_queued_calls=p.asm.rb).apply(null,arguments)},un=(p._emscripten_current_thread_process_queued_calls=function(){return(p._emscripten_current_thread_process_queued_calls=p.asm.sb).apply(null,arguments)},p._emscripten_register_main_browser_thread_id=function(){return(un=p._emscripten_register_main_browser_thread_id=p.asm.tb).apply(null,arguments)}),cn=p._emscripten_main_browser_thread_id=function(){return(cn=p._emscripten_main_browser_thread_id=p.asm.ub).apply(null,arguments)},dn=p.__emscripten_do_dispatch_to_thread=function(){return(dn=p.__emscripten_do_dispatch_to_thread=p.asm.vb).apply(null,arguments)},pn=p._emscripten_sync_run_in_main_thread_4=function(){return(pn=p._emscripten_sync_run_in_main_thread_4=p.asm.wb).apply(null,arguments)},hn=p._emscripten_run_in_main_runtime_thread_js=function(){return(hn=p._emscripten_run_in_main_runtime_thread_js=p.asm.xb).apply(null,arguments)},fn=p.__emscripten_call_on_thread=function(){return(fn=p.__emscripten_call_on_thread=p.asm.yb).apply(null,arguments)},mn=(p._emscripten_tls_init=function(){return(p._emscripten_tls_init=p.asm.zb).apply(null,arguments)},p.__emscripten_thread_init=function(){return(mn=p.__emscripten_thread_init=p.asm.Ab).apply(null,arguments)}),gn=p.stackSave=function(){return(gn=p.stackSave=p.asm.Bb).apply(null,arguments)},yn=p.stackRestore=function(){return(yn=p.stackRestore=p.asm.Cb).apply(null,arguments)},An=p.stackAlloc=function(){return(An=p.stackAlloc=p.asm.Db).apply(null,arguments)},xn=p._emscripten_stack_set_limits=function(){return(xn=p._emscripten_stack_set_limits=p.asm.Eb).apply(null,arguments)},bn=p._memalign=function(){return(bn=p._memalign=p.asm.Fb).apply(null,arguments)},vn=p.__emscripten_allow_main_runtime_queued_calls=10208,wn=p.__emscripten_main_thread_futex=10412;function kn(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function In(e){if(e=e||m,!(ve>0)){if(v)return u(p),me(),void postMessage({cmd:"loaded"});fe(),ve>0||(p.setStatus?(p.setStatus("Running..."),setTimeout((function(){setTimeout((function(){p.setStatus("")}),1),t()}),1)):t())}function t(){Kt||(Kt=!0,p.calledRun=!0,X||(me(),ge(),u(p),p.onRuntimeInitialized&&p.onRuntimeInitialized(),Ae()))}}function Sn(e,t){if(!t||!O||0!==e){if(!t&&v)throw postMessage({cmd:"exitProcess",returnCode:e}),new kn(e);O||(He.terminateAllThreads(),e,ye(),p.onExit&&p.onExit(e),X=!0),g(e,new kn(e))}}if(p.cwrap=J,p.PThread=He,p.PThread=He,p.wasmMemory=z,p.ExitStatus=kn,ke=function e(){Kt||In(),Kt||(ke=e)},p.run=In,p.preInit)for("function"==typeof p.preInit&&(p.preInit=[p.preInit]);p.preInit.length>0;)p.preInit.pop()();if(v&&(O=!1,He.initWorker()),In(),d&&(Zt={uncaughtException:r.listeners("uncaughtException").filter((function(e){return!d.uncaughtException.indexOf(e)>-1})),unhandledRejection:r.listeners("unhandledRejection").filter((function(e){return!d.unhandledRejection.indexOf(e)>-1}))}),"undefined"!==typeof WasmBackendModule)Yt=WasmBackendModule;else{if("undefined"===typeof t)throw new Error("Could not find wasm module in post.js");Yt=t}if(Zt){var Nn=Yt._dispose;Yt._dispose=function(){Nn(),Zt.uncaughtException.forEach((function(e){r.removeListener("uncaughtException",e)})),Zt.unhandledRejection.forEach((function(e){r.removeListener("unhandledRejection",e)}))}}return t.ready}}();"object"===typeof e&&"object"===typeof t?t.exports=s:"function"===typeof define&&n.amdO?define([],(function(){return s})):"object"===typeof e&&(e.WasmBackendModuleThreadedSimd=s)}}),K=T({"src/tfjs-backend-wasm/wasm-out/tfjs-backend-wasm.js"(e,t){var s=function(){var e="undefined"!==typeof document&&document.currentScript?document.currentScript.src:void 0;return e=e||a,function(t){var n,a,s,i="undefined"!==typeof(t=t||{})?t:{};i.ready=new Promise((function(e,t){n=e,a=t})),"undefined"!==typeof r&&r.listeners&&(s={uncaughtException:r.listeners("uncaughtException"),unhandledRejection:r.listeners("unhandledRejection")});var o,l={};for(o in i)i.hasOwnProperty(o)&&(l[o]=i[o]);var u=[],c=!1,d=!1,p=!1,h=!1;c="object"===typeof window,d="function"===typeof importScripts,p="object"===typeof r&&"object"===typeof r.versions&&"string"===typeof r.versions.node,h=!c&&!p&&!d;var f,m,g,y,A,x="";function b(e){return i.locateFile?i.locateFile(e,x):x+e}p?(x=d?G().dirname(x)+"/":"//",f=function(e,t){return y||(y=V()),A||(A=G()),e=A.normalize(e),y.readFileSync(e,t?null:"utf8")},g=function(e){var t=f(e,!0);return t.buffer||(t=new Uint8Array(t)),N(t.buffer),t},r.argv.length>1&&r.argv[1].replace(/\\/g,"/"),u=r.argv.slice(2),r.on("uncaughtException",(function(e){if(!(e instanceof _e))throw e})),r.on("unhandledRejection",ie),function(e){r.exit(e)},i.inspect=function(){return"[Emscripten Module object]"}):h?("undefined"!=typeof read&&(f=function(e){return read(e)}),g=function(e){var t;return"function"===typeof readbuffer?new Uint8Array(readbuffer(e)):(N("object"===typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?u=scriptArgs:"undefined"!=typeof arguments&&(u=arguments),"function"===typeof quit&&function(e){quit(e)},"undefined"!==typeof print&&("undefined"===typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!==typeof printErr?printErr:print)):(c||d)&&(d?x=self.location.href:"undefined"!==typeof document&&document.currentScript&&(x=document.currentScript.src),e&&(x=e),x=0!==x.indexOf("blob:")?x.substr(0,x.lastIndexOf("/")+1):"",f=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},d&&(g=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),m=function(e,t,n){var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onload=function(){200==a.status||0==a.status&&a.response?t(a.response):n()},a.onerror=n,a.send(null)});var v,w=i.print||console.log.bind(console),k=i.printErr||console.warn.bind(console);for(o in l)l.hasOwnProperty(o)&&(i[o]=l[o]);l=null,i.arguments&&(u=i.arguments),i.thisProgram&&i.thisProgram,i.quit&&i.quit,i.wasmBinary&&(v=i.wasmBinary);var I;i.noExitRuntime;"object"!==typeof WebAssembly&&ie("no native wasm support detected");var S=!1;function N(e,t){e||ie("Assertion failed: "+t)}function T(e){var t=i["_"+e];return N(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function C(e,t,n,a,r){var s={string:function(e){var t=0;if(null!==e&&void 0!==e&&0!==e){var n=1+(e.length<<2);P(e,t=ze(n),n)}return t},array:function(e){var t=ze(e.length);return L(e,t),t}};var i=T(e),o=[],l=0;if(a)for(var u=0;u<a.length;u++){var c=s[n[u]];c?(0===l&&(l=$e()),o[u]=c(a[u])):o[u]=a[u]}var d,p=i.apply(null,o);return d=p,p="string"===t?O(d):"boolean"===t?Boolean(d):d,0!==l&&Me(l),p}function E(e,t,n,a){var r=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&r&&!a?T(e):function(){return C(e,t,n,arguments)}}var R,F,$,M,z="undefined"!==typeof TextDecoder?new TextDecoder("utf8"):void 0;function _(e,t,n){for(var a=t+n,r=t;e[r]&&!(r>=a);)++r;if(r-t>16&&e.subarray&&z)return z.decode(e.subarray(t,r));for(var s="";t<r;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function O(e,t){return e?_($,e,t):""}function D(e,t,n,a){if(!(a>0))return 0;for(var r=n,s=n+a-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343)o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i);if(o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-r}function P(e,t,n){return D(e,$,t,n)}function L(e,t){F.set(e,t)}function W(e,t){return e%t>0&&(e+=t-e%t),e}function B(e){R=e,i.HEAP8=F=new Int8Array(e),i.HEAP16=new Int16Array(e),i.HEAP32=M=new Int32Array(e),i.HEAPU8=$=new Uint8Array(e),i.HEAPU16=new Uint16Array(e),i.HEAPU32=new Uint32Array(e),i.HEAPF32=new Float32Array(e),i.HEAPF64=new Float64Array(e)}i.INITIAL_MEMORY;var U,H=[],j=[],q=[],X=[];function K(){if(i.preRun)for("function"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)Q(i.preRun.shift());ge(H)}function Z(){!0,ge(j)}function Y(){ge(q)}function J(){if(i.postRun)for("function"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;)ee(i.postRun.shift());ge(X)}function Q(e){H.unshift(e)}function ee(e){X.unshift(e)}j.push({func:function(){Fe()}});var te=0,ne=null,ae=null;function re(e){te++,i.monitorRunDependencies&&i.monitorRunDependencies(te)}function se(e){if(te--,i.monitorRunDependencies&&i.monitorRunDependencies(te),0==te&&(null!==ne&&(clearInterval(ne),ne=null),ae)){var t=ae;ae=null,t()}}function ie(e){i.onAbort&&i.onAbort(e),k(e+=""),S=!0,1,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw a(t),t}function oe(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}i.preloadedImages={},i.preloadedAudios={};var le="data:application/octet-stream;base64,";function ue(e){return oe(e,le)}var ce="file://";function de(e){return oe(e,ce)}var pe="tfjs-backend-wasm.wasm";function he(e){try{if(e==pe&&v)return new Uint8Array(v);if(g)return g(e);throw"both async and sync fetching of the wasm failed"}catch(t){ie(t)}}function fe(){if(!v&&(c||d)){if("function"===typeof fetch&&!de(pe))return fetch(pe,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+pe+"'";return e.arrayBuffer()})).catch((function(){return he(pe)}));if(m)return new Promise((function(e,t){m(pe,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return he(pe)}))}function me(){var e={a:Re};function t(e,t){var n=e.exports;i.asm=n,B((I=i.asm.h).buffer),U=i.asm.Va,se()}function n(e){t(e.instance)}function r(t){return fe().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){k("failed to asynchronously prepare wasm: "+e),ie(e)}))}if(re(),i.instantiateWasm)try{return i.instantiateWasm(e,t)}catch(s){return k("Module.instantiateWasm callback failed with error: "+s),!1}return(v||"function"!==typeof WebAssembly.instantiateStreaming||ue(pe)||de(pe)||"function"!==typeof fetch?r(n):fetch(pe,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return k("wasm streaming compile failed: "+e),k("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(a),{}}function ge(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"===typeof n?void 0===t.arg?U.get(n)():U.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(i)}}function ye(){ie()}function Ae(e,t,n){$.copyWithin(e,t,t+n)}function xe(){return $.length}function be(e){try{return I.grow(e-R.byteLength+65535>>>16),B(I.buffer),1}catch(t){}}function ve(e){var t=xe(),n=2147483648;if(e>n)return!1;for(var a=1;a<=4;a*=2){var r=t*(1+.2/a);if(r=Math.min(r,e+100663296),be(Math.min(n,W(Math.max(e,r),65536))))return!0}return!1}ue(pe)||(pe=b(pe));var we={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=we.buffers[e];0===t||10===t?((1===e?w:k)(_(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return we.varargs+=4,M[we.varargs-4>>2]},getStr:function(e){return O(e)},get64:function(e,t){return e}};function ke(e){return 0}function Ie(e,t,n,a,r){}function Se(e,t,n,a){for(var r=0,s=0;s<n;s++){for(var i=M[t+8*s>>2],o=M[t+(8*s+4)>>2],l=0;l<o;l++)we.printChar(e,$[i+l]);r+=o}return M[a>>2]=r,0}function Ne(){return 28}var Te,Ce,Ee,Re={a:ye,d:Ae,e:ve,f:ke,c:Ie,b:Se,g:Ne},Fe=(me(),i.___wasm_call_ctors=function(){return(Fe=i.___wasm_call_ctors=i.asm.i).apply(null,arguments)}),$e=(i._init=function(){return(i._init=i.asm.j).apply(null,arguments)},i._init_with_threads_count=function(){return(i._init_with_threads_count=i.asm.k).apply(null,arguments)},i._get_threads_count=function(){return(i._get_threads_count=i.asm.l).apply(null,arguments)},i._register_tensor=function(){return(i._register_tensor=i.asm.m).apply(null,arguments)},i._dispose_data=function(){return(i._dispose_data=i.asm.n).apply(null,arguments)},i._dispose=function(){return(i._dispose=i.asm.o).apply(null,arguments)},i._Abs=function(){return(i._Abs=i.asm.p).apply(null,arguments)},i._Add=function(){return(i._Add=i.asm.q).apply(null,arguments)},i._AddN=function(){return(i._AddN=i.asm.r).apply(null,arguments)},i._All=function(){return(i._All=i.asm.s).apply(null,arguments)},i._Any=function(){return(i._Any=i.asm.t).apply(null,arguments)},i._ArgMax=function(){return(i._ArgMax=i.asm.u).apply(null,arguments)},i._AvgPool=function(){return(i._AvgPool=i.asm.v).apply(null,arguments)},i._BatchMatMul=function(){return(i._BatchMatMul=i.asm.w).apply(null,arguments)},i._Ceil=function(){return(i._Ceil=i.asm.x).apply(null,arguments)},i._ClipByValue=function(){return(i._ClipByValue=i.asm.y).apply(null,arguments)},i._Conv2D=function(){return(i._Conv2D=i.asm.z).apply(null,arguments)},i._Conv2DBackpropInput=function(){return(i._Conv2DBackpropInput=i.asm.A).apply(null,arguments)},i._Cos=function(){return(i._Cos=i.asm.B).apply(null,arguments)},i._Cosh=function(){return(i._Cosh=i.asm.C).apply(null,arguments)},i._CropAndResize=function(){return(i._CropAndResize=i.asm.D).apply(null,arguments)},i._Cumsum=function(){return(i._Cumsum=i.asm.E).apply(null,arguments)},i._DepthToSpace=function(){return(i._DepthToSpace=i.asm.F).apply(null,arguments)},i._DepthwiseConv2dNative=function(){return(i._DepthwiseConv2dNative=i.asm.G).apply(null,arguments)},i._Elu=function(){return(i._Elu=i.asm.H).apply(null,arguments)},i._Equal=function(){return(i._Equal=i.asm.I).apply(null,arguments)},i._Exp=function(){return(i._Exp=i.asm.J).apply(null,arguments)},i._FlipLeftRight=function(){return(i._FlipLeftRight=i.asm.K).apply(null,arguments)},i._Floor=function(){return(i._Floor=i.asm.L).apply(null,arguments)},i._FloorDiv=function(){return(i._FloorDiv=i.asm.M).apply(null,arguments)},i._FusedBatchNorm=function(){return(i._FusedBatchNorm=i.asm.N).apply(null,arguments)},i._FusedConv2D=function(){return(i._FusedConv2D=i.asm.O).apply(null,arguments)},i._FusedDepthwiseConv2D=function(){return(i._FusedDepthwiseConv2D=i.asm.P).apply(null,arguments)},i._Gather=function(){return(i._Gather=i.asm.Q).apply(null,arguments)},i._GatherNd=function(){return(i._GatherNd=i.asm.R).apply(null,arguments)},i._Greater=function(){return(i._Greater=i.asm.S).apply(null,arguments)},i._GreaterEqual=function(){return(i._GreaterEqual=i.asm.T).apply(null,arguments)},i._LeakyRelu=function(){return(i._LeakyRelu=i.asm.U).apply(null,arguments)},i._Less=function(){return(i._Less=i.asm.V).apply(null,arguments)},i._LessEqual=function(){return(i._LessEqual=i.asm.W).apply(null,arguments)},i._Log=function(){return(i._Log=i.asm.X).apply(null,arguments)},i._LogicalAnd=function(){return(i._LogicalAnd=i.asm.Y).apply(null,arguments)},i._Max=function(){return(i._Max=i.asm.Z).apply(null,arguments)},i._MaxPool=function(){return(i._MaxPool=i.asm._).apply(null,arguments)},i._Maximum=function(){return(i._Maximum=i.asm.$).apply(null,arguments)},i._Mean=function(){return(i._Mean=i.asm.aa).apply(null,arguments)},i._Min=function(){return(i._Min=i.asm.ba).apply(null,arguments)},i._Minimum=function(){return(i._Minimum=i.asm.ca).apply(null,arguments)},i._MirrorPad=function(){return(i._MirrorPad=i.asm.da).apply(null,arguments)},i._Multiply=function(){return(i._Multiply=i.asm.ea).apply(null,arguments)},i._Neg=function(){return(i._Neg=i.asm.fa).apply(null,arguments)},i._NonMaxSuppressionV3=function(){return(i._NonMaxSuppressionV3=i.asm.ga).apply(null,arguments)},i._NonMaxSuppressionV4=function(){return(i._NonMaxSuppressionV4=i.asm.ha).apply(null,arguments)},i._NonMaxSuppressionV5=function(){return(i._NonMaxSuppressionV5=i.asm.ia).apply(null,arguments)},i._NotEqual=function(){return(i._NotEqual=i.asm.ja).apply(null,arguments)},i._OneHot=function(){return(i._OneHot=i.asm.ka).apply(null,arguments)},i._PadV2=function(){return(i._PadV2=i.asm.la).apply(null,arguments)},i._Pow=function(){return(i._Pow=i.asm.ma).apply(null,arguments)},i._Prelu=function(){return(i._Prelu=i.asm.na).apply(null,arguments)},i._Prod=function(){return(i._Prod=i.asm.oa).apply(null,arguments)},i._RealDiv=function(){return(i._RealDiv=i.asm.pa).apply(null,arguments)},i._Relu=function(){return(i._Relu=i.asm.qa).apply(null,arguments)},i._Relu6=function(){return(i._Relu6=i.asm.ra).apply(null,arguments)},i._ResizeBilinear=function(){return(i._ResizeBilinear=i.asm.sa).apply(null,arguments)},i._Reverse=function(){return(i._Reverse=i.asm.ta).apply(null,arguments)},i._RotateWithOffset=function(){return(i._RotateWithOffset=i.asm.ua).apply(null,arguments)},i._Round=function(){return(i._Round=i.asm.va).apply(null,arguments)},i._Rsqrt=function(){return(i._Rsqrt=i.asm.wa).apply(null,arguments)},i._ScatterNd=function(){return(i._ScatterNd=i.asm.xa).apply(null,arguments)},i._SelectV2=function(){return(i._SelectV2=i.asm.ya).apply(null,arguments)},i._Sigmoid=function(){return(i._Sigmoid=i.asm.za).apply(null,arguments)},i._Sin=function(){return(i._Sin=i.asm.Aa).apply(null,arguments)},i._Softmax=function(){return(i._Softmax=i.asm.Ba).apply(null,arguments)},i._SparseFillEmptyRows=function(){return(i._SparseFillEmptyRows=i.asm.Ca).apply(null,arguments)},i._SparseReshape=function(){return(i._SparseReshape=i.asm.Da).apply(null,arguments)},i._SparseSegmentReduction=function(){return(i._SparseSegmentReduction=i.asm.Ea).apply(null,arguments)},i._Sqrt=function(){return(i._Sqrt=i.asm.Fa).apply(null,arguments)},i._Square=function(){return(i._Square=i.asm.Ga).apply(null,arguments)},i._SquaredDifference=function(){return(i._SquaredDifference=i.asm.Ha).apply(null,arguments)},i._Step=function(){return(i._Step=i.asm.Ia).apply(null,arguments)},i._StridedSlice=function(){return(i._StridedSlice=i.asm.Ja).apply(null,arguments)},i._Sub=function(){return(i._Sub=i.asm.Ka).apply(null,arguments)},i._Sum=function(){return(i._Sum=i.asm.La).apply(null,arguments)},i._Tan=function(){return(i._Tan=i.asm.Ma).apply(null,arguments)},i._Tanh=function(){return(i._Tanh=i.asm.Na).apply(null,arguments)},i._Tile=function(){return(i._Tile=i.asm.Oa).apply(null,arguments)},i._TopK=function(){return(i._TopK=i.asm.Pa).apply(null,arguments)},i._Transform=function(){return(i._Transform=i.asm.Qa).apply(null,arguments)},i._Transpose=function(){return(i._Transpose=i.asm.Ra).apply(null,arguments)},i.__FusedMatMul=function(){return(i.__FusedMatMul=i.asm.Sa).apply(null,arguments)},i._malloc=function(){return(i._malloc=i.asm.Ta).apply(null,arguments)},i._free=function(){return(i._free=i.asm.Ua).apply(null,arguments)},i.stackSave=function(){return($e=i.stackSave=i.asm.Wa).apply(null,arguments)}),Me=i.stackRestore=function(){return(Me=i.stackRestore=i.asm.Xa).apply(null,arguments)},ze=i.stackAlloc=function(){return(ze=i.stackAlloc=i.asm.Ya).apply(null,arguments)};function _e(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Oe(e){function t(){Te||(Te=!0,i.calledRun=!0,S||(Z(),Y(),n(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),J()))}e=e||u,te>0||(K(),te>0||(i.setStatus?(i.setStatus("Running..."),setTimeout((function(){setTimeout((function(){i.setStatus("")}),1),t()}),1)):t()))}if(i.cwrap=E,ae=function e(){Te||Oe(),Te||(ae=e)},i.run=Oe,i.preInit)for("function"==typeof i.preInit&&(i.preInit=[i.preInit]);i.preInit.length>0;)i.preInit.pop()();if(Oe(),s&&(Ce={uncaughtException:r.listeners("uncaughtException").filter((function(e){return!s.uncaughtException.indexOf(e)>-1})),unhandledRejection:r.listeners("unhandledRejection").filter((function(e){return!s.unhandledRejection.indexOf(e)>-1}))}),"undefined"!==typeof t)Ee=t;else{if("undefined"===typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");Ee=WasmBackendModuleThreadedSimd}if(Ce){var De=Ee._dispose;Ee._dispose=function(){De(),Ce.uncaughtException.forEach((function(e){r.removeListener("uncaughtException",e)})),Ce.unhandledRejection.forEach((function(e){r.removeListener("unhandledRejection",e)}))}}return t.ready}}();"object"===typeof e&&"object"===typeof t?t.exports=s:"function"===typeof define&&n.amdO?define([],(function(){return s})):"object"===typeof e&&(e.WasmBackendModule=s)}}),Z=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},Y=class{refCount(e){return J("refCount")}incRef(e){return J("incRef")}timerAvailable(){return!0}time(e){return J("time")}read(e){return J("read")}readSync(e){return J("readSync")}numDataIds(){return J("numDataIds")}disposeData(e,t){return J("disposeData")}write(e,t,n){return J("write")}move(e,t,n,a,r){return J("move")}memory(){return J("memory")}floatPrecision(){return J("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return J("dispose")}};function J(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Q(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,ae(e,t,n)}function ee(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,a=0;for(;n>0;)a=Math.random()*n|0,n--,ae(e,n,a),ae(t,n,a)}function te(e,t,n){return Math.max(e,Math.min(t,n))}function ne(e){return e%2===0?e:e+1}function ae(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function re(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function se(e,t){const n=Math.random();return t*n+(1-n)*e}function ie(e,t){let n=0;for(let a=0;a<e.length;a++){const r=Number(e[a])-Number(t[a]);n+=r*r}return n}function oe(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function le(e,t,n=""){oe(he(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function ue(e){oe(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function ce(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||Ce(e)&&!n)for(let a=0;a<e.length;++a)ce(e[a],t,n);else t.push(e);return t}function de(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function pe(e){return 0===e.length}function he(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function fe(e){return e%1===0}function me(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function ge(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ye(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Q(t),t}function Ae(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function xe(e,t=(e=>0),n){return new Promise(((a,r)=>{let s=0;const i=()=>{if(e())return void a();s++;const o=t(s);null!=n&&s>=n?r():setTimeout(i,o)};i()}))}function be(e,t){let n=1,a=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==a)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${s}`);a=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(-1===a){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[a]=t/n,r}function ve(e,t){const n=t.length;return oe((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),oe(e.every((e=>fe(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function we(e,t){const n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||r?null:ve(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=s){if(s[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==s[i]||s[i]>o)&&1===e[o]&&(n.push(e[o]),a.push(o)),s[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),a.push(o))}return{newShape:n,keptDims:a}}function ke(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function Ie(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function Se(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${t} being uploaded contains ${a}.`)}}function Ne(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Te(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function Ce(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Ee(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Re(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function Fe(e){return"string"===typeof e||e instanceof String}function $e(e){return"boolean"===typeof e}function Me(e){return"number"===typeof e}function ze(e){return Array.isArray(e)?ze(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Me(e)?"float32":Fe(e)?"string":$e(e)?"bool":"float32"}function _e(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Oe(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function De(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function Pe(e,t,n,a=!1){const r=new Array;if(1===t.length){const s=t[0]*(a?2:1);for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<s;t++)r[t]=Pe(e+t*o,i,n,a)}return r}function Le(e,t,n=!1){if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Pe(0,e,t,n)}function We(e,t){const n=Be(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function Be(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Ue(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Le(e,new Float32Array(n));if("int32"===t)return Le(e,new Int32Array(n));if("bool"===t)return Le(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Ve(e){e.forEach((t=>{oe(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Ge(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function He(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function je(e){return e&&e.then&&"function"===typeof e.then}var qe="tfjsflags",Xe=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ke,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(Ze().getBool("IS_TEST")||Ze().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];Ze().getBool("IS_TEST")||Ze().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(je(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(qe in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}};function Ke(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Ze(){return Je}var Ye,Je=null;function Qe(){if(null==Ye){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof r)e=r;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}Ye=e}return Ye}function et(e,t){const n=function(){const e=Qe();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}var tt="Abs",nt="Acos",at="Acosh",rt="Add",st="AddN",it="All",ot="Any",lt="ArgMax",ut="ArgMin",ct="Asin",dt="Asinh",pt="Atan",ht="Atanh",ft="Atan2",mt="AvgPool",gt="AvgPoolGrad",yt="AvgPool3D",At="AvgPool3DGrad",xt="BatchMatMul",bt="BatchToSpaceND",vt="Bincount",wt="BroadcastTo",kt="BroadcastArgs",It="Cast",St="Ceil",Nt="ClipByValue",Tt="Complex",Ct="ComplexAbs",Et="Concat",Rt="Conv2D",Ft="Conv2DBackpropFilter",$t="Conv2DBackpropInput",Mt="Conv3D",zt="Conv3DBackpropFilterV2",_t="Conv3DBackpropInputV2",Ot="Cos",Dt="Cosh",Pt="Cumsum",Lt="CropAndResize",Wt="DenseBincount",Bt="DepthToSpace",Ut="DepthwiseConv2dNative",Vt="DepthwiseConv2dNativeBackpropFilter",Gt="DepthwiseConv2dNativeBackpropInput",Ht="Diag",jt="Dilation2D",qt="Dilation2DBackpropInput",Xt="Dilation2DBackpropFilter",Kt="RealDiv",Zt="Einsum",Yt="Elu",Jt="EluGrad",Qt="Erf",en="Equal",tn="Exp",nn="ExpandDims",an="Expm1",rn="FFT",sn="Fill",on="FlipLeftRight",ln="Floor",un="FloorDiv",cn="FusedBatchNorm",dn="GatherV2",pn="GatherNd",hn="Greater",fn="GreaterEqual",mn="Identity",gn="IFFT",yn="Imag",An="IsFinite",xn="IsInf",bn="IsNan",vn="LeakyRelu",wn="Less",kn="LessEqual",In="LinSpace",Sn="Log",Nn="Log1p",Tn="LogicalAnd",Cn="LogicalNot",En="LogicalOr",Rn="LogSoftmax",Fn="LRN",$n="LRNGrad",Mn="Max",zn="Maximum",_n="MaxPool",On="MaxPoolGrad",Dn="MaxPool3D",Pn="MaxPool3DGrad",Ln="MaxPoolWithArgmax",Wn="Mean",Bn="Min",Un="Minimum",Vn="MirrorPad",Gn="Mod",Hn="Multinomial",jn="Multiply",qn="Neg",Xn="NotEqual",Kn="NonMaxSuppressionV3",Zn="NonMaxSuppressionV4",Yn="NonMaxSuppressionV5",Jn="OnesLike",Qn="OneHot",ea="Pack",ta="PadV2",na="Pool",aa="Pow",ra="Prelu",sa="Prod",ia="Range",oa="Real",la="Reciprocal",ua="Relu",ca="Reshape",da="ResizeNearestNeighbor",pa="ResizeNearestNeighborGrad",ha="ResizeBilinear",fa="ResizeBilinearGrad",ma="Relu6",ga="Reverse",ya="Round",Aa="Rsqrt",xa="ScatterNd",ba="Select",va="Selu",wa="Slice",ka="Sin",Ia="Sinh",Sa="Sign",Na="Sigmoid",Ta="Softplus",Ca="Sqrt",Ea="Sum",Ra="SpaceToBatchND",Fa="SplitV",$a="Softmax",Ma="SparseFillEmptyRows",za="SparseReshape",_a="SparseSegmentMean",Oa="SparseSegmentSum",Da="SparseToDense",Pa="SquaredDifference",La="Square",Wa="StridedSlice",Ba="StringNGrams",Ua="StringSplit",Va="StringToHashBucketFast",Ga="Sub",Ha="Tan",ja="Tanh",qa="Tile",Xa="TopK",Ka="Transform",Za="Transpose",Ya="Unique",Ja="Unpack",Qa="UnsortedSegmentSum",er="ZerosLike",tr="Step",nr="FromPixels",ar="RotateWithOffset",rr="_FusedMatMul",sr="FusedConv2D",ir="FusedDepthwiseConv2D";function or(...e){Ze().getBool("IS_TEST")||Ze().getBool("PROD")||console.warn(...e)}function lr(...e){Ze().getBool("IS_TEST")||Ze().getBool("PROD")||console.log(...e)}var ur=et("kernelRegistry",(()=>new Map)),cr=et("gradRegistry",(()=>new Map));function dr(e,t){const n=xr(e,t);return ur.get(n)}function pr(e){return cr.get(e)}function hr(e){const t=ur.entries(),n=[];for(;;){const{done:a,value:r}=t.next();if(a)break;const[s,i]=r,[o]=s.split("_");o===e&&n.push(i)}return n}function fr(e){const{kernelName:t,backendName:n}=e,a=xr(t,n);ur.has(a)&&or(`The kernel '${t}' for backend '${n}' is already registered`),ur.set(a,e)}function mr(e){const{kernelName:t}=e;cr.has(t)&&Ze().getBool("DEBUG")&&or(`Overriding the gradient for '${t}'`),cr.set(t,e)}function gr(e,t){const n=xr(e,t);if(!ur.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);ur.delete(n)}function yr(e){if(!cr.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);cr.delete(e)}function Ar(e,t){hr(e).forEach((e=>{fr(Object.assign({},e,{backendName:t}))}))}function xr(e,t){return`${t}_${e}`}var br={};C(br,{arraysEqual:()=>he,assert:()=>oe,assertNonNegativeIntegerDimensions:()=>Ve,assertNonNull:()=>ue,assertShapesMatch:()=>le,bytesFromStringArray:()=>Re,bytesPerElement:()=>Ee,checkConversionForErrors:()=>Se,clamp:()=>te,computeStrides:()=>De,createScalarValue:()=>_r,createShuffledIndices:()=>ye,decodeString:()=>Wr,distSquared:()=>ie,encodeString:()=>Lr,fetch:()=>Pr,fingerPrint64:()=>zr,flatten:()=>ce,getArrayFromDType:()=>Ie,getTypedArrayFromDType:()=>ke,hasEncodingLoss:()=>Te,hexToLong:()=>kr,indexToLoc:()=>He,inferDtype:()=>ze,inferFromImplicitShape:()=>be,isBoolean:()=>$e,isFunction:()=>_e,isInt:()=>fe,isNumber:()=>Me,isPromise:()=>je,isScalarShape:()=>pe,isString:()=>Fe,isTypedArray:()=>Ce,isValidDtype:()=>Ne,locToIndex:()=>Ge,makeOnesTypedArray:()=>We,makeZerosNestedTypedArray:()=>Ue,makeZerosTypedArray:()=>Be,nearestDivisor:()=>Oe,nearestLargerEven:()=>ne,now:()=>Dr,parseAxisParam:()=>ve,randUniform:()=>se,repeatedTry:()=>xe,rightPad:()=>Ae,shuffle:()=>Q,shuffleCombo:()=>ee,sizeFromShape:()=>de,sizeToSquarishShape:()=>ge,squeezeShape:()=>we,sum:()=>re,swap:()=>ae,tanh:()=>me,toNestedArray:()=>Le,toTypedArray:()=>Or});var vr=E(R()),wr=vr.default||vr;function kr(e){return wr.fromString(e,!0,16)}var Ir=kr("c3a5c85c97cb3127"),Sr=kr("b492b66fbe98f273"),Nr=kr("9ae16a3b2f90404f");function Tr(e){return e.xor(e.shru(47))}function Cr(e,t,n){const a=e.slice(t,t+n);return wr.fromBytes(Array.from(a),!0,!0)}function Er(e,t){return Cr(e,t,8)}function Rr(e,t){return Cr(e,t,4)}function Fr(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function $r(e,t,n=kr("9ddfea08eb382d69")){let a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function Mr(e,t,n,a){return function(e,t,n,a,r,s){r=r.add(e),s=Fr(s.add(r).add(a),21);const i=r;return r=(r=r.add(t)).add(n),s=s.add(Fr(r,44)),[r.add(a),s.add(i)]}(Er(e,t),Er(e,t+8),Er(e,t+16),Er(e,t+24),n,a)}function zr(e,t=e.length){const n=wr.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Nr.add(2*t),a=Er(e,0).add(Nr),r=Er(e,t-8);return $r(Fr(r,37).mul(n).add(a),Fr(a,25).add(r).mul(n),n)}if(t>=4){const n=Nr.add(2*t);return $r(Rr(e,0).shl(3).add(t),Rr(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return Tr(Nr.mul(n).xor(Ir.mul(a))).mul(Nr)}return Nr}(e,t):function(e,t=e.length){const n=Nr.add(2*t),a=Er(e,0).mul(Sr),r=Er(e,8),s=Er(e,t-8).mul(n),i=Er(e,t-16).mul(Nr);return $r(Fr(a.add(r),43).add(Fr(s,30)).add(i),a.add(Fr(r.add(Nr),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Nr.add(2*t),a=Er(e,0).mul(Nr),r=Er(e,8),s=Er(e,t-8).mul(n),i=Er(e,t-16).mul(Nr),o=Fr(a.add(r),43).add(Fr(s,30)).add(i),l=$r(o,a.add(Fr(r.add(Nr),18)).add(s),n),u=Er(e,16).mul(n),c=Er(e,24),d=o.add(Er(e,t-32)).mul(n),p=l.add(Er(e,t-24)).mul(n);return $r(Fr(u.add(c),43).add(Fr(d,30)).add(p),u.add(Fr(c.add(a),18)).add(d),n)}(e,t);let a=n,r=n.mul(Sr).add(113),s=Tr(r.mul(Nr).add(113)).mul(Nr),i=[wr.UZERO,wr.UZERO],o=[wr.UZERO,wr.UZERO];a=a.mul(Nr).add(Er(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{a=Fr(a.add(r).add(i[0]).add(Er(e,l+8)),37).mul(Sr),r=Fr(r.add(i[1]).add(Er(e,l+48)),42).mul(Sr),a=a.xor(o[1]),r=r.add(i[0]).add(Er(e,l+40)),s=Fr(s.add(o[0]),33).mul(Sr),i=Mr(e,l,i[1].mul(Sr),a.add(o[0])),o=Mr(e,l+32,s.add(o[1]),r.add(Er(e,l+16))),[s,a]=[a,s],l+=64}while(l!==u);const d=Sr.add(s.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),a=Fr(a.add(r).add(i[0]).add(Er(e,l+8)),37).mul(d),r=Fr(r.add(i[1]).add(Er(e,l+48)),42).mul(d),a=a.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add(Er(e,l+40))),s=Fr(s.add(o[0]),33).mul(d),i=Mr(e,l,i[1].mul(d),a.add(o[0])),o=Mr(e,l+32,s.add(o[1]),r.add(Er(e,l+16))),[s,a]=[a,s],$r($r(i[0],o[0],d).add(Tr(r).mul(Ir)).add(s),$r(i[1],o[1],d).add(a),d)}function _r(e,t){return"string"===t?Lr(e):Or([e],t)}function Or(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ce(e)),Ze().getBool("DEBUG")&&Se(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Dr(){return Ze().platform.now()}function Pr(e,t){return Ze().platform.fetch(e,t)}function Lr(e,t="utf-8"){return t=t||"utf-8",Ze().platform.encode(e,t)}function Wr(e,t="utf-8"){return t=t||"utf-8",Ze().platform.decode(e,t)}function Br(e,t,n){if("float32"!==t)return!1;for(let a=0;a<e.length;a++){const t=e[a];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}var Ur=class{logKernelProfile(e,t,n,a,r,s){const i="number"===typeof a?Ae(`${a}ms`,9):a.error,o=Ae(e,25),l=t.rank,u=t.size,c=Ae(t.shape.toString(),14);let d="";for(const p in r){const e=r[p];if(null!=e){const n=e.shape||t.shape,a=n.length;d+=`${p}: ${a}D ${a>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${d}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function Vr(e,t,n,a){const r=De(t),s=function(e,t,n,a){const r=de(t),s=a[a.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?qr(e):e;if(o>1)for(let u=0;u<r/s;u++){const e=u*s;for(let t=0;t<s;t++)i[t]=Math.max(i[t],Gr(l[e+t],0,n).length)}return i}(e,t,n,r),i=t.length,o=jr(e,t,n,r,s),l=["Tensor"];return a&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Gr(e,t,n){let a;return a=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Fe(e)?`'${e}'`:"bool"===n?Hr(e):parseFloat(e.toFixed(7)).toString(),Ae(a,t)}function Hr(e){return 0===e?"false":"true"}function jr(e,t,n,a,r,s=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){return[Gr(qr(e)[0],0,n)]}return"bool"===n?[Hr(e[0])]:[e[0].toString()]}if(1===l){if(o>20){const t=3*i;let a=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(a=qr(a),s=qr(s)),["["+a.map(((e,t)=>Gr(e,r[t],n))).join(", ")+", ..., "+s.map(((e,t)=>Gr(e,r[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?qr(e):Array.from(e)).map(((e,t)=>Gr(e,r[t],n))).join(", ")+"]"]}const u=t.slice(1),c=a.slice(1),d=a[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){const a=t*d,s=a+d;p.push(...jr(e.slice(a,s),u,n,c,r,!1))}p.push("...");for(let t=o-3;t<o;t++){const a=t*d,s=a+d;p.push(...jr(e.slice(a,s),u,n,c,r,t===o-1))}}else for(let m=0;m<o;m++){const t=m*d,a=t+d;p.push(...jr(e.slice(t,a),u,n,c,r,m===o-1))}const h=2===l?",":"";p[0]="["+p[0]+h;for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+h;let f=",\n";for(let m=2;m<l;m++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(s?"":f),p}function qr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var Xr=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=de(e),null!=n){const e=n.length;oe(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Ie(t,this.size),this.strides=De(e)}set(e,...t){0===t.length&&(t=[0]),oe(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const a of e){if(a<0||a>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let a=0;a<e.length-1;++a)n+=this.strides[a]*e[a];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Kr().makeTensor(this.values,this.shape,this.dtype)}},Kr=null,Zr=null;var Yr=class{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=de(e),this.strides=De(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Zr.buffer(this.shape,this.dtype,e)}bufferSync(){return Zr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Le(this.shape,e,"complex64"===this.dtype)}arraySync(){return Le(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Kr().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>Wr(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Kr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Wr(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Kr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Kr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Zr.print(this,e)}clone(){return this.throwIfDisposed(),Zr.clone(this)}toString(e=!1){return Vr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Zr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Kr().makeVariable(this,e,t,n)}};Object.defineProperty(Yr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),et("Tensor",(()=>Yr));var Jr=class extends Yr{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!he(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Kr().disposeTensor(this),this.dataId=e.dataId,Kr().incRef(this,null)}dispose(){Kr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Jr,Symbol.hasInstance,{value:e=>e instanceof Yr&&null!=e.assign&&e.assign instanceof Function});var Qr={};C(Qr,{assertTypesMatch:()=>fs,getTensorsInContainer:()=>gs,isTensorInList:()=>ms,makeTypesMatch:()=>hs});var es,ts,ns,as,rs,ss=((es=ss||{}).R0="R0",es.R1="R1",es.R2="R2",es.R3="R3",es.R4="R4",es.R5="R5",es.R6="R6",es),is=((ts=is||{}).float32="float32",ts.int32="int32",ts.bool="int32",ts.complex64="complex64",ts),os=((ns=os||{}).float32="float32",ns.int32="int32",ns.bool="bool",ns.complex64="complex64",ns),ls=((as=ls||{}).float32="float32",as.int32="float32",as.bool="float32",as.complex64="complex64",as),us=((rs=us||{}).float32="complex64",rs.int32="complex64",rs.bool="complex64",rs.complex64="complex64",rs),cs={float32:ls,int32:is,bool:os,complex64:us};function ds(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return cs[e][t]}function ps(e){return ds(e,"int32")}function hs(e,t){if(e.dtype===t.dtype)return[e,t];const n=ds(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function fs(e,t){oe(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function ms(e,t){return t.some((t=>t.id===e.id))}function gs(e){const t=[];return ys(e,t,new Set),t}function ys(e,t,n){if(null==e)return;if(e instanceof Yr)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!==typeof a)return;var a;const r=e;for(const s in r){const e=r[s];n.has(e)||(n.add(e),ys(e,t,n))}}function As(e){return null!=e.kernelName}var xs=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}},bs=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new xs}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void(await this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(or(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Ur)}profileKernel(e,t,n){let a;const r=()=>{a=n()};let s;const i=Dr();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(r);else{r();for(const e of a)e.dataSync();s=Promise.resolve({kernelMs:Dr()-i})}if(Ze().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<a.length;o++){const t=a[o];t.data().then((n=>{Br(n,t.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:s.then((e=>e.kernelMs)),extraInfo:s.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),a,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}(this.backendInstance),!0}setupRegisteredKernels(){hr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){hr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof Y||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,or(`Initialization of backend ${e} failed`),or(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return or(`Initialization of backend ${e} failed`),or(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(a){throw t(),a}}nextTensorId(){return bs.nextTensorId++}nextVariableId(){return bs.nextVariableId++}clone(e){const t=ks.runKernel(mn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return ks.runKernel(It,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=dr(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=a-t-r-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=As(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(As(e)){const{kernelName:t,inputs:r,attrs:s}=e;null==this.backendName&&this.backend;const l=dr(t,this.backendName);oe(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:r,attrs:s,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:a}=e;return this.makeTensorFromDataId(t,n,a)}));if(a){const e=this.getTensorsForGradient(t,r,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,r=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,d=As(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=i()})),a&&this.addTapeNode(l,u,t,d,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const a=pr(e);if(null!=a){const e=a.inputsToSave||[],r=a.outputsToSave||[];let s;a.saveAllInputs?(oe(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return s.concat(i)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&Fe(e[0])&&(r=e.map((e=>Lr(e))));const s=a.write(r,t,n),i=new Yr(t,n,s,this.nextTensorId());if(this.trackTensor(i,a),"string"===n){const e=this.state.tensorInfo.get(s),t=Re(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,a){const r=new Yr(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(r,a),r}makeVariable(e,t=!0,n,a){n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const r=new Jr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Ee(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Jr||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Ee(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=pr(e);null!=o&&(a=o.gradFunc),null!=a&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=Be(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=gs(e),n=new Set(t.map((e=>e.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n,a=!1){if(oe(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));oe(r instanceof Yr,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const a={},r={};for(let l=0;l<t.length;l++)a[t[l].id]=!0;for(let l=0;l<e.length;l++){const n=e[l],s=n.inputs;for(const e in s){const i=s[e];let o=!1;for(let e=0;e<t.length;e++)if(a[i.id]){n.outputs.forEach((e=>a[e.id]=!0)),o=!0,r[n.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let l=e.length-1;l>=0;l--){const t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let l=0;l<e.length;l++){const t=e[l];if(r[t.id]&&i[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];a[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,r);if(!a&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=We(de(e),"float32");return ks.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){const s=t[r],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const i=s.inputs[t];if(!he(r.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=a(t,r),t.dispose()}}}}(e,s,(e=>this.tidy(e)),Is);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){return oe(_e(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;oe(t.every((e=>e instanceof Yr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const a={};t.forEach(((e,t)=>{a[t]=e}));return this.runKernelFunc({forwardFunc:(a,r)=>(n=e(...t,r),oe(n.value instanceof Yr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),oe(_e(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,a)=>{const r=n.gradFunc(e,a),s=Array.isArray(r)?r:[r];oe(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),oe(s.every((e=>e instanceof Yr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Dr(),n=await this.backend.time(e);return n.wallMs=Dr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new xs;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}},vs=bs;function ws(){const e=Qe();if(null==e._tfengine){const t=new Xe(e);e._tfengine=new vs(t)}var t;return t=e._tfengine.ENV,Je=t,Kr=()=>e._tfengine,e._tfengine}vs.nextTensorId=0,vs.nextVariableId=0;var ks=ws();function Is(e,t){const n={a:e,b:t};return ks.runKernel(rt,n)}var Ss,Ns={};function Ts(e){Ss=e}function Cs(e){if(void 0!==Ss)return Ss;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Es(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}C(Ns,{isBrowser:()=>Es,isMobile:()=>Cs,mockIsMobile:()=>Ts});var Rs=Ze();function Fs(e,t){let n=e;if(Ce(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||Ce(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&Ze().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&$s(e,a,[]),a}function $s(e,t,n){if(n=n||[],!Array.isArray(e)&&!Ce(e))return void oe(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));oe(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),oe(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const a=t.slice(1);for(let r=0;r<e.length;++r)$s(e[r],a,n.concat(r))}function Ms(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${a}' must be ${e} tensor, but got ${t} tensor`)}}function zs(e,t,n,a="numeric"){if(e instanceof Yr)return Ms(a,e.dtype,t,n),e;let r=ze(e);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),Ms(a,r,t,n),null==e||!Ce(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const a=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${a}'`)}const s=Fs(e,r);Ce(e)||Array.isArray(e)||(e=[e]);const i="string"!==r?Or(e,r):ce(e,[],!0);return ks.makeTensor(i,s,r)}function _s(e,t,n,a="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>zs(e,`${t}[${r}]`,n,a)))}Rs.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Rs.registerFlag("IS_BROWSER",(()=>Es())),Rs.registerFlag("IS_NODE",(()=>"undefined"!==typeof r&&"undefined"!==typeof r.versions&&"undefined"!==typeof r.versions.node)),Rs.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Rs.registerFlag("PROD",(()=>!1)),Rs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Rs.getBool("DEBUG"))),Rs.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Rs.registerFlag("IS_TEST",(()=>!1)),Rs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),Rs.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));var Os="__op";function Ds(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Os;const r=(...e)=>{ks.startScope(n);try{const t=a(...e);return je(t)&&console.error("Cannot return a Promise inside of tidy."),ks.endScope(t),t}catch(t){throw ks.endScope(null),t}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}var Ps=Ds({complex_:function(e,t){const n=zs(e,"real","complex"),a=zs(t,"imag","complex");le(n.shape,a.shape,`real and imag shapes, ${n.shape} and ${a.shape}, must match in call to tf.complex().`);const r={real:n,imag:a};return ks.runKernel(Tt,r)}});function Ls(e,t,n,a){if(null==a&&(a=ze(e)),"complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Ce(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ve(t);const e=de(t),a=de(n);oe(e===a,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${a}`));for(let r=0;r<n.length;++r){const e=n[r],a=r!==n.length-1||e!==de(t.slice(r));oe(n[r]===t[r]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Ce(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==a?Or(e,a):ce(e,[],!0),ks.makeTensor(e,t,a)}function Ws(e,t,n){return Ls(e,t,Fs(e,n),n)}var Bs={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Us(e,t){const n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<r.length;++s){const i=r[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,a=new Uint8Array(n);let r=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);a.set(n,r),r+=4,a.set(e,r),r+=e.length}e(a)}));a.push(e)}else a.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Gs(await Promise.all(a)),specs:n}}function Vs(e,t){const n={};let a,r=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,l=de(o);let u;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Bs[n.dtype],c=e.slice(r,r+l*o),d="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===a&&(a=Js()),u=a(d)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];u[e]=Math.round(t*n.scale+n.min)}}r+=l*o}else if("string"===i){const t=de(s.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(r,r+4))[0];r+=4;const n=new Uint8Array(e.slice(r,r+t));u.push(n),r+=t}}else{const a=Bs[i],s=e.slice(r,r+l*a);if("float32"===i)u=new Float32Array(s);else if("int32"===i)u=new Int32Array(s);else if("bool"===i)u=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{u=new Float32Array(s);const e=new Float32Array(u.length/2),a=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],a[t]=u[2*t+1];const r=Ws(e,o,"float32"),i=Ws(a,o,"float32");n[t]=Ps(r,i),r.dispose(),i.dispose()}}r+=l*a}"complex64"!==i&&(n[t]=Ws(u,o,i))}return n}function Gs(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const a=new Uint8Array(t);let r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}var Hs="undefined"!==typeof s&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function js(e){return Hs?s.byteLength(e):new Blob([e]).size}function qs(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let a=0;return e.forEach((e=>{n.set(new Uint8Array(e),a),a+=e.byteLength})),n.buffer}function Xs(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Ks(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Zs(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[a,r]=await t(e.weightsManifest);n.weightSpecs=a,n.weightData=r}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function Ys(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:js(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:js(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Js(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let i=0;i<a.length;i++){const r=a[i],o=e[n[r>>10]+(1023&r)]+t[r>>10];s[i]=o}return new Float32Array(r)}}var Qs=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Qs.instance&&(Qs.instance=new Qs),Qs.instance}static registerSaveRouter(e){Qs.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Qs.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Qs.getHandlers(e,"save")}static getLoadHandlers(e,t){return Qs.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?Qs.getInstance().loadRouters:Qs.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&a.push(r)})),a}},ei=e=>Qs.registerSaveRouter(e),ti=e=>Qs.registerLoadRouter(e),ni=e=>Qs.getSaveHandlers(e),ai=(e,t)=>Qs.getLoadHandlers(e,t),ri="tensorflowjs",si="models_store",ii="model_info_store";function oi(){if(!Ze().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function li(e){const t=e.result;t.createObjectStore(si,{keyPath:"modelPath"}),t.createObjectStore(ii,{keyPath:"modelPath"})}var ui=class{constructor(e){if(this.indexedDB=oi(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(ri,1);a.onupgradeneeded=()=>li(a),a.onsuccess=()=>{const r=a.result;if(null==t){const t=r.transaction(si,"readonly"),a=t.objectStore(si).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{const a=Ys(t),s=r.transaction(ii,"readwrite");let i=s.objectStore(ii);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:a});let l;o.onsuccess=()=>{l=r.transaction(si,"readwrite");const o=l.objectStore(si).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a});o.onsuccess=()=>e({modelArtifactsInfo:a}),o.onerror=e=>{i=s.objectStore(ii);const t=i.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(o.error)),t.onerror=e=>(r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),s.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}};ui.URL_SCHEME="indexeddb://";var ci=e=>{return Ze().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ui.URL_SCHEME)?(t=e.slice(ui.URL_SCHEME.length),new ui(t)):null;var t};Qs.registerSaveRouter(ci),Qs.registerLoadRouter(ci);var di="/",pi="tensorflowjs_models",hi="info",fi="model_topology",mi="weight_specs",gi="weight_data",yi="model_metadata";function Ai(e){return{info:[pi,e,hi].join(di),topology:[pi,e,fi].join(di),weightSpecs:[pi,e,mi].join(di),weightData:[pi,e,gi].join(di),modelMetadata:[pi,e,yi].join(di)}}function xi(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function bi(e){const t=e.split(di);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(di)}var vi=class{constructor(e){if(!Ze().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Ai(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=Ys(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,function(e){if(Hs)return s.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}(e.weightData));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw xi(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Hs){const t=s.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}(i),t}};vi.URL_SCHEME="localstorage://";var wi=e=>{return Ze().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(vi.URL_SCHEME)?(t=e.slice(vi.URL_SCHEME.length),new vi(t)):null;var t};Qs.registerSaveRouter(wi),Qs.registerLoadRouter(wi);var ki="://",Ii=class{constructor(){this.managers={}}static getInstance(){return null==Ii.instance&&(Ii.instance=new Ii),Ii.instance}static registerManager(e,t){oe(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(ki)&&(e=e.slice(0,e.indexOf(ki))),oe(e.length>0,(()=>"scheme must not be an empty string."));const n=Ii.getInstance();oe(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}};function Si(e){if(-1===e.indexOf(ki))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Ii.getSchemes().join(",")}`);return{scheme:e.split(ki)[0],path:e.split(ki)[1]}}async function Ni(e,t,n=!1){oe(e!==t,(()=>`Old path and new path are the same: '${e}'`));const a=Qs.getLoadHandlers(e);oe(a.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),oe(a.length<2,(()=>`Copying failed because more than one (${a.length}) load handlers for source URL ${e}.`));const r=a[0],s=Qs.getSaveHandlers(t);oe(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),oe(s.length<2,(()=>`Copying failed because more than one (${a.length}) save handlers for destination URL ${t}.`));const i=s[0],o=Si(e).scheme,l=Si(e).path,u=o===Si(e).scheme,c=await r.load();n&&u&&await Ii.getManager(o).removeModel(l);const d=await i.save(c);return n&&!u&&await Ii.getManager(o).removeModel(l),d.modelArtifactsInfo}async function Ti(){const e=Ii.getSchemes(),t={};for(const n of e){const e=await Ii.getManager(n).listModels();for(const a in e){t[n+ki+a]=e[a]}}return t}async function Ci(e){const t=Si(e);return Ii.getManager(t.scheme).removeModel(t.path)}async function Ei(e,t){return Ni(e,t,!1)}async function Ri(e,t){return Ni(e,t,!0)}if(Ze().get("IS_BROWSER")){Ze().setPlatform("browser",new class{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}});try{Ii.registerManager(vi.URL_SCHEME,new class{constructor(){oe(Ze().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),oe("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=pi+di,n=di+hi;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);r.startsWith(t)&&r.endsWith(n)&&(e[bi(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){var t;const n=Ai(e=(t=e).startsWith(vi.URL_SCHEME)?t.slice(vi.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const a=JSON.parse(this.LS.getItem(n.info));return xi(n),a}})}catch(W0){}try{Ii.registerManager(ui.URL_SCHEME,new class{constructor(){this.indexedDB=oi()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(ri,1);n.onupgradeneeded=()=>li(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(ii,"readonly"),s=r.objectStore(ii).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(ui.URL_SCHEME)?t.slice(ui.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(ri,1);a.onupgradeneeded=()=>li(a),a.onsuccess=()=>{const r=a.result,s=r.transaction(ii,"readwrite"),i=s.objectStore(ii),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const a=i.delete(e),s=()=>{l=r.transaction(si,"readwrite");const a=l.objectStore(si).delete(e);a.onsuccess=()=>t(o.result.modelArtifactsInfo),a.onerror=e=>n(o.error)};a.onsuccess=s,a.onerror=e=>(s(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),s.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},a.onerror=e=>n(a.error)}))}})}catch(W0){}}var Fi,$i=()=>F();function Mi(e,t="float32",n){return t=t||"float32",Ve(e),new Xr(e,t,n)}Ze().get("IS_NODE")&&Ze().setPlatform("node",new class{constructor(){this.util=$(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Ze().global.fetch?Ze().global.fetch(e,t):(null==Fi&&(Fi=$i()),Fi(e,t))}now(){const e=r.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var zi=Ds({cast_:function(e,t){const n=zs(e,"x","cast");if(!Ne(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},r={dtype:t};return ks.runKernel(It,a,r)}});var _i=Ds({clone_:function(e){const t={x:zs(e,"x","clone","string_or_numeric")};return ks.runKernel(mn,t)}});function Oi(e,t=!1){console.log(e.toString(t))}ws(),Zr={buffer:Mi,cast:zi,clone:_i,print:Oi};var Di={};C(Di,{browserFiles:()=>Bi,browserHTTPRequest:()=>Zi,concatenateArrayBuffers:()=>qs,copyModel:()=>Ei,decodeWeights:()=>Vs,encodeWeights:()=>Us,fromMemory:()=>Ji,getLoadHandlers:()=>ai,getModelArtifactsForJSON:()=>Zs,getModelArtifactsInfoForJSON:()=>Ys,getSaveHandlers:()=>ni,http:()=>Ki,isHTTPScheme:()=>qi,listModels:()=>Ti,loadWeights:()=>Gi,moveModel:()=>Ri,registerLoadRouter:()=>ti,registerSaveRouter:()=>ei,removeModel:()=>Ci,weightsLoaderFactory:()=>Hi,withSaveHandler:()=>Qi});function Pi(e){return new Promise((e=>setTimeout(e))).then(e)}var Li=class{constructor(e){if(!Ze().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Li.URL_SCHEME)&&(e=e.slice(Li.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Ks(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=a,await Pi((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Pi((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Ys(e)}}}},Wi=Li;Wi.URL_SCHEME="downloads://";function Bi(e){return new class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==a.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:r});const s=Zs(a,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const a=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(r).then((e=>[t,qs(e)]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>a(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Xs(e.name))),a={};for(const r of e)r.paths.forEach((e=>{const r=Xs(e);if(-1!==t.indexOf(r))throw new Error(`Duplicate file basename found in weights manifest: '${r}'`);if(t.push(r),-1===n.indexOf(r))throw new Error(`Weight file with basename '${r}' is not provided.`);a[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return a}}(e)}function Ui(e,t,n,a){var r,s,i;oe(null!=(r=e)&&Array.isArray(r)&&r.length>0,(()=>"promises must be a none empty array")),i=a=null==a?1:a,oe((s=n=null==n?0:n)>=0&&s<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${s}`)),oe(i>=0&&i<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${i}`)),oe(i>=s,(()=>`startFraction must be no more than endFraction, but got startFraction ${s} and endFraction ${i}`));let o=0;return Promise.all(e.map((r=>(r.then((r=>{const s=n+ ++o/e.length*(a-n);return t(s),r})),r))))}async function Vi(e,t){null==t&&(t={});const n=null==t.fetchFunc?Ze().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await Ui(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Ui(r,t.onProgress,.5,1)}async function Gi(e,t="",n,a){return Hi((e=>Vi(e,{requestInit:a})))(e,t,n)}function Hi(e){return async(t,n="",a)=>{const r=t.map((()=>!1)),s={},i=null!=a?a.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=Bs[l]*de(e.shape),c=()=>{r[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=a?a.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=a.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),d={};let p=0;return l.forEach((e=>{const n=t[e].paths.length;let a=0;for(let t=0;t<n;t++)a+=c[p+t].byteLength;const r=new ArrayBuffer(a),i=new Uint8Array(r);let o=0;for(let t=0;t<n;t++){const e=new Uint8Array(c[p+t]);i.set(e,o),o+=e.byteLength}s[e].forEach((e=>{const t=Vs(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)d[n]=t[n]})),p+=n})),d}}Qs.registerSaveRouter((e=>Ze().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Wi.URL_SCHEME)?function(e="model"){return new Wi(e)}(e.slice(Wi.URL_SCHEME.length)):null));var ji=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(oe("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Ze().platform.fetch,oe(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&oe(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Ks(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Ys(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(r){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Zs(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}(t),r=this.weightPathPrefix||n,s=[];for(const l of e)s.push(...l.weights);const i=[],o=[];for(const l of e)for(const e of l.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(r+e+a);this.weightUrlConverter&&i.push(...await Promise.all(o));return[s,qs(await Vi(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}};function qi(e){return null!=e.match(ji.URL_SCHEME_REGEX)}ji.URL_SCHEME_REGEX=/^https?:\/\//;var Xi=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>qi(e))):qi(e),n)return Ki(e,t)}return null};function Ki(e,t){return new ji(e,t)}function Zi(e,t){return Ki(e,t)}Qs.registerSaveRouter(Xi),Qs.registerLoadRouter(Xi);var Yi=class{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}};function Ji(e,t,n,a){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new Yi(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Yi({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Yi({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a})}function Qi(e){return new class{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}(e)}var eo={};C(eo,{confusionMatrix:()=>ro});var to=Ds({matMul_:function(e,t,n=!1,a=!1){let r=zs(e,"a","matMul"),s=zs(t,"b","matMul");[r,s]=hs(r,s);const i={a:r,b:s},o={transposeA:n,transposeB:a};return ks.runKernel(xt,i,o)}});var no=Ds({oneHot_:function(e,t,n=1,a=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const r={indices:zs(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:a};return ks.runKernel(Qn,r,s)}});var ao=Ds({transpose_:function(e,t){const n=zs(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),oe(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{oe(e>=0&&e<n.rank,(()=>`All entries in 'perm' must be between 0 and ${n.rank-1} but got ${t}`))})),n.rank<=1)return n.clone();const a={x:n},r={perm:t};return ks.runKernel(Za,a,r)}});var ro=Ds({confusionMatrix_:function(e,t,n){const a=zs(e,"labels","confusionMatrix"),r=zs(t,"predictions","confusionMatrix");oe(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),oe(1===a.rank,(()=>`Expected the rank of labels to be 1, but got ${a.rank}`)),oe(1===r.rank,(()=>`Expected the rank of predictions to be 1, but got ${r.rank}`)),oe(a.shape[0]===r.shape[0],(()=>`Mismatch in the number of examples: ${a.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`)),oe(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=no(zi(a,"int32"),n),i=no(zi(r,"int32"),n),o=ao(s),l=to(o,i);return zi(l,"int32")}}),so={};function io(e,t){const n=e.length,a=[];for(let r=0;r<n;r++){const s=n-1-r,i=e[s]||1;(t[t.length-1-r]||1)>1&&1===i&&a.unshift(s)}return a}function oo(e,t){const n=[];for(let a=0;a<t.length;a++){const r=e[e.length-a-1],s=t.length-a-1,i=t[s];(null==r||1===r&&i>1)&&n.unshift(s)}return n}function lo(e,t){const n=[],a=Math.max(e.length,t.length);for(let r=0;r<a;r++){let a=e[e.length-r-1];null==a&&(a=1);let s=t[t.length-r-1];if(null==s&&(s=1),1===a)n.unshift(s);else if(1===s)n.unshift(a);else{if(a!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(a)}}return n}C(so,{assertAndGetBroadcastShape:()=>lo,getBroadcastDims:()=>io,getReductionAxes:()=>oo});var uo,co={};function po(e,t,n){if(ue(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const a=Fs(e,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ls(e,t,a,n)}function ho(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(r){const t=2;if(r&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=dr(nr,ks.backendName)){const n={pixels:e},a={numChannels:t};return ks.runKernel(nr,n,a)}const[l,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,d;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(a||n)c=e.data;else if(s||r||o){if(null==uo)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");uo=new OffscreenCanvas(1,1).getContext("2d")}else uo=document.createElement("canvas").getContext("2d");uo.canvas.width=l,uo.canvas.height=u,uo.drawImage(e,0,0,l,u),c=uo.getImageData(0,0,l,u).data}if(4===t)d=new Int32Array(c);else{const e=l*u;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=c[4*n+e]}return po(d,[u,l,t],"int32")}function fo(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function mo(e,t=3){let n=null;if(Ze().getBool("WRAP_TO_IMAGEBITMAP")&&fo(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(a){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return ho(n,t)}async function go(e,t){let n=zs(e,"img","toPixels");if(!(e instanceof Yr)){const e=n;n=zi(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[a,r]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(r*a*4);for(let u=0;u<a*r;++u){const e=[0,0,0,255];for(let a=0;a<s;a++){const t=i[u*s+a];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===s?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[a]=t*o}const t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){t.width=r,t.height=a;const e=t.getContext("2d"),n=new ImageData(l,r,a);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}C(co,{fromPixels:()=>yo,fromPixelsAsync:()=>mo,toPixels:()=>go});var yo=Ds({fromPixels_:ho}),Ao={};function xo(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(a<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[a-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[a-1]} vs. ${n}`);if(0===de(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,s=r[r.length-1];let i=1;for(let d=0;d<r.length-1;++d)i*=r[d];const o=e.shape,l=r.slice();l.pop();let u=1;for(let d=s;d<n;++d)u*=o[d],l.push(o[d]);const c=[...De(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,c]}C(Ao,{prepareAndValidate:()=>xo});var bo={};function vo(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${a}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(s+` update.rank < ${r}. `);if(e.length<a+(n.rank-r))throw new Error(s+` Output shape length < ${a+(n.rank-r)}`);if(n.rank!==r+e.length-a)throw new Error(s+" update.rank != "+(r+e.length-a));for(let i=0;i<r;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-r;++i)if(n.shape[i+r]!==e[i+a])throw new Error(s+` updates.shape[${i+r}] (${n.shape[i+r]}) != shape[${i+r}] (${e[i+r]})`)}function wo(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}vo(n,t,e)}function ko(e,t,n){const a=t.shape.length,r=a>1?t.shape[a-1]:1,s=n.length;let i=1;for(let l=r;l<s;++l)i*=n[l];const o=r<1?1:r;return{sliceRank:r,numUpdates:de(t.shape)/o,sliceSize:i,strides:[...De(n.slice(0,r)),1],outputSize:de(n)}}C(bo,{calculateShapes:()=>ko,validateInput:()=>wo,validateUpdateShape:()=>vo});var Io={};C(Io,{assertParamsValid:()=>So,computeFlatOffset:()=>Po,computeOutShape:()=>To,getNormalizedAxes:()=>Fo,isSliceContinous:()=>Do,maskToAxes:()=>No,parseSliceParams:()=>Lo,sliceInfo:()=>Wo,startForAxis:()=>_o,startIndicesWithElidedDims:()=>$o,stopForAxis:()=>Oo,stopIndicesWithElidedDims:()=>Mo,stridesForAxis:()=>zo,stridesWithElidedDims:()=>Co});function So(e,t,n){const a=e.shape.length;oe(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),oe(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let r=0;r<a;++r)oe(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${a}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function No(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function To(e,t,n){const a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function Co(e,t,n,a){const r=[...e];for(let s=r.length;s<a.length;s++)r.push(1);for(let s=0;s<n;s++)0===s?r[t]=1:(r.splice(t,0,1),r.pop());return r}function Eo(e,t,n){return n<=e?n:n-(t-1)}function Ro(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function Fo(e,t,n,a,r,s,i,o,l){const u=e.length;let c=new Array(u),d=new Array(u),p=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=$o(i,l,u,a,e),d=Mo(o,l,u,r,e),p=Co(s,l,u,e)}else for(let h=0;h<u;h++)c[h]=_o(i,a,s,e,h,l),d[h]=Oo(o,r,s,e,h,l),p[h]=zo(s,h,l);return{begin:c,end:d,strides:p}}function $o(e,t,n,a,r){const s=[...r],i=Ro(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{const r=Eo(t,n,o);let i=a[r];e&1<<r&&(i=0),s[o]=i}return s}function Mo(e,t,n,a,r){const s=[...r],i=Ro(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{const r=Eo(t,n,o);let i=a[r];e&1<<r&&(i=Number.MAX_SAFE_INTEGER),s[o]=i}for(let o=0;o<s.length;o++){const e=r[o];s[o]<0&&(s[o]+=e),s[o]=te(0,s[o],r[o])}return s}function zo(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function _o(e,t,n,a,r,s){let i=t[r];const o=n[r]||1;(e&1<<r||s&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=a[r];return i<0&&(i+=l),i=te(0,i,l-1),i}function Oo(e,t,n,a,r,s){let i=t[r];const o=n[r]||1;(e&1<<r||s&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=a[r];return i<0&&(i+=l),i=o>0?te(0,i,l):te(-1,i,l-1),i}function Do(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function Po(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function Lo(e,t,n){let a;const r=e.shape.length;let s;return a="number"===typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),a.forEach((e=>{oe(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(oe(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,s]}function Wo(e,t,n,a,r,s,i,o,l){let u;if(null==a?(u=new Array(t.length),u.fill(1)):u=a,null!=i&&0!==(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const d={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let A=0;A<d.dims;A++)c&&0!==(1<<A&o)&&d.numAddAxisAfterEllipsis++,1<<A&i&&(c=!0);c||(d.ellipsisMask|=1<<d.dims,d.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(d,p);let h=!0,f=!0,m=!0;const g=[],y=[];for(let A=0;A<e.length;++A){if(0===p.strides[A])throw Error(`strides[${A}] must be non-zero`);const t=!!(p.shrinkAxisMask&1<<A),n=e[A];if(-1===n){g.push(t?1:-1);continue}const a=[p.beginMask&1<<A,p.endMask&1<<A],r=[p.strides[A]>0?0:-1,p.strides[A]>0?n:n-1];if(t&&p.strides[A]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[A];const s=!!(p.beginMask&1<<A&&p.endMask&1<<A);if(p.beginValid&&p.endValid){if(t){const e=p.begin[A]<0?n+p.begin[A]:p.begin[A];if(p.begin[A]=e,p.end[A]=p.begin[A]+1,e<0||e>=n)throw Error(`slice index ${p.begin[A]} of dimension ${A} out of bounds.`)}else p.begin[A]=Bo(p.begin[A],0,p.strides[A],n,a,r),p.end[A]=Bo(p.end[A],1,p.strides[A],n,a,r);const e=1===p.strides[A]&&0===p.begin[A]&&p.end[A]===n;h=h&&e,f=f&&(0===A&&1===p.strides[A]||e)}else h=h&&1===p.strides[A]&&s,f=f&&(0===A&&1===p.strides[A]||s);let i,o=!1;if(p.beginValid&&p.endValid?(i=p.end[A]-p.begin[A],o=!0):t?(i=1,o=!0):s&&n>=0&&(i=p.strides[A]<0?-n:n,o=!0),o){let e;e=0===i||i<0!==p.strides[A]<0?0:Math.trunc(i/p.strides[A])+(i%p.strides[A]!==0?1:0),g.push(e)}else g.push(-1)}for(let A=0;A<p.finalShapeGatherIndices.length;++A){const e=p.finalShapeGatherIndices[A];e>=0?y.push(g[e]):-2===e&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:y,isIdentity:h,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function Bo(e,t,n,a,r,s){if(r[t])return n>0?s[t]:s[t+1&1];{const t=e<0?a+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}var Uo={};C(Uo,{Serializable:()=>Vo,SerializationMap:()=>Go,registerClass:()=>Ho});var Vo=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Go=class{constructor(){this.classNameMap={}}static getMap(){return null==Go.instance&&(Go.instance=new Go),Go.instance}static register(e){Go.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function Ho(e){oe(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),oe("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),oe(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Go.register(e)}var jo={};C(jo,{TEST_EPSILON_FLOAT16:()=>qo,encodeStrings:()=>al,expectArrayBuffersEqual:()=>nl,expectArraysClose:()=>Xo,expectArraysEqual:()=>Jo,expectNumbersClose:()=>Qo,expectPromiseToFail:()=>Yo,expectValuesInRange:()=>tl,testEpsilon:()=>Ko});var qo=.1;function Xo(e,t,n){return null==n&&(n=Ko()),Zo(e,t,((e,t)=>el(e,t,n)))}function Ko(){return 32===ks.backend.floatPrecision()?.001:qo}function Zo(e,t,n){let a=!0;if((Ce(e)||Ce(t))&&(a=!1),Ce(e)&&Ce(t)&&(a=!0),a){const n=e.constructor.name,a=t.constructor.name;if(n!==a)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${a}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Fs(e),a=Fs(t);if(!he(n,a))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${a}]`)}const r=Ce(e)?e:ce(e),s=Ce(t)?t:ce(t);if(r.length!==s.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${s.length}.\nActual:   ${r}.\nExpected: ${s}.`);for(let i=0;i<s.length;++i){const e=r[i],t=s[i];if(!n(e,t))throw new Error(`Arrays differ: actual[${i}] = ${e}, expected[${i}] = ${t}.\nActual:   ${r}.\nExpected: ${s}.`)}}function Yo(e,t){e().then((()=>t.fail()),(()=>t()))}function Jo(e,t){const n="string"===typeof t||"number"===typeof t||"boolean"===typeof t?[t]:t;return Fe(e)||Fe(e[0])||Fe(t)||Fe(t[0])?Zo(e,n,((e,t)=>e==t)):Zo(e,t,((e,t)=>el(e,t,0)))}function Qo(e,t,n){if(null==n&&(n=Ko()),!el(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function el(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function tl(e,t,n){for(let a=0;a<e.length;a++)if(e[a]<t||e[a]>n)throw new Error(`Value out of range:${e[a]} low: ${t}, high: ${n}`)}function nl(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function al(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?al(n):e[t]=Lr(n)}return e}var rl="0.0.0";function sl(){Ze().set("PROD",!0)}function il(){Ze().set("DEBUG",!0)}function ol(){Ze().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function ll(e){Ze().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function ul(){ks.disposeVariables()}function cl(){return ks}function dl(){return ks.memory()}function pl(e){return ks.profile(e)}function hl(e,t){return ks.tidy(e,t)}function fl(e){gs(e).forEach((e=>e.dispose()))}function ml(e){return ks.keep(e)}function gl(e){return ks.time(e)}function yl(e){return ks.setBackend(e)}function Al(){return ks.ready()}function xl(){return ks.backendName}function bl(e){ks.removeBackend(e)}function vl(e){return ks.findBackend(e)}function wl(e){return ks.findBackendFactory(e)}function kl(e,t,n=1){return ks.registerBackend(e,t,n)}function Il(){return ks.backend}function Sl(e,t){Ze().setPlatform(e,t)}var Nl=Ds({add_:function(e,t){let n=zs(e,"a","add"),a=zs(t,"b","add");[n,a]=hs(n,a);const r={a:n,b:a};return ks.runKernel(rt,r)}});var Tl=Ds({floorDiv_:function(e,t){let n=zs(e,"a","floorDiv"),a=zs(t,"b","floorDiv");[n,a]=hs(n,a);const r={a:n,b:a};return ks.runKernel(un,r)}});var Cl=Ds({div_:function(e,t){let n=zs(e,"a","div"),a=zs(t,"b","div");if([n,a]=hs(n,a),"int32"===n.dtype&&"int32"===a.dtype)return Tl(n,a);const r={a:n,b:a};return ks.runKernel(Kt,r,{})}});var El=Ds({mul_:function(e,t){let n=zs(e,"a","mul"),a=zs(t,"b","mul");[n,a]=hs(n,a);const r={a:n,b:a};return ks.runKernel(jn,r)}});var Rl=Ds({abs_:function(e){const t=zs(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ks.runKernel(Ct,e)}{const e={x:t};return ks.runKernel(tt,e)}}});var Fl=Ds({acos_:function(e){const t={x:zs(e,"x","acos")};return ks.runKernel(nt,t)}});var $l=Ds({acosh_:function(e){const t={x:zs(e,"x","acosh")};return ks.runKernel(at,t)}});var Ml=Ds({addN_:function(e){oe(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),oe(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>zs(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!he(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=t;return ks.runKernel(st,a)}});var zl=Ds({all_:function(e,t=null,n=!1){const a={x:zs(e,"x","all","bool")},r={axis:t,keepDims:n};return ks.runKernel(it,a,r)}});var _l=Ds({any_:function(e,t=null,n=!1){const a={x:zs(e,"x","any","bool")},r={axis:t,keepDims:n};return ks.runKernel(ot,a,r)}});var Ol=Ds({argMax_:function(e,t=0){const n={x:zs(e,"x","argMax")},a={axis:t};return ks.runKernel(lt,n,a)}});var Dl=Ds({argMin_:function(e,t=0){const n={x:zs(e,"x","argMin")},a={axis:t};return ks.runKernel(ut,n,a)}});var Pl=Ds({asin_:function(e){const t={x:zs(e,"x","asin")};return ks.runKernel(ct,t)}});var Ll=Ds({asinh_:function(e){const t={x:zs(e,"x","asinh")};return ks.runKernel(dt,t)}});var Wl=Ds({atan_:function(e){const t={x:zs(e,"x","atan")};return ks.runKernel(pt,t)}});var Bl=Ds({atan2_:function(e,t){let n=zs(e,"a","atan2"),a=zs(t,"b","atan2");[n,a]=hs(n,a);const r={a:n,b:a};return ks.runKernel(ft,r)}});var Ul=Ds({atanh_:function(e){const t={x:zs(e,"x","atanh")};return ks.runKernel(ht,t)}});function Vl(e,t,n,a,r="NHWC",s){return jl(e,[...t,e[3]],n,s,a,null,null,tu(r))}function Gl(e,t,n,a,r,s,i="channelsLast"){const[o,l]=Kl(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return jl(e,u,n,a,r,s,!1,i)}function Hl(e,t,n,a,r,s,i="NDHWC"){const[o,l,u]=Zl(t);let c,d;if("NDHWC"===i)d="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);d="channelsFirst",c=[o,l,u,e[1],e[1]]}return ql(e,c,n,a,r,!1,d,s)}function jl(e,t,n,a,r,s,i=!1,o="channelsLast"){let[l,u,c,d]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,d]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,d,u,c]=e}const[p,h,,f]=t,[m,g]=Kl(n),[y,A]=Kl(a),x=Yl(p,y),b=Yl(h,A),{padInfo:v,outHeight:w,outWidth:k}=function(e,t,n,a,r,s,i,o,l){let u,c,d;if("number"===typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,r){null==a&&(a=Xl(e,t,n));const s=e[0],i=e[1],o=Jl((s-t+2*a)/n+1,r),l=Jl((i-t+2*a)/n+1,r);return[o,l]}([t,n],s,a,e,o);c=r[0],d=r[1]}else if("same"===e){c=Math.ceil(t/a),d=Math.ceil(n/r);const e=Math.max(0,(c-1)*a+s-t),o=Math.max(0,(d-1)*r+i-n),l=Math.floor(e/2),p=e-l,h=Math.floor(o/2);u={top:l,bottom:p,left:h,right:o-h,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/a),d=Math.ceil((n-i+1)/r);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===l?e[1][0]:e[2][0],h="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:p,bottom:h,left:f,right:m,type:0===p&&0===h&&0===f&&0===m?"VALID":"EXPLICIT"},c=Jl((t-s+p+h)/a+1,o),d=Jl((n-i+f+m)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:d}}(r,u,c,m,g,x,b,s,o),I=i?f*d:f;let S;return"channelsFirst"===o?S=[l,I,w,k]:"channelsLast"===o&&(S=[l,w,k,I]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:d,outHeight:w,outWidth:k,outChannels:I,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:h,effectiveFilterHeight:x,effectiveFilterWidth:b,dilationHeight:y,dilationWidth:A,inShape:e,outShape:S,filterShape:t}}function ql(e,t,n,a,r,s=!1,i="channelsLast",o){let[l,u,c,d,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,d,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,p,u,c,d]=e}const[h,f,m,,g]=t,[y,A,x]=Zl(n),[b,v,w]=Zl(a),k=Yl(h,b),I=Yl(f,v),S=Yl(m,w),{padInfo:N,outDepth:T,outHeight:C,outWidth:E}=function(e,t,n,a,r,s,i,o,l,u,c){let d,p,h,f;if("number"===typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,a,r,s){null==r&&(r=Xl(e,t,a));const i=e[0],o=e[1],l=e[2],u=Jl((i-t+2*r)/a+1,s),c=Jl((o-t+2*r)/a+1,s),d=Jl((l-t+2*r)/a+1,s);return[u,c,d,n]}([t,n,a,1],o,1,r,e,c);p=s[0],h=s[1],f=s[2]}else if("same"===e){p=Math.ceil(t/r),h=Math.ceil(n/s),f=Math.ceil(a/i);const e=(p-1)*r+o-t,c=(h-1)*s+l-n,m=(f-1)*i+u-a,g=Math.floor(e/2),y=e-g,A=Math.floor(c/2),x=c-A,b=Math.floor(m/2);d={top:A,bottom:x,left:b,right:m-b,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/r),h=Math.ceil((n-l+1)/s),f=Math.ceil((a-u+1)/i)}return{padInfo:d,outDepth:p,outHeight:h,outWidth:f}}(r,u,c,d,y,A,x,k,I,S,o),R=s?g*p:g;let F;return"channelsFirst"===i?F=[l,R,T,C,E]:"channelsLast"===i&&(F=[l,T,C,E,R]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:d,inChannels:p,outDepth:T,outHeight:C,outWidth:E,outChannels:R,padInfo:N,strideDepth:y,strideHeight:A,strideWidth:x,filterDepth:h,filterHeight:f,filterWidth:m,effectiveFilterDepth:k,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationDepth:b,dilationHeight:v,dilationWidth:w,inShape:e,outShape:F,filterShape:t}}function Xl(e,t,n,a=1){const r=Yl(t,a);return Math.floor((e[0]*(n-1)-n+r)/2)}function Kl(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Zl(e){return"number"===typeof e?[e,e,e]:e}function Yl(e,t){return t<=1?e:e+(e-1)*(t-1)}function Jl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Ql(e){const[t,n,a]=Kl(e);return 1===t&&1===n&&1===a}function eu(e,t){return Ql(e)||Ql(t)}function tu(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function nu(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)oe(fe(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{oe(fe(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}var au=Ds({reshape_:function(e,t){const n={x:zs(e,"x","reshape","string_or_numeric")},a={shape:t};return ks.runKernel(ca,n,a)}});var ru=Ds({avgPool_:function(e,t,n,a,r){const s=zs(e,"x","avgPool","float32");oe(eu(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=au(s,[1,s.shape[0],s.shape[1],s.shape[2]])),oe(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),nu("avgPool",a,r);const l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r};let c=ks.runKernel(mt,l,u);return c=zi(c,s.dtype),o?au(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});var su=Ds({avgPool3d_:function(e,t,n,a,r,s="NDHWC"){const i=zs(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=au(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),oe(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),oe("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),nu("avgPool3d",a,r);const u={x:o},c={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s};let d=ks.runKernel(yt,u,c);return d=zi(d,o.dtype),l?au(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var iu=Ds({concat_:function(e,t=0){oe(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=_s(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return _i(n[0]);const a=n,r={axis:t};return ks.runKernel(Et,a,r)}});var ou=Ds({sigmoid_:function(e){const t={x:zs(e,"x","sigmoid","float32")};return ks.runKernel(Na,t)}});var lu=Ds({slice_:function(e,t,n){const a=zs(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");const r={x:a},s={begin:t,size:n};return ks.runKernel(wa,r,s)}});var uu=Ds({tanh_:function(e){const t={x:zs(e,"x","tanh","float32")};return ks.runKernel(ja,t)}});var cu=Ds({basicLSTMCell_:function(e,t,n,a,r,s){const i=zs(e,"forgetBias","basicLSTMCell"),o=zs(t,"lstmKernel","basicLSTMCell"),l=zs(n,"lstmBias","basicLSTMCell"),u=zs(a,"data","basicLSTMCell"),c=zs(r,"c","basicLSTMCell"),d=zs(s,"h","basicLSTMCell"),p=iu([u,d],1),h=to(p,o),f=Nl(h,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],A=lu(f,[0,0],y),x=lu(f,[0,g],y),b=lu(f,[0,2*g],y),v=lu(f,[0,3*g],y),w=Nl(El(ou(A),uu(x)),El(c,ou(Nl(i,b))));return[w,El(uu(w),ou(v))]}});var du=Ds({batchToSpaceND_:function(e,t,n){const a=zs(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));oe(a.rank>=1+t.length,(()=>`input rank is ${a.rank} but should be > than blockShape.length ${t.length}`)),oe(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),oe(a.shape[0]%r===0,(()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));const s={x:a},i={blockShape:t,crops:n};return ks.runKernel(bt,s,i)}});var pu=Ds({batchNorm_:function(e,t,n,a,r,s){null==s&&(s=.001);const i=zs(e,"x","batchNorm"),o=zs(t,"mean","batchNorm"),l=zs(n,"variance","batchNorm");let u,c;null!=r&&(u=zs(r,"scale","batchNorm")),null!=a&&(c=zs(a,"offset","batchNorm")),oe(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),oe(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),oe(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const d={x:function(e){let t;return t=0===e.rank||1===e.rank?au(e,[1,1,1,e.size]):2===e.rank?au(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?au(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:s},h=ks.runKernel(cn,d,p);return au(h,i.shape)}});var hu=Ds({batchNorm2d_:function(e,t,n,a,r,s){const i=zs(e,"x","batchNorm"),o=zs(t,"mean","batchNorm"),l=zs(n,"variance","batchNorm");let u,c;return null!=r&&(u=zs(r,"scale","batchNorm")),null!=a&&(c=zs(a,"offset","batchNorm")),oe(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),oe(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),oe(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&oe(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&oe(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),pu(i,o,l,c,u,s)}});var fu=Ds({batchNorm3d_:function(e,t,n,a,r,s){const i=zs(e,"x","batchNorm"),o=zs(t,"mean","batchNorm"),l=zs(n,"variance","batchNorm");let u,c;return null!=r&&(u=zs(r,"scale","batchNorm")),null!=a&&(c=zs(a,"offset","batchNorm")),oe(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),oe(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),oe(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&oe(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&oe(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),pu(i,o,l,c,u,s)}});var mu=Ds({batchNorm4d_:function(e,t,n,a,r,s){const i=zs(e,"x","batchNorm"),o=zs(t,"mean","batchNorm"),l=zs(n,"variance","batchNorm");let u,c;return null!=r&&(u=zs(r,"scale","batchNorm")),null!=a&&(c=zs(a,"offset","batchNorm")),oe(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),oe(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),oe(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&oe(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&oe(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),pu(i,o,l,c,u,s)}});var gu=Ds({bincount_:function(e,t,n){const a=zs(e,"x","bincount"),r=zs(t,"weights","bincount");oe("int32"===a.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${a.dtype}`)),oe(n>=0,(()=>`size must be non-negative, but got ${n}.`)),oe(r.size===a.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${a.shape}, weights shape: ${r.shape}.`));const s={x:a,weights:r},i={size:n};return ks.runKernel(vt,s,i)}});var yu=Ds({broadcastArgs_:function(e,t){const n=zs(e,"s0","broadcastArgs","int32"),a=zs(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==a.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${a.rank}`);const r={s0:n,s1:a};return ks.runKernel(kt,r)}});var Au=Ds({broadcastTo_:function(e,t){let n=zs(e,"broadcastTo","x");const a=n.shape;if(t.some((e=>!(e>0)||e%1!==0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=au(n,e)}const r=n.shape,s=Array.from(t);for(let l=t.length-1;l>=0;l--)if(r[l]===t[l])s[l]=1;else if(1!==n.shape[l])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return _i(n);const i={x:n},o={reps:s};return ks.runKernel(qa,i,o)}});var xu=Ds({ceil_:function(e){const t={x:zs(e,"x","ceil","float32")};return ks.runKernel(St,t)}});var bu=Ds({clipByValue_:function(e,t,n){const a=zs(e,"x","clipByValue");oe(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const r={x:a},s={clipValueMin:t,clipValueMax:n};return ks.runKernel(Nt,r,s)}});var vu=Ds({concat1d_:function(e){return iu(e,0)}});var wu=Ds({concat2d_:function(e,t){return iu(e,t)}});var ku=Ds({concat3d_:function(e,t){return iu(e,t)}});var Iu=Ds({concat4d_:function(e,t){return iu(e,t)}});var Su=Ds({conv2d_:function(e,t,n,a,r="NHWC",s=[1,1],i){const o=zs(e,"x","conv2d","float32"),l=zs(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=au(o,[1,o.shape[0],o.shape[1],o.shape[2]])),oe(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),oe(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),nu("conv2d",a,i);const d="NHWC"===r?u.shape[3]:u.shape[1];oe(d===l.shape[2],(()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${l.shape[2]}.`)),oe(eu(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));const p={x:u,filter:l},h={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i},f=ks.runKernel(Rt,p,h);return c?au(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Nu=Ds({conv1d_:function(e,t,n,a,r="NWC",s=1,i){const o=zs(e,"x","conv1d"),l=zs(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=au(o,[1,o.shape[0],o.shape[1]])),oe(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),oe(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),nu("conv1d",a,i),oe(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),oe(eu(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),oe("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const d=au(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=au(u,[u.shape[0],1,u.shape[1],u.shape[2]]),h=Su(p,d,[1,n],a,"NHWC",[1,s],i);return au(h,c?[h.shape[2],h.shape[3]]:[h.shape[0],h.shape[2],h.shape[3]])}});var Tu=Ds({conv2DBackpropInput_:function(e,t,n,a,r,s="NHWC",i){oe(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=au(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),oe(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),oe(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),oe(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===s?o[3]:o[1],d="NHWC"===s?l.shape[3]:l.shape[1];oe(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),oe(d===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`)),nu("conv2dDerInput",r,i);const p={dy:l,filter:n},h={strides:a,pad:r,dataFormat:s,dimRoundingMode:i,inputShape:o},f=ks.runKernel($t,p,h);return u?au(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});var Cu=Ds({conv2dTranspose_:function(e,t,n,a,r,s){const i=zs(e,"x","conv2dTranspose"),o=zs(t,"filter","conv2dTranspose");return Tu(n,i,o,a,r,"NHWC",s)}});var Eu=Ds({conv3d_:function(e,t,n,a,r="NDHWC",s=[1,1,1]){const i=zs(e,"x","conv3d"),o=zs(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=au(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),oe(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),oe(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),oe(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),oe(eu(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),oe("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const c={x:l,filter:o},d={strides:n,pad:a,dataFormat:r,dilations:s},p=ks.runKernel(Mt,c,d);return u?au(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var Ru=Ds({conv3DBackpropInput_:function(e,t,n,a,r){oe(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=au(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const l=s[4],u=i.shape[4];oe(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),oe(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),oe(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),oe(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),oe(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},d={pad:r,strides:a,inputShape:s},p=ks.runKernel(_t,c,d);return o?au(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var Fu=Ds({conv3dTranspose_:function(e,t,n,a,r){const s=zs(e,"x","conv3dTranspose"),i=zs(t,"filter","conv3dTranspose");return Ru(n,s,i,a,r)}});var $u=Ds({cos_:function(e){const t={x:zs(e,"x","cos","float32")};return ks.runKernel(Ot,t)}});var Mu=Ds({cosh_:function(e){const t={x:zs(e,"x","cosh","float32")};return ks.runKernel(Dt,t)}});var zu=Ds({cumsum_:function(e,t=0,n=!1,a=!1){const r={x:zs(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:a};return ks.runKernel(Pt,r,s)}});var _u=Ds({denseBincount_:function(e,t,n,a=!1){const r=zs(e,"x","denseBincount"),s=zs(t,"weights","denseBincount");oe("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),oe(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),oe(n>=0,(()=>`size must be non-negative, but got ${n}.`)),oe(s.size===r.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${s.shape}.`));const i={x:r,weights:s},o={size:n,binaryOutput:a};return ks.runKernel(Wt,i,o)}});var Ou=Ds({depthToSpace_:function(e,t,n="NHWC"){const a=zs(e,"x","depthToSpace","float32"),r="NHWC"===n?a.shape[1]:a.shape[2],s="NHWC"===n?a.shape[2]:a.shape[3],i="NHWC"===n?a.shape[3]:a.shape[1];oe(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),oe(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${a.shape}`)),oe(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${a.shape}`)),oe(i%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${a.shape}`));const o={x:a},l={blockSize:t,dataFormat:n};return ks.runKernel(Bt,o,l)}});var Du=Ds({depthwiseConv2d_:function(e,t,n,a,r="NHWC",s=[1,1],i){const o=zs(e,"x","depthwiseConv2d","float32"),l=zs(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=au(o,[1,o.shape[0],o.shape[1],o.shape[2]])),oe(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),oe(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),oe(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),nu("depthwiseConv2d",a,i);const d={x:u,filter:l},p={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i},h=ks.runKernel(Ut,d,p);return c?au(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});var Pu=Ds({diag_:function(e){const t={x:zs(e,"x","diag")};return ks.runKernel(Ht,t)}});var Lu=Ds({dilation2d_:function(e,t,n,a,r=[1,1],s="NHWC"){const i=zs(e,"x","dilation2d"),o=zs(t,"filter","dilation2d");oe(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),oe(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),oe("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=i,u=!1;3===i.rank&&(l=au(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},d={strides:n,pad:a,dilations:r},p=ks.runKernel(jt,c,d);return u?au(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});var Wu=Ds({equal_:function(e,t){let n=zs(e,"a","equal","string_or_numeric"),a=zs(t,"b","equal","string_or_numeric");[n,a]=hs(n,a),lo(n.shape,a.shape);const r={a:n,b:a};return ks.runKernel(en,r)}});var Bu=Ds({where_:function(e,t,n){const a=zs(t,"a","where"),r=zs(n,"b","where"),s=zs(e,"condition","where","bool"),i=lo(lo(s.shape,a.shape),r.shape),o={condition:Au(s,i),t:Au(a,i),e:Au(r,i)};return ks.runKernel(ba,o)}});var Uu=Ds({zerosLike_:function(e){const t={x:zs(e,"x","zerosLike")};return ks.runKernel(er,t)}});var Vu=Ds({divNoNan_:function(e,t){let n=zs(e,"a","div"),a=zs(t,"b","div");[n,a]=hs(n,a);const r=Cl(n,a),s=Uu(r),i=Wu(a,s);return Bu(i,s,r)}});var Gu=Ds({dot_:function(e,t){const n=zs(e,"t1","dot"),a=zs(t,"t2","dot");oe((1===n.rank||2===n.rank)&&(1===a.rank||2===a.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${a.rank}.`));const r=1===n.rank?n.size:n.shape[1],s=1===a.rank?a.size:a.shape[0];if(oe(r===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${s}.`)),1===n.rank&&1===a.rank){const e=au(n,[1,-1]),t=au(a,[-1,1]),r=to(e,t);return au(r,[])}if(1===n.rank&&2===a.rank){const e=au(n,[1,-1]),t=au(a,[a.shape[0],a.shape[1]]),r=to(e,t);return au(r,[r.size])}if(2===n.rank&&1===a.rank){const e=au(a,[-1,1]),t=to(n,e);return au(t,[t.size])}{const e=au(a,[a.shape[0],a.shape[1]]);return to(n,e)}}});var Hu=Ds({einsum_:function(e,...t){const n=t.map(((e,t)=>zs(e,`tensors${t}`,"einsum"))),a={equation:e};return ks.runKernel(Zt,n,a)}});var ju=Ds({elu_:function(e){const t={x:zs(e,"x","elu","float32")};return ks.runKernel(Yt,t)}});var qu=Ds({erf_:function(e){let t=zs(e,"x","erf");oe("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=zi(t,"float32"));const n={x:t};return ks.runKernel(Qt,n)}});var Xu=Ds({exp_:function(e){const t={x:zs(e,"x","exp")};return ks.runKernel(tn,t)}});var Ku=Ds({expandDims_:function(e,t=0){const n=zs(e,"x","expandDims","string_or_numeric");oe(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const a={input:n},r={dim:t};return ks.runKernel(nn,a,r)}});var Zu=Ds({expm1_:function(e){const t={x:zs(e,"x","expm1")};return ks.runKernel(an,t)}});var Yu=Ds({tile_:function(e,t){const n=zs(e,"x","tile","string_or_numeric");oe(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const a={x:n},r={reps:t};return ks.runKernel(qa,a,r)}});var Ju=Ds({eye_:function(e,t,n,a="float32"){null==t&&(t=e);const r=Mi([e,t],a),s=e<=t?e:t;for(let o=0;o<s;++o)r.set(1,o,o);const i=au(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Yu(Ku(i,0),[n[0],1,1]);if(2===n.length)return Yu(Ku(Ku(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Yu(Ku(Ku(Ku(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Qu(e,t,n){const a={shape:e,value:t,dtype:n};return ks.runKernel(sn,{},a)}var ec=Ds({floor_:function(e){const t={x:zs(e,"x","floor","float32")};return ks.runKernel(ln,t)}});var tc=Ds({gather_:function(e,t,n=0,a=0){const r={x:zs(e,"x","gather"),indices:zs(t,"indices","gather","int32")},s={axis:n,batchDims:a};return ks.runKernel(dn,r,s)}});var nc=Ds({greater_:function(e,t){let n=zs(e,"a","greater","string_or_numeric"),a=zs(t,"b","greater","string_or_numeric");[n,a]=hs(n,a),lo(n.shape,a.shape);const r={a:n,b:a};return ks.runKernel(hn,r)}});var ac=Ds({greaterEqual_:function(e,t){let n=zs(e,"a","greaterEqual","string_or_numeric"),a=zs(t,"b","greaterEqual","string_or_numeric");[n,a]=hs(n,a),lo(n.shape,a.shape);const r={a:n,b:a};return ks.runKernel(fn,r)}});var rc=Ds({imag_:function(e){const t={input:zs(e,"input","imag")};return ks.runKernel(yn,t)}});var sc=Ds({isFinite_:function(e){const t={x:zs(e,"x","isFinite")};return ks.runKernel(An,t)}});var ic=Ds({isInf_:function(e){const t={x:zs(e,"x","isInf")};return ks.runKernel(xn,t)}});var oc=Ds({isNaN_:function(e){const t={x:zs(e,"x","isNaN")};return ks.runKernel(bn,t)}});var lc=Ds({leakyRelu_:function(e,t=.2){const n={x:zs(e,"x","leakyRelu")},a={alpha:t};return ks.runKernel(vn,n,a)}});var uc=Ds({less_:function(e,t){let n=zs(e,"a","less","string_or_numeric"),a=zs(t,"b","less","string_or_numeric");[n,a]=hs(n,a),lo(n.shape,a.shape);const r={a:n,b:a};return ks.runKernel(wn,r)}});var cc=Ds({lessEqual_:function(e,t){let n=zs(e,"a","lessEqual","string_or_numeric"),a=zs(t,"b","lessEqual","string_or_numeric");[n,a]=hs(n,a),lo(n.shape,a.shape);const r={a:n,b:a};return ks.runKernel(kn,r)}});function dc(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:e,stop:t,num:n};return ks.runKernel(In,{},a)}var pc=Ds({localResponseNormalization_:function(e,t=5,n=1,a=1,r=.5){const s=zs(e,"x","localResponseNormalization");oe(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),oe(fe(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=au(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:a,beta:r},c=ks.runKernel(Fn,l,u);return o?au(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});var hc=Ds({log_:function(e){const t={x:zs(e,"x","log","float32")};return ks.runKernel(Sn,t)}});var fc=Ds({log1p_:function(e){const t={x:zs(e,"x","log1p")};return ks.runKernel(Nn,t)}});function mc(e){return oe(_e(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const a=zs(t,"x","tf.grad","string_or_numeric"),r=null!=n?zs(n,"dy","tf.grad"):null;return ks.tidy((()=>{const{value:t,grads:n}=ks.gradients((()=>e(a)),[a],r);return null!=r&&le(t.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),vc(n),n[0]}))}}function gc(e){return oe(_e(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{oe(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const a=_s(t,"args","tf.grads","string_or_numeric"),r=null!=n?zs(n,"dy","tf.grads"):null;return ks.tidy((()=>{const{value:t,grads:n}=ks.gradients((()=>e(...a)),a,r);return null!=r&&le(t.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),vc(n),n}))}}function yc(e){return oe(_e(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{oe(t instanceof Yr,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),oe(null==n||n instanceof Yr,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:a,value:r}=ks.gradients((()=>e(t)),[t],n);return vc(a),{grad:a[0],value:r}}}function Ac(e){return oe(_e(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{oe(Array.isArray(t)&&t.every((e=>e instanceof Yr)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),oe(null==n||n instanceof Yr,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const a=ks.gradients((()=>e(...t)),t,n);return null!=n&&le(a.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),vc(a.grads),a}}function xc(e,t){oe(_e(e),(()=>"The f passed in variableGrads(f) must be a function")),oe(null==t||Array.isArray(t)&&t.every((e=>e instanceof Jr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in ks.registeredVariables)t.push(ks.registeredVariables[e])}const a=n?t.filter((e=>!e.trainable)):null,r=t.length;oe((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:s,grads:i}=ks.gradients(e,t,null,!0);oe(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),oe(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=a&&a.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function bc(e){return ks.customGrad(e)}function vc(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}var wc=Ds({neg_:function(e){const t={x:zs(e,"x","neg")};return ks.runKernel(qn,t)}});var kc=Ds({softplus_:function(e){const t={x:zs(e,"x","softplus")};return ks.runKernel(Ta,t)}});var Ic=Ds({logSigmoid_:function(e){const t=zs(e,"x","logSigmoid");return bc((e=>({value:wc(kc(wc(e))),gradFunc:t=>El(t,ou(wc(e)))})))(t)}});var Sc=Ds({max_:function(e,t=null,n=!1){const a={x:zs(e,"x","max")},r={reductionIndices:t,keepDims:n};return ks.runKernel(Mn,a,r)}});var Nc=Ds({sub_:function(e,t){let n=zs(e,"a","sub"),a=zs(t,"b","sub");[n,a]=hs(n,a);const r={a:n,b:a};return ks.runKernel(Ga,r)}});var Tc=Ds({sum_:function(e,t=null,n=!1){let a=zs(e,"x","sum");"bool"===a.dtype&&(a=zi(a,"int32"));const r={x:a},s={axis:t,keepDims:n};return ks.runKernel(Ea,r,s)}});var Cc=Ds({logSoftmax_:function(e,t=-1){const n=zs(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return bc(((e,n)=>{const a=Sc(e,t,!0),r=Nc(e,a),s=Nc(zi(r,"float32"),hc(Tc(Xu(r),t,!0)));n([s]);return{value:s,gradFunc:(e,n)=>{const[a]=n,r=Xu(a);return Nc(e,El(Tc(e,t,!0),r))}}}))(n)}});function Ec(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Rc(e,t,n){const a=e.length+t.length,r=[];let s=0,i=0;for(let o=0;o<a;o++)-1===n.indexOf(o)?r.push(e[s++]):r.push(t[i++]);return r}function Fc(e,t){const n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function $c(e,t){return Rc(e,t.map((e=>1)),t)}function Mc(e,t,n){oe(Ec(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function zc(e,t){if(Ec(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function _c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Oc(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}var Dc=Ds({logSumExp_:function(e,t=null,n=!1){const a=zs(e,"x","logSumExp"),r=ve(t,a.shape),s=Sc(a,r,!0),i=Nc(a,s),o=Xu(i),l=Tc(o,r),u=hc(l),c=Nl(au(s,u.shape),u);if(n){const e=$c(c.shape,r);return au(c,e)}return c}});var Pc=Ds({logicalAnd_:function(e,t){const n=zs(e,"a","logicalAnd","bool"),a=zs(t,"b","logicalAnd","bool");lo(n.shape,a.shape);const r={a:n,b:a};return ks.runKernel(Tn,r)}});var Lc=Ds({logicalNot_:function(e){const t={x:zs(e,"x","logicalNot","bool")};return ks.runKernel(Cn,t)}});var Wc=Ds({logicalOr_:function(e,t){const n=zs(e,"a","logicalOr","bool"),a=zs(t,"b","logicalOr","bool");lo(n.shape,a.shape);const r={a:n,b:a};return ks.runKernel(En,r)}});var Bc=Ds({logicalXor_:function(e,t){const n=zs(e,"a","logicalXor","bool"),a=zs(t,"b","logicalXor","bool");return lo(n.shape,a.shape),Pc(Wc(e,t),Lc(Pc(e,t)))}});var Uc=Ds({maxPool_:function(e,t,n,a,r){const s=zs(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=au(s,[1,s.shape[0],s.shape[1],s.shape[2]])),oe(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),oe(eu(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),nu("maxPool",a,r);const l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r},c=ks.runKernel(_n,l,u);return o?au(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});var Vc=Ds({maxPool3d_:function(e,t=[1,1,1],n,a,r,s="NDHWC"){const i=zs(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=au(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),oe(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),oe("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),nu("maxPool3d",a,r);const u={x:o},c={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},d=ks.runKernel(Dn,u,c);return l?au(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var Gc=Ds({maxPoolWithArgmax_:function(e,t,n,a,r=!1){const s={x:zs(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},o=ks.runKernel(Ln,s,i);return{result:o[0],indexes:o[1]}}});var Hc=Ds({maximum_:function(e,t){let n=zs(e,"a","maximum"),a=zs(t,"b","maximum");[n,a]=hs(n,a),"bool"===n.dtype&&(n=zi(n,"int32"),a=zi(a,"int32")),lo(n.shape,a.shape);const r={a:n,b:a};return ks.runKernel(zn,r)}});var jc=Ds({mean_:function(e,t=null,n=!1){const a={x:zs(e,"x","mean")},r={axis:t,keepDims:n};return ks.runKernel(Wn,a,r)}});function qc(e,t="float32"){if("complex64"===t){const t=qc(e,"float32"),n=qc(e,"float32");return Ps(t,n)}const n=Be(de(e),t);return ks.makeTensor(n,e,t)}function Xc(e,t="float32"){if("complex64"===t){const t=Xc(e,"float32"),n=qc(e,"float32");return Ps(t,n)}const n=We(de(e),t);return ks.makeTensor(n,e,t)}function Kc(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let a=zs(e,"x","meshgrid",e instanceof Yr?e.dtype:"float32");if(void 0===t)return[a];let r=zs(t,"y","meshgrid",t instanceof Yr?t.dtype:"float32");const s=de(a.shape),i=de(r.shape);return"xy"===n?(a=au(a,[1,-1]),r=au(r,[-1,1]),[to(Xc([i,1],a.dtype),a),to(r,Xc([1,s],r.dtype))]):(a=au(a,[-1,1]),r=au(r,[1,-1]),[to(a,Xc([1,i],a.dtype)),to(Xc([s,1],r.dtype),r)])}var Zc=Ds({min_:function(e,t=null,n=!1){const a={x:zs(e,"x","min")},r={axis:t,keepDims:n};return ks.runKernel(Bn,a,r)}});var Yc=Ds({minimum_:function(e,t){let n=zs(e,"a","minimum"),a=zs(t,"b","minimum");[n,a]=hs(n,a),"bool"===n.dtype&&(n=zi(n,"int32"),a=zi(a,"int32")),lo(n.shape,a.shape);const r={a:n,b:a};return ks.runKernel(Un,r)}});var Jc=Ds({mirrorPad_:function(e,t,n){oe("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const a=zs(e,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");oe(t.length===a.rank,(()=>`Padding doesn't match input. Must be ${a.rank}. Got ${t.length}.`));const r="reflect"===n?1:0;for(let o=0;o<a.rank;o++)oe(2===t[o].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),oe(t[o][0]>=0&&t[o][0]<=a.shape[o]-r&&t[o][1]>=0&&t[o][1]<=a.shape[o]-r,(()=>`Padding in dimension ${o} cannot be greater than or equal to ${a.shape[o]-r} or less than 0 for input of shape ${a.shape}`));const s={paddings:t,mode:n},i={x:a};return ks.runKernel(Vn,i,s)}});var Qc=Ds({mod_:function(e,t){let n=zs(e,"a","mod"),a=zs(t,"b","mod");[n,a]=hs(n,a);const r={a:n,b:a};return ks.runKernel(Gn,r)}});var ed=Ds({square_:function(e){const t=zs(e,"x","square");return ks.runKernel("Square",{x:t},{})}});var td=Ds({moments_:function(e,t=null,n=!1){const a=ve(t,(e=zs(e,"x","moments")).shape),r=jc(e,a,n);let s=r.shape;n||(s=$c(r.shape,a));const i=ed(Nc(zi(e,"float32"),au(r,s)));return{mean:r,variance:jc(i,a,n)}}});var nd=Ds({multiRNNCell_:function(e,t,n,a){const r=zs(t,"data","multiRNNCell"),s=_s(n,"c","multiRNNCell"),i=_s(a,"h","multiRNNCell");let o=r;const l=[];for(let d=0;d<e.length;d++){const t=e[d](o,s[d],i[d]);l.push(t[0]),l.push(t[1]),o=t[1]}const u=[],c=[];for(let d=0;d<l.length;d+=2)u.push(l[d]),c.push(l[d+1]);return[u,c]}});var ad=Ds({multinomial_:function(e,t,n,a=!1){const r=zs(e,"logits","multinomial"),s=r.size,i=r.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?au(r,[1,-1]):r},l={numSamples:t,seed:n,normalized:a},u=ks.runKernel(Hn,o,l);return 1===i?au(u,[u.size]):u}});var rd=Ds({notEqual_:function(e,t){let n=zs(e,"a","notEqual","string_or_numeric"),a=zs(t,"b","notEqual","string_or_numeric");[n,a]=hs(n,a),lo(n.shape,a.shape);const r={a:n,b:a};return ks.runKernel(Xn,r)}});var sd=Ds({onesLike_:function(e){const t={x:zs(e,"x","onesLike")};return ks.runKernel(Jn,t)}});var id=Ds({outerProduct_:function(e,t){const n=zs(e,"v1","outerProduct"),a=zs(t,"v2","outerProduct");oe(1===n.rank&&1===a.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${a.rank}.`));const r=au(n,[-1,1]),s=au(a,[1,-1]);return to(r,s)}});var od=Ds({pad_:function(e,t,n=0){const a=zs(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},s={x:a};return ks.runKernel(ta,s,r)}});var ld=Ds({pad1d_:function(e,t,n=0){return oe(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),od(e,[t],n)}});var ud=Ds({pad2d_:function(e,t,n=0){return oe(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),od(e,t,n)}});var cd=Ds({pad3d_:function(e,t,n=0){return oe(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),od(e,t,n)}});var dd=Ds({pad4d_:function(e,t,n=0){return oe(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),od(e,t,n)}});var pd=Ds({spaceToBatchND_:function(e,t,n){const a=zs(e,"x","spaceToBatchND");oe(a.rank>=1+t.length,(()=>`input rank ${a.rank} should be > than [blockShape] ${t.length}`)),oe(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),oe(a.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]===0:e),!0),(()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const r={x:a},s={blockShape:t,paddings:n};return ks.runKernel(Ra,r,s)}});var hd=Ds({pool_:function(e,t,n,a,r,s,i){null==r&&(r=[1,1]),null==s&&(s=1),0===a&&(a="valid");const o=zs(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=au(o,[1,o.shape[0],o.shape[1],o.shape[2]])),oe(eu(s,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${r}'`));const c=Gl(l.shape,t,s,r,a),d=[c.dilationHeight,c.dilationWidth];let p;p="same"===a?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),a=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-a[t]));return n.map(((e,t)=>[a[t],r[t]]))}([c.filterHeight,c.filterWidth],d):[[0,0],[0,0]];const h=1===d[0]&&1===d[1],[f,m]=function(e,t,n){const a=n.map((e=>e[0])),r=n.map((e=>e[1])),s=e.concat(a,r),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=r.map(((e,t)=>e+i[t])),l=t.map(((e,t)=>[a[t],o[t]])),u=t.map(((e,t)=>[0,i[t]]));return[l,u]}([c.inHeight,c.inWidth],d,p),g=h?a:"valid",y=h?l:pd(l,d,f),A=("avg"===n?()=>ru(y,t,s,g,i):()=>Uc(y,t,s,g,i))(),x=h?A:du(A,d,m);return u?au(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});var fd=Ds({pow_:function(e,t){let n=zs(e,"base","pow"),a=zs(t,"exp","pow");[n,a]=hs(n,a);const r={a:n,b:a};return ks.runKernel(aa,r)}});var md=Ds({prelu_:function(e,t){const n={x:zs(e,"x","prelu"),alpha:zs(t,"alpha","prelu")};return ks.runKernel(ra,n)}});var gd=Ds({prod_:function(e,t=null,n=!1){let a=zs(e,"x","prod");"bool"===a.dtype&&(a=zi(a,"int32"));const r={x:a},s={axis:t,keepDims:n};return ks.runKernel(sa,r,s)}});var yd=Ds({rand_:function(e,t,n){const a=de(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);r=new Uint8Array(a)}for(let s=0;s<a;s++)r[s]=t();return ks.makeTensor(r,e,n)}}),Ad=E(B()),xd=class{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=r||Math.random();this.random=Ad.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*i,t=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}};var bd=Ds({randomGamma_:function(e,t,n=1,a="float32",r){if(null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error(`Unsupported data type ${a}`);const s=new class{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;const r=a||Math.random();this.randu=Ad.alea(r.toString()),this.randn=new xd(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,s;for(;;){do{a=this.randn.nextValue(),s=1+this.c*a}while(s<=0);if(s*=s*s,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}(t,n,a,r),i=Mi(e,a);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});var vd=Ds({randomNormal_:function(e,t=0,n=1,a,r){if(null!=a&&"bool"===a)throw new Error(`Unsupported data type ${a}`);const s=new xd(t,n,a,!1,r),i=Mi(e,a);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});var wd=Ds({randomUniform_:function(e,t=0,n=1,a="float32",r){const s=Mi(e,a),i=new class{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Ad.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}(t,n,null,r);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}});function kd(e,t,n=1,a="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:a};return ks.runKernel(ia,{},r)}var Id=Ds({real_:function(e){const t={input:zs(e,"input","real")};return ks.runKernel(oa,t)}});var Sd=Ds({reciprocal_:function(e){const t={x:zs(e,"x","reciprocal")};return ks.runKernel(la,t)}});var Nd=Ds({relu_:function(e){const t={x:zs(e,"x","relu")};return ks.runKernel(ua,t)}});var Td=Ds({relu6_:function(e){const t={x:zs(e,"x","relu6")};return ks.runKernel(ma,t)}});var Cd=Ds({reverse_:function(e,t){const n={x:zs(e,"x","reverse")},a={dims:t};return ks.runKernel(ga,n,a)}});var Ed=Ds({reverse1d_:function(e){const t=zs(e,"x","reverse");return oe(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Cd(t,0)}});var Rd=Ds({reverse2d_:function(e,t){const n=zs(e,"x","reverse");return oe(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Cd(n,t)}});var Fd=Ds({reverse3d_:function(e,t){const n=zs(e,"x","reverse");return oe(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Cd(n,t)}});var $d=Ds({reverse4d_:function(e,t){const n=zs(e,"x","reverse");return oe(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Cd(n,t)}});var Md=Ds({round_:function(e){const t={x:zs(e,"x","round")};return ks.runKernel(ya,t)}});var zd=Ds({rsqrt_:function(e){const t={x:zs(e,"x","rsqrt","float32")};return ks.runKernel(Aa,t)}});function _d(e,t){if((Ce(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Ce(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ls(e,[],[],t)}var Od=Ds({selu_:function(e){const t={x:zs(e,"x","selu")};return ks.runKernel(va,t)}});var Dd=Ds({separableConv2d_:function(e,t,n,a,r,s=[1,1],i="NHWC"){const o=zs(e,"x","separableConv2d"),l=zs(t,"depthwiseFilter","separableConv2d"),u=zs(n,"pointwiseFilter","separableConv2d");let c=o,d=!1;if(3===o.rank&&(d=!0,c=au(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");oe(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),oe(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),oe(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),oe(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),oe(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],h=l.shape[3];oe(u.shape[2]===p*h,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*h}, but got ${u.shape[2]}.`));const f=Du(c,l,a,r,i,s),m=Su(f,u,1,"valid",i);return d?au(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});var Pd=async function(e,t){const n=zs(e,"x","setdiff1d"),a=zs(t,"y","setdiff1d");oe(n.dtype===a.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${a.dtype}).`)),oe(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),oe(1===a.rank,(()=>`y should be 1D tensor, but got y (${a.shape}).`));const r=await n.data(),s=await a.data(),i=new Set(s);let o=0;for(let c=0;c<r.length;c++)i.has(r[c])||o++;const l=new Xr([o],n.dtype),u=new Xr([o],"int32");for(let c=0,d=0;c<r.length;c++)i.has(r[c])||(l.values[d]=r[c],u.values[d]=c,d++);return[l.toTensor(),u.toTensor()]};var Ld=Ds({sign_:function(e){const t={x:zs(e,"x","sign")};return ks.runKernel(Sa,t)}});var Wd=Ds({sin_:function(e){const t={x:zs(e,"x","sin","float32")};return ks.runKernel(ka,t)}});var Bd=Ds({sinh_:function(e){const t={x:zs(e,"x","sinh")};return ks.runKernel(Ia,t)}});var Ud=Ds({slice1d_:function(e,t,n){const a=zs(e,"x","slice1d");return oe(1===a.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${a.rank} tensor`)),lu(a,[t],[n])}});var Vd=Ds({slice2d_:function(e,t,n){const a=zs(e,"x","slice2d");return oe(2===a.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${a.rank} tensor`)),lu(a,t,n)}});var Gd=Ds({slice3d_:function(e,t,n){const a=zs(e,"x","slice3d");return oe(3===a.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${a.rank} tensor`)),lu(a,t,n)}});var Hd=Ds({slice4d_:function(e,t,n){const a=zs(e,"x","slice4d");return oe(4===a.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${a.rank} tensor`)),lu(a,t,n)}});var jd=Ds({softmax_:function(e,t=-1){const n=zs(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const a={logits:n},r={dim:t};return ks.runKernel($a,a,r)}});var qd=Ds({fft_:function(e){oe("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ks.runKernel(rn,t)}});var Xd=Ds({ifft_:function(e){oe("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ks.runKernel(gn,t)}});var Kd=Ds({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let a;if(t<=2){const r=au(e,[n,t]);a=Xd(r)}else{const r=[n,2*(t-1)],s=au(Id(e),[n,t]),i=au(rc(e),[n,t]),o=Cd(lu(s,[0,1],[n,t-2]),1),l=El(Cd(lu(i,[0,1],[n,t-2]),1),_d(-1)),u=iu([s,o],1),c=iu([i,l],1),d=au(Ps(u,c),[r[0],r[1]]);a=Xd(d)}if(a=Id(a),3===e.rank&&0!==e.shape[0]){const t=a,n=e.shape[0];a=au(a,[n,a.shape[0]/n,a.shape[1]]),t.dispose()}return a}});var Zd=Ds({split_:function(e,t,n=0){const a={x:zs(e,"x","split")},r={numOrSizeSplits:t,axis:n};return ks.runKernel(Fa,a,r)}});var Yd=Ds({rfft_:function(e,t){oe("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const a=e.size/n;let r;if(null!=t&&t<n){const a=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,r=lu(e,a,s),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,r=iu([e,qc(a)],e.shape.length-1),n=t}else r=e;const s=Uu(r),i=au(Ps(r,s),[a,n]),o=qd(i),l=Math.floor(n/2)+1,u=Id(o),c=rc(o),d=Zd(u,[l,n-l],u.shape.length-1),p=Zd(c,[l,n-l],c.shape.length-1),h=r.shape.slice();return h[r.shape.length-1]=l,au(Ps(d[0],p[0]),h)}});var Jd=Ds({sqrt_:function(e){const t={x:zs(e,"x","sqrt","float32")};return ks.runKernel(Ca,t)}});var Qd=Ds({squaredDifference_:function(e,t){let n=zs(e,"a","squaredDifference"),a=zs(t,"b","squaredDifference");[n,a]=hs(n,a),lo(n.shape,a.shape);const r={a:n,b:a};return ks.runKernel(Pa,r,{})}});var ep=Ds({squeeze_:function(e,t){const n=zs(e,"x","squeeze");return au(n,we(n.shape,t).newShape)}});var tp=Ds({stack_:function(e,t=0){const n=_s(e,"tensors","stack","string_or_numeric");oe(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&oe(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const a=n,r={axis:t};return ks.runKernel(ea,a,r)}});var np=Ds({step_:function(e,t=0){const n={x:zs(e,"x","step")},a={alpha:t};return ks.runKernel(tr,n,a)}});var ap=Ds({stridedSlice_:function(e,t,n,a,r=0,s=0,i=0,o=0,l=0){const u={x:zs(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:a,beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return ks.runKernel(Wa,u,c)}});var rp=Ds({tan_:function(e){const t={x:zs(e,"x","tan","float32")};return ks.runKernel(Ha,t)}});function sp(e,t){ue(e);const n=Fs(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ls(e,null,n,t)}function ip(e,t,n){if(ue(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=Fs(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ls(e,t,a,n)}function op(e,t,n){if(ue(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const a=Fs(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ls(e,t,a,n)}function lp(e,t,n){if(ue(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const a=Fs(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ls(e,t,a,n)}function up(e,t,n){if(ue(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const a=Fs(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ls(e,t=t||a,a,n)}var cp=Ds({topk_:function(e,t=1,n=!0){const a=zs(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=a.shape[a.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const s={x:a},i={k:t,sorted:n},[o,l]=ks.runKernel(Xa,s,i);return{values:o,indices:l}}});var dp=Ds({truncatedNormal_:function(e,t=0,n=1,a,r){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const s=new xd(t,n,a,!0,r),i=Mi(e,a);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}});var pp=Ds({unique_:function(e,t=0){const n=zs(e,"x","unique","string_or_numeric");oe(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},r={axis:t},[s,i]=ks.runKernel(Ya,a,r);return{values:s,indices:i}}});var hp=Ds({unsortedSegmentSum_:function(e,t,n){const a=zs(e,"x","unsortedSegmentSum"),r=zs(t,"segmentIds","unsortedSegmentSum","int32");oe(fe(n),(()=>"numSegments must be of dtype int"));const s={x:a,segmentIds:r},i={numSegments:n};return ks.runKernel(Qa,s,i)}});var fp=Ds({unstack_:function(e,t=0){const n=zs(e,"x","unstack","string_or_numeric");oe(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const a={value:n},r={axis:t};return ks.runKernel(Ja,a,r)}});function mp(e,t=!0,n,a){return ks.makeVariable(e,t,n,a)}function gp(e,t){const n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);const a=Mi(e,"int32"),r=Mi([n.length,e.length],"int32");for(let s=0;s<n.length;s++){const t=a.indexToLoc(n[s]),i=s*e.length;r.values.set(t,i)}return r.toTensor()}var yp=async function(e){const t=zs(e,"condition","whereAsync","bool"),n=await t.data(),a=gp(t.shape,n);return e!==t&&t.dispose(),a};var Ap=async function(e,t,n){const a=zs(e,"tensor","boolMask"),r=zs(t,"mask","boolMask","bool"),s=null==n?0:n,i=r.rank,o=a.shape;oe(i>0,(()=>"mask cannot be scalar")),le(o.slice(s,s+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let m=s;m<s+i;m++)l*=o[m];const u=o.slice(0,s).concat([l],o.slice(s+i)),c=au(a,u),d=au(r,[-1]),p=await yp(d),h=ep(p,[1]),f=tc(c,h,s);return e!==a&&a.dispose(),t!==r&&r.dispose(),h.dispose(),c.dispose(),d.dispose(),p.dispose(),f};function xp(e,t,n=null){if(0===e.rank)return Rl(e);if(1!==e.rank&&null===n)return xp(au(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Tc(Rl(e),n);if(t===1/0)return Sc(Rl(e),n);if(t===-1/0)return Zc(Rl(e),n);if("euclidean"===t||2===t)return Jd(Tc(fd(Rl(e),_d(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Sc(Tc(Rl(e),n[0]),n[1]-1);if(t===1/0)return Sc(Tc(Rl(e),n[1]),n[0]);if(t===-1/0)return Zc(Tc(Rl(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Jd(Tc(ed(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var bp=Ds({norm_:function(e,t="euclidean",n=null,a=!1){const r=xp(e=zs(e,"x","norm"),t,n);let s=r.shape;if(a){const t=ve(n,e.shape);s=$c(r.shape,t)}return au(r,s)}});var vp=Ds({movingAverage_:function(e,t,n,a,r=!0){const s=zs(e,"v","movingAverage"),i=zs(t,"x","movingAverage"),o=zs(n,"decay","movingAverage");fs(s,i),oe(he(s.shape,i.shape),(()=>"Shape mismatch in v and x"));const l=_d(1),u=Nc(l,o);let c=El(Nc(i,s),u);if(r){oe(null!=a,(()=>"When using zeroDebias: true, step is required."));const e=zs(a,"step","movingAverage");c=Cl(c,Nc(l,fd(o,e)))}return Nl(s,c)}});var wp=Ds({scatterND_:function(e,t,n){const a=zs(e,"indices","scatterND","int32"),r=zs(t,"updates","scatterND");wo(r,a,n);const s={indices:a,updates:r},i={shape:n};return ks.runKernel(xa,s,i)}});var kp=Ds({sparseToDense_:function(e,t,n,a=0){const r=zs(e,"sparseIndices","sparseToDense","int32"),s=zs(t,"sparseValues","sparseToDense"),i=zs(a,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,a){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,s,n,i);const o={sparseIndices:r,sparseValues:s,defaultValue:i},l={outputShape:n};return ks.runKernel(Da,o,l)}});var Ip=Ds({gatherND_:function(e,t){const n=zs(t,"indices","gatherND","int32"),a={params:zs(e,"x","gatherND","string_or_numeric"),indices:n};return ks.runKernel(pn,a)}});var Sp=Ds({dropout_:function(e,t,n,a){const r=zs(e,"x","dropout");if(oe("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),oe(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Yr?r.clone():r;const s=function(e,t){if(null==t)return e.shape.slice();if(he(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),i=1-t,o=Cl(ec(Nl(wd(s,0,1,"float32",a),i)),i);return El(r,o)}});function Np(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Tp(e,t,n){const a=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+a-1);r[s]=t-n*Math.cos(i)}return sp(r,"float32")}var Cp=async function(e,t,n=1){const a=zs(e,"predictions","inTopK"),r=zs(t,"targets","inTopK");oe(a.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${a.rank}`)),oe(a.rank-1===r.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${a.rank} and targets rank ${r.rank}`)),le(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=a.shape[a.shape.length-1];oe(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const i=await a.data(),o=await r.data(),[l,u]=[i.length/s,s],c=ke("bool",l);for(let d=0;d<l;d++){const e=d*u,t=i.subarray(e,e+u),a=[];for(let n=0;n<t.length;n++)a.push({value:t[n],index:n});a.sort(((e,t)=>t.value-e.value)),c[d]=0;for(let r=0;r<n;r++)if(a[r].index===o[d]){c[d]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),Ws(c,r.shape,"bool")},Ep={};C(Ep,{conv2d:()=>_p,depthwiseConv2d:()=>Pp,matMul:()=>Lp});var Rp=Ds({conv2DBackpropFilter_:function(e,t,n,a,r,s="NHWC",i){let o=e;3===e.rank&&(o=au(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=au(t,[1,t.shape[0],t.shape[1],t.shape[2]])),oe(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),oe(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),oe(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?l.shape[3]:l.shape[1];oe(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),oe(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),nu("conv2dDerFilter",r,i);const d={x:o,dy:l},p={strides:a,pad:r,dataFormat:s,dimRoundingMode:i,filterShape:n};return ks.runKernel(Ft,d,p)}});function Fp(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return El(e,np(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function $p(e,t){let n=t;const a=oo(e.shape,t.shape);return a.length>0&&(n=Tc(n,a)),au(n,e.shape)}function Mp(e,t,n,a){if("linear"===t)return e;if("relu"===t)return Nd(e);if("elu"===t)return ju(e);if("relu6"===t)return Td(e);if("prelu"===t)return md(e,n);if("leakyrelu"===t)return lc(e,a);if("sigmoid"===t)return ou(e);throw new Error(`Unknown fused activation ${t}.`)}var zp=(e,t)=>!(e>0)||"linear"===t;var _p=Ds({fusedConv2d_:function({x:e,filter:t,strides:n,pad:a,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===zp(ks.state.gradientDepth,l)){let d=Su(e,t,n,a,r,s,i);return null!=o&&(d=Nl(d,o)),Mp(d,l,u,c)}const d=zs(e,"x","conv2d","float32"),p=zs(t,"filter","conv2d","float32");let h=d,f=!1;3===d.rank&&(f=!0,h=au(d,[1,d.shape[0],d.shape[1],d.shape[2]])),oe(4===h.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${h.rank}.`)),oe(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),nu("fused conv2d",a,i),oe(h.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${h.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),oe(eu(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),oe("NHWC"===r,(()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`));const m=jl(h.shape,p.shape,n,s,a,i);let g,y;null!=o&&(g=zs(o,"bias","fused conv2d"),[g]=hs(g,d),lo(m.outShape,g.shape)),null!=u&&(y=zs(u,"prelu weights","fused conv2d"));const A=(e,t)=>{const[r,i,o,u]=t,c=Fp(e,o,l);oe(Ql(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const d=[Tu(i.shape,c,r,n,a),Rp(i,c,r.shape,n,a)];if(null!=u){const e=$p(u,c);d.push(e)}return d},x={x:h,filter:p,bias:g,preluActivationWeights:y},b={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){return bc(((e,t,n)=>{let a=ks.runKernel(sr,x,b);return n([t,e,a]),f&&(a=au(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:A}}))(h,p)}return bc(((e,t,n,a)=>{let r=ks.runKernel(sr,x,b);return a([t,e,r,n]),f&&(r=au(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:A}}))(h,p,g)}});var Op=Ds({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,r,s=[1,1],i){let o=e;3===e.rank&&(o=au(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=au(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:a,pad:r,dimRoundingMode:i,dilations:s,filterShape:n};return ks.runKernel(Vt,u,c)}});var Dp=Ds({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,r,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=au(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:a,pad:r,dimRoundingMode:i,dilations:s,inputShape:e},d=ks.runKernel(Gt,u,c);return l?au(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});var Pp=Ds({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:a,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===zp(ks.state.gradientDepth,l)){let d=Du(e,t,n,a,r,s,i);return null!=o&&(d=Nl(d,o)),Mp(d,l,u,c)}const d=zs(e,"x","depthwiseConv2d","float32"),p=zs(t,"filter","depthwiseConv2d","float32");let h=d,f=!1;3===d.rank&&(f=!0,h=au(d,[1,d.shape[0],d.shape[1],d.shape[2]])),oe(4===h.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`)),oe(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),oe(h.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${h.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==s&&(s=[1,1]),oe(eu(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),nu("fused depthwiseConv2d",a,i);const m=jl(h.shape,p.shape,n,s,a,i,!0);let g,y;null!=o&&(g=zs(o,"bias","fused conv2d"),[g]=hs(g,d),lo(m.outShape,g.shape)),null!=u&&(y=zs(u,"prelu weights","fused depthwiseConv2d"));const A=(e,t)=>{oe(Ql(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[r,o,u,c]=t,d=Fp(e,u,l),p=Dp(o.shape,d,r,n,a,s,i),h=Op(o,d,r.shape,n,a,s,i);if(null!=c){return[p,h,$p(g,d)]}return[p,h]},x={x:h,filter:p,bias:g,preluActivationWeights:y},b={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){return bc(((e,t,n)=>{let a=ks.runKernel(ir,x,b);return n([t,e,a]),f&&(a=au(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:A}}))(h,p)}return bc(((e,t,n,a)=>{let r=ks.runKernel(ir,x,b);return a([t,e,r,n]),f&&(r=au(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:A}}))(h,p,g)}});var Lp=Ds({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:a=!1,bias:r,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===zp(ks.state.gradientDepth,s)){let l=to(e,t,n,a);return null!=r&&(l=Nl(l,r)),Mp(l,s,i,o)}let l=zs(e,"a","fused matMul"),u=zs(t,"b","fused matMul");[l,u]=hs(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],d=a?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],h=a?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=de(f),y=de(m);oe(c===d,(()=>`Error in fused matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${a} must match.`));const A=lo(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,h]),x=au(l,n?[g,c,p]:[g,p,c]),b=au(u,a?[y,h,d]:[y,d,h]);let v,w;null!=r&&(v=zs(r,"bias","fused matMul"),[v]=hs(v,l),lo(A,v.shape)),null!=i&&(w=zs(i,"prelu weights","fused matMul"));const k=(e,t)=>{const[i,o,l,u]=t,c=Fp(au(e,l.shape),l,s);let d,p;if(n||a?!n&&a?(d=to(c,o,!1,!1),p=to(c,i,!0,!1)):n&&!a?(d=to(o,c,!1,!0),p=to(i,c,!1,!1)):(d=to(o,c,!0,!0),p=to(c,i,!0,!0)):(d=to(c,o,!1,!0),p=to(i,c,!0,!1)),null!=r){return[d,p,$p(u,c)]}return[d,p]},I={a:x,b:b,bias:v,preluActivationWeights:w},S={transposeA:n,transposeB:a,activation:s,leakyreluAlpha:o};if(null==r){return bc(((e,t,n)=>{const a=ks.runKernel(rr,I,S);return n([e,t,a]),{value:au(a,A),gradFunc:k}}))(x,b)}return bc(((e,t,n,a)=>{const r=ks.runKernel(rr,I,S);return a([e,t,r,n]),{value:au(r,A),gradFunc:k}}))(x,b,v)}});var Wp=Ds({hammingWindow_:function(e){return Tp(e,.54,.46)}});var Bp=Ds({hannWindow_:function(e){return Tp(e,.5,.5)}});var Up=Ds({frame_:function(e,t,n,a=!1,r=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(lu(e,s,t)),s+=n;if(a)for(;s<e.size;){const a=s+t-e.size,o=iu([lu(e,s,t-a),Qu([a],r)]);i.push(o),s+=n}return 0===i.length?ip([],[0,t]):au(iu(i),[i.length,t])}});var Vp=Ds({stft_:function(e,t,n,a,r=Bp){null==a&&(a=Np(t));const s=Up(e,t,n),i=El(s,r(t));return Yd(i,a)}});var Gp=Ds({cropAndResize_:function(e,t,n,a,r="bilinear",s=0){const i=zs(e,"image","cropAndResize"),o=zs(t,"boxes","cropAndResize","float32"),l=zs(n,"boxInd","cropAndResize","int32"),u=o.shape[0];oe(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),oe(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),oe(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),oe(2===a.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${a.length}.`)),oe(a[0]>=1&&a[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${a}`)),oe("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:i,boxes:o,boxInd:l},d={method:r,extrapolationValue:s,cropSize:a};return ks.runKernel(Lt,c,d)}});var Hp=Ds({flipLeftRight_:function(e){const t=zs(e,"image","flipLeftRight","float32");oe(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return ks.runKernel(on,n,{})}});var jp=Ds({grayscaleToRGB_:function(e){const t=zs(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];oe(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),oe(1===a,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${a}.`));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Yu(t,r)}});var qp=Ds({rotateWithOffset_:function(e,t,n=0,a=.5){const r=zs(e,"image","rotateWithOffset","float32");oe(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const s={image:r},i={radians:t,fillValue:n,center:a};return ks.runKernel(ar,s,i)}});function Xp(e,t,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),oe(0<=a&&a<=1,(()=>`iouThreshold must be in [0, 1], but was '${a}'`)),oe(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),oe(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),oe(1===t.rank,(()=>"scores must be a 1D tensor")),oe(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),oe(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}var Kp=Ds({nonMaxSuppression_:function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){const s=zs(e,"boxes","nonMaxSuppression","float32"),i=zs(t,"scores","nonMaxSuppression","float32"),o=Xp(s,i,n,a,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:a=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return ks.runKernel(Kn,{boxes:s,scores:i},l)}});function Zp(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,s=0,i=!1;for(;a<r;){s=a+(r-a>>>1);const o=n(t,e[s]);o>0?a=s+1:(r=s,i=!o)}return i?a:-a-1}(e,t,n||Yp)}(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function Yp(e,t){return e>t?1:e<t?-1:0}function Jp(e,t,n,a,r){return th(e,t,n,a,r,0)}function Qp(e,t,n,a,r,s){return th(e,t,n,a,r,0,!1,s,!0)}function eh(e,t,n,a,r,s){return th(e,t,n,a,r,s,!0)}function th(e,t,n,a,r,s,i=!1,o=!1,l=!1){const u=[];for(let g=0;g<t.length;g++)t[g]>r&&u.push({score:t[g],boxIndex:g,suppressBeginIndex:0});u.sort(rh);const c=s>0?-.5/s:0,d=[],p=[];for(;d.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<r)break;let o=!1;for(let l=d.length-1;l>=i;--l){const n=nh(e,s,d[l]);if(n>=a){o=!0;break}if(t.score=t.score*ah(a,c,n),t.score<=r)break}t.suppressBeginIndex=d.length,o||(t.score===n?(d.push(s),p.push(t.score)):t.score>r&&Zp(u,t,rh))}const h=d.length,f=n-h;o&&f>0&&(d.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:d};return i&&(m.selectedScores=p),l&&(m.validOutputs=h),m}function nh(e,t,n){const a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),i=Math.min(a[1],a[3]),o=Math.max(a[0],a[2]),l=Math.max(a[1],a[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),h=(o-s)*(l-i),f=(d-u)*(p-c);if(h<=0||f<=0)return 0;const m=Math.max(s,u),g=Math.max(i,c),y=Math.min(o,d),A=Math.min(l,p),x=Math.max(y-m,0)*Math.max(A-g,0);return x/(h+f-x)}function ah(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function rh(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}var sh=async function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){const s=zs(e,"boxes","nonMaxSuppressionAsync"),i=zs(t,"scores","nonMaxSuppressionAsync"),o=Xp(s,i,n,a,r);n=o.maxOutputSize,a=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([s.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:d}=Jp(u,c,n,a,r);return s!==e&&s.dispose(),i!==t&&i.dispose(),sp(d,"int32")};var ih=Ds({nonMaxSuppressionWithScore_:function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=0){const i=zs(e,"boxes","nonMaxSuppression"),o=zs(t,"scores","nonMaxSuppression"),l=Xp(i,o,n,a,r,s),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:a=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},d=ks.runKernel(Yn,u,c);return{selectedIndices:d[0],selectedScores:d[1]}}});var oh=async function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=0){const i=zs(e,"boxes","nonMaxSuppressionAsync"),o=zs(t,"scores","nonMaxSuppressionAsync"),l=Xp(i,o,n,a,r,s);n=l.maxOutputSize,a=l.iouThreshold,r=l.scoreThreshold,s=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],d=u[1],{selectedIndices:p,selectedScores:h}=eh(c,d,n,a,r,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:sp(p,"int32"),selectedScores:sp(h)}};var lh=Ds({nonMaxSuppressionPadded_:function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=!1){const i=zs(e,"boxes","nonMaxSuppression"),o=zs(t,"scores","nonMaxSuppression"),l=Xp(i,o,n,a,r,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},d=ks.runKernel(Zn,u,c);return{selectedIndices:d[0],validOutputs:d[1]}}});var uh=async function(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=!1){const i=zs(e,"boxes","nonMaxSuppressionAsync"),o=zs(t,"scores","nonMaxSuppressionAsync"),l=Xp(i,o,n,a,r,null),u=l.maxOutputSize,c=l.iouThreshold,d=l.scoreThreshold,[p,h]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Qp(p,h,u,c,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:sp(f,"int32"),validOutputs:_d(m,"int32")}};var ch=Ds({resizeBilinear_:function(e,t,n=!1,a=!1){const r=zs(e,"images","resizeBilinear");oe(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),oe(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),oe(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=r,i=!1;3===r.rank&&(i=!0,s=au(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:a,size:t},u=ks.runKernel(ha,o,l);return i?au(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var dh=Ds({resizeNearestNeighbor_:function(e,t,n=!1,a=!1){const r=zs(e,"images","resizeNearestNeighbor");oe(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),oe(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),oe("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),oe(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=r,i=!1;3===r.rank&&(i=!0,s=au(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:a,size:t},u=ks.runKernel(da,o,l);return i?au(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});var ph=Ds({threshold_:function(e,t="binary",n=!1,a=.5){const r=zs(e,"image","threshold"),s=r.shape[0]*r.shape[1];let i,o,l,u,c=El(sp([a]),255);if(oe(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),oe(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),oe("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),oe("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===r.shape[2]){[i,o,l]=Zd(r,[1,1,1],-1);const e=El(i,.2989),t=El(o,.587),n=El(l,.114);u=Nl(Nl(e,t),n)}else u=e;if("otsu"===t){c=function(e,t){let n,a,r,s,i,o,l=sp([-1]),u=sp([0]),c=sp([0]);for(let d=0;d<e.size-1;d++){n=lu(e,0,d+1),a=lu(e,d+1),i=Cl(Tc(n),t),o=Cl(Tc(a),t);const p=Tc(El(n,kd(0,n.size)));r=Cl(p,Tc(n));const h=Qu(a.shape,n.size),f=Nl(kd(0,a.size),h),m=El(a,f);s=Cl(Tc(m),Tc(a));const g=Nc(r,s),y=Nc(r,s),A=El(i,o);c=El(El(A,g),y);const x=nc(c,u);u=Bu(x,c,u),l=Bu(x,sp([d]),l)}return l}(gu(zi(Md(u),"int32"),Ws([]),256),s)}const d=n?cc(u,c):nc(u,c);return zi(El(d,255),"int32")}});var hh=Ds({transform_:function(e,t,n="nearest",a="constant",r=0,s){const i=zs(e,"image","transform","float32"),o=zs(t,"transforms","transform","float32");oe(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),oe(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),oe(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return ks.runKernel(Ka,l,u)}});var fh=Ds({bandPart_:function(e,t,n){oe(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),oe(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const a=zs(e,"a","bandPart");oe(a.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${a.rank}.`));const r=a.shape,[s,i]=a.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=au(kd(0,s,1,"int32"),[-1,1]),l=kd(0,i,1,"int32"),u=Nc(o,l),c=Pc(cc(u,_d(+t,"int32")),ac(u,_d(-n,"int32"))),d=qc([s,i],a.dtype);return au(tp(fp(au(a,[-1,s,i])).map((e=>Bu(c,e,d)))),r)}});var mh=Ds({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,oe(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)oe(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Zd(e,e.shape[0],0).map((e=>ep(e,[0])));oe(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],a=e;for(let r=0;r<e.length;++r)n.push(ks.tidy((()=>{let e=a[r];if(r>0)for(let t=0;t<r;++t){const a=El(Tc(El(n[t],e)),n[t]);e=Nc(e,a)}return Cl(e,bp(e,"euclidean"))})));return t?tp(n,0):n}});function gh(e,t=!1){return ks.tidy((()=>{oe(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],a=e.shape[1];let r=Ju(n),s=_i(e);const i=ip([[1]],[1,1]);let o=_i(i);const l=n>=a?a:n;for(let e=0;e<l;++e){const t=s,l=o,u=r;[o,s,r]=ks.tidy((()=>{const t=lu(s,[e,e],[n-e,1]),l=bp(t),u=lu(s,[e,e],[1,1]),c=Bu(nc(u,0),ip([[-1]]),ip([[1]])),d=Nc(u,El(c,l)),p=Cl(t,d);o=1===p.shape[0]?_i(i):iu([i,lu(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const h=wc(Cl(to(c,d),l)),f=lu(s,[e,0],[n-e,a]),m=El(h,o),g=ao(o);if(0===e)s=Nc(f,to(m,to(g,f)));else{const t=Nc(f,to(m,to(g,f)));s=iu([lu(s,[0,0],[e,a]),t],0)}const y=ao(m),A=lu(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=Nc(A,to(to(A,o),y));else{const t=Nc(A,to(to(A,o),y));r=iu([lu(r,[0,0],[n,e]),t],1)}return[o,s,r]})),fl([t,l,u])}return!t&&n>a&&(r=lu(r,[0,0],[n,a]),s=lu(s,[0,0],[a,a])),[r,s]}))}var yh,Ah=Ds({qr_:function(e,t=!1){if(oe(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return gh(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=fp(au(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];a.forEach((e=>{const[n,a]=gh(e,t);r.push(n),s.push(a)}));return[au(tp(r,0),e.shape),au(tp(s,0),e.shape)]}}}),xh=((yh=xh||{})[yh.NONE=0]="NONE",yh[yh.MEAN=1]="MEAN",yh[yh.SUM=2]="SUM",yh[yh.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS",yh);var bh=Ds({computeWeightedLoss_:function(e,t,n=xh.SUM_BY_NONZERO_WEIGHTS){const a=zs(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=zs(t,"weights","computeWeightedLoss"));const s=null==r?a:El(a,r);if(n===xh.NONE)return s;if(n===xh.SUM)return Tc(s);if(n===xh.MEAN){if(null==r)return jc(s);{const e=a.size/r.size,t=Cl(Tc(s),Tc(r));return e>1?Cl(t,_d(e)):t}}if(n===xh.SUM_BY_NONZERO_WEIGHTS){if(null==r)return Cl(Tc(s),_d(a.size));{const e=El(r,Xc(a.shape)),t=zi(Tc(rd(e,_d(0))),"float32");return Cl(Tc(s),t)}}throw Error(`Unknown reduction: ${n}`)}});var vh=Ds({absoluteDifference_:function(e,t,n,a=xh.SUM_BY_NONZERO_WEIGHTS){const r=zs(e,"labels","absoluteDifference"),s=zs(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=zs(n,"weights","absoluteDifference")),le(r.shape,s.shape,"Error in absoluteDifference: ");const o=Rl(Nc(r,s));return bh(o,i,a)}});var wh=Ds({cosineDistance_:function(e,t,n,a,r=xh.SUM_BY_NONZERO_WEIGHTS){const s=zs(e,"labels","cosineDistance"),i=zs(t,"predictions","cosineDistance");let o=null;null!=a&&(o=zs(a,"weights","cosineDistance")),le(s.shape,i.shape,"Error in cosineDistance: ");const l=_d(1),u=Nc(l,Tc(El(s,i),n,!0));return bh(u,o,r)}});var kh=Ds({hingeLoss_:function(e,t,n,a=xh.SUM_BY_NONZERO_WEIGHTS){let r=zs(e,"labels","hingeLoss");const s=zs(t,"predictions","hingeLoss");let i=null;null!=n&&(i=zs(n,"weights","hingeLoss")),le(r.shape,s.shape,"Error in hingeLoss: ");const o=_d(1);r=Nc(El(_d(2),r),o);const l=Nd(Nc(o,El(r,s)));return bh(l,i,a)}});var Ih=Ds({huberLoss_:function(e,t,n,a=1,r=xh.SUM_BY_NONZERO_WEIGHTS){const s=zs(e,"labels","huberLoss"),i=zs(t,"predictions","huberLoss");let o=null;null!=n&&(o=zs(n,"weights","huberLoss")),le(s.shape,i.shape,"Error in huberLoss: ");const l=_d(a),u=Rl(Nc(i,s)),c=Yc(u,l),d=Nc(u,c),p=Nl(El(_d(.5),ed(c)),El(l,d));return bh(p,o,r)}});var Sh=Ds({logLoss_:function(e,t,n,a=1e-7,r=xh.SUM_BY_NONZERO_WEIGHTS){const s=zs(e,"labels","logLoss"),i=zs(t,"predictions","logLoss");let o=null;null!=n&&(o=zs(n,"weights","logLoss")),le(s.shape,i.shape,"Error in logLoss: ");const l=_d(1),u=_d(a),c=wc(El(s,hc(Nl(i,u)))),d=El(Nc(l,s),hc(Nl(Nc(l,i),u))),p=Nc(c,d);return bh(p,o,r)}});var Nh=Ds({meanSquaredError_:function(e,t,n,a=xh.SUM_BY_NONZERO_WEIGHTS){const r=zs(e,"labels","meanSquaredError"),s=zs(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=zs(n,"weights","meanSquaredError")),le(r.shape,s.shape,"Error in meanSquaredError: ");const o=Qd(r,s);return bh(o,i,a)}});var Th=Ds({sigmoidCrossEntropy_:function(e,t,n,a=0,r=xh.SUM_BY_NONZERO_WEIGHTS){let s=zs(e,"multiClassLabels","sigmoidCrossEntropy");const i=zs(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=zs(n,"weights","sigmoidCrossEntropy")),le(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=_d(a),t=_d(1),n=_d(.5);s=Nl(El(s,Nc(t,e)),El(n,e))}const l=function(e,t){const n=zs(e,"labels","sigmoidCrossEntropyWithLogits"),a=zs(t,"logits","sigmoidCrossEntropyWithLogits");le(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=Nd(a),s=El(a,n),i=fc(Xu(wc(Rl(a))));return Nl(Nc(r,s),i)}(s,i);return bh(l,o,r)}});var Ch=Ds({softmaxCrossEntropy_:function(e,t,n,a=0,r=xh.SUM_BY_NONZERO_WEIGHTS){let s=zs(e,"onehotLabels","softmaxCrossEntropy");const i=zs(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=zs(n,"weights","softmaxCrossEntropy")),le(s.shape,i.shape,"Error in softmaxCrossEntropy: "),a>0){const e=_d(a),t=_d(1),n=_d(s.shape[1]);s=Nl(El(s,Nc(t,e)),Cl(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return bc(((e,t,a)=>{const r=Dc(t,[n],!0),s=Nc(zi(t,"float32"),r);a([e,s]);const i=wc(El(s,e));return{value:Tc(i,[n]),gradFunc:(e,t)=>{const[a,r]=t,s=$c(e.shape,[n]);return[El(au(e,s),Nc(zi(a,"float32"),Xu(r))),El(au(e,s),Nc(Xu(r),zi(a,"float32")))]}}}))(e,t)}(s,i);return bh(l,o,r)}});var Eh=Ds({sparseFillEmptyRows_:function(e,t,n,a){const r=zs(e,"indices","sparseFillEmptyRows","int32"),s=zs(t,"values","sparseFillEmptyRows"),i=zs(n,"denseShape","sparseFillEmptyRows","int32"),o=zs(a,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:r,values:s,denseShape:i,defaultValue:o},u=ks.runKernel(Ma,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}});var Rh=Ds({sparseReshape_:function(e,t,n){const a=zs(e,"inputIndices","sparseReshape","int32"),r=zs(t,"inputShape","sparseReshape","int32"),s=zs(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:a,inputShape:r,newShape:s},o=ks.runKernel(za,i);return{outputIndices:o[0],outputShape:o[1]}}});var Fh=Ds({sparseSegmentMean_:function(e,t,n){const a=zs(e,"data","sparseSegmentMean"),r=zs(t,"indices","sparseSegmentMean","int32"),s=zs(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:a,indices:r,segmentIds:s};return ks.runKernel(_a,i)}});var $h=Ds({sparseSegmentSum_:function(e,t,n){const a=zs(e,"data","sparseSegmentSum"),r=zs(t,"indices","sparseSegmentSum","int32"),s=zs(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:a,indices:r,segmentIds:s};return ks.runKernel(Oa,i)}});var Mh=Ds({stringNGrams_:function(e,t,n,a,r,s,i,o){const l=zs(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=zs(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:a,leftPad:r,rightPad:s,padWidth:i,preserveShortSequences:o},d={data:l,dataSplits:u},p=ks.runKernel(Ba,d,c);return{nGrams:p[0],nGramsSplits:p[1]}}});var zh=Ds({stringSplit_:function(e,t,n=!0){const a=zs(e,"input","stringSplit","string"),r=zs(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error(`Input should be Tensor1D but received shape ${a.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const s={skipEmpty:n},i={input:a,delimiter:r},o=ks.runKernel(Ua,i,s);return{indices:o[0],values:o[1],shape:o[2]}}});var _h=Ds({stringToHashBucketFast_:function(e,t){const n=zs(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return ks.runKernel(Va,r,a)}}),Oh={fft:qd,ifft:Xd,rfft:Yd,irfft:Kd},Dh={hammingWindow:Wp,hannWindow:Bp,frame:Up,stft:Vp},Ph={flipLeftRight:Hp,grayscaleToRGB:jp,resizeNearestNeighbor:dh,resizeBilinear:ch,rotateWithOffset:qp,cropAndResize:Gp,nonMaxSuppression:Kp,nonMaxSuppressionAsync:sh,nonMaxSuppressionWithScore:ih,nonMaxSuppressionWithScoreAsync:oh,nonMaxSuppressionPadded:lh,nonMaxSuppressionPaddedAsync:uh,threshold:ph,transform:hh},Lh={bandPart:fh,gramSchmidt:mh,qr:Ah},Wh={absoluteDifference:vh,computeWeightedLoss:bh,cosineDistance:wh,hingeLoss:kh,huberLoss:Ih,logLoss:Sh,meanSquaredError:Nh,sigmoidCrossEntropy:Th,softmaxCrossEntropy:Ch},Bh={sparseFillEmptyRows:Eh,sparseReshape:Rh,sparseSegmentMean:Fh,sparseSegmentSum:$h},Uh={stringNGrams:Mh,stringSplit:zh,stringToHashBucketFast:_h},Vh=class extends Vo{minimize(e,t=!1,n){const{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return fl(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return xc(e,t)}dispose(){null!=this.iterations_&&fl(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:_d(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Vh,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Gh=class extends Vh{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ks.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=ks.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:hl((()=>Uu(a).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:hl((()=>Uu(a).variable(false)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;hl((()=>{const e=Nl(El(s,this.rho),El(ed(r),1-this.rho)),t=El(Cl(Jd(Nl(i,this.epsilon)),Jd(Nl(s,this.epsilon))),r),n=Nl(El(i,this.rho),El(ed(t),1-this.rho));s.assign(e),i.assign(n);const o=Nl(El(t,-this.learningRate),a);a.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(fl(this.accumulatedGrads.map((e=>e.variable))),fl(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};Gh.className="Adadelta",Ho(Gh);var Hh=class extends Vh{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=ks.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:hl((()=>Qu(a.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable;hl((()=>{const e=Nl(s,ed(r));s.assign(e);const t=Nl(El(Cl(r,Jd(Nl(e,ks.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&fl(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};Hh.className="Adagrad",Ho(Hh);var jh=class extends Vh{constructor(e,t,n,a=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],hl((()=>{this.accBeta1=_d(t).variable(),this.accBeta2=_d(n).variable()})),null==a&&(this.epsilon=ks.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);hl((()=>{const n=Nc(1,this.accBeta1),a=Nc(1,this.accBeta2);t.forEach(((t,r)=>{const s=ks.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:hl((()=>Uu(s).variable(false)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:hl((()=>Uu(s).variable(false)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=Nl(El(o,this.beta1),El(i,1-this.beta1)),c=Nl(El(l,this.beta2),El(ed(i),1-this.beta2)),d=Cl(u,n),p=Cl(c,a);o.assign(u),l.assign(c);const h=Nl(El(Cl(d,Nl(Jd(p),this.epsilon)),-this.learningRate),s);s.assign(h)})),this.accBeta1.assign(El(this.accBeta1,this.beta1)),this.accBeta2.assign(El(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&fl(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&fl(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),hl((()=>{this.accBeta1.assign(fd(this.beta1,this.iterations_+1)),this.accBeta2.assign(fd(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};jh.className="Adam",Ho(jh);var qh=class extends Vh{constructor(e,t,n,a=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],hl((()=>{this.iteration=_d(0).variable(),this.accBeta1=_d(t).variable()})),null==a&&(this.epsilon=ks.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);hl((()=>{const n=Nc(1,this.accBeta1),a=Cl(-this.learningRate,Nl(El(this.iteration,this.decay),1));t.forEach(((t,r)=>{const s=ks.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:Uu(s).variable(false)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:Uu(s).variable(false)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=Nl(El(o,this.beta1),El(i,1-this.beta1)),c=El(l,this.beta2),d=Rl(i),p=Hc(c,d);o.assign(u),l.assign(p);const h=Nl(El(Cl(a,n),Cl(u,Nl(p,this.epsilon))),s);s.assign(h)})),this.iteration.assign(Nl(this.iteration,1)),this.accBeta1.assign(El(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&fl(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&fl(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};qh.className="Adamax",Ho(qh);var Xh=class extends Vh{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=ks.registeredVariables[t];hl((()=>{const e=Nl(El(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ml(_d(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Xh.className="SGD",Ho(Xh);var Kh=class extends Xh{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=_d(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=ks.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:hl((()=>Uu(a).variable(e)))}}const r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&hl((()=>{let e;const t=Nl(El(this.m,r),s);e=this.useNesterov?Nl(El(this.c,Nl(s,El(t,this.m))),a):Nl(El(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&fl(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};Kh.className="Momentum",Ho(Kh);var Zh=class extends Vh{constructor(e,t=.9,n=0,a=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=ks.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=ks.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:hl((()=>Uu(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:hl((()=>Uu(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:hl((()=>Uu(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;hl((()=>{const e=Nl(El(i,this.decay),El(ed(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=Nl(El(t,this.decay),El(s,1-this.decay)),l=Cl(El(s,this.learningRate),Jd(Nc(e,Nl(ed(r),this.epsilon)))),u=Nl(El(o,this.momentum),l);i.assign(e),t.assign(r),o.assign(u);const c=Nc(a,u);a.assign(c)}else{const e=Nl(El(i,this.decay),El(ed(s),1-this.decay)),t=Nl(El(o,this.momentum),Cl(El(s,this.learningRate),Jd(Nl(e,this.epsilon))));i.assign(e),o.assign(t);const n=Nc(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&fl(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&fl(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&fl(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};Zh.className="RMSProp",Ho(Zh);var Yh=class{static sgd(e){return new Xh(e)}static momentum(e,t,n=!1){return new Kh(e,t,n)}static rmsprop(e,t=.9,n=0,a=null,r=!1){return new Zh(e,t,n,a,r)}static adam(e=.001,t=.9,n=.999,a=null){return new jh(e,t,n,a)}static adadelta(e=.001,t=.95,n=null){return new Gh(e,t,n)}static adamax(e=.002,t=.9,n=.999,a=null,r=0){return new qh(e,t,n,a,r)}static adagrad(e,t=.1){return new Hh(e,t)}},Jh={sgd:Yh.sgd,momentum:Yh.momentum,adadelta:Yh.adadelta,adagrad:Yh.adagrad,rmsprop:Yh.rmsprop,adamax:Yh.adamax,adam:Yh.adam},Qh="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function ef(){return new Promise((e=>Qh((()=>e()))))}var tf={};function nf(e,t){const n=e[0].length;e.forEach(((e,t)=>{oe(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),oe(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const a=e[0];e.forEach(((e,r)=>{for(let s=0;s<n;s++)oe(s===t||e[s]===a[s],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${a}) along the non-concatenated axis ${r}.`))}))}function af(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}C(tf,{ERF_A1:()=>gf,ERF_A2:()=>yf,ERF_A3:()=>Af,ERF_A4:()=>xf,ERF_A5:()=>bf,ERF_P:()=>mf,PARALLELIZE_THRESHOLD:()=>rf,SELU_SCALE:()=>ff,SELU_SCALEALPHA:()=>hf,applyActivation:()=>Mp,assertAndGetBroadcastShape:()=>lo,assertAxesAreInnerMostDims:()=>Mc,assertParamsConsistent:()=>nf,assignToTypedArray:()=>Nf,axesAreInnerMostDims:()=>Ec,calculateShapes:()=>ko,checkEinsumDimSizes:()=>Mf,checkPadOnDimRoundingMode:()=>nu,combineLocations:()=>Rc,complexWithEvenIndex:()=>kf,complexWithOddIndex:()=>If,computeConv2DInfo:()=>jl,computeConv3DInfo:()=>ql,computeDefaultPad:()=>Xl,computeDilation2DInfo:()=>Vl,computeOptimalWindowSize:()=>sf,computeOutAndReduceShapes:()=>Fc,computeOutShape:()=>af,computePool2DInfo:()=>Gl,computePool3DInfo:()=>Hl,convertConv2DDataFormat:()=>tu,decodeEinsumEquation:()=>Ff,eitherStridesOrDilationsAreOne:()=>eu,expandShapeToKeepDim:()=>$c,exponent:()=>Cf,exponents:()=>Tf,fromStringArrayToUint8:()=>tm,fromUint8ToStringArray:()=>em,getAxesPermutation:()=>zc,getBroadcastDims:()=>io,getComplexWithIndex:()=>Sf,getEinsumComputePath:()=>zf,getEinsumPermutation:()=>$f,getFusedBiasGradient:()=>$p,getFusedDyActivation:()=>Fp,getImageCenter:()=>of,getInnerMostAxes:()=>Oc,getPermuted:()=>uf,getReductionAxes:()=>oo,getReshaped:()=>lf,getReshapedPermuted:()=>cf,getSliceBeginCoords:()=>df,getSliceSize:()=>pf,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Pf,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Lf,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Wf,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Vf,getSparseReshapeInputOutputMismatchErrorMessage:()=>Hf,getSparseReshapeInputOutputMultipleErrorMessage:()=>Gf,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Bf,getSparseReshapeNegativeOutputDimErrorMessage:()=>Uf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Kf,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>jf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>qf,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Xf,getUndoAxesPermutation:()=>_c,isIdentityPermutation:()=>_f,log:()=>lr,mergeRealAndImagArrays:()=>vf,prepareAndValidate:()=>xo,prepareSplitSize:()=>Df,segment_util:()=>Zf,shouldFuse:()=>zp,slice_util:()=>Io,splitRealAndImagArrays:()=>wf,tupleValuesAreOne:()=>Ql,upcastType:()=>ds,validateInput:()=>wo,validateUpdateShape:()=>vo,warn:()=>or});var rf=30;function sf(e){return e<=rf?e:Oe(e,Math.floor(Math.sqrt(e)))}function of(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function lf(e,t,n,a=!0){let r=[];if(a)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let a=0;a<n;++a)r=r.concat([e[a+1]/t[a],t[a]]);r=r.concat(e.slice(n+1))}return r}function uf(e,t,n=!0){const a=[];if(n){a.push(t);for(let n=t+1;n<e;++n)n<=2*t?(a.push(n),a.push(n-(t+1))):a.push(n)}else{const n=[],r=[];for(let a=1;a<e;++a)a>=2*t+1||a%2===1?r.push(a):n.push(a);a.push(...n),a.push(0),a.push(...r)}return a}function cf(e,t,n,a=!0){const r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?a?r.push(t[s-1]*e[s]):r.push(e[s]/t[s-1]):r.push(e[s]);return r}function df(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function pf(e,t,n){const a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}var hf=1.7580993408473768,ff=1.0507009873554805,mf=.3275911,gf=.254829592,yf=-.284496736,Af=1.421413741,xf=-1.453152027,bf=1.061405429;function vf(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function wf(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function kf(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function If(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Sf(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Nf(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function Tf(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function Cf(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}var Ef="->",Rf=/->/g;function Ff(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Rf,"").length)/Ef.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[a,r]=e.split(Ef);oe(-1===a.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=a.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let d=0;d<r.length;++d){const e=r[d];if(!s.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let d=0;d<a.length;++d){const e=a[d];-1===o.indexOf(e)&&","!==e&&o.push(e)}const l=new Array(s.length);for(let d=0;d<i;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error(`Found duplicate axes in input component ${s[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let e=0;e<s[d].length;++e)l[d].push(o.indexOf(s[d][e]))}const u=o.length,c=[];for(let d=r.length;d<u;++d)c.push(d);return{allDims:o,summedDims:c,idDims:l}}function $f(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const a=[];for(let r=0;r<e;++r)-1===n[r]&&a.push(r);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function Mf(e,t,n){const a=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===a[t[r][n]]?a[t[r][n]]=e[n]:oe(a[t[r][n]]===e[n],(()=>`Expected dimension ${a[t[r][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function zf(e,t){const n=e,a=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let i=0;i<r;++i)a.push([]);const s=[];for(let i=0;i<n.length;++i){const e=Of(t,n[i]);for(const t of e)-1===s.indexOf(t)&&(a[i].push(t),s.push(t))}return{path:n,steps:a}}function _f(e){return e.every(((e,t)=>e===t))}function Of(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function Df(e,t,n=0){let a=[];if("number"===typeof t)oe(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{oe(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const r=t.indexOf(-1);if(-1!==r){const a=t.reduce(((e,t)=>t>0?e+t:e));t[r]=e.shape[n]-a}oe(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function Pf(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Lf(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Wf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Bf(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Uf(e,t){return`size ${e} must be non-negative, not ${t}`}function Vf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Gf(e,t){return`Input to reshape is a SparseTensor with ${de(e)}\n  dense values, but the requested shape requires a multiple of ${de(t)}. inputShape=${e} outputShape= ${t}`}function Hf(e,t){return`Input to reshape is a tensor with ${de(e)} dense values, but the requested shape has ${de(t)}. inputShape=${e} outputShape=${t}`}function jf(){return"segment ids must be >= 0"}function qf(){return"segment ids are not increasing"}function Xf(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Kf(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var Zf={};function Yf(e,t){let n,a=!1;for(e<=rf?(n=e,a=!0):n=Oe(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=Oe(e,n+1);return n}function Jf(e,t,n){const a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function Qf(e,t,n,a){const r=t.shape.length,s=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${a}`);if(a<0&&(a+=r),a>s)throw new Error(`batchDims (${a}) must be less than rank(x) (\n    ${s}).`);if(n<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${n}).`);for(let d=0;d<a;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let d=0;d<a;++d)o.push(e.shape[d]),l*=e.shape[d];for(let d=a;d<n;d++)o.push(e.shape[d]),u*=e.shape[d];for(let d=a;d<r;d++)o.push(t.shape[d]);for(let d=n+1;d<s;d++)o.push(e.shape[d]),c*=e.shape[d];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function em(e){try{return e.map((e=>Wr(e)))}catch(W0){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${W0}`)}}function tm(e){return e.map((e=>Lr(e)))}C(Zf,{collectGatherOpShapeInfo:()=>Qf,computeOutShape:()=>Jf,segOpComputeOptimalWindowSize:()=>Yf});var nm={};C(nm,{nonMaxSuppressionV3Impl:()=>Jp,nonMaxSuppressionV4Impl:()=>Qp,nonMaxSuppressionV5Impl:()=>eh,whereImpl:()=>gp});var am={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>El(e,np(zi(n,"float32"),-1))}}},rm={kernelName:nt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ed(zi(n,"float32")),a=Jd(Nc(_d(1),t));return wc(Cl(e,a))}}}},sm={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Jd(Nc(ed(zi(n,"float32")),1));return Cl(e,t)}}}},im={kernelName:rt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=lo(n.shape,a.shape);return{a:()=>{let t=e;const a=oo(n.shape,r);return a.length>0&&(t=Tc(t,a)),au(t,n.shape)},b:()=>{let t=e;const n=oo(a.shape,r);return n.length>0&&(t=Tc(t,n)),au(t,a.shape)}}}},om={kernelName:st,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,a)=>{n[a]=()=>e.clone()})),n}},lm={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Uu(n)}}},um={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Uu(n)}}},cm={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cl(e,Jd(Nc(_d(1),ed(zi(n,"float32")))))}}},dm={kernelName:dt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Jd(Nl(_d(1),ed(zi(n,"float32"))));return Cl(e,t)}}}},pm={kernelName:ft,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=lo(n.shape,a.shape);return{a:()=>{const t=Nl(ed(n),ed(a));let s=El(e,Cl(a,t));const i=oo(n.shape,r);return i.length>0&&(s=Tc(s,i)),au(s,n.shape)},b:()=>{const t=Nl(ed(n),ed(a));let s=wc(El(e,Cl(n,t)));const i=oo(a.shape,r);return i.length>0&&(s=Tc(s,i)),au(s,a.shape)}}}},hm={kernelName:pt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cl(e,Nl(ed(zi(n,"float32")),1))}}},fm={kernelName:ht,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cl(e,Nc(_d(1),ed(zi(n,"float32"))))}}};var mm=Ds({avgPool3dGrad_:function(e,t,n,a,r,s){const i=zs(e,"dy","avgPool3dGrad"),o=zs(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=au(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=au(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),oe(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),oe(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),nu("avgPool3dGrad",r,s);const d={dy:l,input:u},p={filterSize:n,strides:a,pad:r,dimRoundingMode:s},h=ks.runKernel(At,d,p);return c?au(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),gm={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>mm(e,a,r,s,i,o)}}};var ym=Ds({avgPoolGrad_:function(e,t,n,a,r){const s=zs(e,"dy","avgPoolGrad"),i=zs(t,"input","avgPoolGrad");oe(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=au(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=au(s,[1,s.shape[0],s.shape[1],s.shape[2]])),oe(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),oe(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},d={filterSize:n,strides:a,pad:r},p=ks.runKernel(gt,c,d);return u?au(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Am={kernelName:mt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:i}=n;return{x:()=>ym(e,a,r,s,i)}}},xm={kernelName:xt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,r]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>to(e,r,!1,!1),b:()=>to(e,a,!0,!1)}:s&&!i?{a:()=>to(r,e,!1,!0),b:()=>to(a,e,!1,!1)}:{a:()=>to(r,e,!0,!0),b:()=>to(e,a,!0,!0)}:{a:()=>to(e,r,!1,!0),b:()=>to(a,e,!0,!1)}}},bm={kernelName:bt,gradFunc:(e,t,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>pd(e,a,r)}}},vm={kernelName:wt,gradFunc:(e,t,n)=>{const a=n,r=a.inputShape,s=a.shape,i=Array.from(s);for(let l=r.length-1;l>=0;l--)if(r[l]===s[l])i[l]=1;else if(1!==r[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${s}].`);const o=[];for(let l=0;l<i.length;l++)i[l]>1&&o.push(l);return{x:()=>Tc(e,o,!0)}}},wm={kernelName:It,gradFunc:e=>({x:()=>e.clone()})},km={kernelName:St,gradFunc:e=>({x:()=>Uu(e)})},Im={kernelName:Nt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>Bu(Pc(ac(a,r),cc(a,s)),e,Uu(e))}}},Sm={kernelName:Ct,inputsToSave:["x"],gradFunc:am.gradFunc},Nm={kernelName:Et,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map((e=>e.shape)),{axis:r}=n,s=ve(r,t[0].shape)[0],i=a.map((e=>e[s]));return Zd(e,i,s).map((e=>()=>e))}},Tm={kernelName:Rt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return oe(Ql(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>Tu(a.shape,e,r,i,o,l),filter:()=>Rp(a,e,r.shape,i,o,l)}}},Cm={kernelName:$t,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Su(e,r,s,i,o,1,l),filter:()=>Rp(e,a,r.shape,s,i,o,l)}}};var Em=Ds({conv3DBackpropFilter_:function(e,t,n,a,r){let s=e;4===e.rank&&(s=au(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=au(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),oe(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),oe(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),oe(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),oe(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),oe(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},l={strides:a,pad:r,filterShape:n};return ks.runKernel(zt,o,l)}}),Rm={kernelName:Mt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s}=n;oe(Ql(a),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const[i,o]=t;return{x:()=>Ru(i.shape,e,o,r,s),filter:()=>Em(i,e,o.shape,r,s)}}},Fm={kernelName:Ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>El(wc(Wd(zi(n,"float32"))),e)}}},$m={kernelName:Dt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>El(Bd(zi(n,"float32")),e)}}},Mm={kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r,exclusive:s,reverse:i}=n;return{x:()=>{const t=zc([r],a.rank);let n=zu(e,r,s,!i);return null!=t&&(n=ao(n,t)),n}}}},zm={kernelName:Ut,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s,dimRoundingMode:i}=n,o=null==a?[1,1]:a;oe(Ql(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return oe(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),oe(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),oe(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),oe(eu(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),nu("depthwiseConv2d",s,i),{x:()=>Dp(l.shape,e,u,r,s,o,i),filter:()=>Op(l,e,u.shape,r,s,o,i)}}},_m={kernelName:jt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,s={x:a,filter:r,dy:e},i={x:a,filter:r,dy:e};return{x:()=>ks.runKernel(qt,s,n),filter:()=>ks.runKernel(Xt,i,n)}}},Om={kernelName:Yt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>ks.runKernel(Jt,a)}}},Dm={kernelName:Qt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=El(Xu(wc(ed(n))),2/Math.sqrt(Math.PI));return{x:()=>El(e,a)}}},Pm={kernelName:tn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>El(e,n)}}},Lm={kernelName:nn,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>au(e,n.shape)}}},Wm={kernelName:an,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>El(e,Xu(n))}}},Bm={kernelName:ln,gradFunc:e=>({x:()=>Uu(e)})},Um={kernelName:un,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=lo(n.shape,a.shape);return{a:()=>{const t=Cl(e,zi(a,"float32")),s=oo(n.shape,r);return s.length>0?au(Tc(t,s),n.shape):t},b:()=>{let t=El(e,zi(n,"float32"));const s=oo(a.shape,r);s.length>0&&(t=au(Tc(t,s),a.shape));const i=ed(a);return wc(Cl(t,zi(i,"float32")))}}}},Vm={kernelName:cn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[r,s,i,o]=t,l=null==o?_d(1):o,u=oo(s.shape,r.shape),c=[];if(1===s.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const d=Nc(r,s),p=El(e,l),h=zd(Nl(i,_d(a))),f=El(El(El(h,h),h),_d(-.5));return{x:()=>1===s.rank?au(El(El(e,Yu(au(h,[1,1,1,s.shape[0]]),c)),l),r.shape):au(El(El(e,h),l),r.shape),mean:()=>{let e=El(El(h,_d(-1)),p);return 1===s.rank&&(e=Tc(e,u)),au(e,s.shape)},variance:()=>{let e=El(El(f,d),p);return 1===s.rank&&(e=Tc(e,u)),au(e,s.shape)},scale:()=>{const t=El(d,h);let n=El(e,t);return 1===s.rank&&(n=Tc(n,u)),au(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Tc(t,u)),au(t,s.shape)}}}},Gm={kernelName:dn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,r]=t,{axis:s}=n,i=ve(s,a.shape)[0];return{x:()=>{const t=a.shape,n=r.size,o=t.slice(0,i),l=o.length,u=t.slice(s,t.length).slice(1),c=u.length,d=Hm(0,l),p=Hm(l+1,l+1+c),h=jm([o,[n],u]),f=au(e,h),m=au(r,[n]),g=jm([[l],d,p]),y=ao(f,g);let A=hp(y,m,a.shape[i]);const x=_c(g);return A=ao(A,x),A},indices:()=>r}}};function Hm(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function jm(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}var qm={kernelName:fn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>Uu(n),b:()=>Uu(a)}}},Xm={kernelName:mn,gradFunc:e=>({x:()=>zi(e,"float32")})},Km={kernelName:An,gradFunc:e=>({x:()=>Uu(e)})},Zm={kernelName:xn,gradFunc:e=>({x:()=>Uu(e)})},Ym={kernelName:bn,gradFunc:e=>({x:()=>Uu(e)})},Jm={kernelName:vn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:r}=n,s=nc(a,0);return{x:()=>Bu(s,e,El(e,r))}}},Qm={kernelName:Nn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cl(e,Nl(n,1))}}},eg={kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cl(e,zi(n,"float32"))}}},tg={kernelName:Rn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;return{logits:()=>{const t=Xu(a);return Nc(e,El(Tc(e,r,!0),t))}}}};var ng=Ds({localResponseNormalizationBackprop_:function(e,t,n,a=5,r=1,s=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:a,bias:r,alpha:s,beta:i};return ks.runKernel($n,o,l)}}),ag={kernelName:Fn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>ng(a,r,e,s,i,o,l)}}};function rg(e,t,n,a){return t.rank<n.rank&&(t=au(t,$c(t.shape,a))),e.rank<n.rank&&(e=au(e,$c(e.shape,a))),{x:()=>El(e,zi(Wu(n,t),e.dtype))}}var sg={kernelName:Mn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:r}=a,s=t[0],i=rg(e,t[1],s,ve(r,s.shape));return{x:()=>i.x()}}},ig={kernelName:zn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>El(e,zi(ac(n,a),"float32")),b:()=>El(e,zi(uc(n,a),"float32"))}}};var og=Ds({maxPool3dGrad_:function(e,t,n,a,r,s,i){const o=zs(e,"dy","maxPool3dGrad"),l=zs(t,"input","maxPool3dGrad"),u=zs(n,"output","maxPool3dGrad");let c=o,d=l,p=u,h=!1;4===l.rank&&(h=!0,c=au(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=au(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=au(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),oe(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),oe(5===d.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`)),oe(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),nu("maxPool3dGrad",s,i);const f={dy:c,input:d,output:p},m={filterSize:a,strides:r,pad:s,dimRoundingMode:i},g=ks.runKernel(Pn,f,m);return h?au(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),lg={kernelName:Dn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>og(e,a,r,s,i,o,l)}}};var ug=Ds({maxPoolGrad_:function(e,t,n,a,r,s,i){const o=zs(e,"dy","maxPoolGrad"),l=zs(t,"input","maxPoolGrad"),u=zs(n,"output","maxPoolGrad");oe(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),oe(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),oe(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),nu("maxPoolGrad",s,i);const c={dy:o,input:l,output:u},d={filterSize:a,strides:r,pad:s,dimRoundingMode:i};return ks.runKernel(On,c,d)}}),cg={kernelName:ta,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>lu(e,s,a.shape)}}},dg={kernelName:Ra,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>du(e,a,r)}}},pg={kernelName:Fa,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>iu(e,a)}}};var hg=[am,rm,sm,im,om,lm,um,cm,dm,pm,hm,fm,gm,Am,xm,bm,vm,wm,km,Im,Sm,Nm,Cm,Tm,Rm,Fm,$m,Mm,zm,_m,{kernelName:Kt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=lo(n.shape,a.shape);return{a:()=>{const t=Cl(e,zi(a,"float32")),s=oo(n.shape,r);return s.length>0?au(Tc(t,s),n.shape):t},b:()=>{let t=El(e,zi(n,"float32"));const s=oo(a.shape,r);s.length>0&&(t=au(Tc(t,s),a.shape));const i=ed(a);return wc(Cl(t,zi(i,"float32")))}}}},Om,Dm,Pm,Lm,Wm,Um,Bm,Vm,Gm,qm,Xm,Km,Zm,Ym,Jm,Qm,eg,tg,ag,sg,sg,ig,lg,{kernelName:_n,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>ug(e,a,r,s,i,o)}}},{kernelName:Wn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n,s=ve(r,a.shape),i=de(Fc(a.shape,s)[1]);return{x:()=>{const t=a.shape.slice();s.forEach((e=>{t[e]=1}));const n=au(e,t);return Cl(El(n,Xc(a.shape,"float32")),i)}}}},{kernelName:Bn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:r}=a,[s,i]=t,o=rg(e,i,s,ve(r,s.shape));return{x:()=>o.x()}}},{kernelName:Un,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>El(e,zi(cc(n,a),"float32")),b:()=>El(e,zi(nc(n,a),"float32"))}}},{kernelName:Vn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>lu(e,s,a.shape)}}},{kernelName:Gn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=lo(n.shape,a.shape);return{a:()=>{const t=oo(n.shape,r);return t.length>0?au(Tc(e,t),n.shape):e},b:()=>{const t=El(e,wc(ec(Cl(n,a)))),s=oo(a.shape,r);return s.length>0?au(Tc(t,s),a.shape):t}}}},{kernelName:jn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=lo(n.shape,a.shape);return{a:()=>{const t=El(e,zi(a,"float32")),s=oo(n.shape,r);return s.length>0?au(Tc(t,s),n.shape):t},b:()=>{const t=El(e,zi(n,"float32")),s=oo(a.shape,r);return s.length>0?au(Tc(t,s),a.shape):t}}}},{kernelName:qn,gradFunc:e=>({x:()=>wc(e)})},{kernelName:Qn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>qc(n.shape,"float32")}}},{kernelName:Jn,gradFunc:e=>({x:()=>Uu(e)})},{kernelName:ea,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return fp(e,a).map((e=>()=>e))}},cg,cg,{kernelName:aa,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,r]=t,s=n,i=a,o=lo(s.shape,i.shape);return{a:()=>{const t=zi(i,"float32");let n=El(e,El(t,fd(s,Nc(t,_d(1)))));const a=oo(s.shape,o);return a.length>0&&(n=Tc(n,a)),au(n,s.shape)},b:()=>{const t=nc(s,0),n=Bu(t,hc(s),Uu(s));let a=El(e,El(r,n));const l=oo(i.shape,o);return l.length>0&&(a=Tc(a,l)),au(a,i.shape)}}}},{kernelName:ra,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,r=nc(n,0);return{x:()=>Bu(r,e,El(e,a)),alpha:()=>{let t=Bu(r,Uu(e),El(e,n));const s=oo(a.shape,e.shape);return s.length>0&&(t=Tc(t,s)),au(t,a.shape)}}}},{kernelName:la,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cl(e,wc(ed(n)))}}},{kernelName:ma,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=El(cc(n,6),np(n));return{x:()=>El(e,zi(a,"float32"))}}},{kernelName:ua,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>El(e,zi(np(n),"float32"))}}},{kernelName:ca,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>au(e,n.shape)}}},{kernelName:ha,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>ks.runKernel(fa,r,n)}}},{kernelName:da,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>ks.runKernel(pa,r,n)}}},{kernelName:ga,gradFunc:(e,t,n)=>{const{dims:a}=n,r=ve(a,e.shape);return{x:()=>Cd(e,r)}}},{kernelName:ya,gradFunc:e=>({x:()=>Uu(e)})},{kernelName:Aa,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wc(Cl(e,El(fd(n,1.5),2)))}}},{kernelName:ba,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>zi(Uu(n),"float32"),t:()=>El(e,zi(n,e.dtype)),e:()=>El(e,zi(Lc(n),e.dtype))}}},{kernelName:va,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=nc(n,_d(0)),a=_d(hf),r=_d(ff),s=El(e,r),i=El(El(e,a),Xu(zi(n,"float32")));return Bu(t,s,i)}}}},{kernelName:Na,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>El(e,El(n,Nc(_d(1),n)))}}},{kernelName:Sa,gradFunc:e=>({x:()=>Uu(e)})},{kernelName:ka,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>El($u(zi(n,"float32")),e)}}},{kernelName:Ia,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>El(Mu(zi(n,"float32")),e)}}},{kernelName:wa,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:r,size:s}=n,i=a.shape,[o,l]=Lo(a,r,s),u=[];for(let c=0;c<e.rank;c++)u.push([o[c],i[c]-o[c]-l[c]]);return{x:()=>od(e,u)}}},{kernelName:$a,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:r}=n,s=El(e,a);return{logits:()=>Nc(s,El(Tc(s,[r],true),a))}}},{kernelName:Ta,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>El(e,ou(n))}}},dg,dg,pg,pg,{kernelName:Ca,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cl(e,El(Jd(zi(n,"float32")),2))}}},{kernelName:Pa,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=_d(2);return{a:()=>El(e,El(r,Nc(n,a))),b:()=>El(e,El(r,Nc(a,n)))}}},{kernelName:La,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>El(e,El(zi(n,"float32"),2))}}},{kernelName:tr,gradFunc:e=>({x:()=>Uu(e)})},{kernelName:Ga,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=lo(n.shape,a.shape);return{a:()=>{let t=e;const a=oo(n.shape,r);return a.length>0&&(t=Tc(t,a)),au(t,n.shape)},b:()=>{let t=e;const n=oo(a.shape,r);return n.length>0&&(t=Tc(t,n)),au(wc(t),a.shape)}}}},{kernelName:Ea,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,r=a.shape.slice(),{axis:s}=n;ve(s,a.shape).forEach((e=>{r[e]=1}));const i=au(e,r),o=El(i,Xc(a.shape,"float32"));return{x:()=>o}}},{kernelName:Ha,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cl(e,ed($u(n)))}}},{kernelName:ja,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>El(Nc(_d(1),ed(n)),e)}}},{kernelName:qa,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:r}=n;return{x:()=>{let t=Uu(a);if(1===a.rank)for(let n=0;n<r[0];++n)t=Nl(t,lu(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)t=Nl(t,lu(e,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let i=0;i<r[2];++i)t=Nl(t,lu(e,[n*a.shape[0],s*a.shape[1],i*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${a.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=Nl(t,lu(e,[n*a.shape[0],s*a.shape[1],i*a.shape[2],o*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},{kernelName:Za,gradFunc:(e,t,n)=>{const a=n,{perm:r}=a,s=_c(r);return{x:()=>ao(e,s)}}},{kernelName:Ja,gradFunc:(e,t,n)=>{const a=n,{axis:r}=a;return{value:()=>tp(e,r)}}},{kernelName:Qa,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Hc(t,Uu(t)),a=tc(e,n);let r=ac(t,_d(0,"int32"));const s=a.rank-r.rank;for(let o=0;o<s;++o)r=Ku(r,o+1);r=Pc(r,Xc(a.shape,"bool"));const i=Uu(a);return Bu(r,a,i)}(e,n)}}},{kernelName:er,gradFunc:e=>({x:()=>Uu(e)})}];for(const B0 of hg)mr(B0);var fg,mg={};function gg(){return null==fg&&(fg=Il().epsilon()),fg}C(mg,{maxNorm:()=>Yg,minMaxNorm:()=>ey,nonNeg:()=>Qg,unitNorm:()=>Jg});var yg=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,yg.prototype)}},Ag=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ag.prototype)}},xg=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,xg.prototype)}},bg=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,bg.prototype)}},vg=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vg.prototype)}};function wg(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function kg(e,t){if(!e)throw new vg(t)}function Ig(e,t){let n=0;for(const a of e)a===t&&n++;return n}function Sg(e){return 1===e.length?e[0]:e}function Ng(e){return Array.isArray(e)?e:[e]}function Tg(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Cg(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var Eg={};function Rg(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Fg(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>Fg(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?Fg(t):e[n]=t.value)}}}function $g(e,t={},n={},a="object",r=!1){if("string"===typeof e){const r=e;let s;if(r in n)s=n[r];else if(r in Eg)s=Eg[r];else if(s=t[r],null==s)throw new xg(`Unknown ${a}: ${e}. This may be due to one of the following reasons:\n1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new xg(`${a}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,l;if(i in n?[o,l]=n[i]:i in Eg?[o,l]=Eg.className:i in t&&([o,l]=t[i]),null==o)throw new xg(`Unknown ${a}: ${i}. This may be due to one of the following reasons:\n1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const n of Object.keys(Eg))e[n]=Eg[n];for(const r of Object.keys(n))e[r]=n[r];s.config.customObjects=e;const t={...Eg};for(const r of Object.keys(n))Eg[r]=n[r];Fg(s.config);const a=l(o,s.config,n,r);return Eg={...t},a}{const e={...Eg};for(const a of Object.keys(n))Eg[a]=n[a];const t=new o(s.config);return Eg={...e},t}}}function Mg(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function zg(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function _g(e){if(null==e)throw new xg(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Og(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new xg(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Dg(e,t,n=0,a=1/0){return kg(n>=0),kg(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every((e=>typeof e===t))}function Pg(e,t){Array.isArray(e)?(br.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Pg(e,`element ${n+1} of ${t}`)))):br.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Lg(e)}.`))}function Lg(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Lg(e))).join(",")+"]":"string"===typeof e?`"${e}"`:`${e}`}function Wg(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Bg(e,t){return hl((()=>Jd(Tc(El(e,e),t,!0))))}var Ug=class extends Uo.Serializable{getConfig(){return{}}},Vg=class extends Ug{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return hl((()=>{const t=Bg(e,this.axis),n=bu(t,0,this.maxValue);return El(e,Cl(n,Nl(gg(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Vg.className="MaxNorm",Uo.registerClass(Vg);var Gg=class extends Ug{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return hl((()=>Cl(e,Nl(gg(),Bg(e,this.axis)))))}getConfig(){return{axis:this.axis}}};Gg.className="UnitNorm",Uo.registerClass(Gg);var Hg=class extends Ug{apply(e){return Nd(e)}};Hg.className="NonNeg",Uo.registerClass(Hg);var jg=class extends Ug{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return hl((()=>{const t=Bg(e,this.axis),n=Nl(El(this.rate,bu(t,this.minValue,this.maxValue)),El(1-this.rate,t));return El(e,Cl(n,Nl(gg(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};jg.className="MinMaxNorm",Uo.registerClass(jg);var qg={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Xg(e){return Rg(e)}function Kg(e,t={}){return $g(e,Uo.SerializationMap.getMap().classNameMap,t,"constraint")}function Zg(e){if(null==e)return null;if("string"===typeof e){return Kg({className:e in qg?qg[e]:e,config:{}})}return e instanceof Ug?e:Kg(e)}function Yg(e){return new Vg(e)}function Jg(e){return new Gg(e)}function Qg(){return new Hg}function ey(e){return new jg(e)}var ty={};C(ty,{constant:()=>oA,glorotNormal:()=>fA,glorotUniform:()=>hA,heNormal:()=>mA,heUniform:()=>gA,identity:()=>dA,leCunNormal:()=>yA,leCunUniform:()=>AA,ones:()=>iA,orthogonal:()=>xA,randomNormal:()=>uA,randomUniform:()=>lA,truncatedNormal:()=>cA,varianceScaling:()=>pA,zeros:()=>sA});var ny=["channelsFirst","channelsLast"],ay=["nearest","bilinear"],ry=["valid","same","causal"],sy=["max","avg"],iy=["sum","mul","concat","ave"],oy=new Map;function ly(e){Og(ny,"DataFormat",e)}function uy(e){Og(ry,"PaddingMode",e)}function cy(e){Og(sy,"PoolMode",e)}var dy=[];function py(e,t){dy.push(e);try{const e=t();return dy.pop(),e}catch(n){throw dy.pop(),n}}function hy(e){if(!gy(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===dy.length?"":dy.join("/")+"/")+e}function fy(e){if(!gy(e))throw new Error("Not a valid tensor name: '"+e+"'");oy.has(e)||oy.set(e,0);const t=oy.get(e);if(oy.set(e,oy.get(e)+1),t>0){const n=`${e}_${t}`;return oy.set(n,1),n}return e}var my=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function gy(e){return!!e.match(my)}function yy(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function Ay(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function xy(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function by(e,t){if(t<e)throw new xg(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let a=e;a<t;++a)n.push(a);return n}function vy(e,t){return zi(e,t)}function wy(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),au(e,n)}function ky(e,t,n){return hl((()=>{switch(e.rank){case 1:return Ud(e,t,n);case 2:return Vd(e,[t,0],[n,e.shape[1]]);case 3:return Gd(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Hd(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return lu(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return lu(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new xg(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Iy(e,t,n){return hl((()=>{switch(e.rank){case 1:return Ud(e,t,n);case 2:return Vd(e,[0,t],[e.shape[0],n]);case 3:return Gd(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Hd(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new xg(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Sy(e,t,n,a){return hl((()=>{switch(e.rank){case 1:return Ud(e,t,n);case 2:switch(a){case 1:return ky(e,t,n);case 2:return Iy(e,t,n);default:throw new xg(`The axis is not within the rank of the tensor ${a}`)}case 3:switch(a){case 1:return ky(e,t,n);case 2:return Gd(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Iy(e,t,n);default:throw new xg(`The axis is not within the rank of the tensor ${a}`)}case 4:switch(a){case 1:return ky(e,t,n);case 2:return Hd(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Hd(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Iy(e,t,n);default:throw new xg(`The axis is not within the rank of the tensor ${a}`)}default:throw new xg(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Ny(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),iu(e,t)}function Ty(e,t){switch(e.rank){case 1:return vu([e,t]);case 2:return wu([e,t],0);case 3:return ku([e,t],0);case 4:return Iu([e,t],0);default:throw new xg(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Cy(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new xg(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Yu(e,t)}function Ey(e,t=0,n=1,a,r){return vd(e,t,n,a,r)}function Ry(e,t,n,a){if(e.rank<2||t.rank<2)throw new bg(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new bg(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){const r=!1,s=!1;return Ep.matMul({a:e,b:t,transposeA:r,transposeB:s,bias:a?My(e.rank,a,"channelsLast"):null,activation:n})}{const r=e.shape.slice(),s=r.pop();e=au(e,[-1,s]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=au(ao(t,c),[l,-1]);const d=[...r,...u],p=!1,h=!1;return au(Ep.matMul({a:e,b:t,transposeA:p,transposeB:h,bias:a?My(e.rank,a,"channelsLast"):null,activation:n}),d)}}function Fy(e,t,n){return hl((()=>(t=Array.isArray(t)?sp(t,"int32"):zi(t,"int32"),tc(e,t,n))))}function $y(e){return El(e,e)}function My(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new xg(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===a.length?au(t,[1,a[0],1,1,1]):au(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?au(t,[1,1,1,1,a[0]]):au(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?au(t,[1,a[0],1,1]):au(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?au(t,[1,1,1,a[0]]):au(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?au(t,[1,a[0],1]):au(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?au(t,[1,1,a[0]]):au(t,[1].concat(a))}else if(e<3)return t;throw new xg(`Unsupported input rank by biasAdd: ${t.rank}`)}function zy(e,t,n){return hl((()=>(null==n&&(n="channelsLast"),ly(n),Nl(e,My(e.rank,t,n)))))}function _y(e,t,n,a){return hl((()=>Sp(e,t,n,a)))}function Oy(e,t,n=!1){return n?e():t()}var Dy=["fanIn","fanOut","fanAvg"],Py=["normal","uniform","truncatedNormal"];var Ly=class extends Uo.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Wy=class extends Ly{apply(e,t){return qc(e,t)}};Wy.className="Zeros",Uo.registerClass(Wy);var By=class extends Ly{apply(e,t){return Xc(e,t)}};By.className="Ones",Uo.registerClass(By);var Uy=class extends Ly{constructor(e){if(super(),"object"!==typeof e)throw new xg(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new xg(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return hl((()=>El(_d(this.value),Xc(e,t))))}getConfig(){return{value:this.value}}};Uy.className="Constant",Uo.registerClass(Uy);var Vy=class extends Ly{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return wd(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Vy.className="RandomUniform",Uo.registerClass(Vy);var Gy=class extends Ly{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new bg(`randomNormal does not support dType ${t}.`);return Ey(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Gy.className="RandomNormal",Uo.registerClass(Gy);var Hy=class extends Ly{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new bg(`truncatedNormal does not support dType ${t}.`);return dp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Hy.className="TruncatedNormal",Uo.registerClass(Hy);var jy=class extends Ly{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return hl((()=>{if(2!==e.length||e[0]!==e[1])throw new xg("Identity matrix initializer can only be used for 2D square matrices.");return El(this.gain,Ju(e[0]))}))}getConfig(){return{gain:this.gain}}};jy.className="Identity",Uo.registerClass(jy);var qy=class extends Ly{constructor(e){if(super(),e.scale<0)throw new xg(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Og(Dy,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Og(Py,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,a;if(ly(t),2===e.length)n=e[0],a=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=yy(e,2);n=e[1]*t,a=e[0]*t}else if("channelsLast"===t){const t=yy(e,0,e.length-2);n=e[e.length-2]*t,a=e[e.length-1]*t}}else{const t=yy(e);n=Math.sqrt(t),a=Math.sqrt(t)}return[n,a]}(e),a=n[0],r=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,a):"fanOut"===this.mode?s/=Math.max(1,r):s/=Math.max(1,(a+r)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new bg(`${this.getClassName()} does not support dType ${t}.`);return dp(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return wd(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};qy.className="VarianceScaling",Uo.registerClass(qy);var Xy=class extends qy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return qy.className}};Xy.className="GlorotUniform",Uo.registerClass(Xy);var Ky=class extends qy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return qy.className}};Ky.className="GlorotNormal",Uo.registerClass(Ky);var Zy=class extends qy{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return qy.className}};Zy.className="HeNormal",Uo.registerClass(Zy);var Yy=class extends qy{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return qy.className}};Yy.className="HeUniform",Uo.registerClass(Yy);var Jy=class extends qy{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return qy.className}};Jy.className="LeCunNormal",Uo.registerClass(Jy);var Qy=class extends qy{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return qy.className}};Qy.className="LeCunNormal",Uo.registerClass(Qy);var eA=class extends Ly{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new bg("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return hl((()=>{if(e.length<2)throw new bg("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Ey(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Lh.gramSchmidt(t);return e[0]>e[1]&&(n=ao(n)),El(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}};eA.className="Orthogonal",Uo.registerClass(eA);var tA={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function nA(e,t={}){return $g(e,Uo.SerializationMap.getMap().classNameMap,t,"initializer")}function aA(e){return Rg(e)}function rA(e){if("string"===typeof e){const t=e in tA?tA[e]:e;if("GlorotNormal"===t)return new Ky;if("GlorotUniform"===t)return new Xy;if("HeNormal"===t)return new Zy;if("HeUniform"===t)return new Yy;if("LeCunNormal"===t)return new Jy;if("LeCunUniform"===t)return new Qy;{const e={};return e.className=t,e.config={},nA(e)}}return e instanceof Ly?e:nA(e)}function sA(){return new Wy}function iA(){return new By}function oA(e){return new Uy(e)}function lA(e){return new Vy(e)}function uA(e){return new Gy(e)}function cA(e){return new Hy(e)}function dA(e){return new jy(e)}function pA(e){return new qy(e)}function hA(e){return new Xy(e)}function fA(e){return new Ky(e)}function mA(e){return new Zy(e)}function gA(e){return new Yy(e)}function yA(e){return new Jy(e)}function AA(e){return new Qy(e)}function xA(e){return new eA(e)}var bA={};C(bA,{Layer:()=>LA,RNN:()=>Av,RNNCell:()=>xv,activation:()=>Ww,add:()=>Kw,alphaDropout:()=>Lk,average:()=>Zw,averagePooling1d:()=>sk,averagePooling2d:()=>lk,averagePooling3d:()=>dk,avgPool1d:()=>ik,avgPool2d:()=>uk,avgPool3d:()=>pk,avgPooling1d:()=>ok,avgPooling2d:()=>ck,avgPooling3d:()=>hk,batchNormalization:()=>nk,bidirectional:()=>Fk,concatenate:()=>Yw,conv1d:()=>Fw,conv2d:()=>$w,conv2dTranspose:()=>Mw,conv3d:()=>zw,conv3dTranspose:()=>_w,convLstm2d:()=>Tk,convLstm2dCell:()=>Ck,cropping2D:()=>Dw,dense:()=>Bw,depthwiseConv2d:()=>Lw,dot:()=>tk,dropout:()=>Uw,elu:()=>Sw,embedding:()=>Xw,flatten:()=>Gw,gaussianDropout:()=>Pk,gaussianNoise:()=>Dk,globalAveragePooling1d:()=>fk,globalAveragePooling2d:()=>mk,globalMaxPool1d:()=>Mk,globalMaxPool2d:()=>zk,globalMaxPooling1d:()=>gk,globalMaxPooling2d:()=>yk,gru:()=>vk,gruCell:()=>wk,input:()=>mb,inputLayer:()=>Iw,layerNormalization:()=>ak,leakyReLU:()=>Tw,lstm:()=>kk,lstmCell:()=>Ik,masking:()=>Wk,maxPool1d:()=>_k,maxPool2d:()=>Ok,maxPooling1d:()=>Ak,maxPooling2d:()=>xk,maxPooling3d:()=>bk,maximum:()=>Jw,minimum:()=>Qw,multiply:()=>ek,permute:()=>qw,prelu:()=>Cw,reLU:()=>Nw,repeatVector:()=>Hw,reshape:()=>jw,rnn:()=>Ek,separableConv2d:()=>Ow,simpleRNN:()=>Sk,simpleRNNCell:()=>Nk,softmax:()=>Ew,spatialDropout1d:()=>Vw,stackedRNNCells:()=>Rk,thresholdedReLU:()=>Rw,timeDistributed:()=>$k,upSampling2d:()=>Pw,zeroPadding2d:()=>rk});var vA=0;function wA(){return vA++}var kA={};function IA(e=""){return e in kA||(kA[e]=0),kA[e]+=1,e+kA[e].toString()}function SA(e){return Array.isArray(e)&&Array.isArray(e[0])}function NA(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function TA(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new xg(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function CA(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new xg(`Expected exactly 1 Shape; got ${e.length}`)}return e}function EA(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var RA="Variable",FA=class{constructor(e,t="float32",n="Variable",a=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=wA(),n=null==n?RA:n,this.originalName=hy(n),this.name=fy(this.originalName),this.trainable_=a,this.constraint=r,this.val=mp(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function $A(e){return e.map((e=>e.read()))}function MA(e){e.forEach((e=>{e[0].write(e[1])}))}var zA=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},_A=class{constructor(e,t,n,a,r,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=i,this.id=wA(),null!=s&&(this.originalName=hy(s),this.name=fy(this.originalName)),this.rank=t.length}},OA=0,DA=class{constructor(e,t){this.callArgs=t,this.id=OA++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},PA=0,LA=class extends Uo.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=PA++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Tg(e)+"_"+IA(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Ag(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new xg(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Sg(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Sg(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new yg(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new yg(`Layer ${this.name} is not connected, no input to return.`);return Sg(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new yg(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new yg(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Sg(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Ng(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Ng(this.inputSpec);if(e.length!==t.length)throw new xg(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const a=e[n],r=t[n];if(null==r)continue;const s=a.rank;if(null!=r.ndim&&s!==r.ndim)throw new xg(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${s}`);if(null!=r.maxNDim&&s>r.maxNDim)throw new xg(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${s}`);if(null!=r.minNDim&&s<r.minNDim)throw new xg(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${s}.`);if(null!=r.dtype&&a.dtype!==r.dtype)throw new xg(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${a.dtype}.`);if(r.axes){const e=a.shape;for(const t in r.axes){const a=Number(t),s=r.axes[t],i=a>=0?e[a]:e[e.length+a];if(null!=s&&-1===[s,null].indexOf(i))throw new xg(`Input ${n} is incompatible with layer ${this.name}: expected axis ${a} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){const t=r.shape[e],s=a.shape[e];if(null!=t&&null!=s&&t!==s)throw new xg(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${a.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Ng(e);let a=!0;for(const s of n)if(!(s instanceof _A)){a=!1;break}let r=!0;for(const s of n)if(s instanceof _A){r=!1;break}if(a===r)throw new xg("Arguments to apply() must be all SymbolicTensors or all Tensors");return py(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Ng(e))t.push(n.shape);this.build(Sg(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);const r=Ng(a),s=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(a=Sg(s),null!=this.activityRegularizer)throw new bg("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=Ng(e);const t=[];for(const n of e)t.push(n.shape);return Sg(t)}(e),a=this.computeOutputShape(n);let r;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new _A(s,n,this,Ng(e),t,this.name,a))):new _A(s,a,this,Ng(e),t,this.name),this.addInboundNode(e,r,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new bg("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new yg(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new yg(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Ag(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return EA(this.weights)}build(e){this.built=!0}getWeights(e=!1){return $A(e?this.trainableWeights:this.weights)}setWeights(e){hl((()=>{const t=this.weights;if(t.length!==e.length)throw new xg(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],a=$A(t);for(let r=0;r<a.length;++r){const s=a[r],i=t[r],o=e[r];if(!br.arraysEqual(s.shape,o.shape))throw new xg(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}MA(n)}))}addWeight(e,t,n,a,r,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new xg(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=o?o():rA("zeros"));const l=a.apply(t,n),u=new FA(l,n,e,s,i);return l.dispose(),null!=r&&this.addLoss((()=>r.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Ng(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,a,r,s,i=null){const o=Ng(e);t=Ng(t),n=Ng(n),a=Ng(a),r=NA(r),s=NA(s);const l=[],u=[],c=[];for(const d of o)l.push(d.sourceLayer),u.push(d.nodeIndex),c.push(d.tensorIndex);new DA({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},i);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function WA(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=WA(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}var BA=class extends LA{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:IA("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new xg("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new xg("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new xg("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new _A(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new DA({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new xg(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function UA(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new xg("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new BA({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function VA(e){if(null==e)return;const t=[],n=[],a=[];for(const r in e){const s=e[r];if("number"!==typeof s){const e=s;t.push(e.data()),n.push(r),a.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];fl(a)}}function GA(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}BA.className="InputLayer",Uo.registerClass(BA);var HA=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},jA=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}},qA=class extends HA{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const a in t){const e=t[a];if("number"===typeof e)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+e*n;else{let t;a in this.totals?t=this.totals[a]:this.totals[a]=0;const r=hl((()=>Nl(this.totals[a],El(e,n))));this.totals[a]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:hl((()=>{const e=El(Cl(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),ml(t[n])})))}},XA=class extends HA{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!==typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const a=await Promise.all(e);for(let r=0;r<a.length;++r){this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=a[r][0]}}},KA=class extends HA{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||ef,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");br.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,r=null!=n?n():br.now();return(...s)=>{const i=null!=n?n():br.now();return i-r<t||(r=i,a=e(...s)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await VA(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await VA(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await VA(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await VA(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await VA(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):br.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await VA(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await VA(e),await this.trainEnd(e))}};function ZA(e,t){if(null==e&&(e={}),e instanceof HA)return[e];if(Array.isArray(e)&&e[0]instanceof HA)return e;return Ng(e).map((e=>new KA(e,t)))}var YA=class{constructor(){}static registerCallbackConstructor(e,t){br.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),YA.checkForDuplicate(t),null==YA.constructors[e]&&(YA.constructors[e]=[]),YA.constructors[e].push(t)}static checkForDuplicate(e){for(const t in YA.constructors){YA.constructors[+t].forEach((t=>{if(t===e)throw new xg("Duplicate callback constructor.")}))}}static clear(){YA.constructors={}}static createCallbacks(e){const t=[];for(const n in YA.constructors){const a=+n;e>=a&&t.push(...YA.constructors[a])}return t.map((e=>new e))}},JA=YA;function QA(e,t,n,a,r,s,i,o,l){const u=new XA,c=[new qA,...JA.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const d=new jA(c);return d.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:d,history:u}}function ex(e,t={},n=!1){return $g(e,Uo.SerializationMap.getMap().classNameMap,t,"layer",n)}function tx(e,t){return hl((()=>{"float32"!==e.dtype&&(e=zi(e,"float32"));const n=Tc($y(e),t,!0),a=Qu(n.shape,gg()),r=Jd(Hc(n,a));return Cl(e,r)}))}function nx(e,t){return hl((()=>jc($y(Nc(t,e)),-1)))}function ax(e,t){return hl((()=>jc(Rl(Nc(t,e)),-1)))}function rx(e,t){return hl((()=>{const n=Nc(e,t),a=bu(Rl(e),gg(),Number.MAX_VALUE),r=Rl(Cl(n,a));return El(100,jc(r,-1))}))}function sx(e,t,n=!1){return hl((()=>{if(n)t=jd(t);else{const e=Tc(t,t.shape.length-1,!0);t=Cl(t,e)}return t=bu(t,gg(),1-gg()),wc(Tc(El(zi(e,"float32"),hc(t)),t.shape.length-1))}))}function ix(e,t,n=!1){return hl((()=>{const a=zi(ec(function(e){const t=[yy(e.shape)];return au(e,t)}(e)),"int32"),r=(t=bu(t,gg(),1-gg())).shape;return sx(au(no(a,r[r.length-1]),r),t,n)}))}function ox(e,t){return hl((()=>{let n;return n=bu(t,gg(),1-gg()),n=hc(Cl(n,Nc(1,n))),jc(function(e,t){if(!br.arraysEqual(e.shape,t.shape))throw new xg(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return hl((()=>{const n=Nd(t),a=wc(Rl(t));return Nl(Nc(n,El(t,e)),fc(Xu(a)))}))}(e,n),-1)}))}function lx(e,t){return hl((()=>{const n=tx(e,-1),a=tx(t,-1),r=El(n,a);return wc(Tc(r,-1))}))}JA.constructors={};var ux={meanSquaredError:nx,meanAbsoluteError:ax,meanAbsolutePercentageError:rx,meanSquaredLogarithmicError:function(e,t){return hl((()=>{const n=bu(t,gg(),Number.MAX_VALUE),a=hc(Nl(1,n)),r=bu(e,gg(),Number.MAX_VALUE),s=hc(Nl(1,r));return jc($y(Nc(a,s)),-1)}))},squaredHinge:function(e,t){return hl((()=>{const n=Hc(0,Nc(1,El(e,t)));return jc($y(n),-1)}))},hinge:function(e,t){return hl((()=>{const n=Hc(0,Nc(1,El(e,t)));return jc(n,-1)}))},categoricalHinge:function(e,t){return hl((()=>{const n=Tc(El(e,t),-1),a=Sc(El(Nc(1,e),t),-1);return Hc(0,Nl(1,Nc(a,n)))}))},logcosh:function(e,t){return hl((()=>{const n=Math.log(2),a=Nc(t,e),r=Nc(Nl(a,kc(El(-2,a))),n);return jc(r,-1)}))},categoricalCrossentropy:sx,sparseCategoricalCrossentropy:ix,binaryCrossentropy:ox,kullbackLeiblerDivergence:function(e,t){return hl((()=>{const n=bu(e,gg(),1),a=bu(t,gg(),1);return Tc(El(e,hc(Cl(n,a))),-1)}))},poisson:function(e,t){return hl((()=>{const n=hc(Nl(gg(),t));return jc(Nc(t,El(e,n)),-1)}))},cosineProximity:lx};function cx(e){if("string"===typeof e){if(e in ux)return ux[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new xg(t)}return e}function dx(e,t){return hl((()=>{const n=El(.5,sd(t)),a=vy(nc(t,n),e.dtype);return jc(Wu(e,a),-1)}))}function px(e,t){return hl((()=>vy(Wu(Ol(e,-1),Ol(t,-1)),"float32")))}function hx(e,t){return hl((()=>zi(Tc(Pc(Wu(e,1),Wu(t,1))),"float32")))}function fx(e,t){return hl((()=>{const n=hx(e,t),a=function(e,t){return hl((()=>zi(Tc(Pc(Wu(e,0),Wu(t,1))),"float32")))}(e,t),r=Nl(n,a);return zi(Bu(nc(r,0),Cl(n,r),0),"float32")}))}function mx(e,t){return hl((()=>{const n=hx(e,t),a=function(e,t){return hl((()=>zi(Tc(Pc(Wu(e,1),Wu(t,0))),"float32")))}(e,t),r=Nl(n,a);return zi(Bu(nc(r,0),Cl(n,r),0),"float32")}))}function gx(e,t){return ox(e,t)}function yx(e,t){return e.rank===t.rank&&(e=ep(e,[e.rank-1])),(t=Ol(t,-1)).dtype!==e.dtype&&(t=zi(t,e.dtype)),zi(Wu(e,t),"float32")}var Ax=sx,xx=ix,bx={binaryAccuracy:dx,categoricalAccuracy:px,precision:fx,categoricalCrossentropy:Ax,sparseCategoricalCrossentropy:xx,mse:nx,MSE:nx,mae:ax,MAE:ax,mape:rx,MAPE:rx,cosine:lx};function vx(e){if("string"===typeof e&&e in bx)return bx[e];if("string"!==typeof e&&null!=e)return e;throw new xg(`Unknown metric ${e}`)}function wx(e){if(kg(null!==e,`Unknown LossOrMetricFn ${e}`),"string"===typeof e)return e;{let t;for(const n of Object.keys(ux))if(ux[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(bx))if(bx[n]===e){t=n;break}return void 0!==t?t:e.name}}var kx=1048576;function Ix(e,t,n=!1){if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Sx(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>kx&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Sx(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!Sx(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Sx(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Nx(e,t,n,a=console.log){const r=function(e){let t=!0;const n=[],a=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}a.push(...r)}if(t)for(const r of e.layers){let e=!1;for(const n of r.inboundNodes)if(-1!==a.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let i;if(r?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}a("_".repeat(t)),Tx(s,n,a),a("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)r?Cx(o[c],n,a):Ex(o[c],n,i,a),a((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;t=null!=e.collectedTrainableWeights?EA(e.collectedTrainableWeights):EA(e.trainableWeights);return t}(e),u=EA(e.nonTrainableWeights);a(`Total params: ${l+u}`),a(`Trainable params: ${l}`),a(`Non-trainable params: ${u}`),a("_".repeat(t))}function Tx(e,t,n=console.log){let a="";for(let r=0;r<e.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=e[r],a=a.slice(0,t[r]),a+=" ".repeat(t[r]-a.length);n(a)}function Cx(e,t,n){let a;try{a=JSON.stringify(e.outputShape)}catch(W0){a="multiple"}Tx([`${e.name} (${e.getClassName()})`,a,e.countParams().toString()],t,n)}function Ex(e,t,n,a){let r;try{r=JSON.stringify(e.outputShape)}catch(W0){r="multiple"}const s=[];for(const u of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(u)))for(let e=0;e<u.inboundLayers.length;++e){const t=u.inboundLayers[e].name,n=u.nodeIndices[e],a=u.tensorIndices[e];s.push(`${t}[${n}][${a}]`)}const i=e.name,o=e.getClassName(),l=0===s.length?"":s[0];Tx([`${i} (${o})`,r,e.countParams().toString(),l],t,a);for(let u=1;u<s.length;++u)Tx(["","","",s[u]],t,a)}function Rx(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function Fx(e,t){if(null===e)return null;if("string"===typeof e)return Cg(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];Rx(t,r,a)?n.push(a):n.push(Fx(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"===typeof a)t[n]=a;else{const e=Cg(n);t[e]=Fx(a,e)}}return t}}function $x(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return Tg(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];Rx(t,r,a)?n.push(a):n.push($x(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n],r=Tg(n);t[r]="name"!==n&&"className"!==n||"string"!==typeof a?$x(a,n):a}return t}}var Mx="0.0.0";var zx=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof zx)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new xg(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return zi(t,e.dtype)}catch(W0){throw new xg(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof _A){if(null==this.id2Value[e.id])throw new xg(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new xg(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof _A){if(null==this.id2Value[e.id])throw new xg(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new xg(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&fl(this.id2Mask)}},_x={},Ox={};function Dx(e,t,n,a){const r=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const f of o)-1!==u.indexOf(f)?l.push(t.getValue(f)):l.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let d,p;if(null==_x[c]){const e=function(e,t){br.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===e.length){const r=Lx(e[0],t);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const s of e){const{sorted:e,recipientMap:i}=Lx(s,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in i)null==a[t]&&(a[t]=new Set),i[t].forEach((e=>a[t].add(e)))}}return{sorted:n,recipientCounts:Px(a)}}(i,t);d=e.sorted,p=e.recipientCounts,_x[c]=d,Ox[c]=p}d=_x[c],p={},r||Object.assign(p,Ox[c]);const h=new zx(t);for(let f=0;f<d.length;++f){if(null!=a){const e=dl().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const e=d[f],s=e.sourceLayer;if(s instanceof BA)continue;const i=[],u=[],c=[];let m=!1;for(const n of e.inputs){const e=h.getValue(n),a=h.getMask(n);i.push(e),u.push(a),null!=a&&(m=!0),r||(p[n.name]--,0!==p[n.name]||t.hasKey(n)||-1!==o.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||c.push(e))}m&&((n=n||{}).mask=u[0]);const g=Ng(s.apply(i,n));let y=null;s.supportsMasking&&(y=s.computeMask(i,u));const A=Wx(e),x=Array.isArray(A)?A:[A];for(let t=0;t<x.length;++t){h.hasKey(x[t])||h.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(x[t].name);-1!==e&&(l[e]=g[t])}r||fl(c)}return h.disposeMasks(),s?l:l[0]}function Px(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Lx(e,t){const n=new Set,a=[],r={};for(const o of t.names())n.add(o);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),a.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:a,recipientMap:r}}function Wx(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}var Bx=class extends LA{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=IA(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],zg(this.inputs).length!==this.inputs.length)throw new xg(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);zg(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;kg(0===t,"input layer has >1 nodes"),kg(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof BA))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},a={},r={},s={},i=[],o=(e,t,n,a,r,l)=>{null!=a&&null!=r&&null!=l||(a=e.sourceLayer,r=e.nodeIndex,l=e.tensorIndex);const u=a.inboundNodes[r];if(-1!==n.indexOf(u))throw new Ag(`The tensor ${e.name} at layer "${a.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Bx.nodeKey(a,r)),a.id in s||(s[a.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let s=0;s<c;s++){const e=u.inputTensors[s],a=u.inboundLayers[s],r=u.nodeIndices[s],i=u.tensorIndices[s];o(e,t,n,a,r,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const y of this.outputs)o(y,l,u);const c=i.slice().reverse();for(const y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const s=null==a[y.outboundLayer.id]?0:a[y.outboundLayer.id];e=Math.max(e,s),a[y.outboundLayer.id]=e,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let a=0;a<y.inboundLayers.length;a++){const r=y.inboundLayers[a],s=y.nodeIndices[a],i=r.inboundNodes[s],o=null==t[i.id]?0:t[i.id];t[i.id]=Math.max(e+1,o),n[i.id]=i}}const d={};for(const y in t){const e=t[y];e in d||(d[e]=[]),d[e].push(n[y])}const p={};for(const y in a){const e=a[y];e in p||(p[e]=[]),p[e].push(r[y])}let h=Object.keys(p).map((e=>parseInt(e,10))).sort(Mg);this.layers=[];for(const y of h){const e=p[y];e.sort(((e,t)=>{const n=s[e.id],a=s[t.id];return n<a?-1:n>a?1:0}));for(const t of e)t instanceof Bx&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=p,h=Object.keys(d).map((e=>parseInt(e,10))).sort(Mg);const f=this.inputs.slice(),m=[];for(const y of h)for(const e of d[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Ag(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=d;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new Ag(`The name "${y}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new DA({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new xg("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let a=0;for(const s of this.layers)for(const e of s.weights){if(null!=n[e.originalName])throw new xg(`Duplicate weight name: ${e.originalName}`);n[e.originalName]=e,a++}const r=[];for(const s in e){let a=s;if(null==n[s]){const e=s.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])r.push([n[a],e[s]]);else if(t)throw new xg(`Provided weight data has no target variable: ${s}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new xg(`${e.length} of ${a} weights are not set: ${e}`)}MA(r)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Mx}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=$x(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return hl((()=>{e=Ng(e);const n=new zx;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Dx(this.outputs,n,t)}))}computeMask(e,t){return hl((()=>{let n;return e=Ng(e),n=null==t?wg(null,e.length):Ng(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=NA(e);if(t.length!==this.inputLayers.length)throw new xg(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++){const e=this.inputLayers[i],a=t[i];n[e.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Mg);if(a.length>1)for(const i of a){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const a=[];for(let i=0;i<t.inboundLayers.length;i++){const e=t.inboundLayers[i],r=t.nodeIndices[i],s=t.tensorIndices[i],o=n[`${e.name}_${r}_${s}`];a.push(o)}const r=NA(e.computeOutputShape(Sg(a))),s=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++){n[`${e.name}_${s}_${t}`]=r[t]}}}const r=[],s=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],t=this.outputLayersNodeIndices[i],n=this.outputLayersTensorIndices[i],a=`${e.name}_${t}_${n}`;s.push(a)}for(let i=0;i<s.length;i++){const e=s[i];kg(e in n),r.push(n[e])}return Sg(r)}runInternalGraph(e,t){null==t&&(t=wg(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o){const a=this.inputs[o],r=e[o],s=t[o];n[a.id]=[r,s]}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Mg);for(const o of a){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,a=t.inputTensors,r=t.outputTensors,s=new Array;for(const t of a)t.id in n&&s.push(n[t.id]);if(s.length===a.length){let a,i,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===s.length){const[t,n]=s[0];null==u.mask&&(u.mask=n),o=Ng(e.call(t,u)),l=Ng(e.computeMask(t,n)),a=[t],i=[n]}else a=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=Ng(e.call(a,u)),l=Ng(e.computeMask(a,i));if(e.activityRegularizer)throw new bg("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],a=o[e],s=l[e];n[t.id]=[a,s]}}}}const r=[],s=[],i=[];for(const o of this.outputs){kg(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];i.push(e.shape),r.push(e),s.push(t)}return[r,s,i]}buildNodeConversionMap(e){const t={};let n;for(const a of this.layers){n=a instanceof Bx?1:0;for(let e=0;e<a.inboundNodes.length;e++){const r=Bx.nodeKey(a,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new xg(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new xg("Provide either a layer name or layer index");for(const n of this.layers)if(n.name===e)return n;throw new xg(`No such layer: ${e}`)}calculateLosses(){return hl((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=Bx.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const s of this.layers){const e=s.getClassName(),a=s.getConfig(),r=[];for(let n=0;n<s.inboundNodes.length;n++){const e=s.inboundNodes[n],a=Bx.nodeKey(s,n);let i={};if(this.containerNodes.has(a)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch(W0){console.warn(`Layer ${s.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(e.inboundLayers.length>0){const n=[];for(let a=0;a<e.inboundLayers.length;a++){const r=e.inboundLayers[a],s=e.nodeIndices[a],o=e.tensorIndices[a];let l=t[Bx.nodeKey(r,s)];null==l&&(l=0),n.push([r.name,l,o,i])}r.push(n)}}}const i={};i.name=s.name,i.className=e,i.config=a,i.inboundNodes=r,n.push(i)}e.layers=n;const a=[];for(let s=0;s<this.inputLayers.length;s++){const e=this.inputLayers[s],n=this.inputLayersNodeIndices[s],r=Bx.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let i=t[r];null!==i&&void 0!==i||(i=0);const o=this.inputLayersTensorIndices[s];a.push([e.name,i,o])}e.inputLayers=a;const r=[];for(let s=0;s<this.outputLayers.length;s++){const e=this.outputLayers[s],n=this.outputLayersNodeIndices[s],a=Bx.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let i=t[a];null!==i&&void 0!==i||(i=0);const o=this.outputLayersTensorIndices[s];r.push([e.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},a=!1){const r={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let a;for(const s of t){const o=s[0],l=s[1],u=s[2];if(a=null==s[3]?{}:s[3],!(o in r))return void i(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void i(e,t);const d=c.inboundNodes[l];n.push(d.outputTensors[u])}n.length>0&&e.apply(Sg(n),a)}function l(e){const n=e.name,s=ex(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(a),r[n]=s;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new xg(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}const u=t.name,c=t.layers;for(const m of c)l(m);for(;!_g(s);)for(const e of c){const t=r[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const d=[],p=[],h=t.inputLayers;for(const m of h){const e=m[0],t=m[1],n=m[2];kg(e in r);const a=r[e].inboundNodes[t].outputTensors;d.push(a[n])}const f=t.outputLayers;for(const m of f){const e=m[0],t=m[1],n=m[2];kg(e in r);const a=r[e].inboundNodes[t].outputTensors;p.push(a[n])}return new e({inputs:d,outputs:p,name:u})}get stateful(){if(this._stateful)throw new xg("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){hl((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function Ux(e,t){return function(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===a)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${a} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${a}) outputs, so ${n} must be either an array with ${a} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Vx(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=hl((()=>{if(1===e.shape.length)return _i(e);if(2===e.shape.length){if(e.shape[1]>1){return Ol(e,1)}if(1===e.shape[1])return au(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),a=Array.from(await t.data());fl(t);const r=[];return a.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),sp(r,"float32")}return null}function Gx(e,t){return El(e,t)}function Hx(e,t){let n,a;const r=t;n=r.xs,a=r.ys,br.assert(null!=n&&null!=a,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=jx("input",e.inputNames,n),i=jx("output",e.outputNames,a),o=s[0].shape[0];br.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),br.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let l=0;l<s.length;l++)br.assert(s[l].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[l]} has ${s[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let l=0;l<i.length;l++)br.assert(i[l].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function jx(e,t,n){if(n instanceof Yr)return[n];if(Array.isArray(n))return br.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const a=[];for(const r of t){if(null==n[r])throw new xg(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);a.push(n[r])}return a}}async function qx(e,t,n){const a=null!=n.batchesPerEpoch;if(br.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),br.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),br.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),br.assert(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),br.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let s,i;if(r)if(Xx(n.validationData))br.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new bg("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=ZA(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:p,history:h}=QA(c,d,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,r,u);p.setModel(e),e.history=h,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await p.onEpochBegin(f);let c=0,d=0;for(a||(m=await t.iterator());!a||c<n.batchesPerEpoch;){const t=await m.next();if(a&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){const{xs:a,ys:r}=Hx(e,t.value),s={};s.batch=d,s.size=a[0].shape[0],await p.onBatchBegin(d,s);const i=[];if(null!=n.classWeight){const t=Ux(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Vx(r[e],null,t[e]))}const u=a.concat(r).concat(i),h=o(u);fl(u);for(let e=0;e<l.length;++e){const t=l[e],n=h[e];s[t]=n,ml(n)}await p.onBatchEnd(d,s),GA(s),d++,c++}if(a?c>=n.batchesPerEpoch:t.done){if(r){let t;t=Xx(n.validationData)?Ng(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Ng(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,u),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Xx(e){return"function"===typeof e.iterator}function Kx(e){br.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Zx(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>ky(e,t,n-t))):ky(e,t,n-t)}function Yx(e,t){return hl((()=>null==e?null:Array.isArray(e)?e.map((e=>Yx(e,t))):Fy(e,"int32"===t.dtype?t:zi(t,"int32"))))}function Jx(e,t){const n=[];let a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}async function Qx(e,t,n,a={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,s,i,o,l,u,c;e.isTraining=!0;try{const d=null==a.batchSize?32:a.batchSize;Kx(d);const p=!1,h=await e.standardizeUserData(t,n,a.sampleWeight,a.classWeight,p,d);r=h[0],s=h[1],c=h[2];let f,m=!1;if(null!=a.validationData&&a.validationData.length>0){if(m=!0,2!==a.validationData.length)throw 3===a.validationData.length?new bg("validationData including sample weights is not supported yet."):new xg(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${a.validationData} is invalid.`);i=a.validationData[0],o=a.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,d);l=n[0],u=n[1],f=l.concat(u)}else if(null!=a.validationSplit&&a.validationSplit>0&&a.validationSplit<1){m=!0;const e=Math.floor(r[0].shape[0]*(1-a.validationSplit)),t=r[0].shape[0];l=Zx(r,e,t),r=Zx(r,0,e),u=Zx(s,e,t),s=Zx(s,0,e),f=l.concat(u)}else null!=a.validationSteps&&(m=!0);const g=r.concat(s).concat(c);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),A=e.getDedupedMetricsNames();let x,b;m?(e.makeTestFunction(),x=e.testFunction,b=A.slice().concat(A.map((e=>"val_"+e)))):(x=null,f=[],b=A.slice());const v=ZA(a.callbacks,a.yieldEvery);return await async function(e,t,n,a,r,s,i,o,l,u,c,d,p,h,f){null==r&&(r=32),null==s&&(s=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;if(null!=l&&null!=u&&(m=!0),null!=f&&(m=!0,null==h))throw new xg("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=e.checkNumSamples(n,r,h,"steps_per_epoch");let y;null!=g&&(y=by(0,g)),null==i&&(i=1);const{callbackList:A,history:x}=QA(o,i,s,p,g,h,r,m,d);A.setModel(e),e.history=x,await A.onTrainBegin(),e.stopTraining_=!1;for(let b=p;b<s;++b){await A.onEpochBegin(b);const s={};if(null!=h)throw new bg("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new bg("batch shuffling is not implemneted yet");c&&br.shuffle(y);const i=sp(y),o=Jx(g,r);for(let c=0;c<o.length;++c){const d={};if(await A.onBatchBegin(c,d),hl((()=>{const p=o[c][0],h=o[c][1],f=ky(i,p,h-p);d.batch=c,d.size=h-p;const g=Yx(n,f),y=t(g);for(let e=0;e<a.length;++e){const t=a[e],n=y[e];d[t]=n,ml(n)}if(c===o.length-1&&m){const t=e.testLoop(l,u,r);for(let e=0;e<a.length;++e){const n=a[e],r=t[e];ml(r),s["val_"+n]=r}}})),await A.onBatchEnd(c,d),GA(d),e.stopTraining_)break}i.dispose()}if(await A.onEpochEnd(b,s),e.stopTraining_)break}return await A.onTrainEnd(),await e.history.syncData(),e.history}(e,y,g,A,d,a.epochs,a.verbose,v,x,f,a.shuffle,b,a.initialEpoch,null,null)}finally{e.isTraining=!1,tb(r,t),tb(s,n),tb(l,i),tb(u,o),null!=c&&fl(c)}}function eb(e){const t=[];e instanceof Yr&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push(wy(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function tb(e,t){if(null==e)return;const n=[];if(t instanceof Yr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const a=[];if(e instanceof Yr)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&a.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&a.push(t)}a.forEach((e=>{e.isDisposed||e.dispose()}))}function nb(e){return Array.isArray(e)}function ab(e){return!function(e){return e instanceof Yr}(e)&&!nb(e)}function rb(e,t,n,a=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(nb(e)&&e.length>0)t=!0;else if(ab(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new xg(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(ab(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new xg(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(nb(e)){if((e=e).length!==t.length)throw new xg(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new xg(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=eb(s),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=s[i];if(e.shape.length!==n[i].length)throw new xg(`Error when checking ${r}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[i].length;++t){if(0===t&&!a)continue;const s=e.shape[t],o=n[i][t];if(null!=o&&o>=0&&s!==o)throw new xg(`${r} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${r} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return s}function sb(e,t,n,a=!0,r=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new xg(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new xg(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=s[i];if(e.shape.length!==n[i].length)throw new xg(`Error when checking ${r}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let s=0;s<n[i].length;++s){if(0===s&&!a)continue;const o=e.shape[s],l=n[i][s];if(null!=l&&l!==o)throw new xg(`Error when checking ${r}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}var ib=class extends Bx{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new xg("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Nx(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Jh.adagrad(.01),Adadelta:()=>Jh.adadelta(1,.95,gg()),Adam:()=>Jh.adam(.001,.9,.999,gg()),Adamax:()=>Jh.adamax(.002,.9,.999,gg(),0),RMSProp:()=>Jh.rmsprop(.001,.9,0,gg()),SGD:()=>Jh.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new xg(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Vh))throw new xg("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new xg(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>cx(e)))}else{const n=cx(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new xg(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(cx(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const e=this.internalOutputShapes[s],t=this.outputNames[s];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],py("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};py("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,a,s;for(const i of t){if("string"===typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===ox?-1!==["accuracy","acc"].indexOf(i)?a=dx:-1!==["crossentropy","ce"].indexOf(i)&&(a=gx):this.lossFunctions[e]===ix?-1!==["accuracy","acc"].indexOf(i)?a=yx:-1!==["crossentropy","ce"].indexOf(i)&&(a=xx):-1!==["accuracy","acc"].indexOf(i)?a=px:-1!==["crossentropy","ce"].indexOf(i)&&(a=Ax),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),s=a,n=""+r}else{const e=vx(i);s=e,n=""+wx(i)}let t;py(n,(()=>{t=s})),r(e,n,t)}})(a[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const a=null==n.batchSize?32:n.batchSize;Kx(a);const r=this.standardizeUserDataXY(e,t,!0,a);try{const s=r[0].concat(r[1]);this.makeTestFunction();const i=this.testFunction;return Sg(this.testLoop(i,s,a,n.verbose,n.steps))}finally{tb(r[0],e),tb(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,r=e.testFunction;let s=[];if(n.verbose>0)throw new bg("Verbose mode is not implemented yet.");br.assert(!a||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"===typeof t.next?t:await t.iterator();let o=0,l=0;for(;!a||l<n.batches;){const t=await i.next();if(s=hl((()=>{if(t.value){const{xs:n,ys:a}=Hx(e,t.value),i=n.concat(a),u=hl((()=>r(i)));if(fl(i),0===l)for(let e=0;e<u.length;++e)s.push(_d(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=s[e];s[e]=hl((()=>Nl(s[e],El(c,t)))),l>0&&fl(n)}fl(u),o+=c,++l}return s})),t.done){a&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<s.length;++u){const e=s[u];s[u]=Cl(s[u],o),fl(e)}return Sg(s)}(this,e,t)}checkNumSamples(e,t,n,a="steps"){let r;if(null!=n){if(r=null,null!=t)throw new xg(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new xg(`Either the input data should have a defined shape, or ${a} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new xg("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),s=new zx;if(e instanceof Yr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new xg(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const o of this.inputs){const t=e[o.name];if(null==t)throw new xg(`No value is provided for the model's input ${o.name}`);s.add(o,t)}const i=Dx(r,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=wg(null,e.length);let n=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],s=r.map((e=>e.name));for(let a=0;a<e.length;++a){const i=s.indexOf(e[a]);if(-1!==i&&(t[a]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,a)=>{null==t&&n.push(e[a])})),new xg(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return hl((()=>{const a=this.checkNumSamples(e);if(n)throw new bg("Verbose predictLoop() is not implemented yet.");const r=Jx(a,t),s=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t){hl((()=>{const n=r[t][0],a=r[t][1],s=Zx(e,n,a),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new zx(i);return Dx(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)))}return Sg(s.map((e=>iu(e,0))))}))}predict(e,t={}){const n=eb(e);sb(n,this.inputNames,this.feedInputShapes,!1);try{const a=null==t.batchSize?32:t.batchSize;return Kx(a),this.predictLoop(n,a)}finally{tb(n,e)}}predictOnBatch(e){sb(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,a){if(null==this.optimizer_)throw new Ag("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let s=0;s<this.feedOutputShapes.length;++s){const e=this.feedOutputShapes[s];this.feedLossFns[s]===ix?r.push(e.slice(0,e.length-1).concat([1])):r.push(e)}if(function(e,t,n){const a=zg(e.map((e=>e.shape[0])));a.sort();const r=zg(t.map((e=>e.shape[0])));if(r.sort(),a.length>1)throw new xg(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new xg(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(a.length>0&&r.length>0&&!br.arraysEqual(a,r))throw new xg(`Input Tensors should have the same number of samples as target Tensors. Found ${a[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=rb(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=rb(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const a=[nx,ox,sx];for(let r=0;r<e.length;++r){const s=e[r],i=t[r],o=n[r];if(null!=i){if(i===sx&&1===s.shape[s.shape.length-1])throw new xg(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==a.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const a=e[n],r=t[n];if(null!=r&&a!==r)throw new xg(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=a&&a>0&&e[0].shape[0]%a!==0)throw new xg(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,a,r=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,r,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=a){const e=Ux(a,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Vx(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,a=0,r){return hl((()=>{const s=this.checkNumSamples(t,n,r,"steps"),i=[];if(a>0)throw new bg("Verbose mode is not implemented yet.");if(null!=r)throw new bg("steps mode in testLoop() is not implemented yet");{const a=Jx(s,n),r=sp(by(0,s));for(let n=0;n<a.length;++n){const s=a[n][0],o=a[n][1],l=ky(r,s,o-s),u=Yx(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(_d(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=Nl(i[e],El(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=Cl(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let r=a;if(Ig(e,a)>1){r+=`_${Ig(e.slice(0,n),a)}`}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new zx(e),o=Dx(this.outputs,i,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(a[n],o[n]);null!=r[n]&&(e=Gx(e,r[n]));const s=jc(e);t.push(s),l=0===n?e:Nl(l,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],r=this.metricsTensors[n][1];e=jc(t(a[r],o[r]))}ml(e),s.push(e)}return l=jc(l),this.calculateLosses().forEach((e=>{l=Nl(l,e)})),l}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>hl((()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:a[e]});const i=new zx(s),o=Dx(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],s=jc(a(r[e],o[e]));n=0===e?s:Nl(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],s=jc(n(r[a],o[a]));t.push(s)}return t}))}async fit(e,t,n={}){return Qx(this,e,t,n)}async fitDataset(e,t){return qx(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],r=n[1],s=this.makeTrainFunction()(a.concat(r)),i=[];for(const o of s){const e=await o.data();i.push(e[0])}return fl(s),Sg(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let s=0;s<a.length;++s)n&&!a[s].trainable||t.push({name:a[s].originalName,tensor:r[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=dl().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-dl().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=Tg(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Tg(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=Tg(n[a])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[Tg(wx(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Tg(wx(e))));{const e={};for(const t in this.metrics)e[t]=Tg(wx(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=ex(Fx(e.optimizer_config));let n,a;if("string"===typeof e.loss)n=Cg(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Cg(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Cg(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map((e=>Cg(e)));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=Cg(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"===typeof e){const t=Di.getSaveHandlers(e);if(0===t.length)throw new xg(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new xg(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new xg("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Di.encodeWeights(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Mx}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await Di.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=Di.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Ix(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){Ix(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};ib.className="Model",Uo.registerClass(ib);var ob=class extends ib{};async function lb(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);const a=ex(Fx(n),t);if(null!=e.weightsManifest){const t=await Di.loadWeights(e.weightsManifest,e.pathPrefix,a.weights.map((e=>e.originalName))),n={};for(const e of a.weights)n[e.originalName]=t[e.originalName];a.loadWeights(n),fl(t)}return a}async function ub(e,t){if(null==t&&(t={}),"string"===typeof e){const n=Di.getLoadHandlers(e,t);if(0===n.length)n.push(Di.browserHTTPRequest(e,t));else if(n.length>1)throw new xg(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){null==n&&(n={});if(null==e.load)throw new xg("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const a=await e.load();let r=a.modelTopology;null!=r.model_config&&(r=r.model_config);const s=null==n.strict||n.strict,i=null!=a.weightData&&null!=a.weightSpecs&&s,o=ex(Fx(r),t,i),l=a.trainingConfig;null!=l&&o.loadTrainingConfig(l);null!=a.userDefinedMetadata&&o.setUserDefinedMetadata(a.userDefinedMetadata);if(null!=a.weightData){if(null==a.weightSpecs)throw new xg("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=Di.decodeWeights(e,t),a={},r=[];return t.forEach((e=>{"optimizer"===e.group?r.push({name:e.name,tensor:n[e.name]}):a[e.name]=n[e.name]})),{modelWeights:a,optimizerWeights:r}}(a.weightData,a.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),fl(e),fl(t.map((e=>e.tensor)))}return o}(e,void 0,t)}ob.className="Functional",Uo.registerClass(ob);var cb=class extends ib{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:IA("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new xg(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof cb||e instanceof ib;let n;if(t){if(n=e,1!==n.outputs.length)throw new xg("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new xg("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new xg("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=UA({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new xg(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new xg("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=WA(this.outputs[0])}this.inboundNodes=[],new DA({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:wg(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(CA(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new ib({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Ag("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Ag("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Ag("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Ag("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},a=!1){let r,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new xg("Legacy serialization format not supported yet.");r=t}else br.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof cb))throw new bg(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const o of r){const e=ex(o,void 0,a);a&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(e){if(null==this.model)throw new xg("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new xg("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}},db=cb;function pb(e){return new ib(e)}function hb(e){return new db(e)}function fb(e,t){return null==t&&(t={}),ub(e,t)}function mb(e){return UA(e)}function gb(e,t){JA.registerCallbackConstructor(e,t)}db.className="Sequential",Uo.registerClass(db);var yb=class extends Uo.Serializable{getConfig(){return{}}},Ab=class extends yb{apply(e,t=1){return function(e,t=1){if(1!==t)throw new bg(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return ju(e)}(e,t)}};Ab.className="elu",Uo.registerClass(Ab);var xb=class extends yb{apply(e){return Od(e)}};xb.className="selu",Uo.registerClass(xb);var bb=class extends yb{apply(e){return Nd(e)}};bb.className="relu",Uo.registerClass(bb);var vb=class extends yb{apply(e){return hl((()=>Yc(6,Nd(e))))}};vb.className="relu6",Uo.registerClass(vb);var wb=class extends yb{apply(e){return e}};wb.className="linear",Uo.registerClass(wb);var kb=class extends yb{apply(e){return ou(e)}};kb.className="sigmoid",Uo.registerClass(kb);var Ib=class extends yb{apply(e){return function(e){return hl((()=>{const t=Nl(.5,El(.2,e));return bu(t,0,1)}))}(e)}};Ib.className="hardSigmoid",Uo.registerClass(Ib);var Sb=class extends yb{apply(e){return kc(e)}};Sb.className="softplus",Uo.registerClass(Sb);var Nb=class extends yb{apply(e){return function(e){return hl((()=>Cl(e,Nl(Rl(e),1))))}(e)}};Nb.className="softsign",Uo.registerClass(Nb);var Tb=class extends yb{apply(e){return uu(e)}};Tb.className="tanh",Uo.registerClass(Tb);var Cb=class extends yb{apply(e,t=-1){return jd(e,t)}};Cb.className="softmax",Uo.registerClass(Cb);var Eb=class extends yb{apply(e,t=-1){return Cc(e,t)}};Eb.className="logSoftmax",Uo.registerClass(Eb);var Rb=class extends yb{apply(e,t=1){return hl((()=>El(ou(El(e,t)),e)))}};Rb.className="swish",Uo.registerClass(Rb);var Fb=class extends yb{apply(e){return hl((()=>El(e,uu(kc(e)))))}};function $b(e){return e.getClassName()}function Mb(e,t={}){return $g(e,Uo.SerializationMap.getMap().classNameMap,t,"activation")}function zb(e){if(null==e){const e={className:"linear",config:{}};return Mb(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},Mb(t)}return e instanceof yb?e:Mb(e)}function _b(e){if(null!=e&&"object"!==typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Fb.className="mish",Uo.registerClass(Fb);var Ob=class extends Uo.Serializable{},Db=class extends Ob{constructor(e){super(),_b(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return hl((()=>{let t=qc([1]);return this.hasL1&&(t=Nl(t,Tc(El(this.l1,Rl(e))))),this.hasL2&&(t=Nl(t,Tc(El(this.l2,$y(e))))),au(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};Db.className="L1L2",Uo.registerClass(Db);var Pb={l1l2:"L1L2"};function Lb(e){return Rg(e)}function Wb(e,t={}){return $g(e,Uo.SerializationMap.getMap().classNameMap,t,"regularizer")}function Bb(e){if(null==e)return null;if("string"===typeof e){return Wb({className:e in Pb?Pb[e]:e,config:{}})}return e instanceof Ob?e:Wb(e)}var Ub=class extends LA{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=TA(e);let n=Nd(e);return null!=this.maxValue&&(n=bu(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};Ub.className="ReLU",Uo.registerClass(Ub);var Vb=class extends LA{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=TA(e);return lc(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Vb.className="LeakyReLU",Uo.registerClass(Vb);var Gb=class extends LA{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=rA(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Bb(e.alphaRegularizer),this.alphaConstraint=Zg(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new xg(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=CA(e)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)t[a-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<e.length;++a)n[a]=e[a];this.inputSpec=[new zA({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=TA(e),md(e,this.alpha.read())}getConfig(){const e={alphaInitializer:aA(this.alphaInitializer),alphaRegularizer:Lb(this.alphaRegularizer),alphaConstraint:Xg(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Gb.className="PReLU",Uo.registerClass(Gb);var Hb=class extends LA{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new bg(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=TA(e);return ju(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Hb.className="ELU",Uo.registerClass(Hb);var jb=class extends LA{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=TA(e);return El(n,zi(nc(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};jb.className="ThresholdedReLU",Uo.registerClass(jb);var qb=class extends LA{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Cb).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=TA(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Xb(e,t,n){if("number"===typeof e)return wg(e,t);if(e.length!==t)throw new xg(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const s=e[r];if((a=s)!==parseInt(a.toString(),10))throw new xg(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var a}function Kb(e,t,n,a,r=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((s+a-1)/a)}function Zb(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+xy([n-t,0]);else{if("same"!==a)throw new xg(`Unsupport padding mode: ${a}.`);e*=t}return e}function Yb(e,t){return hl((()=>(ly(t),"channelsFirst"===t?ao(e,[0,2,3,1]):e)))}function Jb(e,t){return hl((()=>(ly(t),"channelsFirst"===t?ao(e,[0,2,3,4,1]):e)))}function Qb(e,t,n,a=[1,1],r="valid",s,i,o=null){return hl((()=>{if(null==s&&(s="channelsLast"),ly(s),3!==e.rank&&4!==e.rank)throw new xg(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new xg(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Yb(e,s);if("causal"===r)throw new bg("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Ep.conv2d({x:l,filter:t,strides:a,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=ao(l,[0,3,1,2])),l}))}qb.className="Softmax",Uo.registerClass(qb);var ev=class extends LA{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",ev.verifyArgs(t),this.rank=e,Pg(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new bg(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Xb(t.kernelSize,e,"kernelSize"),this.strides=Xb(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,uy(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,ly(this.dataFormat),this.activation=zb(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=rA(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Zg(t.biasConstraint),this.biasRegularizer=Bb(t.biasRegularizer),this.activityRegularizer=Bb(t.activityRegularizer),this.dilationRate=Xb(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new xg(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new xg(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new xg(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(kg("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!Dg(e.kernelSize,"number",1,3))throw new xg(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:$b(this.activation),useBias:this.useBias,biasInitializer:aA(this.biasInitializer),biasRegularizer:Lb(this.biasRegularizer),activityRegularizer:Lb(this.activityRegularizer),biasConstraint:Xg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},tv=class extends ev{constructor(e,t){super(e,t),this.kernel=null,tv.verifyArgs(t),this.filters=t.filters,Pg(this.filters,"filters"),this.kernelInitializer=rA(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Zg(t.kernelConstraint),this.kernelRegularizer=Bb(t.kernelRegularizer)}build(e){e=CA(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new xg(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return hl((()=>{let t;e=TA(e);const n=null==this.bias?null:this.bias.read(),a=Wg(this.activation.getClassName());if(null!=a&&2===this.rank)t=Qb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=function(e,t,n,a=1,r="valid",s,i=1){return hl((()=>{if(null==s&&(s="channelsLast"),ly(s),3!==e.shape.length)throw new xg(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new xg(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new xg(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=ao(e,[0,2,1])),"causal"===r)throw new bg("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Nu(e,t,a,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=zy(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Qb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new bg("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,a=[1,1,1],r="valid",s,i){return hl((()=>{if(null==s&&(s="channelsLast"),ly(s),4!==e.rank&&5!==e.rank)throw new xg(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new xg(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Jb(e,s);if("causal"===r)throw new bg("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Eu(o,t,a,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=zy(o,n)),"channelsFirst"===s&&(o=ao(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=CA(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const e=Kb(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);t.push(e)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:aA(this.kernelInitializer),kernelRegularizer:Lb(this.kernelRegularizer),kernelConstraint:Xg(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new xg(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},nv=class extends tv{constructor(e){super(2,e),nv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!Dg(e.kernelSize,"number",1,2))throw new xg(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}},av=nv;av.className="Conv2D",Uo.registerClass(av);var rv=class extends tv{constructor(e){super(3,e),rv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new xg(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}},sv=rv;sv.className="Conv3D",Uo.registerClass(sv);var iv=class extends av{constructor(e){if(super(e),this.inputSpec=[new zA({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new xg(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=CA(e)).length)throw new xg("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new xg("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new zA({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return hl((()=>{let t=TA(e);if(4!==t.shape.length)throw new xg(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,a=n[0];let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const i=n[r],o=n[s],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],d=this.strides[1],p=[a,Zb(i,c,l,this.padding),Zb(o,d,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=ao(t,[0,2,3,1]));let h=Cu(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(h=ao(h,[0,3,1,2])),null!=this.bias&&(h=zy(h,this.bias.read(),this.dataFormat)),null!=this.activation&&(h=this.activation.apply(h)),h}))}computeOutputShape(e){const t=(e=CA(e)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[a]=Zb(t[a],o,s,this.padding),t[r]=Zb(t[r],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};iv.className="Conv2DTranspose",Uo.registerClass(iv);var ov=class extends sv{constructor(e){if(super(e),this.inputSpec=[new zA({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new xg(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=CA(e)).length)throw new xg("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new xg("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new zA({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return hl((()=>{let t=TA(e);if(5!==t.shape.length)throw new xg(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,a=n[0];let r,s,i;"channelsFirst"===this.dataFormat?(i=2,r=3,s=4):(i=1,r=2,s=3);const o=n[i],l=n[r],u=n[s],c=this.kernelSize[0],d=this.kernelSize[1],p=this.kernelSize[2],h=this.strides[0],f=this.strides[1],m=this.strides[2],g=[a,Zb(o,h,c,this.padding),Zb(l,f,d,this.padding),Zb(u,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=ao(t,[0,2,3,4,1]));let y=Fu(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=ao(y,[0,4,1,2,3])),null!==this.bias&&(y=zy(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=CA(e)).slice();let n,a,r,s;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3,s=4):(n=4,a=1,r=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[a]=Zb(t[a],u,i,this.padding),t[r]=Zb(t[r],c,o,this.padding),t[s]=Zb(t[s],d,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}};ov.className="Conv3DTranspose",Uo.registerClass(ov);var lv=class extends tv{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new xg("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new xg("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new xg(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=rA(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Bb(t.depthwiseRegularizer),this.depthwiseConstraint=Zg(t.depthwiseConstraint),this.pointwiseInitializer=rA(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Bb(t.pointwiseRegularizer),this.pointwiseConstraint=Zg(t.pointwiseConstraint)}build(e){if((e=CA(e)).length<this.rank+2)throw new xg(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new xg(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let i=0;i<this.rank;++i)r.push(1);r.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new zA({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return hl((()=>{let t;if(e=TA(e),1===this.rank)throw new bg("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=ao(e,[0,2,3,1])),t=Dd(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=zy(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=ao(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=aA(this.depthwiseInitializer),e.pointwiseInitializer=aA(this.pointwiseInitializer),e.depthwiseRegularizer=Lb(this.depthwiseRegularizer),e.pointwiseRegularizer=Lb(this.pointwiseRegularizer),e.depthwiseConstraint=Xg(this.depthwiseConstraint),e.pointwiseConstraint=Xg(this.pointwiseConstraint),e}};lv.className="SeparableConv";var uv=class extends lv{constructor(e){super(2,e)}};uv.className="SeparableConv2D",Uo.registerClass(uv);var cv=class extends tv{constructor(e){super(1,e),cv.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!Dg(e.kernelSize,"number",1,1))throw new xg(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}},dv=cv;dv.className="Conv1D",Uo.registerClass(dv);var pv=class extends LA{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return hl((()=>{if(e=TA(e),"channelsLast"===this.dataFormat){const t=Sy(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Sy(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Sy(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Sy(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};pv.className="Cropping2D",Uo.registerClass(pv);var hv=class extends LA{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ly(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Og(ay,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return hl((()=>{let t=TA(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=ao(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?Ph.resizeNearestNeighbor(t,[e,a]):Ph.resizeBilinear(t,[e,a]);return ao(r,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?Ph.resizeNearestNeighbor(t,[e,a]):Ph.resizeBilinear(t,[e,a])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};hv.className="UpSampling2D",Uo.registerClass(hv);var fv=class extends ev{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=rA(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Zg(e.depthwiseConstraint),this.depthwiseRegularizer=Bb(e.depthwiseRegularizer)}build(e){if((e=CA(e)).length<4)throw new xg(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new xg(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return hl((()=>{let t=function(e,t,n=[1,1],a="valid",r,s){return hl((()=>{null==r&&(r="channelsLast"),ly(r);let i=Yb(e,r);if(4!==e.rank)throw new xg(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new xg(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Du(i,t,n,"same"===a?"same":"valid","NHWC",s),"channelsFirst"===r&&(i=ao(i,[0,3,1,2])),i}))}(e=TA(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=zy(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=CA(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Kb(t,this.kernelSize[0],this.padding,this.strides[0]),s=Kb(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,r,s]:[e[0],r,s,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=aA(this.depthwiseInitializer),e.depthwiseRegularizer=Lb(this.depthwiseRegularizer),e.depthwiseConstraint=Xg(this.depthwiseRegularizer),e}};function mv(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new xg("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function gv(e,t,n,a=!1,r,s,i=!1,o=!1){return hl((()=>{const l=t.shape.length;if(l<3)throw new xg(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(by(2,l));if(t=ao(t,u),null!=s)throw new bg("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=zi(zi(r,"bool"),"float32")).rank===l-1&&(r=Ku(r,-1)),r=ao(r,u)),a&&(t=Cd(t,0),null!=r&&(r=Cd(r,0)));const c=[];let d,p=n;const h=t.shape[0],f=fp(t);let m,g;null!=r&&(m=fp(r));for(let t=0;t<h;++t){const n=f[t],a=hl((()=>e(n,p)));if(null==r)d=a[0],p=a[1];else{const e=hl((()=>{const e=m[t],n=Nc(sd(e),e);return{output:Nl(El(a[0],e),El(p[0],n)),newStates:p.map(((t,r)=>Nl(El(a[1][r],e),El(t,n))))}}));d=e.output,p=e.newStates}o&&c.push(d)}if(o){g=tp(c,1)}return[d,g,p]}))}fv.className="DepthwiseConv2D",Uo.registerClass(fv);var yv=class extends LA{constructor(e){let t;if(super(e),null==e.cell)throw new xg("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Nv({cells:e.cell}):e.cell,null==t.stateSize)throw new xg("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new zA({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return by(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){SA(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return hl((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new bg("Constants support is not implemented in RNN yet.");SA(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new zA({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let r;if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!br.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new xg(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new zA({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){hl((()=>{if(!this.stateful)throw new yg("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new xg("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>qc([n,e]))):this.states_=[qc([n,this.cell.stateSize])];else if(null==e)fl(this.states_),null!=this.keptStates&&(fl(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>qc([n,e]))):this.states_[0]=qc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new xg(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):fl(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,r];if(!br.arraysEqual(a.shape,s))throw new xg(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${a.shape}`);this.states_[t]=a}}this.states_=this.states_.map((e=>ml(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=mv(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new zA({shape:e.shape}));i=i.concat(this.stateSpec)}null!=a&&(t.constants=a,s=s.concat(a),this.numConstants=a.length);if(s[0]instanceof _A){const n=[e].concat(s),a=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=a;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return hl((()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let r=null==t?null:t.initialState;e=TA(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new xg(`RNN Layer has ${s} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:a},o=gv(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,a);const d=this.returnSequences?u:l;return this.returnState?[d].concat(c):d}))}getInitialState(e){return hl((()=>{let t=qc(e.shape);return t=Tc(t,[1,2]),t=wy(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Cy(t,[1,e]):t)):this.cell.stateSize>1?[Cy(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===yv.className&&(t.cell={className:this.cell.getClassName(),config:n}),{...n,...e,...t}}static fromConfig(e,t,n={}){const a=ex(t.cell,n);return new e(Object.assign(t,{cell:a}))}},Av=yv;Av.className="RNN",Uo.registerClass(Av);var xv=class extends LA{},bv=class extends xv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Pg(this.units,"units"),this.activation=zb(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=rA(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=rA(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=rA(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Bb(e.kernelRegularizer),this.recurrentRegularizer=Bb(e.recurrentRegularizer),this.biasRegularizer=Bb(e.biasRegularizer),this.kernelConstraint=Zg(e.kernelConstraint),this.recurrentConstraint=Zg(e.recurrentConstraint),this.biasConstraint=Zg(e.biasConstraint),this.dropout=Ay([1,xy([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ay([1,xy([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=CA(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return hl((()=>{if(2!==(e=e).length)throw new xg(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const a=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Tv({ones:()=>sd(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Tv({ones:()=>sd(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;r=Ry(null!=s?El(e,s):e,this.kernel.read()),null!=this.bias&&(r=zy(r,this.bias.read())),null!=i&&(n=El(n,i));let o=Nl(r,Ry(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){return{...super.getConfig(),...{units:this.units,activation:$b(this.activation),useBias:this.useBias,kernelInitializer:aA(this.kernelInitializer),recurrentInitializer:aA(this.recurrentInitializer),biasInitializer:aA(this.biasInitializer),kernelRegularizer:Lb(this.kernelRegularizer),recurrentRegularizer:Lb(this.recurrentRegularizer),biasRegularizer:Lb(this.biasRegularizer),activityRegularizer:Lb(this.activityRegularizer),kernelConstraint:Xg(this.kernelConstraint),recurrentConstraint:Xg(this.recurrentConstraint),biasConstraint:Xg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout}}}};bv.className="SimpleRNNCell",Uo.registerClass(bv);var vv=class extends Av{constructor(e){e.cell=new bv(e),super(e)}call(e,t){return hl((()=>{null!=this.cell.dropoutMask&&(fl(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(fl(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return new e(t)}};vv.className="SimpleRNN",Uo.registerClass(vv);var wv=class extends xv{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new xg("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Pg(this.units,"units"),this.activation=zb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=zb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=rA(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=rA(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=rA(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Bb(e.kernelRegularizer),this.recurrentRegularizer=Bb(e.recurrentRegularizer),this.biasRegularizer=Bb(e.biasRegularizer),this.kernelConstraint=Zg(e.kernelConstraint),this.recurrentConstraint=Zg(e.recurrentConstraint),this.biasConstraint=Zg(e.biasConstraint),this.dropout=Ay([1,xy([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ay([1,xy([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=CA(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return hl((()=>{if(2!==(e=e).length)throw new xg(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Tv({ones:()=>sd(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Tv({ones:()=>sd(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=El(e,r[0]));let u=Ry(e,this.kernel.read());this.useBias&&(u=zy(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=El(a,s[0]));const c=this.recurrentKernel.read(),[d,p]=Zd(c,[2*this.units,this.units],c.rank-1),h=Ry(a,d),[f,m,g]=Zd(u,3,u.rank-1),[y,A]=Zd(h,2,h.rank-1);i=this.recurrentActivation.apply(Nl(f,y)),o=this.recurrentActivation.apply(Nl(m,A));const x=Ry(El(o,a),p);l=this.activation.apply(Nl(g,x));const b=Nl(El(i,a),El(Nl(1,wc(i)),l));return[b,b]}))}getConfig(){return{...super.getConfig(),...{units:this.units,activation:$b(this.activation),recurrentActivation:$b(this.recurrentActivation),useBias:this.useBias,kernelInitializer:aA(this.kernelInitializer),recurrentInitializer:aA(this.recurrentInitializer),biasInitializer:aA(this.biasInitializer),kernelRegularizer:Lb(this.kernelRegularizer),recurrentRegularizer:Lb(this.recurrentRegularizer),biasRegularizer:Lb(this.biasRegularizer),activityRegularizer:Lb(this.activityRegularizer),kernelConstraint:Xg(this.kernelConstraint),recurrentConstraint:Xg(this.recurrentConstraint),biasConstraint:Xg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1}}}};wv.className="GRUCell",Uo.registerClass(wv);var kv=class extends Av{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new wv(e),super(e)}call(e,t){return hl((()=>{null!=this.cell.dropoutMask&&(fl(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(fl(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};kv.className="GRU",Uo.registerClass(kv);var Iv=class extends xv{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Pg(this.units,"units"),this.activation=zb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=zb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=rA(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=rA(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=rA(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Bb(e.kernelRegularizer),this.recurrentRegularizer=Bb(e.recurrentRegularizer),this.biasRegularizer=Bb(e.biasRegularizer),this.kernelConstraint=Zg(e.kernelConstraint),this.recurrentConstraint=Zg(e.recurrentConstraint),this.biasConstraint=Zg(e.biasConstraint),this.dropout=Ay([1,xy([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ay([1,xy([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=CA(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends Ly{apply(t,a){const r=e.apply([n]),s=(new By).apply([n]),i=e.apply([2*n]);return Ty(Ty(r,s),i)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return hl((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new xg(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Tv({ones:()=>sd(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Tv({ones:()=>sd(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=El(e,s[0]));let d=Ry(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=El(a,i[0])),d=Nl(d,Ry(a,this.recurrentKernel.read())),this.useBias&&(d=zy(d,this.bias.read()));const[p,h,f,m]=Zd(d,4,d.rank-1);o=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(h),u=Nl(El(l,r),El(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=El(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){return{...super.getConfig(),...{units:this.units,activation:$b(this.activation),recurrentActivation:$b(this.recurrentActivation),useBias:this.useBias,kernelInitializer:aA(this.kernelInitializer),recurrentInitializer:aA(this.recurrentInitializer),biasInitializer:aA(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Lb(this.kernelRegularizer),recurrentRegularizer:Lb(this.recurrentRegularizer),biasRegularizer:Lb(this.biasRegularizer),activityRegularizer:Lb(this.activityRegularizer),kernelConstraint:Xg(this.kernelConstraint),recurrentConstraint:Xg(this.recurrentConstraint),biasConstraint:Xg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation}}}};Iv.className="LSTMCell",Uo.registerClass(Iv);var Sv=class extends Av{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Iv(e),super(e)}call(e,t){return hl((()=>{null!=this.cell.dropoutMask&&(fl(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(fl(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};Sv.className="LSTM",Uo.registerClass(Sv);var Nv=class extends xv{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return hl((()=>{let n=(e=e).slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=a[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),r.push(s.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;SA(e)&&(e=e[0]),e=e,this.cells.forEach(((n,a)=>{py(`RNNCell_${a}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){return{...super.getConfig(),...{cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))}}}static fromConfig(e,t,n={}){const a=[];for(const r of t.cells)a.push(ex(r,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return $A(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,r=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}MA(t)}};function Tv(e){const{ones:t,rate:n,training:a=!1,count:r=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):_y(t(),n),o=()=>Oy(i,t,a);if(!r||r<=1)return ml(o().clone());return Array(r).fill(void 0).map(o).map((e=>ml(e.clone())))}Nv.className="StackedRNNCells",Uo.registerClass(Nv);var Cv=class extends Av{constructor(e){if(e.unroll)throw new bg("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new bg("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new zA({ndim:5})]}call(e,t){return hl((()=>{if(null!=this.cell.dropoutMask&&(fl(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(fl(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new xg("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return hl((()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=qc([a[0],...a.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e,t=!1){hl((()=>{if(!this.stateful)throw new yg("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new xg("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>qc(r))):this.states_=[qc(r)];else if(null==e)fl(this.states_),null!=this.keptStates&&(fl(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>qc(r))):this.states_[0]=qc(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new xg(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):fl(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=r;if(!br.arraysEqual(n.shape,a))throw new xg(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>ml(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=Kb(l,a[0],r,s[0],i[0]),d=Kb(u,a[1],r,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,d]:[c,d,n]]}};Cv.className="ConvRNN2D";var Ev=class extends Iv{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:i}=e;super({...e,units:t}),this.filters=t,Pg(this.filters,"filters"),this.kernelSize=Xb(n,2,"kernelSize"),this.kernelSize.forEach((e=>Pg(e,"kernelSize"))),this.strides=Xb(a||1,2,"strides"),this.strides.forEach((e=>Pg(e,"strides"))),this.padding=r||"valid",uy(this.padding),this.dataFormat=s||"channelsLast",ly(this.dataFormat),this.dilationRate=Xb(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Pg(e,"dilationRate")))}build(e){var t;e=CA(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new xg(`The channel dimension of the input should be defined. Found ${e[n]}`);const a=e[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends Ly{apply(e,t){return Ny([n.apply([a]),Xc([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return hl((()=>{if(3!==e.length)throw new xg(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,a=e[0],r=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Tv({ones:()=>sd(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?El(t[n],e):e;let l=o(a,i,0),u=o(a,i,1),c=o(a,i,2),d=o(a,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Tv({ones:()=>sd(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let h=o(r,p,0),f=o(r,p,1),m=o(r,p,2),g=o(r,p,3);const[y,A,x,b]=Zd(this.kernel.read(),4,3),[v,w,k,I]=this.useBias?Zd(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,v,this.padding),u=this.inputConv(u,A,w,this.padding),c=this.inputConv(c,x,k,this.padding),d=this.inputConv(d,b,I,this.padding);const[S,N,T,C]=Zd(this.recurrentKernel.read(),4,3);h=this.recurrentConv(h,S),f=this.recurrentConv(f,N),m=this.recurrentConv(m,T),g=this.recurrentConv(g,C);const E=this.recurrentActivation.apply(Nl(l,h)),R=this.recurrentActivation.apply(Nl(u,f)),F=Nl(El(R,s),El(E,this.activation.apply(Nl(c,m)))),$=El(this.recurrentActivation.apply(Nl(d,g)),this.activation.apply(F));return[$,$,F]}))}getConfig(){const{units:e,...t}=super.getConfig();return{...t,...{filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides}}}inputConv(e,t,n,a){const r=Su(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?zy(r,n,this.dataFormat):r}recurrentConv(e,t){return Su(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};Ev.className="ConvLSTM2DCell",Uo.registerClass(Ev);var Rv=class extends Cv{constructor(e){const t=new Ev(e);super({...e,cell:t})}static fromConfig(e,t){return new e(t)}};Rv.className="ConvLSTM2D",Uo.registerClass(Rv);var Fv=class extends LA{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?t[a]:this.noiseShape[a]);return n}call(e,t){return hl((()=>{this.invokeCallHook(e,t);const n=TA(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return Oy((()=>_y(n,this.rate,a,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Fv.className="Dropout",Uo.registerClass(Fv);var $v=class extends Fv{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}};$v.className="SpatialDropout1D",Uo.registerClass($v);var Mv=class extends LA{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Pg(this.units,"units"),this.activation=zb(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=rA(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=rA(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Zg(e.kernelConstraint),this.biasConstraint=Zg(e.biasConstraint),this.kernelRegularizer=Bb(e.kernelRegularizer),this.biasRegularizer=Bb(e.biasRegularizer),this.activityRegularizer=Bb(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=CA(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=CA(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return hl((()=>{this.invokeCallHook(e,t);const n=TA(e),a=Wg(this.activation.getClassName());let r;return null!=a?r=Ry(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=Ry(n,this.kernel.read()),null!=this.bias&&(r=zy(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:$b(this.activation),useBias:this.useBias,kernelInitializer:aA(this.kernelInitializer),biasInitializer:aA(this.biasInitializer),kernelRegularizer:Lb(this.kernelRegularizer),biasRegularizer:Lb(this.biasRegularizer),activityRegularizer:Lb(this.activityRegularizer),kernelConstraint:Xg(this.kernelConstraint),biasConstraint:Xg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Mv.className="Dense",Uo.registerClass(Mv);var zv=class extends LA{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=CA(e);for(const t of e.slice(1))if(null==t)throw new xg(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],yy(e,1)]}call(e,t){return hl((()=>{this.invokeCallHook(e,t);let n=TA(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=ao(n,e)}return function(e){if(e.rank<=1)throw new xg(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],yy(e.shape,1)];return au(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}};zv.className="Flatten",Uo.registerClass(zv);var _v=class extends LA{constructor(e){super(e),this.supportsMasking=!0,this.activation=zb(e.activation)}call(e,t){return hl((()=>{this.invokeCallHook(e,t);const n=TA(e);return this.activation.apply(n)}))}getConfig(){const e={activation:$b(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};_v.className="Activation",Uo.registerClass(_v);var Ov=class extends LA{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return hl((()=>{return e=TA(e),t=e,n=this.n,hl((()=>{if(2!==t.shape.length)throw new xg(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Cy(wy(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};Ov.className="RepeatVector",Uo.registerClass(Ov);var Dv=class extends LA{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let r=1,s=null;for(let o=0;o<a.length;++o){const e=a[o];if(this.isUnknown(e)){if(null!==s)throw new xg("Can only specifiy one unknown dimension.");s=o}else r*=e}const i=yy(e);if(null!==s){if(0===r||i%r!==0)throw new xg(n);a[s]=i/r}else if(i!==r)throw new xg(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return hl((()=>{this.invokeCallHook(e,t);const n=TA(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return au(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};Dv.className="Reshape",Uo.registerClass(Dv);var Pv=class extends LA{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=by(1,e.dims.length+1);if(!br.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new zA({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=CA(e)).slice();return this.dims.forEach(((n,a)=>{t[a+1]=e[n]})),t}call(e,t){return ao(TA(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};Pv.className="Permute",Uo.registerClass(Pv);var Lv=class extends LA{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=TA(e);return _l(rd(n,this.maskValue),-1)}call(e,t){return hl((()=>{this.invokeCallHook(e,t);const n=TA(e),a=_l(rd(n,this.maskValue),-1,!0);return El(n,zi(a,n.dtype))}))}};Lv.className="Masking",Uo.registerClass(Lv);var Wv=class extends LA{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Ng(e.inputLength))}this.inputDim=e.inputDim,Pg(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Pg(this.outputDim,"outputDim"),this.embeddingsInitializer=rA(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Bb(e.embeddingsRegularizer),this.activityRegularizer=Bb(e.activityRegularizer),this.embeddingsConstraint=Zg(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return hl((()=>this.maskZero?(e=TA(e),rd(e,Uu(e))):null))}computeOutputShape(e){if(e=CA(e),null==this.inputLength)return[...e,this.outputDim];const t=Ng(this.inputLength);if(t.length!==e.length-1)throw new xg(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let a=0;a<t.length;++a){const r=t[a],s=e[a+1];if(null!=r&&null!=s&&r!==s)throw new xg(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return hl((()=>{this.invokeCallHook(e,t);let n=TA(e);"int32"!==n.dtype&&(n=vy(n,"int32"));const a=Fy(this.embeddings.read(),au(n,[n.size]));return au(a,CA(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:aA(this.embeddingsInitializer),embeddingsRegularizer:Lb(this.embeddingsRegularizer),activityRegularizer:Lb(this.activityRegularizer),embeddingsConstraint:Xg(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};Wv.className="Embedding",Uo.registerClass(Wv);var Bv=class extends LA{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new bg}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const r=e[e.length-t.length+a],s=t[a];if(null==r||null==s||r<0||s<0)n.push(null);else if(1===r)n.push(s);else if(1===s)n.push(r);else{if(r!==s)throw new xg("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[CA(e)]),(e=e).length<2)throw new xg(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const r of e)null!=r&&null!==r[0]&&t.push(r[0]);if(t=zg(t),t.length>1)throw new xg(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const t=null==e[r]?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const a=e.map((e=>e.length));-1===e.indexOf(null)&&1===zg(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return hl((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const a=xy(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=wy(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,a=e[0],r=e.slice(1).concat([a]);let i=au(s,[a].concat(yy(e.slice(1))));i=ao(i,[1,0]),i=au(i,r),t.push(i),n=!0}else if(e>1){const a=by(1,e).concat([0]);t.push(ao(s,a)),n=!0}else t.push(s)}let a=this.mergeFunction(t);const r=a.rank;if(n)if(null==r){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=au(ao(au(a,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(by(0,r-1));a=ao(a,e)}return a}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const n=null==e[a]?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const a of e)null!=a&&null!==a[0]&&n.push(a[0]);return n=zg(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return hl((()=>{if(null==t)return null;if(!Array.isArray(t))throw new xg("`mask` should be an Array");if(!Array.isArray(e))throw new xg("`inputs` should be an Array");if(t.length!==e.length)throw new xg(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Ku(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Pc(n,t[e]);return n}))}},Uv=class extends Bv{constructor(e){super(e)}mergeFunction(e){return hl((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Nl(t,e[n]);return t}))}};Uv.className="Add",Uo.registerClass(Uv);var Vv=class extends Bv{constructor(e){super(e)}mergeFunction(e){return hl((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=El(t,e[n]);return t}))}};Vv.className="Multiply",Uo.registerClass(Vv);var Gv=class extends Bv{constructor(e){super(e)}mergeFunction(e){return hl((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Nl(t,e[n]);return El(1/e.length,t)}))}};Gv.className="Average",Uo.registerClass(Gv);var Hv=class extends Bv{constructor(e){super(e)}mergeFunction(e){return hl((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Hc(t,e[n]);return t}))}};Hv.className="Maximum",Uo.registerClass(Hv);var jv=class extends Bv{constructor(e){super(e)}mergeFunction(e){return hl((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Yc(t,e[n]);return t}))}};jv.className="Minimum",Uo.registerClass(jv);var qv=class extends Bv{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new xg("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const a of e)if(null!=a){t=!1;break}if(t)return;const n=[];for(let a=0;a<e.length;++a){const t=e[a].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(br.arraysEqual(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new xg("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return hl((()=>Ny(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new xg("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(null==n[a]||null==r[a]){n[a]=null;break}n[a]+=r[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new xg("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new xg("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new xg(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return hl((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const a=[];for(let s=0;s<e.length;++s)null==t[s]?a.push(zi(sd(e[s]),"bool")):t[s].rank<e[s].rank?a.push(Ku(t[s],-1)):a.push(t[s]);const r=iu(a,this.axis);return zl(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Xv(e,t){for(;e<0;)e+=t;return e}qv.className="Concatenate",Uo.registerClass(qv);var Kv=class extends Bv{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){br.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new bg("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new xg(`Dimension incompatibility: ${t[a[0]]} !== ${n[a[1]]}`)}mergeFunction(e){if(2!==e.length)throw new xg(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Xv(t,e[n].shape.length))):[Xv(this.axes,n.shape.length),Xv(this.axes,a.shape.length)],this.normalize&&(n=tx(n,t[0]),a=tx(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new bg("batchDot is not implemented for tensors of 4D or higher rank yet");if(br.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),br.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new bg("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,r=t.shape.length;null==n&&(n=[a-1,r-2]);const s=n;return hl((()=>{let n,i;if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=au(t,t.shape.concat(e))}else if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=au(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?Tc(El(e,t),s[0]):Tc(El(ao(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,a=s[1]===t.shape.length-1;i=to(e,t,n,a)}if(n>0){let e;e=a>r?a+r-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);i=ep(i,t)}return 1===i.shape.length&&(i=Ku(i,1)),i}))}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Xv(this.axes,e.length),Xv(this.axes,t.length)],n}computeOutputShape(e){br.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new bg("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Kv.className="Dot",Uo.registerClass(Kv);var Zv=class extends LA{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return hl((()=>{this.invokeCallHook(e,t);const n=TA(e);return Oy((()=>Nl(Ey(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}};Zv.className="GaussianNoise",Uo.registerClass(Zv);var Yv=class extends LA{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return hl((()=>{this.invokeCallHook(e,t);const n=TA(e);if(this.rate>0&&this.rate<1){return Oy((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return El(n,Ey(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}};Yv.className="GaussianDropout",Uo.registerClass(Yv);var Jv=class extends LA{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||TA(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return hl((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Oy((()=>{const t=TA(e),a=-1.7580993408473766;let r=ac(wd(n),this.rate);r=vy(r,"float32");const s=((1-this.rate)*(1+this.rate*a**2))**-.5,i=-s*a*this.rate,o=Nl(El(t,r),El(Nl(r,-1),a));return Nl(El(o,s),i)}),(()=>TA(e)),t.training||!1)}return e}))}};function Qv(e,t,n,a,r,s=.001){let i;if(2===e.rank)i=hu(e,t,n,a,r,s);else if(3===e.rank)i=fu(e,t,n,a,r,s);else{if(4!==e.rank)throw new bg(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=mu(e,t,n,a,r,s)}return i}function ew(e,t,n,a,r=.001){return br.arraysEqual(a.slice().sort(),by(0,e.rank-1))?function(e,t,n,a,r=.001){return hl((()=>{const s=td(e,a),i=s.mean,o=s.variance;return[Qv(e,i,o,n,t,r),i,o]}))}(e,t,n,a,r):function(e,t,n,a,r=.001){return hl((()=>{const s=td(e,a),i=s.mean,o=s.variance,l=[];for(const t of by(0,e.rank))-1!==a.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=au(i,l),c=au(o,l),d=null==t?null:au(t,l),p=null==n?null:au(n,l);return[Qv(e,u,c,p,d,r),i,o]}))}(e,t,n,a,r)}Jv.className="AlphaDropout",Uo.registerClass(Jv);var tw=class extends LA{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=rA(e.betaInitializer||"zeros"),this.gammaInitializer=rA(e.gammaInitializer||"ones"),this.movingMeanInitializer=rA(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=rA(e.movingVarianceInitializer||"ones"),this.betaConstraint=Zg(e.betaConstraint),this.gammaConstraint=Zg(e.gammaConstraint),this.betaRegularizer=Bb(e.betaRegularizer),this.gammaRegularizer=Bb(e.gammaRegularizer)}build(e){e=CA(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new xg(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new zA({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return hl((()=>{const n=null!=t.training&&t.training,a=TA(e),r=a.shape,s=r.length,i=by(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const l=wg(1,s);l[o]=r[o];const u=i.slice();u.sort();const c=!br.arraysEqual(u,by(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=au(this.movingMean.read(),l),t=au(this.movingVariance.read(),l),n=this.center?au(this.beta.read(),l):null,r=this.scale?au(this.gamma.read(),l):null;return Qv(a,e,t,n,r,this.epsilon)}return Qv(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[d,p,h]=ew(a,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{hl((()=>{const a=1-n,r=e.read(),s=El(Nc(r,t),a);e.write(Nc(r,s))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,h,this.momentum)})(),d}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:aA(this.betaInitializer),gammaInitializer:aA(this.gammaInitializer),movingMeanInitializer:aA(this.movingMeanInitializer),movingVarianceInitializer:aA(this.movingVarianceInitializer),betaRegularizer:Lb(this.betaRegularizer),gammaRegularizer:Lb(this.gammaRegularizer),betaConstraint:Xg(this.betaConstraint),gammaConstraint:Xg(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};tw.className="BatchNormalization",Uo.registerClass(tw);var nw=class extends LA{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=rA(e.betaInitializer||"zeros"),this.gammaInitializer=rA(e.gammaInitializer||"ones"),this.betaRegularizer=Bb(e.betaRegularizer),this.gammaRegularizer=Bb(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=CA(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(const a of this.axis)if(a<0||a>=t)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==zg(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=TA(e),a=n.shape,r=a.length;return hl((()=>{let{mean:e,variance:t}=td(n,this.axis,!0);const s=wg(1,r);for(const n of this.axis)s[n]=a[n];const i=e=>null!=e&&e.shape.length!==r?au(e,s):e;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],c=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(u.push(a[n]),c.push(1)):(u.push(1),c.push(a[n]));return e=Yu(e,u),t=Yu(t,u),o=Yu(o,c),l=Yu(l,c),Qv(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:aA(this.betaInitializer),gammaInitializer:aA(this.gammaInitializer),betaRegularizer:Lb(this.betaRegularizer),gammaRegularizer:Lb(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};nw.className="LayerNormalization",Uo.registerClass(nw);var aw=class extends LA{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new xg(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new xg(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new xg(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new zA({ndim:4})]}computeOutputShape(e){let t,n;return e=CA(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return hl((()=>{return t=TA(e),n=this.padding,a=this.dataFormat,hl((()=>{if(4!==t.rank)throw new xg(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new xg("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new xg(`Unknown data format: ${a}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],od(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function rw(e,t,n,a,r,s){return hl((()=>{let i;ly(r),cy(s),uy(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=Yb(e,r);const o="same"===a?"same":"valid";return i="max"===s?Uc(e,t,n,o):ru(e,t,n,o),"channelsFirst"===r&&(i=ao(i,[0,3,1,2])),i}))}function sw(e,t,n,a,r,s){return hl((()=>{let i;ly(r),cy(s),uy(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=Jb(e,r);const o="same"===a?"same":"valid";return i="max"===s?Vc(e,t,n,o):su(e,t,n,o),"channelsFirst"===r&&(i=ao(i,[0,4,1,2,3])),i}))}aw.className="ZeroPadding2D",Uo.registerClass(aw);var iw=class extends LA{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new xg(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Pg(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new xg(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Pg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,uy(this.padding),this.inputSpec=[new zA({ndim:3})]}computeOutputShape(e){const t=Kb((e=CA(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return hl((()=>{this.invokeCallHook(e,t),e=wy(TA(e),2);const n=this.poolingFunction(TA(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ep(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},ow=class extends iw{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return ly(r),uy(a),rw(e,t,n,a,r,"max")}};ow.className="MaxPooling1D",Uo.registerClass(ow);var lw=class extends iw{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return ly(r),uy(a),rw(e,t,n,a,r,"avg")}};lw.className="AveragePooling1D",Uo.registerClass(lw);var uw=class extends LA{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new xg(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Pg(this.poolSize,"poolSize"),Pg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ly(this.dataFormat),uy(this.padding),this.inputSpec=[new zA({ndim:4})]}computeOutputShape(e){e=CA(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Kb(t,this.poolSize[0],this.padding,this.strides[0]),n=Kb(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return hl((()=>(this.invokeCallHook(e,t),this.poolingFunction(TA(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},cw=class extends uw{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return ly(r),uy(a),rw(e,t,n,a,r,"max")}};cw.className="MaxPooling2D",Uo.registerClass(cw);var dw=class extends uw{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return ly(r),uy(a),rw(e,t,n,a,r,"avg")}};dw.className="AveragePooling2D",Uo.registerClass(dw);var pw=class extends LA{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new xg(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Pg(this.poolSize,"poolSize"),Pg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ly(this.dataFormat),uy(this.padding),this.inputSpec=[new zA({ndim:5})]}computeOutputShape(e){e=CA(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Kb(t,this.poolSize[0],this.padding,this.strides[0]),n=Kb(n,this.poolSize[1],this.padding,this.strides[1]),a=Kb(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return hl((()=>(this.invokeCallHook(e,t),this.poolingFunction(TA(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},hw=class extends pw{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return ly(r),uy(a),sw(e,t,n,a,r,"max")}};hw.className="MaxPooling3D",Uo.registerClass(hw);var fw=class extends pw{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return ly(r),uy(a),sw(e,t,n,a,r,"avg")}};fw.className="AveragePooling3D",Uo.registerClass(fw);var mw=class extends LA{constructor(e){super(e),this.inputSpec=[new zA({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new bg}},gw=class extends mw{constructor(e){super(e||{})}call(e,t){return hl((()=>{const t=TA(e);return jc(t,1)}))}};gw.className="GlobalAveragePooling1D",Uo.registerClass(gw);var yw=class extends mw{constructor(e){super(e||{})}call(e,t){return hl((()=>{const t=TA(e);return Sc(t,1)}))}};yw.className="GlobalMaxPooling1D",Uo.registerClass(yw);var Aw=class extends LA{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,ly(this.dataFormat),this.inputSpec=[new zA({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new bg}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},xw=class extends Aw{call(e,t){return hl((()=>{const t=TA(e);return"channelsLast"===this.dataFormat?jc(t,[1,2]):jc(t,[2,3])}))}};xw.className="GlobalAveragePooling2D",Uo.registerClass(xw);var bw=class extends Aw{call(e,t){return hl((()=>{const t=TA(e);return"channelsLast"===this.dataFormat?Sc(t,[1,2]):Sc(t,[2,3])}))}};bw.className="GlobalMaxPooling2D",Uo.registerClass(bw);var vw=class extends LA{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const a=ex(t.layer,n);delete t.layer;const r={layer:a};return Object.assign(r,t),new e(r)}},ww=class extends vw{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=CA(e)).length<3)throw new xg(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=CA(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return hl((()=>gv(((e,n)=>[TA(this.layer.call(e,t)),[]]),e=TA(e),[],!1,null,null,!1,!0)[1]))}};ww.className="TimeDistributed",Uo.registerClass(ww);var kw=class extends vw{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=ex(n),t.goBackwards=!0!==t.goBackwards;const a={};var r;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=ex(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,Og(iy,"BidirectionalMergeMode",r),e.weights)throw new bg("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),r=r,this.returnState?(a=r.slice(1),t=r[0]):t=r[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):Sg(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=mv(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new xg("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const a=n.map((e=>new zA({shape:e.shape})));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),i.push(...a)}if(null!=a)throw new bg("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof _A;for(const l of s)if(l instanceof _A!==o)throw new xg("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),a=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=a;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return hl((()=>{const n=t.initialState;let a,r,s,i;if(null==n)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(a)&&(s=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=Cd(r,1)),"concat"===this.mergeMode?i=Ny([a,r]):"sum"===this.mergeMode?i=Nl(a,r):"ave"===this.mergeMode?i=El(.5,Nl(a,r)):"mul"===this.mergeMode?i=El(a,r):null==this.mergeMode&&(i=[a,r]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){py(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),py(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=ex(t.layer);if(delete t.layer,null!=t.numConstants)throw new bg("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}};function Iw(e){return new BA(e)}function Sw(e){return new Hb(e)}function Nw(e){return new Ub(e)}function Tw(e){return new Vb(e)}function Cw(e){return new Gb(e)}function Ew(e){return new qb(e)}function Rw(e){return new jb(e)}function Fw(e){return new dv(e)}function $w(e){return new av(e)}function Mw(e){return new iv(e)}function zw(e){return new sv(e)}function _w(e){return new ov(e)}function Ow(e){return new uv(e)}function Dw(e){return new pv(e)}function Pw(e){return new hv(e)}function Lw(e){return new fv(e)}function Ww(e){return new _v(e)}function Bw(e){return new Mv(e)}function Uw(e){return new Fv(e)}function Vw(e){return new $v(e)}function Gw(e){return new zv(e)}function Hw(e){return new Ov(e)}function jw(e){return new Dv(e)}function qw(e){return new Pv(e)}function Xw(e){return new Wv(e)}function Kw(e){return new Uv(e)}function Zw(e){return new Gv(e)}function Yw(e){return new qv(e)}function Jw(e){return new Hv(e)}function Qw(e){return new jv(e)}function ek(e){return new Vv(e)}function tk(e){return new Kv(e)}function nk(e){return new tw(e)}function ak(e){return new nw(e)}function rk(e){return new aw(e)}function sk(e){return new lw(e)}function ik(e){return sk(e)}function ok(e){return sk(e)}function lk(e){return new dw(e)}function uk(e){return lk(e)}function ck(e){return lk(e)}function dk(e){return new fw(e)}function pk(e){return dk(e)}function hk(e){return dk(e)}function fk(e){return new gw(e)}function mk(e){return new xw(e)}function gk(e){return new yw(e)}function yk(e){return new bw(e)}function Ak(e){return new ow(e)}function xk(e){return new cw(e)}function bk(e){return new hw(e)}function vk(e){return new kv(e)}function wk(e){return new wv(e)}function kk(e){return new Sv(e)}function Ik(e){return new Iv(e)}function Sk(e){return new vv(e)}function Nk(e){return new bv(e)}function Tk(e){return new Rv(e)}function Ck(e){return new Ev(e)}function Ek(e){return new Av(e)}function Rk(e){return new Nv(e)}function Fk(e){return new kw(e)}function $k(e){return new ww(e)}kw.className="Bidirectional",Uo.registerClass(kw);var Mk=gk,zk=yk,_k=Ak,Ok=xk;function Dk(e){return new Zv(e)}function Pk(e){return new Yv(e)}function Lk(e){return new Jv(e)}function Wk(e){return new Lv(e)}var Bk={};function Uk(e,t){return dx(e,t)}function Vk(e,t){return gx(e,t)}function Gk(e,t){return yx(e,t)}function Hk(e,t){return px(e,t)}function jk(e,t){return Ax(e,t)}function qk(e,t){return fx(e,t)}function Xk(e,t){return mx(e,t)}function Kk(e,t){return lx(e,t)}function Zk(e,t){return ax(e,t)}function Yk(e,t){return rx(e,t)}function Jk(e,t){return rx(e,t)}function Qk(e,t){return rx(e,t)}function eI(e,t){return nx(e,t)}function tI(e,t){return nx(e,t)}function nI(e,t){return nx(e,t)}C(Bk,{MAPE:()=>Jk,MSE:()=>tI,binaryAccuracy:()=>Uk,binaryCrossentropy:()=>Vk,categoricalAccuracy:()=>Hk,categoricalCrossentropy:()=>jk,cosineProximity:()=>Kk,mape:()=>Qk,meanAbsoluteError:()=>Zk,meanAbsolutePercentageError:()=>Yk,meanSquaredError:()=>eI,mse:()=>nI,precision:()=>qk,recall:()=>Xk,sparseCategoricalAccuracy:()=>Gk});var aI={};C(aI,{modelFromJSON:()=>lb});var rI={};function sI(e){return new Db(e)}function iI(e){return _b(t=e),new Db({l1:null!=t?t.l1:null,l2:0});var t}function oI(e){return _b(t=e),new Db({l2:null!=t?t.l2:null,l1:0});var t}C(rI,{l1:()=>iI,l1l2:()=>sI,l2:()=>oI});var lI=class extends HA{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof ib))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function uI(e,t){return e<t}function cI(e,t){return e>t}var dI=class extends lI{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new bg("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=uI:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=cI:this.monitorFunc=uI,this.monitorFunc===uI&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===uI?1/0:-1/0}async onEpochEnd(e,t){await VA(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};var pI={earlyStopping:function(e){return new dI(e)}};Ze().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}));var hI,fI,mI=((hI=mI||{})[hI.DT_INVALID=0]="DT_INVALID",hI[hI.DT_FLOAT=1]="DT_FLOAT",hI[hI.DT_DOUBLE=2]="DT_DOUBLE",hI[hI.DT_INT32=3]="DT_INT32",hI[hI.DT_UINT8=4]="DT_UINT8",hI[hI.DT_INT16=5]="DT_INT16",hI[hI.DT_INT8=6]="DT_INT8",hI[hI.DT_STRING=7]="DT_STRING",hI[hI.DT_COMPLEX64=8]="DT_COMPLEX64",hI[hI.DT_INT64=9]="DT_INT64",hI[hI.DT_BOOL=10]="DT_BOOL",hI[hI.DT_QINT8=11]="DT_QINT8",hI[hI.DT_QUINT8=12]="DT_QUINT8",hI[hI.DT_QINT32=13]="DT_QINT32",hI[hI.DT_BFLOAT16=14]="DT_BFLOAT16",hI[hI.DT_QINT16=15]="DT_QINT16",hI[hI.DT_QUINT16=16]="DT_QUINT16",hI[hI.DT_UINT16=17]="DT_UINT16",hI[hI.DT_COMPLEX128=18]="DT_COMPLEX128",hI[hI.DT_HALF=19]="DT_HALF",hI[hI.DT_RESOURCE=20]="DT_RESOURCE",hI[hI.DT_VARIANT=21]="DT_VARIANT",hI[hI.DT_UINT32=22]="DT_UINT32",hI[hI.DT_UINT64=23]="DT_UINT64",hI[hI.DT_FLOAT_REF=101]="DT_FLOAT_REF",hI[hI.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",hI[hI.DT_INT32_REF=103]="DT_INT32_REF",hI[hI.DT_UINT8_REF=104]="DT_UINT8_REF",hI[hI.DT_INT16_REF=105]="DT_INT16_REF",hI[hI.DT_INT8_REF=106]="DT_INT8_REF",hI[hI.DT_STRING_REF=107]="DT_STRING_REF",hI[hI.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",hI[hI.DT_INT64_REF=109]="DT_INT64_REF",hI[hI.DT_BOOL_REF=110]="DT_BOOL_REF",hI[hI.DT_QINT8_REF=111]="DT_QINT8_REF",hI[hI.DT_QUINT8_REF=112]="DT_QUINT8_REF",hI[hI.DT_QINT32_REF=113]="DT_QINT32_REF",hI[hI.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",hI[hI.DT_QINT16_REF=115]="DT_QINT16_REF",hI[hI.DT_QUINT16_REF=116]="DT_QUINT16_REF",hI[hI.DT_UINT16_REF=117]="DT_UINT16_REF",hI[hI.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",hI[hI.DT_HALF_REF=119]="DT_HALF_REF",hI[hI.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",hI[hI.DT_VARIANT_REF=121]="DT_VARIANT_REF",hI[hI.DT_UINT32_REF=122]="DT_UINT32_REF",hI[hI.DT_UINT64_REF=123]="DT_UINT64_REF",hI);(e=>{let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"})(fI||(fI={}));var gI={};function yI(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};gI[e]=n}function AI(e){return gI[e]}function xI(e){delete gI[e]}function bI(e,t,n,a,r){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return vI(t.inputNames[s.inputIndexStart],n,a,r);if("tensors"===s.type){return t.inputNames.slice(e,i).map((e=>vI(e,n,a,r)))}const o=vI(t.inputNames.slice(e)[0],n,a,r),l=o.dataSync();return"number"===s.type?l[0]:br.toNestedArray(o.shape,l)}const i=t.attrParams[e];return i&&i.value}function vI(e,t,n,a){const[r,s]=II(e);if(null!=a){const e=a.getHashTableHandleByName(r);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[kI(r,e)]));return void 0!==i?t[kI(r,i)][s]:void 0}function wI(e,t){const[n,a,r]=II(e);return[kI(n,t&&t.currentContextId),a,r]}function kI(e,t){return t?`${e}-${t}`:e}function II(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],a=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),a]}function SI(e,t,n){let a=bI("pad",e,t,n);if("explicit"===a){a=bI("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function NI(e){return e.kept?e:_i(e)}var TI={};C(TI,{json:()=>CI});var CI=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],EI={};C(EI,{json:()=>RI});var RI=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],FI={};C(FI,{json:()=>$I});var $I=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],MI={};C(MI,{json:()=>zI});var zI=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],_I={};C(_I,{json:()=>OI});var OI=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],DI={};C(DI,{json:()=>PI});var PI=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],LI={};C(LI,{json:()=>WI});var WI=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],BI={};C(BI,{json:()=>UI});var UI=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],VI={};C(VI,{json:()=>GI});var GI=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],HI={};C(HI,{json:()=>jI});var jI=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],qI={};C(qI,{json:()=>XI});var XI=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],KI={};C(KI,{json:()=>ZI});var ZI=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],YI={};C(YI,{json:()=>JI});var JI=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],QI={};C(QI,{json:()=>eS});var eS=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],tS={};C(tS,{json:()=>nS});var nS=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],aS={};C(aS,{json:()=>rS});var rS=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],sS={};C(sS,{json:()=>iS});var iS=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],oS={};C(oS,{json:()=>lS});var lS=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],uS={};C(uS,{json:()=>cS});var cS=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],dS=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[TI,EI,FI,MI,_I,DI,LI,BI,VI,HI,qI,KI,YI,QI,tS,aS,sS,oS,uS].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,a=[],r=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const d=Object.keys(i);d.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[a,,r]=wI(e),s=i[a];if(null!=s.outputs){const e=s.outputs.indexOf(r);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?d.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=wI(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=wI(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=a;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const h={nodes:i,inputs:o,outputs:l,weights:r,placeholders:a,signature:t,functions:p};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=AI(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const a=n.type;let r;switch(n.type){case"string":r=hS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=hS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=kS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=kS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=mS(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=mS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=wS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=wS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=fS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=fS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=SS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=SS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=vS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=vS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=IS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=IS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=AS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=AS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=xS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=xS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=yS(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=yS(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=wI(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:gS(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n}));Object.keys(a).forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=wI(e),i=a[r];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=wI(i[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,s.push(r))}));const o=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function pS(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Ze().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof s)return new s(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function hS(e,t,n,a=!1){const r=e[t];return null!=r?pS(r.s,a):n}function fS(e,t,n){const a=e[t];return a?a.b:n}function mS(e,t,n){const a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof r?r:parseInt(r,10)}function gS(e){switch("string"===typeof e&&(e=mI[e]),e){case mI.DT_FLOAT:case mI.DT_HALF:return"float32";case mI.DT_INT32:case mI.DT_INT64:case mI.DT_INT8:case mI.DT_UINT8:return"int32";case mI.DT_BOOL:return"bool";case mI.DT_DOUBLE:return"float32";case mI.DT_STRING:return"string";default:return null}}function yS(e,t,n){const a=e[t];return a&&a.func?a.func.name:n}function AS(e,t,n){const a=e[t];return a&&a.type?gS(a.type):n}function xS(e,t,n){const a=e[t];return a&&a.list&&a.list.type?a.list.type.map((e=>gS(e))):n}function bS(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function vS(e,t,n){const a=e[t];return a&&a.shape?bS(a.shape):n}function wS(e,t,n){const a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function kS(e,t,n,a=!1){const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>pS(e,a))):n}function IS(e,t,n){const a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map((e=>bS(e))):n}function SS(e,t,n){const a=e[t];return a&&a.list&&a.list.b?a.list.b:n}function NS(e,t,n=""){if("number"!==typeof e&&"number"!==typeof t){br.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let a=0;a<e.length;a++){const r=e[a],s=t[a];br.assert(r<0||s<0||r===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function TS(e){return"number"!==typeof e&&!e.some((e=>e<0))}function CS(e,t,n){let a=ES(e,n);const r=!TS(a);if(r&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${a}`);if(r&&t.forEach((e=>{a=ES(e.shape,a)})),!TS(a))throw new Error(`Non-fully-defined elementShape: ${a}`);return a}function ES(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let a=0;a<e.length;++a){const r=e[a],s=t[a];if(r>=0&&s>=0&&r!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[a]=r>=0?r:s}return n}var RS=class{constructor(e,t,n,a=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);NS(t,e.shape,"TensorList shape mismatch: "),ml(e)})),this.idTensor=_d(0),this.maxNumElements=a,ml(this.idTensor)}get id(){return this.idTensor.id}copy(){return new RS([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);NS(e,this.elementShape,"TensorList shape mismatch: ");const a=CS(this.elementShape,this.tensors,e);return hl((()=>{const e=this.tensors.map((e=>au(e,a)));return tp(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=CS(this.elementShape,this.tensors,e),a=this.tensors.pop();return NS(a.shape,e,"TensorList shape mismatch: "),au(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(NS(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ml(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);NS(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=CS(this.elementShape,this.tensors,t);return au(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);NS(this.elementShape,t.shape,"TensorList shape mismatch: "),ml(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);NS(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=CS(this.elementShape,this.tensors,n);return 0===e.length?Ws([],[0].concat(a)):hl((()=>{const t=e.map((e=>au(this.tensors[e],a)));return tp(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);NS(this.elementShape,t,"TensorList shape mismatch: ");const n=CS(this.elementShape,this.tensors,t);return 0===this.size()?Ws([],[0].concat(n)):hl((()=>{const e=this.tensors.map((e=>au(e,n)));return iu(e,0)}))}};var FS=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const a=bI("thenBranch",e,t,n),r=bI("elseBranch",e,t,n),s=bI("cond",e,t,n),i=bI("args",e,t,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=bI("body",e,t,n),r=bI("cond",e,t,n),s=bI("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=s;for(;l[0];){const e=u;u=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[NI(bI("pred",e,t,n))];case"Switch":{const a=bI("pred",e,t,n);let r=bI("data",e,t,n);return r.kept||(r=NI(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=e.inputNames.find((e=>void 0!==vI(e,t,n)));if(a){return[NI(vI(a,t,n))]}return}case"Enter":{const a=bI("frameName",e,t,n),r=bI("tensor",e,t,n);return n.enterFrame(a),[NI(r)]}case"Exit":{const a=bI("tensor",e,t,n);return n.exitFrame(),[NI(a)]}case"NextIteration":{const a=bI("tensor",e,t,n);return n.nextIteration(),[NI(a)]}case"TensorArrayV3":{const a=bI("size",e,t,n),r=bI("dtype",e,t,n),s=bI("elementShape",e,t,n),i=bI("dynamicSize",e,t,n),o=bI("clearAfterRead",e,t,n),l=bI("identicalElementShapes",e,t,n),u=bI("name",e,t,n),c=new class{constructor(e,t,n,a,r,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=_d(0),ml(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),NS(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,ml(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Ws([],[0].concat(this.elementShape));const n=this.readMany(e);return NS(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),tp(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Ws([],[0].concat(this.elementShape));const t=[];for(let a=0;a<this.size();a++)t.push(a);const n=this.readMany(t);return NS(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),iu(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,fp(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const a=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const r=0===n?0:t.size/n,s=[];hl((()=>{t=au(t,[1,n,r]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:a[n-1],0],o=[1,e[n],r];s[n]=au(lu(t,i,o),this.elementShape)}return s}));const i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}}(u,r,a,s,l,i,o);return n.addTensorArray(c),[c.idTensor,_d(1)]}case"TensorArrayWriteV3":{const a=bI("tensorArrayId",e,t,n),r=bI("index",e,t,n),s=bI("tensor",e,t,n),i=n.getTensorArray(a.id);return i.write(r,s),[i.idTensor]}case"TensorArrayReadV3":{const a=bI("tensorArrayId",e,t,n),r=bI("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=bI("tensorArrayId",e,t,n),r=bI("indices",e,t,n),s=bI("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{const a=bI("tensorArrayId",e,t,n),r=bI("indices",e,t,n),s=bI("tensor",e,t,n),i=n.getTensorArray(a.id);return i.scatter(r,s),[i.idTensor]}case"TensorArrayConcatV3":{const a=bI("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),s=bI("dtype",e,t,n);return[r.concat(s)]}case"TensorArraySplitV3":{const a=bI("tensorArrayId",e,t,n),r=bI("tensor",e,t,n),s=bI("lengths",e,t,n),i=n.getTensorArray(a.id);return i.split(s,r),[i.idTensor]}case"TensorArraySizeV3":{const a=bI("tensorArrayId",e,t,n);return[_d(n.getTensorArray(a.id).size(),"int32")]}case"TensorArrayCloseV3":{const a=bI("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=bI("tensorListId",e,t,n),r=bI("index",e,t,n),s=bI("tensor",e,t,n),i=n.getTensorList(a.id);return i.setItem(r,s),[i.idTensor]}case"TensorListGetItem":{const a=bI("tensorListId",e,t,n),r=bI("index",e,t,n),s=bI("elementShape",e,t,n),i=bI("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const a=bI("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error(`Max index must be < array size (${r}  vs. ${a})`);const s=new RS([],n,e.dtype,a),i=fp(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(bI("tensor",e,t,n),a,bI("elementShape",e,t,n),bI("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=bI("elementShape",e,t,n),r=bI("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new RS([],e,t,n)}(a,r,bI(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const a=bI("tensorListId",e,t,n),r=bI("indices",e,t,n),s=bI("elementShape",e,t,n),i=bI("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,i,s)]}case"TensorListStack":{const a=bI("tensorListId",e,t,n),r=bI("elementShape",e,t,n),s=bI("elementDType",e,t,n),i=bI("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,s,i)]}case"TensorListFromTensor":{const a=function(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);NS(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=fp(e);return new RS(r,t,a)}(bI("tensor",e,t,n),bI("elementShape",e,t,n),bI("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":{const a=bI("tensorListId",e,t,n),r=n.getTensorList(a.id),s=bI("dtype",e,t,n),i=bI("elementShape",e,t,n);return[r.concat(s,i)]}case"TensorListPushBack":{const a=bI("tensorListId",e,t,n),r=bI("tensor",e,t,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{const a=bI("tensorListId",e,t,n),r=bI("elementShape",e,t,n),s=bI("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{const a=bI("tensor",e,t,n),r=bI("elementShape",e,t,n),s=function(e,t,n){let a=0;const r=t.map((e=>(a+=e,a)));if(a!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${a}, and tensor's shape is: ${e.shape}`);const s=ES(e.shape.slice(1),n),i=0===a?0:e.size/a,o=hl((()=>{const n=[];e=au(e,[1,a,i]);for(let a=0;a<t.length;++a){const o=[0,0===a?0:r[a-1],0],l=[1,t[a],i];n[a]=au(lu(e,o,l),s)}return e.dispose(),n})),l=new RS([],n,e.dtype,t.length);for(let u=0;u<o.length;u++)l.setItem(u,o[u]);return l}(a,bI("lengths",e,t,n),r);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function $S(e,t,n){const[a,r]=bI("fusedOps",e,t,n),s="biasadd"===a,i=!s,o="prelu"===r,l="fusedbatchnorm"===a,u=bI("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=bI("strides",e,t,n),d=SI(e,t,n),p=bI("dataFormat",e,t,n).toUpperCase(),h=bI("dilations",e,t,n);let[f,m]=bI("args",e,t,n);i&&(m=f,f=void 0);return{stride:c,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:bI("leakyreluAlpha",e,t,n)}}function MS(e,t,n){return{boxes:bI("boxes",e,t,n),scores:bI("scores",e,t,n),maxOutputSize:bI("maxOutputSize",e,t,n),iouThreshold:bI("iouThreshold",e,t,n),scoreThreshold:bI("scoreThreshold",e,t,n),softNmsSigma:bI("softNmsSigma",e,t,n)}}var zS=async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=bI("keyDType",e,t,n),s=bI("valueDType",e,t,n),i=new class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=_d(0),this.tensorMap=new Map,ml(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return _d(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),hl((()=>{const e=fp(t),a=n.length,r=e.length;br.assert(a===r,(()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${r} elements.`));for(let t=0;t<a;t++){const a=n[t],r=e[t];ml(r),this.tensorMap.set(a,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return hl((()=>{const e=[];for(let a=0;a<n.length;a++){const r=n[a],s=this.findWithDefault(r,t);e.push(s)}return tp(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}(r,s);return a.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=bI("tableHandle",e,t,n,a),s=bI("keys",e,t,n),i=bI("values",e,t,n),o=a.getHashTableById(r.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=bI("tableHandle",e,t,n,a),s=bI("keys",e,t,n),i=bI("defaultValue",e,t,n),o=a.getHashTableById(r.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=bI("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function _S(e,t,n,a){const r=((e,t,n)=>{switch(e.category){case"arithmetic":return hl((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[Nl(bI("a",e,t,n),bI("b",e,t,n))];case"AddN":return[Ml(bI("tensors",e,t,n))];case"FloorMod":case"Mod":return[Qc(bI("a",e,t,n),bI("b",e,t,n))];case"Mul":return[El(bI("a",e,t,n),bI("b",e,t,n))];case"RealDiv":case"Div":return[Cl(bI("a",e,t,n),bI("b",e,t,n))];case"DivNoNan":return[Vu(bI("a",e,t,n),bI("b",e,t,n))];case"FloorDiv":return[Tl(bI("a",e,t,n),bI("b",e,t,n))];case"Sub":return[Nc(bI("a",e,t,n),bI("b",e,t,n))];case"Minimum":return[Yc(bI("a",e,t,n),bI("b",e,t,n))];case"Maximum":return[Hc(bI("a",e,t,n),bI("b",e,t,n))];case"Pow":return[fd(bI("a",e,t,n),bI("b",e,t,n))];case"SquaredDifference":return[Qd(bI("a",e,t,n),bI("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return hl((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Rl(bI("x",e,t,n))];case"Acos":return[Fl(bI("x",e,t,n))];case"Acosh":return[$l(bI("x",e,t,n))];case"Asin":return[Pl(bI("x",e,t,n))];case"Asinh":return[Ll(bI("x",e,t,n))];case"Atan":return[Wl(bI("x",e,t,n))];case"Atan2":return[Bl(bI("x",e,t,n),bI("y",e,t,n))];case"Atanh":return[Ul(bI("x",e,t,n))];case"Ceil":return[xu(bI("x",e,t,n))];case"Complex":return[Ps(bI("real",e,t,n),bI("imag",e,t,n))];case"Cos":return[$u(bI("x",e,t,n))];case"Cosh":return[Mu(bI("x",e,t,n))];case"Elu":return[ju(bI("x",e,t,n))];case"Erf":return[qu(bI("x",e,t,n))];case"Exp":return[Xu(bI("x",e,t,n))];case"Expm1":return[Zu(bI("x",e,t,n))];case"Floor":return[ec(bI("x",e,t,n))];case"Log":return[hc(bI("x",e,t,n))];case"Log1p":return[fc(bI("x",e,t,n))];case"Imag":return[rc(bI("x",e,t,n))];case"Neg":return[wc(bI("x",e,t,n))];case"Reciprocal":return[Sd(bI("x",e,t,n))];case"Real":return[Id(bI("x",e,t,n))];case"Relu":return[Nd(bI("x",e,t,n))];case"Round":return[Md(bI("x",e,t,n))];case"Selu":return[Od(bI("x",e,t,n))];case"Sigmoid":return[ou(bI("x",e,t,n))];case"Sin":return[Wd(bI("x",e,t,n))];case"Sign":return[Ld(bI("x",e,t,n))];case"Sinh":return[Bd(bI("x",e,t,n))];case"Softplus":return[kc(bI("x",e,t,n))];case"Sqrt":return[Jd(bI("x",e,t,n))];case"Square":return[ed(bI("x",e,t,n))];case"Tanh":return[uu(bI("x",e,t,n))];case"Tan":return[rp(bI("x",e,t,n))];case"ClipByValue":return[bu(bI("x",e,t,n),bI("clipValueMin",e,t,n),bI("clipValueMax",e,t,n))];case"Relu6":return[Td(bI("x",e,t,n))];case"Rsqrt":return[zd(vI(e.inputNames[0],t,n))];case"Prod":return[gd(bI("x",e,t,n),bI("axes",e,t,n))];case"LeakyRelu":return[lc(bI("x",e,t,n),bI("alpha",e,t,n))];case"Prelu":return[md(bI("x",e,t,n),bI("alpha",e,t,n))];case"IsNan":return[oc(vI(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return FS(e,t,n);case"convolution":return hl((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const a=bI("stride",e,t,n),r=bI("pad",e,t,n),s=bI("dataFormat",e,t,n).toUpperCase(),i=bI("dilation",e,t,n);return[Nu(bI("x",e,t,n),bI("filter",e,t,n),a,r,s,i)]}case"Conv2D":{const a=bI("strides",e,t,n),r=SI(e,t,n),s=bI("dataFormat",e,t,n).toUpperCase(),i=bI("dilations",e,t,n);return[Su(bI("x",e,t,n),bI("filter",e,t,n),[a[1],a[2]],r,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:a,pad:r,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=$S(e,t,n);return[Ep.conv2d({x:bI("x",e,t,n),filter:bI("filter",e,t,n),strides:[a[1],a[2]],pad:r,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:r,dataFormat:s,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=$S(e,t,n);return[Ep.depthwiseConv2d({x:bI("x",e,t,n),filter:bI("filter",e,t,n),strides:[a[1],a[2]],pad:r,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=bI("outputShape",e,t,n),r=bI("strides",e,t,n),s=SI(e,t,n);return[Cu(bI("x",e,t,n),bI("filter",e,t,n),a,[r[1],r[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=bI("strides",e,t,n),r=SI(e,t,n),s=bI("dilations",e,t,n),i=bI("dataFormat",e,t,n).toUpperCase();return[Du(bI("input",e,t,n),bI("filter",e,t,n),[a[1],a[2]],r,i,[s[1],s[2]])]}case"Conv3D":{const a=bI("strides",e,t,n),r=bI("pad",e,t,n),s=bI("dataFormat",e,t,n).toUpperCase(),i=bI("dilations",e,t,n);return[Eu(bI("x",e,t,n),bI("filter",e,t,n),[a[1],a[2],a[3]],r,s,[i[1],i[2],i[3]])]}case"AvgPool":{const a=bI("strides",e,t,n),r=bI("pad",e,t,n),s=bI("kernelSize",e,t,n);return[ru(bI("x",e,t,n),[s[1],s[2]],[a[1],a[2]],r)]}case"MaxPool":{const a=bI("strides",e,t,n),r=bI("pad",e,t,n),s=bI("kernelSize",e,t,n);return[Uc(bI("x",e,t,n),[s[1],s[2]],[a[1],a[2]],r)]}case"MaxPoolWithArgmax":{const a=bI("strides",e,t,n),r=bI("pad",e,t,n),s=bI("kernelSize",e,t,n),i=bI("includeBatchInIndex",e,t,n),{result:o,indexes:l}=Gc(bI("x",e,t,n),[s[1],s[2]],[a[1],a[2]],r,i);return[o,l]}case"AvgPool3D":{const a=bI("strides",e,t,n),r=bI("pad",e,t,n),s=bI("kernelSize",e,t,n);return[su(bI("x",e,t,n),[s[1],s[2],s[3]],[a[1],a[2],a[3]],r)]}case"MaxPool3D":{const a=bI("strides",e,t,n),r=bI("pad",e,t,n),s=bI("kernelSize",e,t,n);return[Vc(bI("x",e,t,n),[s[1],s[2],s[3]],[a[1],a[2],a[3]],r)]}case"Dilation2D":{const a=bI("strides",e,t,n),r=bI("pad",e,t,n),s=bI("dilations",e,t,n),i=a[1],o=a[2],l=s[1],u=s[2];return[Lu(bI("x",e,t,n),bI("filter",e,t,n),[i,o],r,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return hl((()=>((e,t,n)=>{switch(e.op){case"Fill":{const a=bI("shape",e,t,n),r=bI("dtype",e,t,n);return[Qu(a,bI("value",e,t,n),r)]}case"LinSpace":return[dc(bI("start",e,t,n),bI("stop",e,t,n),bI("num",e,t,n))];case"Multinomial":{const a=bI("logits",e,t,n),r=bI("numSamples",e,t,n),s=bI("seed",e,t,n);return[ad(a,r,s)]}case"OneHot":{const a=bI("indices",e,t,n),r=bI("depth",e,t,n),s=bI("onValue",e,t,n),i=bI("offValue",e,t,n);return[no(a,r,s,i)]}case"Ones":return[Xc(bI("shape",e,t,n),bI("dtype",e,t,n))];case"OnesLike":return[sd(bI("x",e,t,n))];case"RandomUniform":return[wd(bI("shape",e,t,n),bI("minval",e,t,n),bI("maxval",e,t,n),bI("dtype",e,t,n))];case"Range":return[kd(bI("start",e,t,n),bI("stop",e,t,n),bI("step",e,t,n),bI("dtype",e,t,n))];case"TruncatedNormal":{const a=bI("shape",e,t,n),r=bI("mean",e,t,n),s=bI("stdDev",e,t,n),i=bI("seed",e,t,n);return[dp(a,r,s,bI("dtype",e,t,n),i)]}case"Zeros":return[qc(bI("shape",e,t,n),bI("dtype",e,t,n))];case"ZerosLike":return[Uu(bI("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=MS(e,t,n),u=await Ph.nonMaxSuppressionWithScoreAsync(a,r,s,i,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=MS(e,t,n),l=bI("padToMaxOutputSize",e,t,n),u=await Ph.nonMaxSuppressionPaddedAsync(a,r,s,i,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:r,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=MS(e,t,n);return[await Ph.nonMaxSuppressionAsync(a,r,s,i,o)]}case"Where":{const a=zi(bI("condition",e,t,n),"bool"),r=[await yp(a)];return a.dispose(),r}case"ListDiff":return Pd(bI("x",e,t,n),bI("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return hl((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const a=bI("x",e,t,n),r=bI("k",e,t,n),s=bI("sorted",e,t,n),i=cp(a,r,s);return[i.values,i.indices]}case"Unique":{const a=bI("x",e,t,n),r=pp(a);return[r.values,r.indices]}case"UniqueV2":{const a=bI("x",e,t,n),r=bI("axis",e,t,n),s=pp(a,r);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return hl((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const a=bI("images",e,t,n),r=bI("size",e,t,n),s=bI("alignCorners",e,t,n),i=bI("halfPixelCenters",e,t,n);return[Ph.resizeBilinear(a,[r[0],r[1]],s,i)]}case"ResizeNearestNeighbor":{const a=bI("images",e,t,n),r=bI("size",e,t,n),s=bI("alignCorners",e,t,n),i=bI("halfPixelCenters",e,t,n);return[Ph.resizeNearestNeighbor(a,[r[0],r[1]],s,i)]}case"CropAndResize":{const a=bI("image",e,t,n),r=bI("boxes",e,t,n),s=bI("boxInd",e,t,n),i=bI("cropSize",e,t,n),o=bI("method",e,t,n),l=bI("extrapolationValue",e,t,n);return[Ph.cropAndResize(a,r,s,i,o,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return hl((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const a=bI("default",e,t,n);return[vI(e.name,t,n)||a];case"Placeholder":return[vI(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[NI(bI("x",e,t,n))];case"IdentityN":return bI("x",e,t,n).map((e=>NI(e)));case"Snapshot":return[NI(bI("x",e,t,n))];case"Shape":return[sp(bI("x",e,t,n).shape,"int32")];case"ShapeN":return bI("x",e,t,n).map((e=>sp(e.shape)));case"Size":return[_d(bI("x",e,t,n).size,"int32")];case"Rank":return[_d(bI("x",e,t,n).rank,"int32")];case"NoOp":return[_d(1)];case"Print":const r=bI("x",e,t,n),s=bI("data",e,t,n),i=bI("message",e,t,n),o=bI("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[r];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return hl((()=>((e,t,n)=>{switch(e.op){case"Equal":return[Wu(bI("a",e,t,n),bI("b",e,t,n))];case"NotEqual":return[rd(bI("a",e,t,n),bI("b",e,t,n))];case"Greater":return[nc(bI("a",e,t,n),bI("b",e,t,n))];case"GreaterEqual":return[ac(bI("a",e,t,n),bI("b",e,t,n))];case"Less":return[uc(bI("a",e,t,n),bI("b",e,t,n))];case"LessEqual":return[cc(bI("a",e,t,n),bI("b",e,t,n))];case"LogicalAnd":return[Pc(bI("a",e,t,n),bI("b",e,t,n))];case"LogicalNot":return[Lc(bI("a",e,t,n))];case"LogicalOr":return[Wc(bI("a",e,t,n),bI("b",e,t,n))];case"Select":case"SelectV2":return[Bu(bI("condition",e,t,n),bI("a",e,t,n),bI("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return hl((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[to(bI("a",e,t,n),bI("b",e,t,n),bI("transposeA",e,t,n),bI("transposeB",e,t,n))];case"Einsum":return[Hu(bI("equation",e,t,n),...bI("tensors",e,t,n))];case"Transpose":return[ao(bI("x",e,t,n),bI("perm",e,t,n))];case"_FusedMatMul":const[a,r]=bI("fusedOps",e,t,n),s="biasadd"===a,i="prelu"===r,o=bI("numArgs",e,t,n),l=bI("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,c]=bI("args",e,t,n);return[Ep.matMul({a:bI("a",e,t,n),b:bI("b",e,t,n),transposeA:bI("transposeA",e,t,n),transposeB:bI("transposeB",e,t,n),bias:u,activation:r,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return hl((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[pu(bI("x",e,t,n),bI("mean",e,t,n),bI("variance",e,t,n),bI("offset",e,t,n),bI("scale",e,t,n),bI("epsilon",e,t,n))];case"LRN":return[pc(bI("x",e,t,n),bI("radius",e,t,n),bI("bias",e,t,n),bI("alpha",e,t,n),bI("beta",e,t,n))];case"Softmax":return[jd(bI("x",e,t,n))];case"LogSoftmax":return[Cc(bI("x",e,t,n))];case"SparseToDense":return[kp(bI("sparseIndices",e,t,n),bI("outputShape",e,t,n),bI("sparseValues",e,t,n),bI("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return hl((()=>((e,t,n)=>{switch(e.op){case"Max":{const a=bI("axis",e,t,n),r=bI("keepDims",e,t,n);return[Sc(bI("x",e,t,n),a,r)]}case"Mean":{const a=bI("axis",e,t,n),r=bI("keepDims",e,t,n);return[jc(bI("x",e,t,n),a,r)]}case"Min":{const a=bI("axis",e,t,n),r=bI("keepDims",e,t,n);return[Zc(bI("x",e,t,n),a,r)]}case"Sum":{const a=bI("axis",e,t,n),r=bI("keepDims",e,t,n);return[Tc(bI("x",e,t,n),a,r)]}case"All":{const a=bI("axis",e,t,n),r=bI("keepDims",e,t,n);return[zl(bI("x",e,t,n),a,r)]}case"Any":{const a=bI("axis",e,t,n),r=bI("keepDims",e,t,n);return[_l(bI("x",e,t,n),a,r)]}case"ArgMax":{const a=bI("axis",e,t,n);return[Ol(bI("x",e,t,n),a)]}case"ArgMin":{const a=bI("axis",e,t,n);return[Dl(bI("x",e,t,n),a)]}case"Prod":{const a=bI("axis",e,t,n),r=bI("keepDims",e,t,n);return[gd(bI("x",e,t,n),a,r)]}case"Cumsum":{const a=bI("axis",e,t,n),r=bI("exclusive",e,t,n),s=bI("reverse",e,t,n);return[zu(bI("x",e,t,n),a,r,s)]}case"Bincount":const a=bI("x",e,t,n),r=bI("weights",e,t,n),s=bI("size",e,t,n);return[gu(a,r,s)];case"DenseBincount":{const a=bI("x",e,t,n),r=bI("weights",e,t,n),s=bI("size",e,t,n),i=bI("binaryOutput",e,t,n);return[_u(a,r,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return hl((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const a=bI("n",e,t,n),r=bI("axis",e,t,n);let s=bI("tensors",e,t,n);return s=s.slice(0,a),[iu(s,r)]}case"Gather":{const a=bI("x",e,t,n),r=bI("indices",e,t,n);return[tc(a,zi(r,"int32"),0)]}case"GatherV2":{const a=bI("axis",e,t,n),r=bI("batchDims",e,t,n),s=bI("x",e,t,n),i=bI("indices",e,t,n);return[tc(s,zi(i,"int32"),a,r)]}case"Reverse":{const a=bI("dims",e,t,n),r=[];for(let e=0;e<a.length;e++)a[e]&&r.push(e);const s=bI("x",e,t,n);return[Cd(s,r)]}case"ReverseV2":{const a=bI("axis",e,t,n),r=bI("x",e,t,n);return[Cd(r,a)]}case"Slice":{const a=bI("begin",e,t,n),r=bI("size",e,t,n);return[lu(bI("x",e,t,n),a,r)]}case"StridedSlice":{const a=bI("begin",e,t,n),r=bI("end",e,t,n),s=bI("strides",e,t,n),i=bI("beginMask",e,t,n),o=bI("endMask",e,t,n),l=bI("ellipsisMask",e,t,n),u=bI("newAxisMask",e,t,n),c=bI("shrinkAxisMask",e,t,n),d=bI("x",e,t,n);return[ap(d,a,r,s,i,o,l,u,c)]}case"Pack":return hl((()=>{const a=bI("axis",e,t,n),r=bI("tensors",e,t,n),s=r[0].shape,i=ep(r[0]).shape,o=r.map((e=>{const t=br.arraysEqual(e.shape,s);if(!t&&!br.arraysEqual(ep(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:au(e,s)}));return[tp(o,a)]}));case"Unpack":{const a=bI("axis",e,t,n),r=bI("tensor",e,t,n);return fp(r,a)}case"Tile":{const a=bI("reps",e,t,n);return[Yu(bI("x",e,t,n),a)]}case"Split":case"SplitV":{const a=bI("axis",e,t,n),r=bI("numOrSizeSplits",e,t,n),s=bI("x",e,t,n);return Zd(s,r,a)}case"ScatterNd":{const a=bI("indices",e,t,n),r=bI("values",e,t,n),s=bI("shape",e,t,n);return[wp(a,r,s)]}case"GatherNd":{const a=bI("x",e,t,n),r=bI("indices",e,t,n);return[Ip(a,r)]}case"SparseToDense":{const a=bI("sparseIndices",e,t,n),r=bI("outputShape",e,t,n),s=bI("sparseValues",e,t,n),i=bI("defaultValue",e,t,n);return[kp(a,s,r,s.dtype===i.dtype?i:zi(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return hl((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:a,outputValues:r,emptyRowIndicator:s,reverseIndexMap:i}=Bh.sparseFillEmptyRows(bI("indices",e,t,n),bI("values",e,t,n),bI("denseShape",e,t,n),bI("defaultValue",e,t,n));return[a,r,s,i]}case"SparseReshape":{const{outputIndices:a,outputShape:r}=Bh.sparseReshape(bI("inputIndices",e,t,n),bI("inputShape",e,t,n),bI("newShape",e,t,n));return[a,r]}case"SparseSegmentMean":return[Bh.sparseSegmentMean(bI("data",e,t,n),bI("indices",e,t,n),bI("segmentIds",e,t,n))];case"SparseSegmentSum":return[Bh.sparseSegmentSum(bI("data",e,t,n),bI("indices",e,t,n),bI("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return hl((()=>((e,t,n)=>{switch(e.op){case"FFT":return[qd(bI("x",e,t,n))];case"IFFT":return[Xd(bI("x",e,t,n))];case"RFFT":return[Yd(bI("x",e,t,n))];case"IRFFT":return[Kd(bI("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return hl((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:a,nGramsSplits:r}=Uh.stringNGrams(bI("data",e,t,n),bI("dataSplits",e,t,n),bI("separator",e,t,n),bI("nGramWidths",e,t,n),bI("leftPad",e,t,n),bI("rightPad",e,t,n),bI("padWidth",e,t,n),bI("preserveShortSequences",e,t,n));return[a,r]}case"StringSplit":{const{indices:a,values:r,shape:s}=Uh.stringSplit(bI("input",e,t,n),bI("delimiter",e,t,n),bI("skipEmpty",e,t,n));return[a,r,s]}case"StringToHashBucketFast":return[Uh.stringToHashBucketFast(bI("input",e,t,n),bI("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return hl((()=>((e,t,n)=>{switch(e.op){case"Cast":return[zi(bI("x",e,t,n),bI("dtype",e,t,n))];case"ExpandDims":{const a=bI("axis",e,t,n);return[Ku(bI("x",e,t,n),a)]}case"Squeeze":{const a=bI("axis",e,t,n);return[ep(bI("x",e,t,n),a)]}case"Reshape":return[au(bI("x",e,t,n),bI("shape",e,t,n))];case"MirrorPad":return[Jc(bI("x",e,t,n),bI("padding",e,t,n),bI("mode",e,t,n))];case"PadV2":case"Pad":return[od(bI("x",e,t,n),bI("padding",e,t,n),bI("constantValue",e,t,n))];case"SpaceToBatchND":{const a=bI("blockShape",e,t,n),r=bI("paddings",e,t,n);return[pd(bI("x",e,t,n),a,r)]}case"BatchToSpaceND":{const a=bI("blockShape",e,t,n),r=bI("crops",e,t,n);return[du(bI("x",e,t,n),a,r)]}case"DepthToSpace":{const a=bI("blockSize",e,t,n),r=bI("dataFormat",e,t,n).toUpperCase();return[Ou(bI("x",e,t,n),a,r)]}case"BroadcastTo":return[Au(bI("x",e,t,n),bI("shape",e,t,n))];case"BroadcastArgs":return[yu(bI("s0",e,t,n),bI("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return zS(e,t,n,a);case"custom":const r=AI(e.op);if(r&&r.customExecutor)return r.customExecutor(new class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return vI(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return vI(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return mS(this.node.rawAttrs,e,t);if(null!=n.s)return hS(this.node.rawAttrs,e,t);if(null!=n.b)return fS(this.node.rawAttrs,e,t);if(null!=n.shape)return vS(this.node.rawAttrs,e,t);if(null!=n.type)return AS(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return wS(this.node.rawAttrs,e,t);if(null!=n.list.s)return kS(this.node.rawAttrs,e,t);if(null!=n.list.shape)return IS(this.node.rawAttrs,e,t);if(null!=n.list.b)return SS(this.node.rawAttrs,e,t);if(null!=n.list.type)return xS(this.node.rawAttrs,e,t)}return t}}(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return br.isPromise(r)?r.then((e=>[].concat(e))):[].concat(r)}var OS=class{constructor(e={},t={},n={},a={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function DS(e,t,n,a){const r=new Set,s=[];let i=null,o=null;const l=new Set,u=Object.keys(e).map((e=>II(e)[0]));let c=[];null!=a&&(c=a.map((e=>II(e.name)[0])));const d=[...t];for(;d.length>0;){const e=d.pop();(BS(e)||US(e)||VS(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&(-1===u.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),d.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:i,syncInputs:o}}var PS=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],LS=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],WS=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function BS(e){return PS.indexOf(e.op)>=0}function US(e){return LS.indexOf(e.op)>=0}function VS(e){return WS.indexOf(e.op)>=0}var GS=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new GS(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),a=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+a.join(this.SEPERATOR)}compile(e,t){const n=DS(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(null!=r)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(a.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${a}]`)}return function(e,t,n){const{usedNodes:a,inputs:r}=n,s=[],i=Object.keys(r).map((e=>II(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{a.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{a.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{a.has(e.name)&&s.push(e)}));const l=new Set,u=[];for(;s.length>0;){const e=s.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&a.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&s.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map((e=>this.graph.nodes[II(e)[0]])),r=t.map((e=>II(e)[0]));let s=r.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===s.length&&(s=this._outputs);const i=this.getCompilationKey(a,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const l={},u={};return hl((()=>{const n=new OS(this.weightMap,l,u,this.functionExecutorMap),a={...this.weightMap};Object.keys(e).forEach((t=>{const[n,r]=II(t),s=[];s[r]=e[t],a[n]=s}));const s=this.getFrozenTensorIds(a),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!a[t.name]){const e=_S(t,a,n,this._resourceManager);if(br.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);a[t.name]=e,this.checkTensorForDisposal(t.name,t,a,n,s,r,i)}}return null==this.parent&&n.dispose(s),t.map((e=>vI(e,a,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const s=function(e,t,n){return t[kI(e,n.currentContextId)]}(e.name,n,a);null!=s&&s.forEach((e=>{if(e&&!e.kept&&!r.has(e.id)){const n=i[e.id];if(1===n){if(this.keepTensorForDebug){const[n,r]=wI(t.name,a);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][r]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,a={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=Ze().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(u){console.warn(u.message)}this.resetIntermediateTensors();const s=new OS(this.weightMap,a,r,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,s,t,n);const i=t.map((e=>vI(e,this.tensorsMap,s))),o=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&s.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){const a=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){const r=Object.keys(e),s=r.map((e=>this.graph.nodes[II(e)[0]])),i=n.map((e=>II(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:d}=DS(e,o,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),h={...this.weightMap};Object.keys(e).forEach((t=>{const[n,a]=II(t),r=[];r[a]=e[t],h[n]=r}));const f={},m=this.getFrozenTensorIds(h),g={};for(;p.length>0;){const e=this.processStack(s,p,t,h,g,m,i,f,l);await Promise.all(e)}null!=c||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!BS(e)&&!vI(e.name,h,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${e}`)}return h}processStack(e,t,n,a,r,s,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&bI("isConstant",e.node,a,n)&&([c]=wI(e.node.name,n)),null==a[e.node.name]){const d=_S(e.node,a,n,this._resourceManager);c||([c]=wI(e.node.name,n));const p=n.currentContext;br.isPromise(d)?u.push(d.then((u=>(a[c]=u,n.currentContext=p,this.checkTensorForDisposal(c,e.node,a,n,s,i,o),this.processChildNodes(e.node,t,n,a,r,l),u)))):(a[c]=d,this.checkTensorForDisposal(c,e.node,a,n,s,i,o),this.processChildNodes(e.node,t,n,a,r,l))}else this.processChildNodes(e.node,t,n,a,r,l)}return u}processChildNodes(e,t,n,a,r,s){e.children.forEach((e=>{const[i]=wI(e.name,n);!r[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!vI(e,a,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!vI(e,a,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[a]=II(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));br.assert(t,(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&br.assert(n.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=II(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){return this._signature.outputs[e].name}return e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=II(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},HS=class{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Di.browserHTTPRequest(e,this.loadOptions);else{const t=Di.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(Di.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const a=Di.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new GS(dS.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(a),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=dS.Instance.transformGraph(e.modelInitializer);this.initializer=new GS(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"===typeof e){const t=Di.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Yr)&&!Array.isArray(e))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,a)=>(t[n]=e[a],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}};async function jS(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new HS(e,t);return await n.load(),n}var qS="0.0.0",XS={};C(XS,{CSVDataset:()=>BN,Dataset:()=>EN,FileDataSource:()=>eT,TextLineDataset:()=>zN,URLDataSource:()=>tT,array:()=>FN,csv:()=>nT,func:()=>aT,generator:()=>rT,microphone:()=>iT,version_data:()=>oT,webcam:()=>sT,zip:()=>$N});var KS=E(B()),ZS=E(B());function YS(e,t,n=new Map,a=new Set){if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(nN(e)){const r=Array.isArray(e)?[]:{};a.add(e);for(const s in e){const i=YS(e[s],t,n,a);r[s]=i}return a.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function JS(e,t=eN){return QS(e,t)}function QS(e,t,n=new Set){const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(nN(a)){const r=Array.isArray(a)?[]:{};n.add(a);for(const s in a){const a=QS(e.map((e=>e[s])),t,n);r[s]=a}return n.delete(a),r}throw new Error(`Can't recurse into non-iterable type: ${a}`)}return r.value}function eN(e){return null===e?null:nN(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function tN(e,t){const n=new Map;YS(e,t,n);for(const a of Array.from(n.keys())){const e=n.get(a);if(br.isPromise(e)){const t=await e;n.set(a,t)}}return YS(e,t,n)}function nN(e){let t=!1;if(Ze().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:n}=U();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof Yr)&&!(e instanceof Promise)&&!t)}function aN(e){return YS(e,rN)}function rN(e){return e instanceof Yr?{value:e.clone(),recurse:!1}:nN(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var sN=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},iN=class extends sN{constructor(){super(iN.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let a=0;a<n;a++)t[a]=this.get(this.wrap(this.begin+a));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}},oN=iN;function lN(e){return new pN(e)}function uN(e){return new hN(e)}oN.INITIAL_CAPACITY=32;var cN,dN=class{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new bN(this,e)}filter(e){return new AN(this,e)}map(e){return new xN(this,e)}mapAsync(e){return new vN(this,e)}serialMapAsync(e){return new vN(this,e).serial()}flatmap(e){return new kN(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new yN(this,e,t)}columnMajorBatch(e,t=!0,n=eN){return this.rowMajorBatch(e,t).map((e=>JS(e,n)))}concatenate(e,t){return new IN(lN([this,e]),t)}take(e){return e<0||null==e?this:new gN(this,e)}skip(e){return e<0||null==e?this:new mN(this,e)}prefetch(e){return new TN(this,e)}shuffle(e,t){return new CN(this,e,t)}serial(){return new fN(this)}},pN=class extends dN{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:aN(e),done:!1}}},hN=class extends dN{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},fN=class extends dN{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},mN=class extends dN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;fl(e.value)}return this.upstream.next()}},gN=class extends dN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},yN=class extends dN{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},AN=class extends dN{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;fl(e.value)}}},xN=class extends dN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Qr.getTensorsInContainer(e.value),n=this.transform(e.value),a=Qr.getTensorsInContainer(n);for(const r of t)Qr.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}},bN=class extends dN{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},vN=class extends dN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Qr.getTensorsInContainer(e.value),n=await this.transform(e.value),a=Qr.getTensorsInContainer(n);for(const r of t)Qr.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}},wN=class extends dN{constructor(){super(),this.outputQueue=new oN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!(await this.pump()))return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},kN=class extends wN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Qr.getTensorsInContainer(e.value),n=this.transform(e.value),a=Qr.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const r of t)Qr.isTensorInList(r,a)||r.dispose();return!0}},IN=class extends dN{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},SN=((cN=SN||{})[cN.FAIL=0]="FAIL",cN[cN.SHORTEST=1]="SHORTEST",cN[cN.LONGEST=2]="LONGEST",cN),NN=class extends dN{constructor(e,t=0){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const a=await tN(this.iterators,(function(e){if(e instanceof dN){return{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}}return{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case 0:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case 1:return{value:null,done:!0}}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},TN=class extends dN{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new sN(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},CN=class extends TN{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=ZS.alea(n||br.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},EN=class{constructor(){this.size=null}batch(e,t=!0){const n=this;let a;return br.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),RN((async()=>(await n.iterator()).columnMajorBatch(e,t,MN)),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,RN((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,RN((async()=>(await t.iterator()).filter((t=>hl((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return RN((async()=>(await t.iterator()).map((t=>hl((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return RN((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return RN((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,RN((async()=>{const n=uN((async()=>({value:await t.iterator(),done:!1})));return a=n.take(e),new IN(a,r);var a,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,RN((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const a=this,r=KS.alea(t||br.now().toString());return RN((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,RN((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function RN(e,t=null){return new class extends EN{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function FN(e){return RN((async()=>lN(e)),e.length)}function $N(e){if(!nN(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return RN((async()=>function(e,t=SN.FAIL){return new NN(e,t)}(await tN(e,(e=>{if(e instanceof EN)return{value:e.iterator(),recurse:!1};if(nN(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),SN.SHORTEST)),t)}function MN(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof Yr||br.isTypedArray(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Yr?tp(e):Ws(e)}(e),recurse:!1}}return{value:null,recurse:!0}}EN.MAX_BUFFER_SIZE=1e4;var zN=class extends EN{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},_N='"',ON=Symbol("out"),DN=Symbol("field"),PN=Symbol("quote"),LN=Symbol("quoteafterquote"),WN=Symbol("quoteinquote"),BN=class extends EN{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new zN(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(br.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&br.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(br.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const a of Object.keys(this.columnConfigs)){if(-1===this.fullColumnNames.indexOf(a))throw new Error('The key "'+a+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},a={};for(let r=0;r<this.fullColumnNames.length;r++){const s=this.fullColumnNames[r],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){const o=t[r];let l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{const e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o);break;default:l=e}else l=e}i&&i.isLabel?a[s]=l:n[s]=l}}return 0===Object.keys(a).length?n:{xs:n,ys:a}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let a=0;const r=e.length;let s=ON;for(let i=0;i<r;i++)switch(s){case ON:switch(e.charAt(i)){case _N:a=i+1,s=PN;break;case this.delimiter:if(a=i+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=ON;break;default:s=DN,a=i}break;case DN:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(a,i)),s=ON,a=i+1}break;case PN:switch(e.charAt(i)){case _N:s=LN}break;case LN:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(a,i-1)),s=ON,a=i+1;break;case _N:s=PN;break;default:s=WN}break;case WN:switch(e.charAt(i)){case _N:s=PN}}if(s===LN?n.push(e.substring(a,r-1)):n.push(e.substring(a)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},UN=class extends dN{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Ze().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new UN(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((a=>{const r=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&a({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),a({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,a)=>n.set(e,a*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(br.sizeFromShape(t));return n.set(e,n.length-e.length),Ws(n,t)}},VN=class extends dN{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=sp([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,a=(1-t)/2,r=n+e,s=t+a;this.cropBox=ip([a,n,s,r],[1,4])}else this.cropBox=ip([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Ze().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new VN(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&br.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(t){console.log(t),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=co.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return hl((()=>{const t=Ku(zi(e,"float32"),0);let n;n=Ph.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const a=n.shape;return au(n,a.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},GN=class{},HN=class extends dN{split(e){return new jN(this,e)}},jN=class extends HN{constructor(e,t){super(),this.upstream=e,this.impl=new qN(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},qN=class extends wN{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},XN=class extends dN{decodeUTF8(){return new KN(this)}},KN=class extends HN{constructor(e){super(),this.upstream=e,this.impl=new ZN(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},ZN=class extends wN{constructor(e){if(super(),this.upstream=e,Ze().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=U();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Ze().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(s.from(t.buffer)),this.outputQueue.push(n),!0)}},YN=class extends XN{constructor(e,t={}){super(),this.file=e,this.options=t,br.assert(e instanceof Uint8Array||!!Ze().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const a=new FileReader;a.onload=n=>{let r=a.result;if(r instanceof ArrayBuffer&&(r=new Uint8Array(r)),!(r instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(r)},a.onabort=e=>t(new Error("Aborted")),a.onerror=e=>t(new Error(e.type));const r=this.file.slice(this.offset,n);a.readAsArrayBuffer(r)}this.offset=n}));return{value:await e,done:!1}}};var JN=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function QN(e){return"string"===typeof e&&"file://"===e.substr(0,7)}var eT=class extends GN{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(QN(this.input)&&Ze().get("IS_NODE")){const e=V();this.input=e.readFileSync(this.input.substr(7))}return new YN(this.input,this.options)}},tT=class extends GN{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return QN(this.url)?new eT(this.url,this.fileOptions).iterator():async function(e,t={},n){let a,r;"string"===typeof e?a=e:(a=e.url,r=JN(e));const s=await(n||br.fetch)(a,r);if(s.ok){const e=new Uint8Array(await s.arrayBuffer());return new YN(e,t)}throw new Error(s.statusText)}(this.url,this.fileOptions)}};function nT(e,t={}){return new BN(new tT(e),t)}function aT(e){const t=uN(e);return RN((async()=>t))}function rT(e){return RN((async()=>{const t=await e();return uN((()=>t.next()))}))}async function sT(e,t){return VN.create(e,t)}async function iT(e){return UN.create(e)}var oT="0.0.0";function lT(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&br.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var uT=nm.whereImpl,cT=class extends Y{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Z(this,cl())}nextDataId(){return cT.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Ze().get("IS_NODE")&&tf.warn("\n============================\nHi there \ud83d\udc4b. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&br.isString(n[0])){const r=n.map((e=>br.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return tf.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>br.decodeString(e)))}catch(a){throw new Error("Failed to decode encoded string bytes into utf-8")}return Mi(e.shape,e.dtype,n)}makeOutput(e,t,n){const a=this.write(e,t,n);return cl().makeTensorFromDataId(a,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=br.now();e();return{kernelMs:br.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){lT([e],"where");const t=this.readSync(e.dataId);return uT(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}},dT=cT;dT.nextDataId=0;var pT={};function hT(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}C(pT,{addImpl:()=>TT,bincountImpl:()=>FT,bincountReduceImpl:()=>$T,ceilImpl:()=>OT,concatImpl:()=>LT,equalImpl:()=>WT,expImpl:()=>VT,expm1Impl:()=>jT,floorImpl:()=>KT,gatherNdImpl:()=>JT,gatherV2Impl:()=>QT,greaterEqualImpl:()=>aC,greaterImpl:()=>eC,lessEqualImpl:()=>uC,lessImpl:()=>iC,linSpaceImpl:()=>pC,logImpl:()=>hC,maxImpl:()=>gC,maximumImpl:()=>yC,minimumImpl:()=>bC,multiplyImpl:()=>kC,negImpl:()=>TC,notEqualImpl:()=>EC,prodImpl:()=>_C,rangeImpl:()=>DC,rsqrtImpl:()=>PC,sigmoidImpl:()=>BC,simpleAbsImpl:()=>hT,sliceImpl:()=>GC,sparseFillEmptyRowsImpl:()=>qC,sparseReshapeImpl:()=>XC,sparseSegmentReductionImpl:()=>KC,sqrtImpl:()=>ZC,squaredDifferenceImpl:()=>QC,stridedSliceImpl:()=>nE,stringNGramsImpl:()=>aE,stringSplitImpl:()=>sE,stringToHashBucketFastImpl:()=>iE,subImpl:()=>oE,tileImpl:()=>dE,topKImpl:()=>fE,transposeImpl:()=>$C,uniqueImpl:()=>mE});var fT={kernelName:tt,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;lT(t,"abs");let a=new Float32Array(br.sizeFromShape(t.shape));return a=hT(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}};function mT(e){return(t,n,a,r,s)=>{const i=tf.assertAndGetBroadcastShape(t,n),o=i.length,l=br.computeStrides(i),u=br.sizeFromShape(i),c=br.getTypedArrayFromDType(s,u),d=t.length,p=n.length,h=br.computeStrides(t),f=br.computeStrides(n),m=tf.getBroadcastDims(t,i),g=tf.getBroadcastDims(n,i);if(m.length+g.length===0)for(let y=0;y<c.length;++y)c[y]=e(a[y%a.length],r[y%r.length]);else for(let y=0;y<c.length;++y){const t=br.indexToLoc(y,o,l),n=t.slice(-d);m.forEach((e=>n[e]=0));const s=br.locToIndex(n,d,h),i=t.slice(-p);g.forEach((e=>i[e]=0));const u=br.locToIndex(i,p,f);c[y]=e(a[s],r[u])}return[c,i]}}function gT(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(a.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",i)},o}var yT={kernelName:Tt,backendName:"cpu",kernelFunc:gT};function AT(e,t,n="float32"){if("complex64"===n){return gT({inputs:{real:AT(e,t,"float32"),imag:AT(e,t,"float32")},backend:e})}const a=br.makeZerosTypedArray(br.sizeFromShape(t),n);return e.makeTensorInfo(t,n,a)}function xT(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var bT={kernelName:mn,backendName:"cpu",kernelFunc:xT};function vT(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}var wT={kernelName:oa,backendName:"cpu",kernelFunc:vT};function kT(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if("complex64"===s){if("complex64"===r.dtype)return xT({inputs:{x:r},backend:n});const e=AT(n,r.shape,r.dtype),t=kT({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=gT({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){const e=vT({inputs:{input:r},backend:n}),t=kT({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!br.hasEncodingLoss(r.dtype,s)){const e=xT({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(r.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(r.shape,"int32",t)}if("bool"===s){const e=n.data.get(r.dataId).values,t=br.toTypedArray([0],r.dtype),[a,s]=mT(((e,t)=>e!==t?1:0))(r.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",a)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${s}`)}var IT={kernelName:It,backendName:"cpu",kernelFunc:kT};function ST(e,t,n,a){return null==n?({inputs:n,backend:r})=>{const{a:s,b:i}=n,o=r;lT([s,i],e);const l=o.data.get(s.dataId).values,u=o.data.get(i.dataId).values,c="string"===s.dtype?tf.fromUint8ToStringArray(l):l,d="string"===s.dtype?tf.fromUint8ToStringArray(u):u,p=a||s.dtype,[h,f]=t(s.shape,i.shape,c,d,p);return o.makeTensorInfo(f,p,h)}:({inputs:e,backend:r})=>{const{a:s,b:i}=e,o=r;if("complex64"===s.dtype||"complex64"===i.dtype){const e=kT({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,l=o.data.get(a.dataId).values,u=o.data.get(r.dataId).values,c=kT({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),d=o.data.get(c.dataId),p=d.complexTensorInfos.real,h=d.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(h.dataId).values,[g,y,A]=n(s.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(A,"float32",g),b=o.makeTensorInfo(A,"float32",y),v=gT({inputs:{real:x,imag:b},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(b),v}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,r=a||s.dtype,[l,u]=t(s.shape,i.shape,e,n,r);return o.makeTensorInfo(u,r,l)}}}function NT(e){return(t,n,a,r,s,i)=>{const o=tf.assertAndGetBroadcastShape(t,n),l=br.sizeFromShape(o),u=o.length,c=br.computeStrides(o),d=br.getTypedArrayFromDType("float32",l),p=br.getTypedArrayFromDType("float32",l),h=tf.getBroadcastDims(t,o),f=tf.getBroadcastDims(n,o),m=tf.mergeRealAndImagArrays(a,r),g=tf.mergeRealAndImagArrays(s,i),y=t.length,A=br.computeStrides(t),x=n.length,b=br.computeStrides(n);if(h.length+f.length===0)for(let v=0;v<d.length;v++){const t=v%m.length,n=v%g.length,a=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);d[v]=a.real,p[v]=a.imag}else for(let v=0;v<d.length;v++){const t=br.indexToLoc(v,u,c),n=t.slice(-y);h.forEach((e=>n[e]=0));const a=br.locToIndex(n,y,A),r=t.slice(-x);f.forEach((e=>r[e]=0));const s=br.locToIndex(r,x,b),i=e(m[2*a],m[2*a+1],g[2*s],g[2*s+1]);d[v]=i.real,p[v]=i.imag}return[d,p,o]}}var TT=mT(((e,t)=>e+t)),CT=NT(((e,t,n,a)=>({real:e+n,imag:t+a}))),ET=ST(rt,TT,CT),RT={kernelName:rt,backendName:"cpu",kernelFunc:ET};function FT(e,t,n,a,r){const s=br.sizeFromShape(a),i=br.makeZerosTypedArray(r,n);for(let o=0;o<e.length;o++){const n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(i[n]+=s>0?t[o]:1)}return i}function $T(e,t,n,a=!1){const r=e.shape[0],s=e.shape[1],i=Mi([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<s;r++){const s=e.get(o,r);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(a?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,r),o,s):i.set(i.get(o,s)+1,o,s))}return i}function MT(e){return(t,n,a)=>{const r=br.getTypedArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)r[s]=e(t[s],a);return r}}function zT(e,t,n){return({inputs:a,attrs:r,backend:s})=>{const{x:i}=a;if(lT(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,l=o.data.get(i.dataId).values,u=br.sizeFromShape(i.shape),c=n||i.dtype,d=br.getArrayFromDType(c,u);for(let e=0;e<u;++e)d[e]=t(l[e],r);return o.makeTensorInfo(i.shape,c,d)}}function _T(e,t,n){return({inputs:a,attrs:r,backend:s})=>{const{x:i}=a;if(lT(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,r);return o.makeTensorInfo(i.shape,u,c)}}var OT=MT((e=>Math.ceil(e))),DT=_T(St,OT),PT={kernelName:St,backendName:"cpu",kernelFunc:DT};function LT(e,t,n,a){const r=br.getArrayFromDType(n,br.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=br.sizeFromShape(e.shape);r.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const s="string"===n?tf.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[o+t]=s[i++]}a+=e.shape[1]}))}return r}var WT=mT(((e,t)=>e===t?1:0)),BT=ST(en,WT,null,"bool"),UT={kernelName:en,backendName:"cpu",kernelFunc:BT},VT=MT((e=>Math.exp(e))),GT=_T(tn,VT,"float32"),HT={kernelName:tn,backendName:"cpu",kernelFunc:GT},jT=MT((e=>Math.expm1(e))),qT=_T(an,jT),XT={kernelName:an,backendName:"cpu",kernelFunc:qT},KT=MT((e=>Math.floor(e))),ZT=_T(ln,KT),YT={kernelName:ln,backendName:"cpu",kernelFunc:ZT};function JT(e,t,n,a,r,s,i,o,l){const u=Mi([a,s],n);for(let c=0;c<a;c++){const n=[];let a=0;for(let t=0;t<r;t++){const s=e[c*r+t];a+=s*i[t],n.push(s)}if(a<0||a>=l/s)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<s;e++)u.values[c*s+e]=t.get(...t.indexToLoc(a*s+e))}return u}function QT(e,t,n){const a=Mi(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),s=n[0],i=n[2],o=t.locToIndex([s,i]);n[2]=t.values[o];const l=e.locToIndex(n);a.values[r]=e.values[l]}return a}var eC=mT(((e,t)=>e>t?1:0)),tC=ST(hn,eC,null,"bool"),nC={kernelName:hn,backendName:"cpu",kernelFunc:tC},aC=mT(((e,t)=>e>=t?1:0)),rC=ST(fn,aC,null,"bool"),sC={kernelName:fn,backendName:"cpu",kernelFunc:rC},iC=mT(((e,t)=>e<t?1:0)),oC=ST(wn,iC,null,"bool"),lC={kernelName:wn,backendName:"cpu",kernelFunc:oC},uC=mT(((e,t)=>e<=t?1:0)),cC=ST(kn,uC,null,"bool"),dC={kernelName:kn,backendName:"cpu",kernelFunc:cC};function pC(e,t,n){const a=(t-e)/(n-1),r=br.makeZerosTypedArray(n,"float32");r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+a;return r}var hC=MT((e=>Math.log(e))),fC=_T(Sn,hC),mC={kernelName:Sn,backendName:"cpu",kernelFunc:fC};function gC(e,t,n,a){const r=br.getTypedArrayFromDType(a,br.sizeFromShape(n));for(let s=0;s<r.length;++s){const n=s*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}r[s]=a}return r}var yC=mT(((e,t)=>Math.max(e,t))),AC=ST(zn,yC),xC={kernelName:zn,backendName:"cpu",kernelFunc:AC},bC=mT(((e,t)=>Math.min(e,t))),vC=ST(Un,bC),wC={kernelName:Un,backendName:"cpu",kernelFunc:vC},kC=mT(((e,t)=>e*t)),IC=NT(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),SC=ST(jn,kC,IC),NC={kernelName:jn,backendName:"cpu",kernelFunc:SC};function TC(e,t,n){const a=br.createScalarValue(-1,n);return kC([],t,a,e,n)}var CC={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;lT(a,"neg");const r=n.data.get(a.dataId).values,[s,i]=TC(r,a.shape,a.dtype);return n.makeTensorInfo(i,a.dtype,s)}},EC=mT(((e,t)=>e!==t?1:0)),RC=ST(Xn,EC,null,"bool"),FC={kernelName:Xn,backendName:"cpu",kernelFunc:RC};function $C(e,t,n,a,r){const s=t.length,i=br.sizeFromShape(t),o=br.computeStrides(t),l=br.computeStrides(r),u=br.getTypedArrayFromDType(n,br.sizeFromShape(r));for(let c=0;c<i;++c){const t=br.indexToLoc(c,s,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];u[br.locToIndex(n,s,l)]=e[c]}return u}function MC(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;lT(r,"transpose");const i=r.shape.length,o=new Array(i);for(let u=0;u<o.length;u++)o[u]=r.shape[s[u]];const l=$C(a.data.get(r.dataId).values,r.shape,r.dtype,s,o);return{dataId:a.write(l,o,r.dtype),shape:o,dtype:r.dtype}}var zC={kernelName:Za,backendName:"cpu",kernelFunc:MC};function _C(e,t,n,a){const[r,s]=tf.computeOutAndReduceShapes(e,a),i=ds(t,"int32"),o=br.makeZerosTypedArray(br.sizeFromShape(r),i),l=br.sizeFromShape(s);for(let u=0;u<o.length;++u){const e=u*l;let t=1;for(let a=0;a<l;++a)t*=n[e+a];o[u]=t}return{outVals:o,outShape:r,outDtype:i}}var OC={kernelName:sa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;lT(r,"prod");const o=r.shape.length,l=br.parseAxisParam(s,r.shape),u=tf.getAxesPermutation(l,o);let c=l,d=r;const p=[];null!=u&&(d=MC({inputs:{x:r},backend:n,attrs:{perm:u}}),p.push(d),c=tf.getInnerMostAxes(c.length,o));const h=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=_C(d.shape,d.dtype,h,c);let y=m;return i&&(y=tf.expandShapeToKeepDim(m,l)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function DC(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return br.makeZerosTypedArray(0,a);const r=Math.abs(Math.ceil((t-e)/n)),s=br.makeZerosTypedArray(r,a);t<e&&1===n&&(n=-1),s[0]=e;for(let i=1;i<s.length;i++)s[i]=s[i-1]+n;return s}var PC=MT((e=>1/Math.sqrt(e))),LC=_T(Aa,PC),WC={kernelName:Aa,backendName:"cpu",kernelFunc:LC},BC=MT((e=>1/(1+Math.exp(-e)))),UC=zT(Na,(e=>1/(1+Math.exp(-e)))),VC={kernelName:Na,backendName:"cpu",kernelFunc:UC};function GC(e,t,n,a,r){const s=Io.isSliceContinous(a,t,n),i=br.sizeFromShape(n),o=br.computeStrides(a);if(s){const n=Io.computeFlatOffset(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const l=Mi(a,r,"string"===r?tf.fromUint8ToStringArray(e):e),u=Mi(n,r);for(let c=0;c<u.size;++c){const e=u.indexToLoc(c),n=e.map(((e,n)=>e+t[n]));u.set(l.get(...n),...e)}return"string"===r?tf.fromStringArrayToUint8(u.values):u.values}function HC(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a;lT(r,"slice");const[o,l]=Io.parseSliceParams(r,s,i);Io.assertParamsValid(r,o,l);const u=GC(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}var jC={kernelName:wa,backendName:"cpu",kernelFunc:HC};function qC(e,t,n,a,r,s,i){const o=t[0],l=s[0],u=new Array(l),c=new Array(o),d=t[1];if(0===l){if(0!==o)throw new Error(tf.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[br.getArrayFromDType(n,0),[0,d],br.getArrayFromDType(r,0),u,c]}let p=!0,h=0;const f=new Array(l).fill(0);for(let g=0;g<o;++g){const t=e[g*d];if(t<0)throw new Error(tf.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,t));if(t>=l)throw new Error(tf.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,t,l));++f[t],p=p&&t>=h,h=t}let m=!0;for(let g=0;g<l;++g){const e=0===f[g];u[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){const t=e,n=a;for(let e=0;e<o;++e)c[e]=e;return[t,[o,d],n,u,c]}{const t=f[l-1],s=br.getArrayFromDType(n,t*d),p=br.getArrayFromDType(r,t),h=new Array(l).fill(0);for(let n=0;n<o;++n){const t=e[n*d],r=h[t],i=(0===t?0:f[t-1])+r;h[t]++;for(let a=0;a<d;++a)s[i*d+a]=e[n*d+a];p[i]=a[n],c[n]=i}for(let e=0;e<l;++e){if(0===h[e]){const t=0===e?0:f[e-1];s[t*d+0]=e;for(let e=1;e<d;++e)s[t*d+e]=0;p[t]=i}}return[s,[t,d],p,u,c]}}function XC(e,t,n,a,r){const s=br.sizeFromShape(a),i=t[0],o=r.length,l=[];let u=1,c=-1;for(let m=0;m<o;++m){const e=r[m];if(-1===e){if(-1!==c)throw new Error(tf.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(c,m));c=m,l.push(1)}else{if(e<0)throw new Error(tf.getSparseReshapeNegativeOutputDimErrorMessage(m,e));u*=e,l.push(e)}}if(-1!==c){if(u<=0)throw new Error(tf.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(s/u);if(u*e!==s)throw new Error(tf.getSparseReshapeInputOutputMultipleErrorMessage(a,l));l[c]=e}if(br.sizeFromShape(l)!==s)throw new Error(tf.getSparseReshapeInputOutputMismatchErrorMessage(a,l));const d=a.length,p=[];if(d>0){p[d-1]=1;for(let e=d-2;e>=0;--e)p[e]=p[e+1]*a[e+1]}const h=[];if(o>0){h[o-1]=1;for(let e=o-2;e>=0;--e)h[e]=h[e+1]*l[e+1]}const f=br.getArrayFromDType(n,i*o);for(let m=0;m<i;++m){let t=0;for(let n=0;n<d;++n)t+=e[m*d+n]*p[n];for(let e=0;e<o;++e)f[m*o+e]=Math.trunc(t/h[e]),t%=h[e]}return[f,[i,o],l]}function KC(e,t,n,a,r,s=!1,i=0){const o=a.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?r[o-1]+1:0;if(c<0)throw new Error(tf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const d=t.slice();d[0]=c;const p=d.reduce(((e,t)=>e*t),1),h=br.getArrayFromDType(n,p);if(0===o)return c>0&&h.fill(i),[h,d];if(c<=0)throw new Error(tf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,y=r[f];for(;;){let t=0;if(m<o){if(t=r[m],y===t){++m;continue}if(y>=t)throw new Error(tf.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=c)throw new Error(tf.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,c));y>g&&h.fill(i,g*u,y*u);for(let n=f;n<m;++n){const t=a[n];if(t<0||t>=l[0])throw new Error(tf.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,a[n],l[0]));for(let n=0;n<u;n++)h[y*u+n]+=e[t*u+n]}if(s)for(let e=0;e<u;e++)h[y*u+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<c&&h.fill(i,g*u,c*u),[h,d]}var ZC=MT((e=>Math.sqrt(e))),YC=zT(Ca,(e=>Math.sqrt(e))),JC={kernelName:Ca,backendName:"cpu",kernelFunc:YC},QC=mT(((e,t)=>{const n=e-t;return n*n})),eE=ST(Pa,QC),tE={kernelName:Pa,backendName:"cpu",kernelFunc:eE};function nE(e,t,n,a){const r=Mi(e,t.dtype);for(let s=0;s<r.size;s++){const e=r.indexToLoc(s),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+a[t];r.set(t.get(...i),...e)}return r}function aE(e,t,n,a,r,s,i,o){return new class{constructor(e,t,n,a,r,s){this.separator=br.encodeString(e),this.nGramWidths=t,this.leftPad=br.encodeString(n),this.rightPad=br.encodeString(a),this.padWidth=r,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,s){for(let i=0;i<r;++i){const o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(r-(i+1))),c=s-(l+u),d=t+(l>0?0:i-o);let p=0;p+=l*this.leftPad.length;for(let t=0;t<c;++t)p+=e[d+t].length;p+=u*this.rightPad.length,p+=(l+u+c-1)*this.separator.length,n[a+i]=new Uint8Array(p);const h=n[a+i];let f=0;const m=e=>e.forEach((e=>h[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[d+t]),m(this.separator);if(c>0){m(e[d+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const r=a-1,s=br.getArrayFromDType("int32",a);if(0===n||0===a){const e=new Array(n);for(let t=0;t<=r;++t)s[t]=0;return[e,s]}s[0]=0;for(let o=1;o<=r;++o){const e=t[o]-t[o-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),s[o]=s[o-1]+n}const i=new Array(s[r]);for(let o=0;o<r;++o){const n=t[o];let a=s[o];if(this.nGramWidths.forEach((r=>{const s=t[o+1]-t[o],l=this.getNumNGrams(s,r);this.createNGrams(e,n,i,a,l,r),a+=l})),this.preserveShort&&a===s[o]){const r=t[o+1]-t[o];if(0===r)continue;const s=r+2*this.padWidth,l=1;this.createNGrams(e,n,i,a,l,s)}}return[i,s]}}(n,a,r,s,i,o).compute(e,t)}function rE(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return void(n&&0===e.length||a.push(e))}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(r,s);n&&0===t.length||a.push(t),r=s+1}}function sE(e,t,n){const a=e.length,r=[];let s=0,i=0;const o=new Array(a);for(let p=0;p<a;++p){const a=r.length;rE(e[p],t,n,r);const l=r.length-a;o[p]=l,s+=l,i=Math.max(i,l)}const l=br.getArrayFromDType("int32",2*s),u=new Array(s),c=[a,i];let d=0;for(let p=0;p<a;++p)for(let e=0;e<o[p];++e)l[2*d]=p,l[2*d+1]=e,u[d]=r[d],++d;return[l,u,c]}function iE(e,t){const n=br.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=br.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}var oE=mT(((e,t)=>e-t)),lE=NT(((e,t,n,a)=>({real:e-n,imag:t-a}))),uE=ST(Ga,oE,lE),cE={kernelName:Ga,backendName:"cpu",kernelFunc:uE};function dE(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=Mi(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=t[a]%e.shape[a];const s=e.locToIndex(n);a.values[r]=e.values[s]}return a}var pE=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function hE(e,t,n=0,a=e.length-1){for(;a>n;){if(a-n>600){const r=a-n+1,s=t-n+1,i=Math.log(r),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(r-o)/r)*Math.sign(s-r/2);hE(e,t,Math.max(n,Math.floor(t-s*o/r+l)),Math.min(a,Math.floor(t+(r-s)*o/r+l)))}const r=e[t];let s=n,i=a;for(br.swap(e,n,t),pE(e[a],r)>0&&br.swap(e,n,a);s<i;){for(br.swap(e,s,i),s++,i--;pE(e[s],r)<0;)s+=1;for(;pE(e[i],r)>0;)i-=1}0===pE(e[n],r)?br.swap(e,n,i):(i+=1,br.swap(e,i,a)),i<=t&&(n=i+1),t<=i&&(a=i-1)}}function fE(e,t,n,a,r){const s=t[t.length-1],[i,o]=[e.length/s,s],l=br.getTypedArrayFromDType(n,i*a),u=br.getTypedArrayFromDType("int32",i*a);for(let d=0;d<i;d++){const t=d*o,n=e.subarray(t,t+o);let s=new Array(n.length);n.forEach(((e,t)=>s[t]={value:e,index:t})),a<s.length&&(hE(s,a),s=s.slice(0,a)),r&&s.sort(pE);const i=d*a,c=l.subarray(i,i+a),p=u.subarray(i,i+a);for(let e=0;e<a;e++)c[e]=s[e].value,p[e]=s[e].index}const c=t.slice();return c[c.length-1]=a,[Mi(c,n,l),Mi(c,"int32",u)]}function mE(e,t,n,a){const r=br.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let f=0;f<r;f++)s[0]*=n[f];s[1]=n[r];for(let f=r+1;f<n.length;f++)s[2]*=n[f];const i={},o=new Int32Array(n[r]),l=new Xr(s,a,e),u=[],c=1===s[0]&&1===s[2];for(let f=0;f<n[r];f++){let t;if(c)t=e[f].toString();else{const e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(l.get(t,f,n));t=e.join(",")}if(void 0!==i[t])o[f]=i[t];else{const e=Object.keys(i).length;i[t]=e,o[f]=e,u.push(f)}}const d=s.slice();d[1]=Object.keys(i).length;const p=new Xr(d,a);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)p.set(l.get(n,e,a),n,t,a)}));const h=n.slice();return h[r]=d[1],{outputValues:p.values,outputShape:h,indices:o}}var gE="0.0.0";kl("cpu",(()=>new dT),1);var yE=zT(Yt,(e=>e>=0?e:Math.exp(e)-1)),AE={kernelName:Yt,backendName:"cpu",kernelFunc:yE};function xE(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a;lT([r],"leakyRelu");const i=br.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,l=br.getTypedArrayFromDType("float32",i);for(let u=0;u<o.length;u++)l[u]=o[u]<0?s*o[u]:o[u];return n.makeTensorInfo(r.shape,"float32",l)}var bE={kernelName:vn,backendName:"cpu",kernelFunc:xE},vE=mT(((e,t)=>e<0?t*e:e));function wE(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t;lT([a,r],"prelu");const s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,[o,l]=vE(a.shape,r.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var kE={kernelName:ra,backendName:"cpu",kernelFunc:wE},IE=zT(ua,(e=>Math.max(0,e))),SE={kernelName:ua,backendName:"cpu",kernelFunc:IE},NE=zT(ma,(e=>Math.min(Math.max(0,e),6))),TE={kernelName:ma,backendName:"cpu",kernelFunc:NE};function CE(e,t,n,a,r){if("linear"===n)return xT({inputs:{x:t},backend:e});if("relu"===n)return IE({inputs:{x:t},backend:e});if("elu"===n)return yE({inputs:{x:t},backend:e});if("relu6"===n)return NE({inputs:{x:t},backend:e});if("prelu"===n)return wE({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return xE({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return UC({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function EE(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=br.sizeFromShape(r.shape),o=br.inferFromImplicitShape(s,i),l=br.sizeFromShape(o);br.assert(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}var RE={kernelName:ca,backendName:"cpu",kernelFunc:EE};function FE(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;lT([r,s],"matMul");const l=r.shape.length,u=s.shape.length,c=i?r.shape[l-2]:r.shape[l-1],d=o?s.shape[u-1]:s.shape[u-2],p=i?r.shape[l-1]:r.shape[l-2],h=o?s.shape[u-2]:s.shape[u-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=br.sizeFromShape(f),y=br.sizeFromShape(m),A=so.assertAndGetBroadcastShape(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,h]);br.assert(c===d,(()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,h,d]:[y,d,h],b=EE({inputs:{x:r},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),v=EE({inputs:{x:s},backend:n,attrs:{shape:x}}),w=i?b.shape[1]:b.shape[2],k=i?b.shape[2]:b.shape[1],I=o?v.shape[1]:v.shape[2],S=Math.max(g,y),N=n.data.get(b.dataId).values,T=n.data.get(v.dataId).values,C=br.computeStrides(b.shape),E=br.computeStrides(v.shape),[R,F,$]=i?[C[0],1,C[1]]:[C[0],C[1],1],[M,z,_]=o?[1,E[1],E[0]]:[E[1],1,E[0]],O=k*I,D=Mi([S,k,I],b.dtype),P=D.values,L=n.blockSize;for(let W=0;W<S;W++)for(let e=0;e<k;e+=L)for(let t=0;t<I;t+=L)for(let n=0;n<w;n+=L){const a=Math.min(e+L,k),r=Math.min(t+L,I),s=Math.min(n+L,w);for(let i=e;i<a;i++)for(let e=t;e<r;e++){let t=0;for(let a=n;a<s;a++){const n=Math.min(W,g-1)*R,r=Math.min(W,y-1)*_;t+=N[n+i*F+a*$]*T[a*M+e*z+r]}P[W*O+(i*I+e)]+=t}}return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(A,D.dtype,D.values)}var $E={kernelName:xt,backendName:"cpu",kernelFunc:FE};var ME={kernelName:rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=a;let p,h,f;const m=[];p=FE({inputs:{a:r,b:s},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(h=ET({inputs:{a:p,b:i},backend:n}),m.push(p),p=h),c&&(f=CE(n,p,c,o,d),m.push(p),p=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return p}},zE=zT(nt,(e=>Math.acos(e))),_E={kernelName:nt,backendName:"cpu",kernelFunc:zE},OE=zT(at,(e=>Math.acosh(e))),DE={kernelName:at,backendName:"cpu",kernelFunc:OE};var PE={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;lT(t,"addN");const r=a.map((e=>n.data.get(e.dataId).values)),s=Mi(a[0].shape,a[0].dtype),i=s.values;for(let o=0;o<a.length;o++){const e=r[o];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};var LE={kernelName:it,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;lT(r,"all");const o=br.parseAxisParam(s,r.shape);let l=o;const u=tf.getAxesPermutation(l,r.shape.length);let c=r;null!=u&&(c=MC({inputs:{x:r},backend:n,attrs:{perm:u}}),l=tf.getInnerMostAxes(l.length,r.shape.length)),tf.assertAxesAreInnerMostDims("all",l,c.shape.length);const[d,p]=tf.computeOutAndReduceShapes(c.shape,l),h=br.sizeFromShape(p),f=br.makeZerosTypedArray(br.sizeFromShape(d),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*h;let t=m[e];for(let n=0;n<h;++n){const a=m[e+n];t=t&&a}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,f);if(i){const e=EE({inputs:{x:g},backend:n,attrs:{shape:tf.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var WE={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;lT(r,"any");const o=br.parseAxisParam(s,r.shape);let l=o;const u=tf.getAxesPermutation(l,r.shape.length);let c=r;null!=u&&(c=MC({inputs:{x:r},backend:n,attrs:{perm:u}}),l=tf.getInnerMostAxes(l.length,r.shape.length)),tf.assertAxesAreInnerMostDims("any",l,c.shape.length);const[d,p]=tf.computeOutAndReduceShapes(c.shape,l),h=br.sizeFromShape(p),f=br.makeZerosTypedArray(br.sizeFromShape(d),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*h;let t=m[e];for(let n=0;n<h;++n){const a=m[e+n];t=t||a}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,f);if(i){const e=EE({inputs:{x:g},backend:n,attrs:{shape:tf.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var BE={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;lT(r,"argMax");let i=br.parseAxisParam(s,r.shape);const o=tf.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=o&&(l=MC({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=tf.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],tf.assertAxesAreInnerMostDims("argMax",i,l.shape.length);const[c,d]=tf.computeOutAndReduceShapes(l.shape,i),p=br.sizeFromShape(c),h=br.makeZerosTypedArray(p,"int32"),f=br.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){const e=g*f;let t=m[e],n=0;for(let a=0;a<f;++a){const r=m[e+a];r>t&&(t=r,n=a)}h[g]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",h)}};var UE={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;lT(r,"argMin");let i=br.parseAxisParam(s,r.shape);const o=tf.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=o&&(l=MC({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=tf.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],tf.assertAxesAreInnerMostDims("argMin",i,l.shape.length);const[c,d]=tf.computeOutAndReduceShapes(l.shape,i),p=br.sizeFromShape(c),h=br.makeZerosTypedArray(p,"int32"),f=br.sizeFromShape(d),m=n.data.get(l.dataId).values;for(let g=0;g<h.length;++g){const e=g*f;let t=m[e],n=0;for(let a=0;a<f;++a){const r=m[e+a];r<t&&(t=r,n=a)}h[g]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",h)}},VE=zT(ct,(e=>Math.asin(e))),GE={kernelName:ct,backendName:"cpu",kernelFunc:VE},HE=zT(dt,(e=>Math.asinh(e))),jE={kernelName:dt,backendName:"cpu",kernelFunc:HE},qE=zT(pt,(e=>Math.atan(e))),XE={kernelName:pt,backendName:"cpu",kernelFunc:qE},KE=mT(((e,t)=>Math.atan2(e,t))),ZE=ST(ft,KE),YE={kernelName:ft,backendName:"cpu",kernelFunc:ZE},JE=zT(ht,(e=>Math.atanh(e))),QE={kernelName:ht,backendName:"cpu",kernelFunc:JE};function eR(e,t,n,a,r,s){const i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,h=r.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Mi(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],A=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let b=0;b<r.batchSize;++b){const t=b*y,n=b*a[0];for(let m=0;m<r.inChannels;++m)for(let y=0;y<r.outHeight;++y){const b=y*i-p,v=Math.max(0,b),w=Math.min(r.inHeight,c+b),k=t+y*A;for(let t=0;t<r.outWidth;++t){const i=t*o-h,c=Math.max(0,i),p=Math.min(r.inWidth,d+i);let y=f,A=0,b=0;for(let t=v;t<w;t+=l){const r=n+t*a[1];for(let t=c;t<p;t+=u){const n=e[r+t*a[2]+m];"max"===s&&n>y?y=n:"avg"===s&&(A+=n,b++)}if(isNaN(y))break}g[k+t*x+m]="avg"===s?A/b:y}}}return m}function tR(e,t,n,a,r=!1,s=!1){const i=Mi(a.outShape,"int32"),o=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,c=a.dilationWidth,d=a.effectiveFilterHeight,p=a.effectiveFilterWidth,h=a.padInfo.top,f=a.padInfo.left,m=Mi(t,n,e);for(let g=0;g<a.batchSize;++g)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*o-h;let y=n;for(;y<0;)y+=u;const A=Math.min(a.inHeight,d+n);for(let o=0;o<a.outWidth;++o){const d=o*l-f;let h=d;for(;h<0;)h+=c;const x=Math.min(a.inWidth,p+d);let b=Number.NEGATIVE_INFINITY,v=-1;for(let t=y;t<A;t+=u){const i=t-n;for(let n=h;n<x;n+=c){const o=n-d,l=m.get(g,t,n,e);l>b&&(b=l,v=r?s?((g*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:i*p+o)}}i.set(v,g,t,o,e)}}return i}function nR(e,t,n,a,r,s){const i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,d=r.dilationWidth,p=r.effectiveFilterDepth,h=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,A="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Mi(r.outShape,n),b=x.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],w=r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[3]*r.outShape[4],I=r.outShape[4];for(let S=0;S<r.batchSize;++S){const t=S*v,n=S*a[0];for(let x=0;x<r.inChannels;++x)for(let v=0;v<r.outDepth;++v){const S=v*i-m;let N=S;for(;N<0;)N+=u;const T=Math.min(r.inDepth,p+S),C=t+v*w;for(let t=0;t<r.outHeight;++t){const i=t*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(r.inHeight,h+i),v=C+t*k;for(let t=0;t<r.outWidth;++t){const i=t*l-y;let o=i;for(;o<0;)o+=d;const h=Math.min(r.inWidth,f+i),g=v+t*I;let w=A,k=0,S=0;for(let t=N;t<T;t+=u){const r=n+t*a[1];for(let t=p;t<m;t+=c){const n=r+t*a[2];for(let t=o;t<h;t+=d){const r=e[n+t*a[3]+x];if("max"===s&&r>w?w=r:"avg"===s&&(k+=r,S++),isNaN(w))break}if(isNaN(w))break}if(isNaN(w))break}b[g+x]="avg"===s?k/S:w}}}}return x}var aR={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;lT(r,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;br.assert(tf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=tf.computePool2DInfo(r.shape,s,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&br.arraysEqual(u.inShape,u.outShape))c=xT({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=br.computeStrides(r.shape),a=eR(e,r.shape,r.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,r.dtype,a.values)}return c}};var rR={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a;lT(r,"avgPool3d");const c=tf.computePool3DInfo(r.shape,s,i,1,o,l,u),d=nR(n.data.get(r.dataId).values,r.shape,r.dtype,br.computeStrides(r.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}};var sR={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a;lT([r,s],"avgPool3DGrad");const c=tf.computePool3DInfo(s.shape,i,o,1,l,u),d=c.strideDepth,p=c.strideHeight,h=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,A=c.dilationHeight,x=c.dilationWidth,b=c.effectiveFilterDepth,v=c.effectiveFilterHeight,w=c.effectiveFilterWidth,k=b-1-c.padInfo.front,I=w-1-c.padInfo.left,S=v-1-c.padInfo.top,N=Mi(s.shape,"float32"),T=1/(f*m*g),C=n.bufferSync(r);for(let E=0;E<c.batchSize;++E)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let a=0;a<c.inWidth;++a){const r=t-k,s=n-S,i=a-I;let o=0;for(let t=0;t<b;t+=y){const n=(r+t)/d;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<v;t+=A){const a=(s+t)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let t=0;t<w;t+=x){const r=(i+t)/h;if(r<0||r>=c.outWidth||Math.floor(r)!==r)continue;o+=C.get(E,n,a,r,e)}}}N.set(o*T,E,t,n,a,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};var iR={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;lT([r,s],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=a,c=tf.computePool2DInfo(i.shape,o,l,1,u),d=c.strideHeight,p=c.strideWidth,h=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,A=c.effectiveFilterWidth,x=A-1-c.padInfo.left,b=y-1-c.padInfo.top,v=Mi(i.shape,"float32"),w=1/(h*f),k=n.data.get(r.dataId).values,I=Mi(r.shape,"float32",k);for(let S=0;S<c.batchSize;++S)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const a=t-b,r=n-x;let s=0;for(let t=0;t<y;t+=m){const n=(a+t)/d;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<A;t+=g){const a=(r+t)/p;if(a<0||a>=c.outWidth||Math.floor(a)!==a)continue;s+=I.get(S,n,a,e)}}v.set(s*w,S,t,n,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};var oR={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,scale:s,offset:i,mean:o,variance:l}=t;br.assert(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),br.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),br.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),lT([r,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=a;null==u&&(u=.001);const c=n.data.get(r.dataId).values,d=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,h=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=h.length,A=p.length,x=d.length;let b=0,v=0,w=0,k=0;for(let I=0;I<c.length;++I)m[I]=f[b++]+(c[I]-d[v++])*h[w++]/Math.sqrt(p[k++]+u),b>=g&&(b=0),v>=x&&(v=0),w>=y&&(w=0),k>=A&&(k=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};var lR={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;lT([r],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),l=tf.getReshaped(r.shape,s,o),u=tf.getPermuted(l.length,s.length),c=tf.getReshapedPermuted(r.shape,s,o),d=tf.getSliceBeginCoords(i,s.length),p=tf.getSliceSize(c,i,s.length),h=EE({inputs:{x:r},backend:n,attrs:{shape:l}}),f=MC({inputs:{x:h},backend:n,attrs:{perm:u}}),m=EE({inputs:{x:f},backend:n,attrs:{shape:c}}),g=HC({inputs:{x:m},backend:n,attrs:{begin:d,size:p}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};var uR={kernelName:vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=FT(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}};var cR={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,o=tf.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},dR=zT(Nt,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),pR={kernelName:Nt,backendName:"cpu",kernelFunc:dR},hR={kernelName:Ct,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(br.sizeFromShape(t.shape)),r=n.data.get(t.dataId),s=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let u=0;u<o.length;u++){const e=o[u],t=l[u];a[u]=Math.hypot(e,t)}return n.makeOutput(a,t.shape,"float32")}};function fR(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}var mR={kernelName:yn,backendName:"cpu",kernelFunc:fR};function gR(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=br.parseAxisParam(r,t[0].shape)[0];let i=tf.computeOutShape(t.map((e=>e.shape)),s);if(0===br.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>br.sizeFromShape(e.shape)>0));if(1===o.length)return xT({inputs:{x:o[0]},backend:n});const l=o.map((e=>e.shape));if(tf.assertParamsConsistent(l,s),"complex64"===o[0].dtype){const e=o.map((e=>vT({inputs:{input:e},backend:n}))),t=o.map((e=>fR({inputs:{input:e},backend:n}))),a=gR({inputs:e,backend:n,attrs:{axis:s}}),r=gR({inputs:t,backend:n,attrs:{axis:s}}),i=gT({inputs:{real:a,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),i}const u=o.map((e=>{const t=br.sizeFromShape(e.shape.slice(s));return EE({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=tf.computeOutShape(u.map((e=>e.shape)),1);const d=1===u[0].shape[0],p=LT(c,i,t[0].dtype,d),h=tf.computeOutShape(o.map((e=>e.shape)),s),f=n.makeTensorInfo(h,t[0].dtype,p);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var yR={kernelName:Et,backendName:"cpu",kernelFunc:gR};function AR(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=a;lT([r,s],"conv2d");const d=tf.convertConv2DDataFormat(l),p=tf.computeConv2DInfo(r.shape,s.shape,i,u,o,c,!1,d),h=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,A=p.padInfo.top,x="channelsLast"===p.dataFormat,b=new Xr(p.outShape,r.dtype),v=br.computeStrides(r.shape),w=br.computeStrides(s.shape),k=v[0],I=x?v[1]:v[2],S=x?v[2]:1,N=x?1:v[1],T=b.strides[0],C=x?b.strides[1]:b.strides[2],E=x?b.strides[2]:1,R=x?1:b.strides[1],F=n.data.get(r.dataId).values,$=n.data.get(s.dataId).values,M=b.values;for(let z=0;z<p.batchSize;++z){const e=z*k,t=z*T;for(let n=0;n<p.outHeight;++n){const a=t+n*C,r=n*p.strideHeight-A;for(let t=0;t<h;++t){const n=r+t*m;if(n<0||n>=p.inHeight)continue;const s=t*w[0],i=e+n*I;for(let e=0;e<p.outWidth;++e){const t=a+e*E,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const a=n+e*g;if(a<0||a>=p.inWidth)continue;const r=i+a*S;let o=s+e*w[1];for(let e=0;e<p.inChannels;++e){const n=F[r+e*N];for(let e=0;e<p.outChannels;++e)M[t+e*R]+=n*$[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(b.shape,b.dtype,M)}var xR={kernelName:Rt,backendName:"cpu",kernelFunc:AR};var bR={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=a;lT([r,s],"conv2dBackpropFilter");const d=tf.convertConv2DDataFormat(l),p=tf.computeConv2DInfo(r.shape,c,i,1,o,u,!1,d),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,A=new Xr(p.filterShape,"float32"),x=p.padInfo.left,b=p.padInfo.top,v=n.data.get(r.dataId).values,w=n.data.get(s.dataId).values,k=new Xr(r.shape,r.dtype,v),I=new Xr(s.shape,s.dtype,w);for(let S=0;S<m;++S){const e=Math.max(0,Math.ceil((b-S)/h)),t=Math.min(p.outHeight,(p.inHeight+b-S)/h);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((x-n)/f)),r=Math.min(p.outWidth,(p.inWidth+x-n)/f);for(let s=0;s<p.inChannels;++s)for(let i=0;i<p.outChannels;++i){let o=0;for(let l=0;l<p.batchSize;++l)for(let u=e;u<t;++u){const e=S+u*h-b;for(let t=a;t<r;++t){const a=n+t*f-x;o+=y?k.get(l,e,a,s)*I.get(l,u,t,i):k.get(l,s,e,a)*I.get(l,i,u,t)}}A.set(o,S,n,s,i)}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}};var vR={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=a;lT([r,s],"conv2dBackpropInput");const d=br.computeStrides(s.shape),p=br.computeStrides(r.shape);let h=tf.convertConv2DDataFormat(u);const f=tf.computeConv2DInfo(i,s.shape,o,1,l,c,!1,h),m=new Xr(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,A=n.data.get(s.dataId).values,[x,b,v]=d,{batchSize:w,filterHeight:k,filterWidth:I,inChannels:S,inHeight:N,inWidth:T,outChannels:C,outHeight:E,outWidth:R,strideHeight:F,strideWidth:$}=f;h=f.dataFormat;const M=k-1-f.padInfo.top,z=I-1-f.padInfo.left,_="channelsLast"===h,O=m.strides[0],D=_?m.strides[1]:m.strides[2],P=_?m.strides[2]:1,L=_?1:m.strides[1],W=p[0],B=_?p[1]:p[2],U=_?p[2]:1,V=_?1:p[1];for(let G=0;G<w;++G)for(let e=0;e<S;++e)for(let t=0;t<N;++t){const n=t-M,a=Math.max(0,Math.ceil(n/F)),r=Math.min(E,(k+n)/F);for(let s=0;s<T;++s){const i=s-z,o=Math.max(0,Math.ceil(i/$)),l=Math.min(R,(I+i)/$);let u=0;for(let t=a;t<r;++t){const a=t*F-n;for(let n=o;n<l;++n){const r=W*G+B*t+U*n,s=x*(k-1-a)+b*(I-1-(n*$-i))+v*e;for(let e=0;e<C;++e){u+=y[r+V*e]*A[s+e]}}}g[O*G+D*t+P*s+L*e]=u}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};var wR={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a;lT([r,s],"conv3d");const u=tf.computeConv3DInfo(r.shape,s.shape,i,l,o),{filterDepth:c,filterHeight:d,filterWidth:p,dilationDepth:h,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,A=g.left,x=g.top,b=new Xr(u.outShape,r.dtype),v=n.data.get(r.dataId).values,w=n.data.get(s.dataId).values,k=b.values,I=br.computeStrides(r.shape),S=br.computeStrides(s.shape);for(let N=0;N<u.batchSize;++N){const e=N*I[0],t=N*b.strides[0];for(let n=0;n<u.outDepth;++n){const a=t+n*b.strides[1],r=n*u.strideDepth-y;for(let t=0;t<c;++t){const n=r+t*h;if(n<0||n>=u.inDepth)continue;const s=t*S[0],i=e+n*I[1];for(let e=0;e<u.outHeight;++e){const t=a+e*b.strides[2],n=e*u.strideHeight-x;for(let e=0;e<d;++e){const a=n+e*f;if(a<0||a>=u.inHeight)continue;const r=s+e*S[1],o=i+a*I[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,a=e*u.strideWidth-A;for(let e=0;e<p;++e){const t=a+e*m;if(t<0||t>=u.inWidth)continue;const s=r+e*S[2],i=o+t*u.inChannels;let l=s;for(let e=0;e<u.inChannels;++e){const t=v[i+e];for(let e=0;e<u.outChannels;++e)k[n+e]+=t*w[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};var kR={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:l}=a;lT([r,s],"conv3dBackpropFilterV2");const u=br.computeStrides(r.shape),c=br.computeStrides(s.shape),d=tf.computeConv3DInfo(r.shape,l,i,1,o),p=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,A=new Xr(d.filterShape,"float32"),x=A.values,[b,v,w,k]=A.strides,I=n.data.get(s.dataId).values,[S,N,T,C]=c,E=n.data.get(r.dataId).values,[R,F,$,M]=u,z=d.padInfo.front,_=d.padInfo.left,O=d.padInfo.top;for(let D=0;D<m;++D){const e=Math.max(0,Math.ceil((z-D)/p)),t=Math.min(d.outDepth,(d.inDepth+z-D)/p),n=D*b;for(let a=0;a<g;++a){const r=Math.max(0,Math.ceil((O-a)/h)),s=Math.min(d.outHeight,(d.inHeight+O-a)/h),i=a*v+n;for(let n=0;n<y;++n){const o=Math.max(0,Math.ceil((_-n)/f)),l=Math.min(d.outWidth,(d.inWidth+_-n)/f),u=n*w+i;for(let i=0;i<d.inChannels;++i){const c=i*k+u;for(let u=0;u<d.outChannels;++u){let m=0;for(let c=0;c<d.batchSize;++c){const d=c*R,g=c*S;for(let c=e;c<t;++c){const e=(D+c*p-z)*F+d,t=c*N+g;for(let c=r;c<s;++c){const r=(a+c*h-O)*$+e,s=c*T+t;for(let e=o;e<l;++e){const t=e*C+s;m+=E[(n+e*f-_)*M+r+i]*I[t+u]}}}}x[c+u]=m}}}}}return n.makeTensorInfo(A.shape,A.dtype,A.values)}};var IR={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:l}=a;lT([r],"conv3dBackpropInputV2");const u=br.computeStrides(r.shape),c=br.computeStrides(s.shape),d=tf.computeConv3DInfo(l,s.shape,o,1,i),p=new Xr(d.inShape,"float32"),h=p.values,[f,m,g,y]=p.strides,A=n.data.get(r.dataId).values,[x,b,v,w]=u,k=n.data.get(s.dataId).values,[I,S,N,T]=c,{batchSize:C,filterDepth:E,filterHeight:R,filterWidth:F,inChannels:$,inDepth:M,inHeight:z,inWidth:_,outChannels:O,outDepth:D,outHeight:P,outWidth:L,strideDepth:W,strideHeight:B,strideWidth:U}=d,V=E-1-d.padInfo.front,G=R-1-d.padInfo.top,H=F-1-d.padInfo.left;for(let j=0;j<C;++j)for(let e=0;e<$;++e)for(let t=0;t<M;++t){const n=t-V,a=Math.max(0,Math.ceil(n/W)),r=Math.min(D,(E+n)/W);for(let s=0;s<z;++s){const i=s-G,o=Math.max(0,Math.ceil(i/B)),l=Math.min(P,(R+i)/B);for(let u=0;u<_;++u){const c=u-H,d=Math.max(0,Math.ceil(c/U)),p=Math.min(L,(F+c)/U);let C=0;for(let t=a;t<r;++t){const a=t*W-n;for(let n=o;n<l;++n){const r=n*B-i;for(let s=d;s<p;++s){const i=x*j+b*t+v*n+w*s,o=I*(E-1-a)+S*(R-1-r)+N*(F-1-(s*U-c))+T*e;for(let e=0;e<O;++e){C+=A[i+e]*k[o+e]}}}}h[f*j+m*t+g*s+y*u+e]=C}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},SR=zT(Ot,(e=>Math.cos(e))),NR={kernelName:Ot,backendName:"cpu",kernelFunc:SR},TR=zT(Dt,(e=>Math.cosh(e))),CR={kernelName:Dt,backendName:"cpu",kernelFunc:TR};var ER={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=a,[c,d,p,h]=r.shape,f=s.shape[0],[m,g]=o,y=Mi([f,m,g,h],"float32"),A=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,b=n.data.get(r.dataId).values,v=br.computeStrides(r.shape),w=br.computeStrides(y.shape);for(let k=0;k<f;k++){const e=4*k,t=A[e],n=A[e+1],a=A[e+2],r=A[e+3],s=x[k];if(s>=c)continue;const i=m>1?(a-t)*(d-1)/(m-1):0,o=g>1?(r-n)*(p-1)/(g-1):0;for(let c=0;c<m;c++){const e=m>1?t*(d-1)+c*i:.5*(t+a)*(d-1);if(e<0||e>d-1)for(let t=0;t<g;t++)for(let e=0;e<h;e++){const n=e+t*w[2]+c*w[1]+k*w[0];y.values[n]=u}else if("bilinear"===l){const t=Math.floor(e),a=Math.ceil(e),i=e-t;for(let e=0;e<g;e++){const l=g>1?n*(p-1)+e*o:.5*(n+r)*(p-1);if(l<0||l>p-1){for(let t=0;t<h;t++){const n=t+e*w[2]+c*w[1]+k*w[0];y.values[n]=u}continue}const d=Math.floor(l),f=Math.ceil(l),m=l-d;for(let n=0;n<h;n++){let r=n+d*v[2]+t*v[1]+s*v[0];const o=b[r];r=n+f*v[2]+t*v[1]+s*v[0];const l=b[r];r=n+d*v[2]+a*v[1]+s*v[0];const u=b[r];r=n+f*v[2]+a*v[1]+s*v[0];const p=o+(l-o)*m,h=u+(b[r]-u)*m;r=n+e*w[2]+c*w[1]+k*w[0],y.values[r]=p+(h-p)*i}}}else for(let t=0;t<g;++t){const a=g>1?n*(p-1)+t*o:.5*(n+r)*(p-1);if(a<0||a>p-1){for(let e=0;e<h;e++){const n=e+t*w[2]+c*w[1]+k*w[0];y.values[n]=u}continue}const i=Math.round(a),l=Math.round(e);for(let e=0;e<h;e++){const n=e+i*v[2]+l*v[1]+s*v[0],a=e+t*w[2]+c*w[1]+k*w[0];y.values[a]=b[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};var RR={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;lT(r,"cumsum");const l=tf.getAxesPermutation([s],r.shape.length);let u=r;null!=l&&(u=MC({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=tf.getInnerMostAxes(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const d=ds(u.dtype,"int32"),p=br.makeZerosTypedArray(br.sizeFromShape(u.shape),d),h=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<h.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)p[t]=i?0:h[t];else{const n=m(y,e-1);p[t]=i?h[n]+p[n]:h[t]+p[n]}}const g=n.makeTensorInfo(u.shape,d,p);if(null!=l){const e=MC({inputs:{x:g},backend:n,attrs:{perm:tf.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}};var FR={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a;if(1===r.shape.length){const e=FT(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===r.shape.length){const e=$T(n.bufferSync(r),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};var $R={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a;br.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],d=l*s,p=u*s,h=c/(s*s),f=n.data.get(r.dataId).values,m=new Float32Array(o*d*p*h);let g=0;for(let y=0;y<o;++y)for(let e=0;e<d;++e){const t=Math.floor(e/s),n=e%s;for(let e=0;e<p;++e){const a=Math.floor(e/s),r=(n*s+e%s)*h;for(let e=0;e<h;++e){const n=e+r+c*(a+u*(t+l*y));m[g++]=f[n]}}}return n.makeTensorInfo([o,d,p,h],r.dtype,m)}};function MR(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=a;lT([r,s],"depthwiseConv2DNative");const c=br.computeStrides(r.shape),d=br.computeStrides(s.shape);let p=l;null==p&&(p=[1,1]),br.assert(tf.eitherStridesOrDilationsAreOne(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const h=tf.computeConv2DInfo(r.shape,s.shape,i,p,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:A}=h,x=A.left,b=A.top,v=h.outChannels/h.inChannels,w=new Xr(h.outShape,r.dtype),k=n.data.get(r.dataId).values,I=n.data.get(s.dataId).values,S=w.values;for(let N=0;N<h.batchSize;++N){const e=N*c[0],t=N*w.strides[0];for(let n=0;n<h.outHeight;++n){const a=t+n*w.strides[1],r=n*h.strideHeight-b;for(let t=0;t<f;++t){const n=r+t*g;if(n<0||n>=h.inHeight)continue;const s=t*d[0],i=e+n*c[1];for(let e=0;e<h.outWidth;++e){const t=a+e*w.strides[2],n=e*h.strideWidth-x;for(let e=0;e<m;++e){const a=n+e*y;if(a<0||a>=h.inWidth)continue;const r=s+e*d[1],o=i+a*h.inChannels;let l=t,u=r;for(let e=0;e<h.inChannels;++e){const t=k[o+e];for(let e=0;e<v;++e)S[l+e]+=t*I[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var zR={kernelName:Ut,backendName:"cpu",kernelFunc:MR};var _R={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=a;lT([r,s],"depthwiseConv2dNativeBackpropFilter");const d=tf.computeConv2DInfo(r.shape,c,i,o,l,u,!0),{strideHeight:p,strideWidth:h,filterHeight:f,filterWidth:m}=d,g=new Xr(d.filterShape,"float32"),y=d.padInfo.left,A=d.padInfo.top,x=d.outChannels/d.inChannels,b=n.data.get(r.dataId).values,v=new Xr(r.shape,r.dtype,b),w=n.data.get(s.dataId).values,k=new Xr(s.shape,s.dtype,w);for(let I=0;I<f;++I){const e=Math.max(0,Math.ceil((A-I)/p)),t=Math.min(d.outHeight,(d.inHeight+A-I)/p);for(let n=0;n<m;++n){const a=Math.max(0,Math.ceil((y-n)/h)),r=Math.min(d.outWidth,(d.inWidth+y-n)/h);for(let s=0;s<d.outChannels;++s){const i=Math.trunc(s/x),o=s%x;let l=0;for(let u=0;u<d.batchSize;++u)for(let o=e;o<t;++o){const e=I+o*p-A;for(let t=a;t<r;++t){const a=n+t*h-y;l+=v.get(u,e,a,i)*k.get(u,o,t,s)}}g.set(l,I,n,i,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};var OR={kernelName:Gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=a;lT([r,s],"depthwiseConv2DNativeBackpropInput");const d=br.computeStrides(r.shape),p=br.computeStrides(s.shape),h=tf.computeConv2DInfo(c,s.shape,i,o,l,u,!0),f=new Xr(h.inShape,"float32"),m=f.values,[g,y,A]=f.strides,x=n.data.get(r.dataId).values,[b,v,w]=d,k=n.data.get(s.dataId).values,[I,S,N]=p,{batchSize:T,filterHeight:C,filterWidth:E,inChannels:R,inHeight:F,inWidth:$,outChannels:M,outHeight:z,outWidth:_,strideHeight:O,strideWidth:D}=h,P=C-1-h.padInfo.top,L=E-1-h.padInfo.left,W=M/R;for(let B=0;B<T;++B)for(let e=0;e<R;++e)for(let t=0;t<F;++t){const n=t-P,a=Math.max(0,Math.ceil(n/O)),r=Math.min(z,(C+n)/O);for(let s=0;s<$;++s){const i=s-L,o=Math.max(0,Math.ceil(i/D)),l=Math.min(_,(E+i)/D);let u=0;for(let t=a;t<r;++t){const a=t*O-n;for(let n=o;n<l;++n){const r=b*B+v*t+w*n,s=I*(C-1-a)+S*(E-1-(n*D-i))+N*e;for(let t=0;t<W;++t){u+=x[r+(e*W+t)]*k[s+t]}}}m[g*B+y*t+A*s+e]=u}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};var DR={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=br.sizeFromShape(a.shape),s=n.data.get(a.dataId).values,i=Mi([r,r],a.dtype),o=i.values;for(let u=0;u<s.length;u++)o[u*r+u]=s[u];const l=[...a.shape,...a.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},PR={kernelName:jt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:r}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(a.dataId).values,c=a.shape.length,d=l.data.get(r.dataId).values,p=r.shape.length,{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:A,padInfo:x,strideHeight:b,strideWidth:v,filterHeight:w,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=tf.computeDilation2DInfo(a.shape,r.shape,s,i,"NHWC",o),T=br.sizeFromShape(N),C=N.length,E=br.getArrayFromDType(a.dtype,T);for(let R=0;R<h;++R)for(let e=0;e<y;++e){const t=e*b-x.top;for(let n=0;n<A;++n){const s=n*v-x.left;for(let i=0;i<g;++i){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<w;++e){const n=t+e*I;if(n>=0&&n<f)for(let t=0;t<k;++t){const l=s+t*S;if(l>=0&&l<m){const s=br.locToIndex([R,n,l,i],c,br.computeStrides(a.shape)),h=br.locToIndex([e,t,i],p,br.computeStrides(r.shape)),f=u[s]+d[h];f>o&&(o=f)}}}E[br.locToIndex([R,e,n,i],C,br.computeStrides(N))]=o}}}return{dataId:l.write(br.toTypedArray(E,a.dtype),N,a.dtype),shape:N,dtype:a.dtype}}},LR={kernelName:Xt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:r,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=br.toNestedArray(a.shape,u.data.get(a.dataId).values),d=br.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:A,strideHeight:x,strideWidth:b,filterHeight:v,filterWidth:w,dilationHeight:k,dilationWidth:I,outShape:S}=tf.computeDilation2DInfo(a.shape,r.shape,i,o,"NHWC",l);br.assert(s.rank===S.length,(()=>`Error in ${Xt}, dy must have the same rank as output ${S.length}, but got ${s.rank}`));const N=br.toNestedArray(S,u.data.get(s.dataId).values),T=br.makeZerosNestedTypedArray(r.shape,r.dtype);for(let C=0;C<p;++C)for(let e=0;e<g;++e){const t=e*x-A.top;for(let n=0;n<y;++n){const a=n*b-A.left;for(let r=0;r<m;++r){let s=Number.MIN_SAFE_INTEGER,i=0,o=0;for(let e=0;e<v;++e){const n=t+e*k;if(n>=0&&n<h)for(let t=0;t<w;++t){const l=a+t*I;if(l>=0&&l<f){const a=c[C][n][l][r]+d[e][t][r];a>s&&(s=a,i=e,o=t)}}}T[i][o][r]+=N[C][e][n][r]}}}return{dataId:u.write(br.toTypedArray(T,a.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},WR={kernelName:qt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,filter:r,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=br.toNestedArray(a.shape,u.data.get(a.dataId).values),d=br.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:h,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:A,strideHeight:x,strideWidth:b,filterHeight:v,filterWidth:w,dilationHeight:k,dilationWidth:I,outShape:S}=tf.computeDilation2DInfo(a.shape,r.shape,i,o,"NHWC",l);br.assert(s.rank===S.length,(()=>`Error in ${qt}, dy must have the same rank as output ${S.length}, but got ${s.rank}`));const N=br.toNestedArray(S,u.data.get(s.dataId).values),T=br.makeZerosNestedTypedArray(a.shape,a.dtype);for(let C=0;C<p;++C)for(let e=0;e<g;++e){const t=e*x-A.top;for(let n=0;n<y;++n){const a=n*b-A.left;for(let r=0;r<m;++r){let s=Number.MIN_SAFE_INTEGER,i=t<0?0:t,o=a<0?0:a;for(let e=0;e<v;++e){const n=t+e*k;if(n>=0&&n<h)for(let t=0;t<w;++t){const l=a+t*I;if(l>=0&&l<f){const a=c[C][n][l][r]+d[e][t][r];a>s&&(s=a,i=n,o=l)}}}T[C][i][o][r]+=N[C][e][n][r]}}}return{dataId:u.write(br.toTypedArray(T,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};function BR(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;let o;lT(r,"sum"),o="bool"===r.dtype?kT({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):xT({inputs:{x:r},backend:n});const l=o.shape.length,u=br.parseAxisParam(s,o.shape),c=tf.getAxesPermutation(u,l);let d=u,p=o;null!=c&&(p=MC({inputs:{x:o},backend:n,attrs:{perm:c}}),d=tf.getInnerMostAxes(d.length,l)),tf.assertAxesAreInnerMostDims("sum",d,p.shape.length);const[h,f]=tf.computeOutAndReduceShapes(p.shape,d);let m=AT(n,h,tf.upcastType(p.dtype,"int32"));const g=br.sizeFromShape(f),y=n.data.get(m.dataId).values,A=n.data.get(p.dataId).values;for(let x=0;x<y.length;++x){const e=x*g;let t=0;for(let n=0;n<g;++n)t+=A[e+n];y[x]=t}if(i){const e=m;m=EE({inputs:{x:m},backend:n,attrs:{shape:tf.expandShapeToKeepDim(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}var UR={kernelName:Ea,backendName:"cpu",kernelFunc:BR};var VR={kernelName:Zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:i,summedDims:o,idDims:l}=tf.decodeEinsumEquation(r,s.length);tf.checkEinsumDimSizes(i.length,l,s);const{path:u,steps:c}=tf.getEinsumComputePath(o,l),d=c.length;let p=null,h=i.length;const f=[];for(let m=0;m<d;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:a}=tf.getEinsumPermutation(h,l[e]);let r;tf.isIdentityPermutation(t)?r=s[e]:(r=MC({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(r));const i=r.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);br.arraysEqual(r.shape,i)||(r=EE({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===p?p=r:(p=SC({inputs:{a:r,b:p},backend:n}),f.push(p))}m<d-1&&(u[m]>=0&&(p=BR({inputs:{x:p},backend:n,attrs:{axis:u[m]-(i.length-h),keepDims:!1}}),f.push(p)),h--)}for(const m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}};var GR={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:r}=t;lT([a,r],"eluGrad");const s=new Float32Array(br.sizeFromShape(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values;for(let l=0;l<i.length;++l){const e=i[l];s[l]=e>=1?o[l]:o[l]*(e+1)}return n.makeTensorInfo(r.shape,"float32",s)}},HR=tf.ERF_P,jR=tf.ERF_A1,qR=tf.ERF_A2,XR=tf.ERF_A3,KR=tf.ERF_A4,ZR=tf.ERF_A5,YR=zT(Qt,(e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+HR*n);return t*(1-((((ZR*a+KR)*a+XR)*a+qR)*a+jR)*a*Math.exp(-n*n))})),JR={kernelName:Qt,backendName:"cpu",kernelFunc:YR};function QR(e){const{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:s}=a,i=r.shape.length,o=r.shape.slice();let l=s;return s<0&&(br.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),EE({inputs:{x:r},backend:n,attrs:{shape:o}})}var eF={kernelName:nn,backendName:"cpu",kernelFunc:QR},tF=mT(((e,t)=>e/t)),nF=ST(Kt,tF),aF={kernelName:Kt,backendName:"cpu",kernelFunc:nF};function rF(e,t,n){const a=e.shape,r=a[0],s=a[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,s],c=br.sizeFromShape(u),d=br.getTypedArrayFromDType("float32",c),p=br.getTypedArrayFromDType("float32",c);for(let g=0;g<r;g++){const e=HC({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=HC({inputs:{x:l},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=gT({inputs:{real:e,imag:a},backend:n}),{real:i,imag:u}=sF(r,t,n),c=tf.mergeRealAndImagArrays(i,u);for(let t=0;t<s;t++){const e=tf.getComplexWithIndex(c,t);d[g*s+t]=e.real,p[g*s+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r)}const h=n.makeTensorInfo(u,"float32",d),f=n.makeTensorInfo(u,"float32",p),m=gT({inputs:{real:h,imag:f},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}function sF(e,t,n){const a=br.sizeFromShape(e.shape),r=n.data.get(e.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0===((o=a)&o-1)){const r=iF(s,i,a,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),s=n.makeTensorInfo([],"float32",br.createScalarValue(a,"float32")),i=xT({inputs:{x:s},backend:n}),l=aF.kernelFunc({inputs:{a:e,b:s},backend:n}),u=aF.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,d=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:d}}return r}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let r=0;r<t;r++){let s=0,i=0;for(let a=0;a<t;a++){const o=tf.exponent(r*a,t,n),l=tf.getComplexWithIndex(e,a);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),tf.assignToTypedArray(a,s,i,r)}return a}(tf.mergeRealAndImagArrays(s,i),a,t);return tf.splitRealAndImagArrays(e)}var o}function iF(e,t,n,a,r){if(1===n)return{real:e,imag:t};const s=tf.mergeRealAndImagArrays(e,t),i=n/2,o=tf.complexWithEvenIndex(s),l=o.real,u=o.imag,c=[l.length],d=r.makeTensorInfo(c,"float32",l),p=r.makeTensorInfo(c,"float32",u),h=gT({inputs:{real:d,imag:p},backend:r}),f=tf.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],A=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),b=gT({inputs:{real:A,imag:x},backend:r}),v=iF(l,u,i,a,r),w=v.real,k=v.imag,I=[w.length],S=r.makeTensorInfo(I,"float32",w),N=r.makeTensorInfo(I,"float32",k),T=gT({inputs:{real:S,imag:N},backend:r}),C=iF(m,g,i,a,r),E=C.real,R=C.imag,F=[E.length],$=r.makeTensorInfo(F,"float32",E),M=r.makeTensorInfo(F,"float32",R),z=gT({inputs:{real:$,imag:M},backend:r}),_=tf.exponents(n,a),O=[_.real.length],D=r.makeTensorInfo(O,"float32",_.real),P=r.makeTensorInfo(O,"float32",_.imag),L=gT({inputs:{real:D,imag:P},backend:r}),W=SC({inputs:{a:L,b:z},backend:r}),B=ET({inputs:{a:T,b:W},backend:r}),U=uE({inputs:{a:T,b:W},backend:r}),V=vT({inputs:{input:B},backend:r}),G=vT({inputs:{input:U},backend:r}),H=fR({inputs:{input:B},backend:r}),j=fR({inputs:{input:U},backend:r}),q=gR({inputs:[V,G],backend:r,attrs:{axis:0}}),X=gR({inputs:[H,j],backend:r,attrs:{axis:0}}),K=r.data.get(q.dataId).values,Z=r.data.get(X.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(A),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(X),{real:K,imag:Z}}var oF={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=br.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],i=EE({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),o=rF(i,!1,n),l=EE({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function lF(e){const{backend:t,attrs:n}=e,{shape:a,value:r,dtype:s}=n,i=s||br.inferDtype(r),o=br.getArrayFromDType(i,br.sizeFromShape(a));return function(e,t,n){e.fill(t)}(o,r),t.makeTensorInfo(a,i,o)}var uF={kernelName:sn,backendName:"cpu",kernelFunc:lF};var cF={kernelName:on,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,r=n,s=br.getTypedArrayFromDType(a.dtype,br.sizeFromShape(a.shape)),[i,o,l,u]=a.shape,c=r.data.get(a.dataId).values;for(let d=0;d<i;d++){const e=d*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let t=0;t<l;t++){const a=t*u;for(let r=0;r<u;r++){const i=Math.round(l-t-1),o=e+n+a+r;let d=c[o];if(i>=0&&i<l){d=c[e+n+i*u+r]}s[o]=d}}}}return{dataId:r.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},dF=mT(((e,t)=>Math.floor(e/t))),pF=ST(un,dF,null,"int32"),hF={kernelName:un,backendName:"cpu",kernelFunc:pF};var fF={kernelName:sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a;let m=AR({inputs:{x:r,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p}});if(i){const e=m;m=ET({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=CE(n,m,h,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var mF={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a;let m=MR({inputs:{x:r,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p}});if(i){const e=m;m=ET({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=CE(n,m,h,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var gF={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=br.sizeFromShape(a.shape),i=r.shape,o=i[i.length-1],[l,u,c,d]=tf.prepareAndValidate(a,r);if(0===u)return n.makeTensorInfo(l,a.dtype,[]);const p=JT(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,u,o,c,d,a.shape,s);return n.makeTensorInfo(l,a.dtype,p.values)}};var yF={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a;lT([r,s],"gatherV2");const l=br.parseAxisParam(i,r.shape)[0],u=n.data.get(s.dataId).values,c=r.shape[l];for(let x=0;x<u.length;++x){const e=u[x];br.assert(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}let d=o;null==o&&(d=0);const p=br.sizeFromShape(s.shape),h=tf.segment_util.collectGatherOpShapeInfo(r,s,l,d),f=EE({inputs:{x:r},backend:n,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),m=EE({inputs:{x:s},backend:n,attrs:{shape:[h.batchSize,p/h.batchSize]}}),g=[h.batchSize,h.outerSize,p/h.batchSize,h.sliceSize],y=n.bufferSync(m),A=QT(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(h.outputShape,A.dtype,A.values)}};var AF={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=br.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],i=EE({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),o=rF(i,!0,n),l=EE({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},xF=zT(An,(e=>Number.isFinite(e)?1:0),"bool"),bF={kernelName:An,backendName:"cpu",kernelFunc:xF},vF=zT(xn,(e=>Math.abs(e)===1/0?1:0),"bool"),wF={kernelName:xn,backendName:"cpu",kernelFunc:vF},kF=zT(bn,(e=>Number.isNaN(e)?1:0),"bool"),IF={kernelName:bn,backendName:"cpu",kernelFunc:kF};var SF={kernelName:In,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=pC(a,r,s);return t.makeTensorInfo([i.length],"float32",i)}},NF=zT(Nn,(e=>Math.log1p(e))),TF={kernelName:Nn,backendName:"cpu",kernelFunc:NF},CF=mT(((e,t)=>e&&t)),EF=ST(Tn,CF,null,"bool"),RF={kernelName:Tn,backendName:"cpu",kernelFunc:EF},FF=zT(Cn,(e=>e?0:1),"bool"),$F={kernelName:Cn,backendName:"cpu",kernelFunc:FF},MF=mT(((e,t)=>e||t)),zF=ST(En,MF,null,"bool"),_F={kernelName:En,backendName:"cpu",kernelFunc:zF};var OF={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=a;lT(r,"LRN");const u=r.shape[3],c=u-1,d=n.data.get(r.dataId).values,p=br.sizeFromShape(r.shape),h=new Float32Array(p);function f(e){const t=e%u;let n=e-t+Math.max(0,t-s);const a=e-t+Math.min(t+s,c);let r=0;for(;n<=a;n++){const e=d[n];r+=e*e}return r}for(let m=0;m<p;m++){const e=f(m),t=d[m]*Math.pow(i+o*e,-l);h[m]=t}return n.makeTensorInfo(r.shape,r.dtype,h)}};var DF={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=a;lT(i,"LRNGrad");const d=br.sizeFromShape(i.shape),p=i.shape[3],h=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(d),y=d;for(let A=0;A<y;A++){const e=A%p,t=A-e+Math.max(0,e-o),n=A-e+Math.min(p,e+o+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(f[r],2);a=u*a+l;for(let r=t;r<n;r++){let e=-2*u*c*f[r]*m[A]/a;A===r&&(e+=Math.pow(a,-c)),e*=h[A],g[r]+=e}}return n.makeTensorInfo(i.shape,r.dtype,g)}};function PF(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,o=n;let l=r.shape;const u=l.length,c=br.parseAxisParam(s,l);let d=c;const p=tf.getAxesPermutation(d,u);let h=o.data.get(r.dataId).values;if(null!=p){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[p[t]];h=$C(h,l,r.dtype,p,e),d=tf.getInnerMostAxes(d.length,u),l=e}lT(r,"max"),tf.assertAxesAreInnerMostDims("max",d,u);const[f,m]=tf.computeOutAndReduceShapes(l,d),g=gC(h,br.sizeFromShape(m),f,r.dtype),y=o.write(g,f,r.dtype);let A=f;if(i){A=tf.expandShapeToKeepDim(f,c)}return{dataId:y,shape:A,dtype:r.dtype}}var LF={kernelName:Mn,backendName:"cpu",kernelFunc:PF};var WF={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;lT(r,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;br.assert(tf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=tf.computePool2DInfo(r.shape,s,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&br.arraysEqual(u.inShape,u.outShape))c=xT({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=br.computeStrides(r.shape),a=eR(e,r.shape,r.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,r.dtype,a.values)}return c}};var BF={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a;lT(r,"maxPool3d");const c=tf.computePool3DInfo(r.shape,s,i,1,o,l,u),d=nR(n.data.get(r.dataId).values,r.shape,r.dtype,br.computeStrides(r.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}};var UF={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a;lT([r,s],"maxPool3DGrad");const c=tf.computePool3DInfo(s.shape,i,o,1,l,u),d=function(e,t){const n=Mi(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,d=t.effectiveFilterWidth,p=t.padInfo.front,h=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const A=y*a-p;let x=A;for(;x<0;)x+=i;const b=Math.min(t.inDepth,u+A);for(let a=0;a<t.outHeight;++a){const u=a*r-h;let p=u;for(;p<0;)p+=o;const v=Math.min(t.inHeight,c+u);for(let r=0;r<t.outWidth;++r){const h=r*s-f;let w=h;for(;w<0;)w+=l;const k=Math.min(t.inWidth,d+h);let I=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<b;t+=i){const n=t-A;for(let a=p;a<v;a+=o){const r=a-u;for(let s=w;s<k;s+=l){const i=s-h,o=e.get(m,t,a,s,g);o>=I&&(I=o,S=n*c*d+r*c+i)}}}n.set(S,m,y,a,r,g)}}}return n}(n.bufferSync(s),c),p=c.strideDepth,h=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,A=c.effectiveFilterDepth,x=c.effectiveFilterHeight,b=c.effectiveFilterWidth,v=A-1-c.padInfo.front,w=b-1-c.padInfo.left,k=x-1-c.padInfo.top,I=Mi(s.shape,"float32"),S=n.bufferSync(r);for(let N=0;N<c.batchSize;++N)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let a=0;a<c.inWidth;++a){const r=t-v,s=n-k,i=a-w;let o=0;for(let t=0;t<A;t+=m){const n=(r+t)/p;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let a=0;a<x;a+=g){const r=(s+a)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let s=0;s<b;s+=y){const l=(i+s)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const u=A*x*b-1-d.get(N,n,r,l,e)===t*x*b+a*b+s?1:0;if(0===u)continue;o+=S.get(N,n,r,l,e)*u}}}I.set(o,N,t,n,a,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};var VF={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;lT([s,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=a,p=tf.computePool2DInfo(o.shape,l,u,1,c,d),h=n.data.get(o.dataId).values,f=Mi(p.outShape,o.dtype,tR(h,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,A=p.dilationWidth,x=p.effectiveFilterHeight,b=p.effectiveFilterWidth,v=b-1-p.padInfo.left,w=x-1-p.padInfo.top,k=Mi(o.shape,"float32"),I=n.data.get(r.dataId).values,S=Mi(r.shape,"float32",I);for(let N=0;N<p.batchSize;++N)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const a=t-w,r=n-v;let s=0;for(let t=0;t<x;t+=y){const n=(a+t)/m;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let a=0;a<b;a+=A){const i=(r+a)/g;if(i<0||i>=p.outWidth||Math.floor(i)!==i)continue;const o=x*b-1-f.get(N,n,i,e)===t*b+a?1:0;if(0===o)continue;s+=S.get(N,n,i,e)*o}}k.set(s,N,t,n,e)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};var GF={kernelName:Ln,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;lT(a,"MaxPoolWithArgmax");const u=l.data.get(a.dataId).values,c=tf.computePool2DInfo(a.shape,r,s,[1,1],i),[d,p]=function(e,t,n,a,r){const s=eR(e,0,n,br.computeStrides(t),r,"max"),i=tR(e,t,n,r,!0,a);return[s.values,i.values]}(u,a.shape,a.dtype,o,c),h=l.write(d,c.outShape,a.dtype),f=l.write(p,c.outShape,a.dtype);return[{dataId:h,shape:c.outShape,dtype:a.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};var HF={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=br.parseAxisParam(s,r.shape),l=tf.computeOutAndReduceShapes(r.shape,o)[1],u=br.sizeFromShape(l),c=[],d=n.makeTensorInfo([],"float32",new Float32Array([u]));c.push(d);const p=kT({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});c.push(p);const h=nF({inputs:{a:p,b:d},backend:n});c.push(h);const f=BR({inputs:{x:h},backend:n,attrs:{axis:s,keepDims:i}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};var jF={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;lT(r,"min");const o=br.parseAxisParam(s,r.shape);let l=o;const u=tf.getAxesPermutation(l,r.shape.length);let c=r;null!=u&&(c=MC({inputs:{x:r},backend:n,attrs:{perm:u}}),l=tf.getInnerMostAxes(l.length,r.shape.length)),tf.assertAxesAreInnerMostDims("min",l,c.shape.length);const[d,p]=tf.computeOutAndReduceShapes(c.shape,l),h=br.sizeFromShape(p),f=br.makeZerosTypedArray(br.sizeFromShape(d),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*h;let t=m[e];for(let n=0;n<h;++n){const a=m[e+n];(Number.isNaN(a)||a<t)&&(t=a)}f[y]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,f);if(i){const e=EE({inputs:{x:g},backend:n,attrs:{shape:tf.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var qF={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,mode:i}=a;lT(r,"mirrorPad");const o=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===i?0:1,d=n.data.get(r.dataId).values,p=r.shape.length,h=br.computeStrides(r.shape),f=br.sizeFromShape(o),m=o.length,g=br.computeStrides(o),y=br.getTypedArrayFromDType(r.dtype,f);for(let A=0;A<f;A++){let e=br.indexToLoc(A,m,g);for(let n=0;n<m;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-c:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+c);e=e.map(((e,t)=>e-l[t]));const t=br.locToIndex(e,p,h);y[A]=d[t]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},XF=mT(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),KF=ST(Gn,XF),ZF={kernelName:Gn,backendName:"cpu",kernelFunc:KF},YF=E(B());function JF(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=r.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=br.parseAxisParam([o],r.shape),u=PF({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=tf.expandShapeToKeepDim(u.shape,l),d=EE({inputs:{x:u},backend:n,attrs:{shape:c}}),p=uE({inputs:{a:r,b:d},backend:n}),h=GT({inputs:{x:p},backend:n}),f=BR({inputs:{x:h},backend:n,attrs:{axis:l,keepDims:!1}}),m=EE({inputs:{x:f},backend:n,attrs:{shape:c}}),g=nF({inputs:{a:h,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var QF={kernelName:$a,backendName:"cpu",kernelFunc:JF};var e$={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a;lT(r,"multinomial");const l=o?r:JF({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],d=n.data.get(l.dataId).values,p=[u,s],h=br.makeZerosTypedArray(br.sizeFromShape(p),"int32");for(let f=0;f<u;++f){const e=f*c,t=new Float32Array(c-1);t[0]=d[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+d[e+r];const n=YF.alea(i.toString()),a=f*s;for(let r=0;r<s;++r){const e=n();h[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){h[a+r]=n;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",h)}},t$=nm.nonMaxSuppressionV3Impl;var n$={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a;lT(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:d}=t$(u,c,i,o,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},a$=nm.nonMaxSuppressionV4Impl;var r$={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=a;lT(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:h}=a$(c,d,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},s$=nm.nonMaxSuppressionV5Impl;var i$={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a;lT(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,d=n.data.get(s.dataId).values,p=i,h=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=s$(c,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var o$={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{depth:s,onValue:i,offValue:o}=a;lT(r,"oneHot");const l=br.sizeFromShape(r.shape),u=new Float32Array(l*s);u.fill(o);const c=n.data.get(r.dataId).values;for(let d=0;d<l;++d)c[d]>=0&&c[d]<s&&(u[d*s+c[d]]=i);return n.makeTensorInfo([...r.shape,s],"int32",u)}};function l$(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=vT({inputs:{input:a},backend:n}),t=l$({inputs:{x:e},backend:n}),r=fR({inputs:{input:a},backend:n}),s=l$({inputs:{x:r},backend:n}),i=gT({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}return lF({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}var u$={kernelName:er,backendName:"cpu",kernelFunc:l$};var c$={kernelName:Jn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=vT({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=fR({inputs:{input:r},backend:a}),i=l$({inputs:{x:s},backend:a}),o=gT({inputs:{real:n,imag:i},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}return lF({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function d$(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return QR({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{br.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),br.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=gR({inputs:t.map((e=>{const t=QR({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}var p$={kernelName:ea,backendName:"cpu",kernelFunc:d$};var h$={kernelName:ta,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;lT(r,"pad");const o=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(r.dataId).values,c=br.sizeFromShape(r.shape),d=r.shape.length,p=br.computeStrides(r.shape),h=br.sizeFromShape(o),f=o.length,m=br.computeStrides(o),g=br.getTypedArrayFromDType(r.dtype,h);0!==i&&g.fill(i);for(let y=0;y<c;y++){const e=br.indexToLoc(y,d,p).map(((e,t)=>e+l[t]));g[br.locToIndex(e,f,m)]=u[y]}return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},f$=mT(((e,t)=>Math.pow(e,t))),m$=ST(aa,f$),g$={kernelName:aa,backendName:"cpu",kernelFunc:m$};var y$={kernelName:ia,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:i}=n,o=DC(a,r,i,s);return t.makeTensorInfo([o.length],s,o)}},A$=zT(la,(e=>1/e)),x$={kernelName:la,backendName:"cpu",kernelFunc:A$};var b$={kernelName:ha,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a;lT(r,"resizeBilinear");const l=br.computeStrides(r.shape),[u,c]=o,[d,p,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(br.sizeFromShape([d,u,c,f])),y=[s&&u>1?p-1:p,s&&c>1?h-1:h],A=[s&&u>1?u-1:u,s&&c>1?c-1:c];let x=0;const b=y[0]/A[0],v=y[1]/A[1];for(let w=0;w<d;w++)for(let e=0;e<u;e++){let t;t=i?b*(e+.5)-.5:b*e;const n=Math.max(0,Math.floor(t)),a=t-n,r=Math.min(p-1,Math.ceil(t)),s=w*l[0]+n*l[1],o=w*l[0]+r*l[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),r=t-n,u=Math.min(h-1,Math.ceil(t)),c=s+n*l[2],d=o+n*l[2],p=s+u*l[2],y=o+u*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[d+e],s=t+(m[p+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([d,u,c,f],"float32",g)}};var v$={kernelName:fa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a;lT([s,r],"resizeBilinearGrad");const o=br.computeStrides(r.shape),[l,u,c,d]=r.shape,[,p,h]=s.shape,f=new Float32Array(l*u*c*d),m=[i&&p>1?u-1:u,i&&h>1?c-1:c],g=[i&&p>1?p-1:p,i&&h>1?h-1:h],y=m[0]/g[0],A=m[1]/g[1],x=n.data.get(s.dataId).values;let b=0;for(let v=0;v<l;v++){const e=v*o[0];for(let t=0;t<p;t++){const n=t*y,a=Math.floor(n),r=Math.min(Math.ceil(n),u-1),s=e+a*o[1],i=e+r*o[1],l=n-a,p=1-l;for(let e=0;e<h;e++){const t=e*A,n=Math.floor(t),a=Math.min(Math.ceil(t),c-1),r=t-n,u=1-r,h=s+n*o[2],m=s+a*o[2],g=i+n*o[2],y=i+a*o[2],v=p*u,w=p*r,k=l*u,I=l*r;for(let e=0;e<d;e++){const t=x[b++];f[h+e]+=t*v,f[m+e]+=t*w,f[g+e]+=t*k,f[y+e]+=t*I}}}}return n.makeTensorInfo([l,c,u,d],"float32",f)}};var w$={kernelName:da,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a;lT(r,"resizeNearestNeighbor");const l=br.computeStrides(r.shape),[u,c]=o,[d,p,h,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(d*u*c*f),y=[s&&u>1?p-1:p,s&&c>1?h-1:h],A=[s&&u>1?u-1:u,s&&c>1?c-1:c],x=y[0]/A[0],b=y[1]/A[1];let v=0;for(let w=0;w<d;w++){const e=w*l[0];for(let t=0;t<u;t++){const n=i?x*(t+.5):x*t;let a=Math.min(p-1,s?Math.round(n):Math.floor(n));i&&(a=Math.max(0,a));const r=e+a*l[1];for(let e=0;e<c;e++){const t=i?b*(e+.5):b*e;let n=Math.min(h-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const a=r+n*l[2];for(let e=0;e<f;e++){const t=m[a+e];g[v++]=t}}}}return n.makeTensorInfo([d,u,c,f],r.dtype,g)}};var k$={kernelName:pa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a;lT([s,r],"resizeNearestNeighborGrad");const o=br.computeStrides(r.shape),l=br.computeStrides(s.shape),[u,c,d,p]=r.shape,[,h,f]=s.shape,m=new Float32Array(u*c*d*p),g=n.data.get(s.dataId).values,y=[i&&h>1?c-1:c,i&&f>1?d-1:d],A=[i&&h>1?h-1:h,i&&f>1?f-1:f],x=y[0]/A[0],b=y[1]/A[1],v=1/x,w=1/b,k=2*Math.ceil(v)+2,I=2*Math.ceil(w)+2;for(let S=0;S<u;S++){const e=S*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],a=Math.floor(t*v),r=Math.floor(a-k/2);for(let s=0;s<d;s++){const a=n+s*o[2],u=Math.floor(s*w),y=Math.floor(u-I/2);for(let n=0;n<p;n++){let o=0;for(let a=0;a<k;a++){const u=a+r;if(u<0||u>=h)continue;const p=e+u*l[1],m=u*x;if(t===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<I;e++){const t=e+y;if(t<0||t>=f)continue;const a=p+t*l[2],r=t*b;s===Math.min(d-1,i?Math.round(r):Math.floor(r))&&(o+=g[a+n])}}m[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}};var I$={kernelName:ga,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a;lT(r,"reverse");const i=r.shape.length,o=br.parseAxisParam(s,r.shape);if(0===i)return xT({inputs:{x:r},backend:n});const l=new Xr(r.shape,r.dtype),u=n.bufferSync(r);for(let c=0;c<l.size;c++){const e=l.indexToLoc(c),t=e.slice();o.forEach((e=>t[e]=r.shape[e]-1-t[e])),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},S$={kernelName:ar,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:r,fillValue:s,center:i}=t,o=n,l=br.getTypedArrayFromDType(a.dtype,br.sizeFromShape(a.shape)),[u,c,d,p]=a.shape,[h,f]=tf.getImageCenter(i,c,d),m=Math.sin(r),g=Math.cos(r),y=o.data.get(a.dataId).values;for(let A=0;A<u;A++){const e=A*d*c*p;for(let t=0;t<c;t++){const n=t*(d*p);for(let a=0;a<d;a++){const r=a*p;for(let i=0;i<p;i++){const o=[u,t,a,i],A=o[2],x=o[1];let b=(A-h)*g-(x-f)*m,v=(A-h)*m+(x-f)*g;b=Math.round(b+h),v=Math.round(v+f);let w=s;if("number"!==typeof s&&(w=3===i?255:s[i]),b>=0&&b<d&&v>=0&&v<c){w=y[e+v*(d*p)+b*p+i]}l[e+n+r+i]=w}}}}return{dataId:o.write(l,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},N$=zT(ya,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),T$={kernelName:ya,backendName:"cpu",kernelFunc:N$};function C$(e,t,n,a,r,s,i,o,l,u){const c=[a/r,r],d=e.values,p=t.values;if(0===a)return Mi(n,t.dtype);const h=Mi(c,t.dtype);h.values.fill(l);for(let f=0;f<s;f++){const e=[];let s=0;for(let t=0;t<i;t++){const n=d[f*i+t];e.push(n),s+=n*o[t]}if(s<0||s>=a/r)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<r;n++)u?h.values[s*r+n]+=p[f*r+n]:h.values[s*r+n]=0===t.rank?p[0]:p[f*r+n]}return h}var E$={kernelName:xa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=tf.calculateShapes(s,r,i),p=C$(n.bufferSync(r),n.bufferSync(s),i,d,u,l,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}};var R$={kernelName:ba,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t;lT([a,r,s],"select");const i=a.shape.length,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,c=ds(r.dtype,s.dtype),d=br.makeZerosTypedArray(br.sizeFromShape(r.shape),c);let p=0;const h=0===i||i>1||1===r.shape.length?1:br.sizeFromShape(r.shape.slice(1));for(let f=0;f<o.length;f++)for(let e=0;e<h;e++)1===o[f]?d[p++]=l[f]:d[p++]=u[f];return n.makeTensorInfo(r.shape,c,d)}},F$=tf.SELU_SCALEALPHA,$$=tf.SELU_SCALE,M$=zT(va,(e=>e>=0?$$*e:F$*(Math.exp(e)-1))),z$={kernelName:va,backendName:"cpu",kernelFunc:M$},_$=zT(Sa,(e=>e<0?-1:e>0?1:0)),O$={kernelName:Sa,backendName:"cpu",kernelFunc:_$},D$=zT(ka,(e=>Math.sin(e))),P$={kernelName:ka,backendName:"cpu",kernelFunc:D$},L$=zT(Ia,(e=>Math.sinh(e))),W$={kernelName:Ia,backendName:"cpu",kernelFunc:L$},B$=Math.log(1.1920928955078125e-7)+2,U$=zT(Ta,(e=>{const t=e>-B$,n=e<B$,a=Math.exp(e);let r;return r=n?a:t?e:Math.log(1+a),r})),V$={kernelName:Ta,backendName:"cpu",kernelFunc:U$};var G$={kernelName:Ra,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;lT([r],"spaceToBatchND");const o=br.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<r.shape.length;++g)l.push([0,0]);const u=h$.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=tf.getReshaped(u.shape,s,o,!1),d=tf.getPermuted(c.length,s.length,!1),p=tf.getReshapedPermuted(u.shape,s,o,!1),h=EE({inputs:{x:u},backend:n,attrs:{shape:c}}),f=MC({inputs:{x:h},backend:n,attrs:{perm:d}}),m=EE({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}};var H$={kernelName:Ma,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[d,p,h,f,m]=qC(o,a.shape,a.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(p,a.dtype,d),n.makeTensorInfo([p[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};var j$={kernelName:za,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(r.dataId).values),o=n.data.get(a.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,c,d]=XC(o,a.shape,a.dtype,i,l);return[n.makeTensorInfo(c,a.dtype,u),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};var q$={kernelName:_a,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,[u,c]=KC(i,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(c,a.dtype,u)}};var X$={kernelName:Oa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,[u,c]=KC(i,a.shape,a.dtype,o,l);return n.makeTensorInfo(c,a.dtype,u)}};var K$={kernelName:Da,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:p}=tf.calculateShapes(s,r,o),h=C$(n.bufferSync(r),n.bufferSync(s),o,p,c,u,l,d,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,h.dtype,h.values)}};var Z$={kernelName:Fa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=br.parseAxisParam(i,r.shape)[0],l=tf.prepareSplitSize(r,s,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const a=HC({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,a}))}},Y$={kernelName:La,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,a=t;lT(n,"square");const r=a.data.get(n.dataId).values,s=new Float32Array(r.length);for(let i=0;i<r.length;++i){const e=r[i];s[i]=e*e}return{dataId:a.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},J$=zT(tr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),Q$={kernelName:tr,backendName:"cpu",kernelFunc:J$};var eM={kernelName:Wa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:p}=a;lT(r,"stridedSlice");const{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:A,end:x,strides:b}=Io.sliceInfo(r.shape,s,i,o,l,u,c,d,p);let v;if(m)v=EE({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){br.assert(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=Io.computeOutShape(A,x,b),t=HC({inputs:{x:r},backend:n,attrs:{begin:A,size:e}});v=EE({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=nE(h,n.bufferSync(r),b,A);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}};var tM={kernelName:Ba,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:c,dataSplits:d}=t,p=n.data.get(c.dataId).values,h=n.data.get(d.dataId).values,[f,m]=aE(p,h,r,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};var nM={kernelName:Ua,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,d]=sE(o,l,r),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};var aM={kernelName:Va,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=iE(n.data.get(s.dataId).values,r);return n.makeTensorInfo(s.shape,"int32",i)}},rM=zT(Ha,(e=>Math.tan(e))),sM={kernelName:Ha,backendName:"cpu",kernelFunc:rM},iM=zT(ja,(e=>Math.tanh(e)));function oM(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return br.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return br.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return br.clamp(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function lM(e,t,n,a,r,s,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*a+o*r+l*s+u]:c}function uM(e,t,n,a,r,s,i,o,l,u,c){return lM(e,t,n,a,r,s,i,Math.round(o),Math.round(l),u,c)}function cM(e,t,n,a,r,s,i,o,l,u,c){const d=Math.floor(o),p=Math.floor(l),h=d+1,f=p+1;return(h-o)*((f-l)*lM(e,t,n,a,r,s,i,d,p,u,c)+(l-p)*lM(e,t,n,a,r,s,i,d,f,u,c))+(o-d)*((f-l)*lM(e,t,n,a,r,s,i,h,p,u,c)+(l-p)*lM(e,t,n,a,r,s,i,h,f,u,c))}var dM=[ME,fT,_E,DE,RT,PE,LE,WE,BE,UE,GE,jE,XE,YE,QE,aR,rR,sR,iR,$E,oR,lR,uR,cR,IT,PT,pR,yT,hR,yR,bR,vR,xR,kR,IR,wR,NR,CR,ER,RR,FR,$R,zR,_R,OR,DR,PR,WR,LR,aF,VR,AE,GR,UT,JR,HT,eF,XT,oF,uF,cF,YT,hF,fF,mF,gF,yF,nC,sC,bT,AF,mR,bF,wF,IF,bE,lC,dC,SF,mC,TF,RF,$F,_F,OF,DF,xC,WF,BF,UF,VF,GF,LF,HF,jF,wC,qF,ZF,e$,NC,CC,n$,r$,i$,FC,o$,c$,p$,h$,g$,kE,OC,y$,wT,x$,SE,TE,RE,b$,v$,w$,k$,I$,S$,T$,WC,E$,R$,z$,VC,O$,P$,W$,jC,QF,V$,G$,H$,j$,q$,X$,K$,Z$,JC,Y$,tE,Q$,eM,tM,nM,aM,cE,UR,sM,{kernelName:ja,backendName:"cpu",kernelFunc:iM},{kernelName:qa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;lT(r,"tile");const i=dE(n.bufferSync(r),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Xa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a;lT(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=fE(o,r.shape,r.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},zC,{kernelName:Ka,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,d,p,h]=r.shape,[f,m]=null!=u?u:[d,p],g=[c,f,m,h],y=br.computeStrides(r.shape),A=y[0],x=y[1],b=y[2],v=br.getTypedArrayFromDType(r.dtype,br.sizeFromShape(g));v.fill(l);const w=a.data.get(r.dataId).values,k=a.data.get(s.dataId).values;for(let I=0;I<c;++I){const e=1===s.shape[0]?k:k.subarray(8*I,8*I+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let a=0;a<h;++a){let r;const s=e[6]*n+e[7]*t+1;if(0===s)continue;const u=(e[0]*n+e[1]*t+e[2])/s,c=(e[3]*n+e[4]*t+e[5])/s,h=oM(u,p,o),f=oM(c,d,o);switch(i){case"nearest":r=uM(w,d,p,A,x,b,I,f,h,a,l);break;case"bilinear":r=cM(w,d,p,A,x,b,I,f,h,a,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}v[I*A+t*x+n*b+a]=r}return a.makeTensorInfo(g,r.dtype,v)}return{dataId:a.write(v,g,r.dtype),shape:r.shape,dtype:r.dtype}}},{kernelName:Ya,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;lT(s,"unique");const i=a.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=mE(i,r,s.shape,s.dtype);return[a.makeTensorInfo(l,s.dtype,o),a.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Ja,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const i=r.shape.length,o=r.shape[s],l=new Array(i-1);let u=0;for(let h=0;h<i;h++)h!==s&&(l[u++]=r.shape[h]);const c=new Array(i).fill(0),d=r.shape.slice();d[s]=1;const p=new Array(o);for(let h=0;h<p.length;h++){c[s]=h;const e=HC({inputs:{x:r},backend:n,attrs:{begin:c,size:d}});p[h]=EE({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return p}},{kernelName:Qa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a;lT(r,"unsortedSegmentSum");const o=[],l=[],u=r.shape.length-s.shape.length;let c=s;for(let p=0;p<u;++p){const e=QR({inputs:{input:c},backend:n,attrs:{dim:p+1}});c=e,l.push(e)}for(let p=0;p<i;++p){const e=br.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),a=BT({inputs:{a:t,b:c},backend:n}),s=kT({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),i=SC({inputs:{a:s,b:r},backend:n}),u=BR({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});o.push(u),l.push(t),l.push(a),l.push(s),l.push(i),l.push(u)}const d=d$({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},u$];for(const B0 of dM)fr(B0);var pM={};C(pM,{assertNotComplex:()=>vz,bindCanvasToFramebuffer:()=>YM,bindColorTextureToFramebuffer:()=>JM,bindTextureToProgramUniformSampler:()=>ZM,bindTextureUnit:()=>jM,bindVertexBufferToProgramAttribute:()=>HM,callAndCheck:()=>TM,canBeRepresented:()=>CM,createFragmentShader:()=>$M,createFramebuffer:()=>GM,createProgram:()=>OM,createStaticIndexBuffer:()=>WM,createStaticVertexBuffer:()=>LM,createTexture:()=>UM,createVertexShader:()=>FM,getBatchDim:()=>rz,getExtensionOrThrow:()=>RM,getFramebufferErrorMessage:()=>tz,getMaxTexturesInShader:()=>hz,getNumChannels:()=>BM,getProgramUniformLocation:()=>KM,getProgramUniformLocationOrThrow:()=>XM,getRowsCols:()=>sz,getShapeAs3D:()=>iz,getTextureShapeFromLogicalShape:()=>oz,getWebGLDisjointQueryTimerVersion:()=>fz,getWebGLErrorMessage:()=>EM,getWebGLMaxTextureSize:()=>cz,hasExtension:()=>mz,isCapableOfRenderingToFloatTexture:()=>yz,isDownloadFloatTextureEnabled:()=>Az,isReshapeFree:()=>uz,isWebGLFenceEnabled:()=>bz,isWebGLVersionEnabled:()=>gz,linkProgram:()=>DM,resetMaxTextureSize:()=>dz,resetMaxTexturesInShader:()=>pz,unbindColorTextureFromFramebuffer:()=>QM,unbindTextureUnit:()=>qM,validateFramebuffer:()=>ez,validateProgram:()=>PM,validateTextureSize:()=>VM});var hM={},fM={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function mM(e,t){hM[e]=t}function gM(e){if(!(e in hM)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!==typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);if(t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete hM[e]}),!1),1===e)return t.getContext("webgl",fM)||t.getContext("experimental-webgl",fM);return t.getContext("webgl2",fM)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;hM[e]=t}const t=hM[e];return null==t||t.isContextLost()?(delete hM[e],gM(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),hM[e])}var yM,AM,xM,bM=((yM=bM||{})[yM.DENSE=0]="DENSE",yM[yM.SHARED_BATCH=1]="SHARED_BATCH",yM),vM=((AM=vM||{})[AM.RENDER=0]="RENDER",AM[AM.UPLOAD=1]="UPLOAD",AM[AM.PIXELS=2]="PIXELS",AM[AM.DOWNLOAD=3]="DOWNLOAD",AM),wM=((xM=wM||{})[xM.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",xM[xM.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",xM[xM.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",xM[xM.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",xM[xM.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16",xM);function kM(e,t){return[t,e]}function IM(e){const t=br.sizeFromShape(e),n=Math.ceil(t/4);return br.sizeToSquarishShape(n)}function SM(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function NM(e,t){const n=e;let a,r,s,i,o,l,u,c,d,p;return 2===Ze().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,d=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(a=e.RGBA,r=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,d=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:d,textureTypeFloat:p}}function TM(e,t){const n=t();return Ze().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+EM(e,t))}(e),n}function CM(e){return!!(Ze().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function EM(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function RM(e,t){return nz(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function FM(e,t){const n=nz(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(TM(e,(()=>e.shaderSource(n,t))),TM(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function $M(e,t){const n=nz(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(TM(e,(()=>e.shaderSource(n,t))),TM(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=_M.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const a=+n[1],r=e.split("\n"),s=r.length.toString().length+2,i=r.map(((e,t)=>br.rightPad((t+1).toString(),s)+e));let o=0;for(let d=0;d<i.length;d++)o=Math.max(i[d].length,o);const l=i.slice(0,a-1),u=i.slice(a-1,a),c=i.slice(a);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${br.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var MM,zM,_M=/ERROR: [0-9]+:([0-9]+):/g;function OM(e){return nz(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function DM(e,t){if(TM(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function PM(e,t){if(TM(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function LM(e,t){const n=nz(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return TM(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),TM(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function WM(e,t){const n=nz(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return TM(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),TM(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function BM(){return 2===Ze().getNumber("WEBGL_VERSION")?1:4}function UM(e){return nz(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function VM(e,t){const n=Ze().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){throw new Error("Requested texture size "+`[${e}x${t}]`+" is invalid.")}if(e>n||t>n){throw new Error("Requested texture size "+`[${e}x${t}]`+" greater than WebGL maximum on this browser / GPU "+`[${n}x${n}]`+".")}}function GM(e){return nz(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function HM(e,t,n,a,r,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(TM(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),TM(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,s,i))),TM(e,(()=>e.enableVertexAttribArray(o))),!0)}function jM(e,t,n){az(e,n),TM(e,(()=>e.activeTexture(e.TEXTURE0+n))),TM(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function qM(e,t){az(e,t),TM(e,(()=>e.activeTexture(e.TEXTURE0+t))),TM(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function XM(e,t,n){return nz(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function KM(e,t,n){return e.getUniformLocation(t,n)}function ZM(e,t,n,a){TM(e,(()=>jM(e,t,a))),TM(e,(()=>e.uniform1i(n,a)))}function YM(e){TM(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),TM(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),TM(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function JM(e,t,n){TM(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),TM(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function QM(e,t){TM(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),TM(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function ez(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+tz(e,t))}function tz(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function nz(e,t,n){const a=TM(e,(()=>t()));if(null==a)throw new Error(n);return a}function az(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function rz(e,t=2){return br.sizeFromShape(e.slice(0,e.length-t))}function sz(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function iz(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[rz(e),...sz(e)]),t}function oz(e,t=!1){let n=Ze().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?br.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=br.squeezeShape(e);e=t.newShape}let a=br.sizeFromShape(e);if(e.length<=1&&a<=n)return[1,a];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=rz(e);let n=2,r=2;return e.length&&([n,r]=sz(e)),a=t*(n/2)*(r/2),br.sizeToSquarishShape(a).map((e=>2*e))}return br.sizeToSquarishShape(a)}function lz(e){return e%2===0}function uz(e,t){if(e=e.slice(-2),t=t.slice(-2),br.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],a=t.slice(-1)[0];if(n===a)return!0;if(lz(n)&&lz(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&lz(e[0])&&lz(t[0])}function cz(e){if(null==MM){const t=gM(e);MM=t.getParameter(t.MAX_TEXTURE_SIZE)}return MM}function dz(){MM=null}function pz(){zM=null}function hz(e){if(null==zM){const t=gM(e);zM=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,zM)}function fz(e){if(0===e)return 0;let t;const n=gM(e);return t=mz(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:mz(n,"EXT_disjoint_timer_query")?1:0,t}function mz(e,t){return null!=e.getExtension(t)}function gz(e){try{if(null!=gM(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function yz(e){if(0===e)return!1;const t=gM(e);if(1===e){if(!mz(t,"OES_texture_float"))return!1}else if(!mz(t,"EXT_color_buffer_float"))return!1;return xz(t)}function Az(e){if(0===e)return!1;const t=gM(e);if(1!==e){if(mz(t,"EXT_color_buffer_float"))return xz(t);const e="EXT_color_buffer_half_float";if(mz(t,e)){const n=t.getExtension(e);return function(e,t){const n=NM(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);const r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(i),o}(t,n)}return!1}if(!mz(t,"OES_texture_float"))return!1;if(!mz(t,"WEBGL_color_buffer_float"))return!1;return xz(t)}function xz(e){const t=NM(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function bz(e){if(2!==e)return!1;return null!=gM(e).fenceSync}function vz(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&br.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var wz=Ze();function kz(){let e,t,n,a,r,s,i,o,l,u;return 2===Ze().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function Iz(e,t,n="index"){const a=br.computeStrides(t);return a.map(((t,r)=>`${`int ${e[r]} = ${n} / ${t}`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function Sz(e,t,n="index"){const a=br.computeStrides(t);return a.map(((t,r)=>`${`int ${e[r]} = ${n} / outShapeStrides[${r}]`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function Nz(e,t,n="index"){const a=function(e,t){const n=e.length,a=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=a[n-1];for(let s=n-3;s>=0;--s)r[s]=`(${r[s+1]} * ${a[s+1]})`;return r}(e.map(((e,t)=>t)),t);return a.map(((t,r)=>`${`int ${e[r]} = ${n} / ${a[r]}`}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${a[r]}`:`index -= ${e[r]} * ${a[r]}`};`)).join("")}function Tz(e){const t=br.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}wz.registerFlag("HAS_WEBGL",(()=>wz.getNumber("WEBGL_VERSION")>0)),wz.registerFlag("WEBGL_VERSION",(()=>gz(2)?2:gz(1)?1:0)),wz.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),wz.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===wz.get("WEBGL_VERSION"))),wz.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),wz.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),wz.registerFlag("WEBGL_PACK",(()=>wz.getBool("HAS_WEBGL"))),wz.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>wz.getBool("WEBGL_PACK"))),wz.registerFlag("WEBGL_PACK_CLIP",(()=>wz.getBool("WEBGL_PACK"))),wz.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>wz.getBool("WEBGL_PACK"))),wz.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>wz.getBool("WEBGL_PACK"))),wz.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>wz.getBool("WEBGL_PACK"))),wz.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>wz.getBool("WEBGL_PACK"))),wz.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>wz.getBool("WEBGL_PACK"))),wz.registerFlag("WEBGL_PACK_REDUCE",(()=>wz.getBool("WEBGL_PACK"))),wz.registerFlag("WEBGL_LAZILY_UNPACK",(()=>wz.getBool("WEBGL_PACK"))),wz.registerFlag("WEBGL_CONV_IM2COL",(()=>wz.getBool("WEBGL_PACK"))),wz.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>cz(wz.getNumber("WEBGL_VERSION")))),wz.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>hz(wz.getNumber("WEBGL_VERSION")))),wz.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=wz.getNumber("WEBGL_VERSION");return 0===e?0:fz(e)})),wz.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>wz.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Ns.isMobile())),wz.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>yz(wz.getNumber("WEBGL_VERSION")))),wz.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!wz.getBool("WEBGL_FORCE_F16_TEXTURES")&&wz.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),wz.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>Az(wz.getNumber("WEBGL_VERSION")))),wz.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>bz(wz.getNumber("WEBGL_VERSION")))),wz.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>wz.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),wz.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),wz.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Ns.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),wz.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),wz.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),wz.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),wz.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));var Cz="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Ez}=tf;function Rz(e,t,n){const a=[];if(e.forEach((e=>{const t=br.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=Bz(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push(`uniform int ${e.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${e.name}Shape;`)}a.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const r=a.join("\n"),s=e.map((e=>function(e,t,n=!1,a){let r="";r+=n?$z(e,a):Fz(e,a);const s=e.shapeInfo.logicalShape,i=t.logicalShape;s.length<=i.length&&(r+=n?function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=Ez(e.shapeInfo.logicalShape,t.logicalShape),l=Wz(i),u=i-s;let c;const d=["x","y","z","w","u","v"];c=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${d[e+u]} = 0;`)).join("\n");let p="";p=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+u]}`)).join(", ");let h="return outputValue;";const f=1===br.sizeFromShape(e.shapeInfo.logicalShape),m=1===br.sizeFromShape(t.logicalShape);if(1!==s||f||m){if(f&&!m)h=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?h="return vec4(outputValue.x);":o.indexOf(e)>-1?h="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(h="return vec4(outputValue.xx, outputValue.zz);")}}else h="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${a}(${p});\n      ${h}\n    }\n  `}(e,t):function(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&br.arraysEqual(i,s))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=Wz(l),c=Ez(e.shapeInfo.logicalShape,t.logicalShape),d=l-o;let p;const h=["x","y","z","w","u","v"];p=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${h[e+d]} = 0;`)).join("\n");let f="";f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+d]}`)).join(", ");return`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${p}\n      return get${a}(${f});\n    }\n  `}(e,t));return r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=kz(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Mz}\n    ${zz}\n    ${_z}\n  `}(o);t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return Dz();case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${a[1]}.0);\n      }\n    `;if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${a[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      return 2 * (resTexRC.x * ${a[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(br.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let i=s,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)i*=e[e.length-u-1],o=`\n      int b${u} = index / ${i};\n      index -= b${u} * ${i};\n    `+o,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return Dz();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(br.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${Sz(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const a=Iz(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${Sz(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const a=Iz(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=Iz(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=Iz(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(d+=Oz);return[d,l,c,r,u,s,n.userCode].join("\n")}function Fz(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${a}() {return ${n};}`;const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${a}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=Pz(n);if(t)return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${a}(int index) {\n        ${Lz(e)}\n      }\n    `;const r=e.shapeInfo.texShape,s=r[0],i=r[1];if(1===i&&1===s)return`\n      float ${a}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=Pz(n);if(1===i)return t?`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===s)return t?`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape;if(null!=s&&br.arraysEqual(n,s)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `;const e=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=br.squeezeShape(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${Fz(Uz(e,l),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${Vz(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Lz(e)}\n      }\n    `;const u=s[0],c=s[1],d=Pz(a);if(1===c)return t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;if(1===u)return t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${a}, uv);\n    }\n  `;if(t)return`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a}Shape[1] + col + ${d};\n        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n        return sampleTexture(${a}, uv);\n      }\n    `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${a}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=br.squeezeShape(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${Fz(Uz(e,u),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Vz(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${Lz(e)}\n      }\n    `;const c=e.shapeInfo.texShape,d=c[0],p=c[1],h=e.shapeInfo.flatOffset;if(p===s&&null==h)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${a}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${d}.0);\n          return sampleTexture(${a}, uv);\n        }\n      `;if(p===i&&null==h)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${d}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;const f=Pz(a);if(t)return`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${a}Shape[1] * ${a}Shape[2];\n      int stride1 = ${a}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n      return sampleTexture(${a}, uv);\n    }\n    `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${d}, ${p}, index);\n        return sampleTexture(${a}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=br.squeezeShape(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${Fz(Uz(e,l),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Vz(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${Lz(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1],f=`int stride2 = ${a}Shape[3];`,m=`int stride1 = ${a}Shape[2] * stride2;`,g=`int stride0 = ${a}Shape[1] * stride1;`;if(h===o&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${p}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;if(h===s&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${p}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;const y=Pz(a);if(t)return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${y});\n      return sampleTexture(${a}, uv);\n    }\n  `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${h}, index + ${y});\n      return sampleTexture(${a}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=br.squeezeShape(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Fz(Uz(e,l))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${Vz(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${r})) +\n          depth3;\n        ${Lz(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],h=d[1];if(h===o&&null==c)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(h===r&&null==c)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=Pz(n);return`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${r} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${p}, ${h}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=br.squeezeShape(t);if(r.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Fz(Uz(e,r))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${Vz(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Lz(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===c&&null==d)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==d)return`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=Pz(n);return`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${h}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function $z(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=kz();return`\n    vec4 ${n}() {\n      return ${a.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=kz();if(t)return`\n    vec4 ${a}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${a}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=kz();if(null!=s&&br.arraysEqual(n,s))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `;const u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const a=[1,2],s=["b","row","col"];return`\n        ${$z(Uz(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Vz(s,a)});\n        }\n      `}const o=kz();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2),d=c*Math.ceil(n[1]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${d}, ${c}, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=kz();if(t)return`\n    vec4 ${a}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],d=Math.ceil(s[i-1]/2);let p=d*Math.ceil(s[i-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<i-1;m++)h=`int b${m}, `+h,p*=s[i-m-1],f=`b${m} * ${p} + `+f;return`\n    vec4 ${a}(${h}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}var Mz="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",zz="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",_z="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Oz="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Dz(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Pz(e){return`offset${e}`}function Lz(e){const t=e.name,n=br.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Wz(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Bz(e,t,n){const{newShape:a,keptDims:r}=br.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):a,l=!e&&s>1&&!br.arraysEqual(t,n)&&a.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:r}}function Uz(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Vz(e,t){return t.map((t=>e[t])).join(", ")}function Gz(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const a=e.logicalShape,r=t[n],s=r.shape;if(!br.arraysEqual(a,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${s} must match`);if(e.isUniform&&r.isUniform)return;const i=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!br.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function Hz(e){return Ze().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var jz={};function qz(e){const t=kz();return FM(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function Xz(e){return LM(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Kz(e){return WM(e,new Uint16Array([0,1,2,2,1,3]))}function Zz(e,t,n,a,r,s){VM(t,n);const i=UM(e),o=e.TEXTURE_2D;return TM(e,(()=>e.bindTexture(o,i))),TM(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),TM(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),TM(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),TM(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===Ze().getNumber("WEBGL_VERSION")?TM(e,(()=>e.texImage2D(o,0,a,t,n,0,r,s,null))):TM(e,(()=>e.texStorage2D(o,1,a,t,n))),TM(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function Yz(e){return e.internalFormatFloat}function Jz(e,t,n,a){const[r,s]=kM(t,n);return Zz(e,r,s,Yz(a),a.textureFormatFloat,e.FLOAT)}function Qz(e){return e.internalFormatHalfFloat}function e_(e,t,n,a){const[r,s]=kM(t,n);return Zz(e,r,s,Qz(a),a.textureFormatFloat,a.textureTypeHalfFloat)}function t_(e){return e.downloadTextureFormat}function n_(e,t,n,a){const[r,s]=kM(t,n);return Zz(e,r,s,t_(a),e.RGBA,e.UNSIGNED_BYTE)}function a_(e){return e.internalFormatPackedFloat}function r_(e,t,n,a){const[r,s]=SM(t,n);return Zz(e,r,s,a_(a),e.RGBA,e.FLOAT)}function s_(e){return e.internalFormatPackedHalfFloat}function i_(e,t,n,a){const[r,s]=SM(t,n);return Zz(e,r,s,s_(a),e.RGBA,a.textureTypeHalfFloat)}function o_(e,t,n){TM(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n)));return HM(e,t,"clipSpacePos",n,3,20,0)&&HM(e,t,"uv",n,2,20,12)}function l_(e,t,n,a,r,s){let i,o,l;TM(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*a*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*a*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(r),2===Ze().getNumber("WEBGL_VERSION")?TM(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,o,i))):TM(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,a,0,e.RGBA,o,i))),TM(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function u_(e,t,n){TM(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===Ze().getNumber("WEBGL_VERSION")?(TM(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))),e.flush()):TM(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===Ze().getNumber("WEBGL_VERSION")?(TM(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))),e.flush()):TM(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),TM(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function c_(e,t,n,a){const r=e.createBuffer();TM(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const s=16*t*n;return TM(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),TM(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),TM(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}function d_(e,t,n){const a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}function p_(e,t,n,a){const[r,s]=kM(t,n),i=new Uint8Array(t*n*4);return TM(e,(()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function h_(e,t,n,a,r,s,i,o){const l=e,u=new Float32Array(function(e,t){const[n,a]=SM(e,t);return n*a*4}(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function f_(e,t,n){const a=new Float32Array(t*n*4);return TM(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}C(jz,{bindVertexProgramAttributeStreams:()=>o_,createBufferFromOutputTexture:()=>c_,createFloat16MatrixTexture:()=>e_,createFloat16PackedMatrixTexture:()=>i_,createFloat32MatrixTexture:()=>Jz,createIndexBuffer:()=>Kz,createPackedMatrixTexture:()=>r_,createUnsignedBytesMatrixTexture:()=>n_,createVertexBuffer:()=>Xz,createVertexShader:()=>qz,downloadByteEncodedFloatMatrixFromOutputTexture:()=>p_,downloadFloat32MatrixFromBuffer:()=>d_,downloadMatrixFromPackedOutputTexture:()=>f_,downloadPackedMatrixFromBuffer:()=>h_,getInternalFormatForFloat16MatrixTexture:()=>Qz,getInternalFormatForFloat16PackedMatrixTexture:()=>s_,getInternalFormatForFloat32MatrixTexture:()=>Yz,getInternalFormatForPackedMatrixTexture:()=>a_,getInternalFormatForUnsignedBytesMatrixTexture:()=>t_,uploadDenseMatrixToTexture:()=>l_,uploadPixelDataToTexture:()=>u_});var m_=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Ze().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,mM(t,e)):this.gl=gM(t);let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(1===Ze().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=RM(this.gl,e),mz(this.gl,t))this.textureHalfFloatExtension=RM(this.gl,t);else if(Ze().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),mz(this.gl,a))this.colorBufferHalfFloatExtension=RM(this.gl,a);else if(Ze().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",mz(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!mz(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=Xz(this.gl),this.indexBuffer=Kz(this.gl),this.framebuffer=GM(this.gl),this.textureConfig=NM(this.gl,this.textureHalfFloatExtension)}get debug(){return Ze().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;TM(e,(()=>e.finish())),TM(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),TM(e,(()=>e.deleteFramebuffer(this.framebuffer))),TM(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),TM(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),TM(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Jz(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),e_(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),n_(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),u_(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),l_(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),i_(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),r_(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(QM(this.gl,this.framebuffer),this.outputTexture=null),TM(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>p_(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return h_(this.gl,e,0,0,0,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return d_(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=c_(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Ze().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else Ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>f_(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=qz(t));const n=OM(t);return TM(t,(()=>t.attachShader(n,this.vertexShader))),TM(t,(()=>t.attachShader(n,e))),DM(t,n),this.debug&&PM(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=o_(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&TM(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&PM(this.gl,this.program),TM(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?XM(this.gl,e,t):KM(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),TM(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),ZM(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,r]=SM(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&PM(this.gl,this.program),ez(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),TM(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),TM(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=RM(this.gl,2===Ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await br.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||br.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),JM(this.gl,e,this.framebuffer),this.debug&&ez(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(JM(this.gl,this.outputTexture,this.framebuffer),this.debug&&ez(this.gl)):QM(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;JM(a,e,this.framebuffer),this.debug&&ez(a),this.outputTexture=e,TM(a,(()=>a.viewport(0,0,t,n))),TM(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),TM(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}};var{addImpl:g_,bincountImpl:y_,bincountReduceImpl:A_,ceilImpl:x_,concatImpl:b_,equalImpl:v_,expImpl:w_,expm1Impl:k_,floorImpl:I_,gatherNdImpl:S_,gatherV2Impl:N_,greaterImpl:T_,greaterEqualImpl:C_,lessImpl:E_,lessEqualImpl:R_,linSpaceImpl:F_,logImpl:$_,maxImpl:M_,maximumImpl:z_,minimumImpl:__,multiplyImpl:O_,negImpl:D_,notEqualImpl:P_,prodImpl:L_,rangeImpl:W_,rsqrtImpl:B_,sigmoidImpl:U_,simpleAbsImpl:V_,sliceImpl:G_,sparseFillEmptyRowsImpl:H_,sparseReshapeImpl:j_,sparseSegmentReductionImpl:q_,sqrtImpl:X_,stridedSliceImpl:K_,stringNGramsImpl:Z_,stringSplitImpl:Y_,stringToHashBucketFastImpl:J_,subImpl:Q_,tileImpl:eO,topKImpl:tO,transposeImpl:nO,uniqueImpl:aO}=pT;function rO(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function sO(e,t){return 1===t?[e]:rO(e,t)}var iO=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Hz(this.outputShape.length);let n="";for(let s=0;s<4;s++){let e="thisRC = rc;";s%2===1&&(e+="thisRC.z += 1;"),s>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${s}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${s>0?"}":""}\n      `}var a,r;this.userCode=`\n      ${a=t,r=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${r?Nz(["r","c","d"],"inputShape"):Iz(["r","c","d"],a)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Tz(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function oO(e,t,n,a,r){const s=function(e,t){switch(e){case wM.PACKED_2X2_FLOAT32:return a_(t);case wM.PACKED_2X2_FLOAT16:return s_(t);case wM.UNPACKED_FLOAT32:return Yz(t);case wM.UNPACKED_FLOAT16:return Qz(t);case wM.PACKED_4X1_UNSIGNED_BYTE:return t_(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,a);let i;if(r){const[t,n]=SM(e[0],e[1]);i=t*n}else{const[t,n]=kM(e[0],e[1]);i=t*n}return i*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s)}function lO(e,t){if(e===vM.UPLOAD)return wM.PACKED_2X2_FLOAT32;if(e===vM.RENDER||null==e)return function(e){return Ze().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?wM.PACKED_2X2_FLOAT32:wM.UNPACKED_FLOAT32:e?wM.PACKED_2X2_FLOAT16:wM.UNPACKED_FLOAT16}(t);if(e===vM.DOWNLOAD||e===vM.PIXELS)return wM.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function uO(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var cO=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Hz(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},dO="return abs(x);",pO="return x;",hO=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Hz(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},fO=nm.whereImpl,mO={};var gO=Ze().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");var yO=class extends Y{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Ze().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=gM(Ze().getNumber("WEBGL_VERSION"));this.binaryCache=((t=Ze().getNumber("WEBGL_VERSION"))in mO||(mO[t]={}),mO[t]),this.gpgpu=new m_(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const a=lO(t,n),r=uO(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const s=oO(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[r].shift();return this.usedTextures[r].push(e),e}let i;return a===wM.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===wM.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===wM.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===wM.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===wM.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const r=lO(n,a),s=uO(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);const i=oO(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),o=Ze().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}(this.gpgpu),this.numMBBeforeWarning=null==Ze().global.screen?1024:Ze().global.screen.height*Ze().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Z(this,cl())}nextDataId(){return yO.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Ze().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Ze().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:vM.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,r){if(Ze().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:vM.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new hO(i,pO):new cO(i,pO);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const l=null!=this.activeTimers;let u,c;if(l&&(u=br.now()),"complex64"===a){const e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);c=tf.mergeRealAndImagArrays(e,t)}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=br.now()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=r){let t;t=o?new hO(a,pO):new cO(a,pO);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(Ze().getBool("DEBUG")&&!Ze().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Ze().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==s&&Ze().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...IM(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=tf.mergeRealAndImagArrays(t,n)}else if(null==c)u=this.getValuesFromTexture(e);else{const e=br.sizeFromShape(a);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;TM(e,(()=>e.deleteBuffer(c)))}const d=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&cl().removeDataId(e,this),this.pendingDeletes--),d}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>br.decodeString(e)))}catch(a){throw new Error("Failed to decode encoded string bytes into utf-8")}return Mi(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!CM(n)){if(Ze().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=br.sizeFromShape(t);if(Ze().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture,...IM(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}const s=Ze().getBool("WEBGL_PACK")&&!0===a,i=s?iz(t):t,o=s?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=vM.DOWNLOAD;const t=kz();this.outputShape=e,this.userCode=`\n      ${Cz}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}(i):new class{constructor(e){this.variableNames=["A"],this.outTexUsage=vM.DOWNLOAD;const t=kz();this.outputShape=e,this.userCode=`\n      ${Cz}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return Ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=br.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=br.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=br.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:br.now(),endMs:null}}endTimer(e){return Ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=br.now(),e)}async getQueryTime(e){if(Ze().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=gO){return Ze().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&br.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){tf.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return fO(e.shape,t)}packedUnaryOp(e,t,n){const a=new hO(e.shape,t),r=this.compileAndRun(a,[e],n);return cl().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=V_(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Ze().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,dO,e.dtype);const t=new cO(e.shape,dO),n=this.compileAndRun(t,[e]);return cl().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&br.isString(n[0])){const r=n.map((e=>br.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:a}=this.makeTensorInfo(e,t,n);return cl().makeTensorFromDataId(a,e,t,this)}unpackTensor(e){const t=new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Hz(this.outputShape.length);const t=e.length,n=sO("rc",t),a=Wz(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${a} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Hz(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=sO("rc",this.rank),t=Wz(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r=`${0===n?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${a};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc),\n              rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1),\n              0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[rz(e.shape),...sz(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[rz(t),...sz(t)],s=new iO(r,n),i=[n],o=this.runWebGLProgram(s,[a],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:a,dtype:r}=t,s=iz(a);let i;const o=IM(s);i=n?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=bM.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=kz();this.outputShape=e,this.enableShapeUniforms=Hz(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Sz(["r","c","d"],e):Iz(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}(s):new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=bM.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=kz();this.outputShape=e,this.enableShapeUniforms=Hz(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Sz(["r","c","d"],e):Iz(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}(s);const l=[o];return{dtype:r,shape:a,dataId:this.runWebGLProgram(i,[{shape:s,dtype:r,dataId:e}],r,l,!0).dataId}}runWebGLProgram(e,t,n,a,r=!1){const s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===bM.DENSE){const t=IM(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===br.sizeFromShape(s.shape))return i.values=br.getTypedArrayFromDType(s.dtype,0),s;const o=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&br.sizeFromShape(t.shape)<=Ze().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!uz(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),o.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const u={shape:s.shape,texData:i,isUniform:!1},c=function(e,t,n){let a="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=Bz(e.packedInputs,t.shape,s);let u="",c="",d="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=br.computeStrides(o);d=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const p=t.shape.length,h=2===o.length&&br.arraysEqual(t.shape,s),f=1===br.sizeFromShape(t.shape),m=tf.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&br.arraysEqual(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;a+=`${p}_${g}_${i?l:""}_${o.length}_${f}_${m}_${h}_${u}_${c}_${d}_${y}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;a+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let s=e.constructor.name;return s+="_"+a+"_"+r+`${Ze().getNumber("WEBGL_VERSION")}`,s}(e,l,u),d=this.getAndSaveBinary(c,(()=>function(e,t,n,a){const r=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),s=r.map((e=>e.shapeInfo)),i={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},o=Rz(r,i,t),l=$M(e.gl,o),u=e.createProgram(l);let c=null;const d=e.getUniformLocation(u,"NAN",!1);1===Ze().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(u,"INFINITY",!1));const p=!1,h={},f={},m={};for(let b=0;b<t.variableNames.length;b++){const n=t.variableNames[b];h[n]=e.getUniformLocation(u,n,p),h[`offset${n}`]=e.getUniformLocation(u,`offset${n}`,p),t.enableShapeUniforms&&(f[`${n}Shape`]=e.getUniformLocation(u,`${n}Shape`,p),m[`${n}TexShape`]=e.getUniformLocation(u,`${n}TexShape`,p))}let g,y,A;t.enableShapeUniforms&&(g=e.getUniformLocation(u,"outShape",p),A=e.getUniformLocation(u,"outShapeStrides",p),y=e.getUniformLocation(u,"outTexShape",p));const x=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{x[n]=e.getUniformLocation(u,t.name,p)})),{program:t,fragmentShader:l,source:o,webGLProgram:u,uniformLocations:h,customUniformLocations:x,inShapeInfos:s,outShapeInfo:i,infLoc:c,nanLoc:d,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:A,outTexShapeLocation:y}}(this.gpgpu,e,l,u))),p=null!=this.activeTimers;let h;p&&(h=this.startTimer()),function(e,t,n,a,r){t.program.enableShapeUniforms||(Gz(t.inShapeInfos,n),Gz([t.outShapeInfo],[a]));const s=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),1===Ze().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,a)=>{const r=t.program.variableNames[a],s=t.uniformLocations[r],i=t.uniformLocations[`offset${r}`],o=t.inShapesLocations[`${r}Shape`],l=t.inTexShapesLocations[`${r}TexShape`];if(o){const{uniformShape:a}=Bz(t.program.packedInputs,n.shape,n.texData.texShape);switch(a.length){case 1:e.gl.uniform1iv(o,new Int32Array(a));break;case 2:e.gl.uniform2iv(o,new Int32Array(a));break;case 3:e.gl.uniform3iv(o,new Int32Array(a));break;case 4:e.gl.uniform4iv(o,new Int32Array(a))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(br.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,a)}));const o=t.outShapeLocation;if(o)switch(a.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=br.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach(((n,a)=>{const s=t.customUniformLocations[a],i=r[a];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,d,l,u,a),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(h=this.endTimer(h),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(h)}));const f=Ze().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=br.now();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Ze().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===r){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,a,r=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Ze().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=hl((()=>{if(!Ze().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Ze().getBool("DEBUG");Ze().set("DEBUG",!1);const t=this.abs(_d(1e-8)).dataSync()[0];if(Ze().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const l=null!=this.activeTimers;let u;l&&(u=br.now());let c=t.texShape;if(null==c&&(c=oz(n,o),t.texShape=c),null!=r){const e=iz(n);let s,i=c[1],d=c[0];const p=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!o&&p||([i,d]=SM(c[0],c[1])),s=o?new class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=kz();this.outputShape=e,this.enableShapeUniforms=Hz(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){const r=2*s+t;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${s};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${r}] = values[0];\n            } else if (offset == 1) {\n              result[${r}] = values[1];\n            } else if (offset == 2) {\n              result[${r}] = values[2];\n            } else {\n              result[${r}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Tz(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${a}\n\n          ${n.output} = ${r};\n        }\n    `}}(e,p):new class{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=kz();this.outputShape=e,this.enableShapeUniforms=Hz(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Tz(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${a}, 0., 0., 0.);\n      }\n    `}}(e,p);const h=p?[d,i]:c,f=this.makeTensorInfo(h,a),m=this.texData.get(f.dataId);m.usage=p?vM.PIXELS:vM.UPLOAD,m.texShape=h,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,d,r);const g=[[d,i]],y=!0,A=this.runWebGLProgram(s,[f],a,g,y),x=this.texData.get(A.dataId);t.texture=x.texture,t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(A.dataId),t.values=null,l&&(this.uploadWaitMs+=br.now()-u)}else{const e=this.acquireTexture(c,i,a,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*br.bytesPerElement(t)}},AO=yO;AO.nextDataId=0;var xO="0.0.0";function bO(){Ze().set("WEBGL_FORCE_F16_TEXTURES",!0)}Ns.isBrowser()&&kl("webgl",(()=>new AO),2);var vO={forceHalfFloat:bO},wO=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=tf.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Hz(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},kO=class{constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=tf.assertAndGetBroadcastShape(t,n);const r=this.outputShape.length;this.enableShapeUniforms=Hz(r);let s="";if(a)if(0===r||1===br.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(s=`\n          ${Wz(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=sO("coords",r);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function IO(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var SO={kernelName:mn,backendName:"webgl",kernelFunc:IO};function NO(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),i=n.texData.get(s.dataId),o=IO({inputs:{x:a},backend:n}),l=IO({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var TO={kernelName:Tt,backendName:"webgl",kernelFunc:NO},CO="return (a < 0.) ? b * a : a;",EO="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var RO={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,i=n.makeTensorInfo([],"float32",br.createScalarValue(s,"float32")),o=Ze().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new kO(EO,r.shape,i.shape):new wO(CO,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},FO="return (a < 0.) ? b * a : a;",$O="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";var MO={kernelName:ra,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=Ze().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new kO($O,a.shape,r.shape):new wO(FO,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],"float32")}};function zO({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:a}){return({inputs:r,backend:s})=>{const{x:i}=r,o=s,l=a||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=Ze().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new hO(i.shape,t):new cO(i.shape,e),o.runWebGLProgram(u,[i],l)}}function _O({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:r,dtype:s}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(a&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[a,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,a]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:a.dataId,dtype:a.dtype,shape:u.shape},i=new wO(e,l.shape,u.shape);return c.runWebGLProgram(i,[r,s],ds(n.dtype,a.dtype))})),s=NO({inputs:{real:a,imag:r},backend:c});return c.disposeIntermediateTensorInfo(a),c.disposeIntermediateTensorInfo(r),s}const d=s||ds(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=r){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?tf.fromUint8ToStringArray(e):e,a="string"===l.dtype?tf.fromUint8ToStringArray(t):t,[s,i]=r(l.shape,u.shape,n,a,d),o=c.makeTensorInfo(i,d);return c.texData.get(o.dataId).values=s,o}let p;return p=Ze().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new kO(t,l.shape,u.shape,n):new wO(e,l.shape,u.shape),c.runWebGLProgram(p,[l,u],d)}}function OO(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?$O:FO;if("leakyrelu"===e)return t?EO:CO;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var DO=class{constructor(e,t,n,a=!1,r=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Hz(this.outputShape.length);const u=a?e[1]:e[2],c=Math.ceil(u/2),d=a?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",h=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let A="rc.x",x="rc.x";e[0]<t[0]?A=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${A};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${f[0]});\n          result += (${h[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},PO="return areal * breal - aimag * bimag;",LO="return areal * bimag + aimag * breal;",WO=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=tf.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},BO="return a * b;";function UO(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=tf.upcastType(a.dtype,r.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),s=new WO(PO,a.shape,r.shape),i=new WO(LO,a.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(s,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=NO({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([a,r])){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),[i,o]=O_(a.shape,r.shape,e.values,t.values,s),l=n.makeTensorInfo(o,s);return n.texData.get(l.dataId).values=i,l}let i;return i=Ze().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new kO(BO,a.shape,r.shape):new wO(BO,a.shape,r.shape),n.runWebGLProgram(i,[a,r],s)}var VO={kernelName:jn,backendName:"webgl",kernelFunc:UO};function GO(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=n,o=br.sizeFromShape(r.shape),l=br.inferFromImplicitShape(s,o),u=br.sizeFromShape(l);br.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(r.dataId);return!c.isPacked||uz(r.shape,l)||null!==c.texture&&uz(c.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){const a=[rz(e.shape),...sz(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[rz(t),...sz(t)],i=new iO(s,a),o=[a],l=n.runWebGLProgram(i,[r],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(r,l,i)}var HO={kernelName:ca,backendName:"webgl",kernelFunc:GO},jO=class{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${br.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},qO=class{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${l});\n      }\n    `}};function XO(e,t,n,a){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=tf.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let s=e;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:l,outSize:u}=r[i];let c,d;c="mean"===n?0===i?new jO({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new jO({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new qO({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),d=s,s=a.runWebGLProgram(c,[s],t),d.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(d)}return s}function KO(e,t,n){const a=Ze().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const a=Wz(this.rank),r=rO("rc",this.rank),s=new Array(this.rank);for(let u=0;u<t.length;u++)s[t[u]]=r[u];const i=`vec2(${s.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${a} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}(e.shape,t):new class{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const a=Wz(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}(t);this.userCode=`\n    void main() {\n      ${a} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function ZO(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;return function(e,t,n,a){const r=t,s=e.shape.length,i=br.parseAxisParam(r,e.shape);let o=i;const l=tf.getAxesPermutation(o,s),u=null!=l;let c=e;u&&(c=KO(e,l,a),o=tf.getInnerMostAxes(o.length,s)),tf.assertAxesAreInnerMostDims("sum",o,s);const[d,p]=tf.computeOutAndReduceShapes(c.shape,o);let h=d;n&&(h=tf.expandShapeToKeepDim(d,i));const f=br.sizeFromShape(p),m=GO({inputs:{x:c},attrs:{shape:[br.sizeFromShape(e.shape)/f,f]},backend:a}),g=XO(m,ps(e.dtype),"sum",a),y=GO({inputs:{x:g},attrs:{shape:h},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),u&&a.disposeIntermediateTensorInfo(c),y}(r,s,i,n)}var YO={kernelName:Ea,backendName:"webgl",kernelFunc:ZO};function JO(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,i=n,o=r.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=r.shape[s[c]];let u;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=nO(e,r.shape,r.dtype,s,l);u=i.makeTensorInfo(l,r.dtype);i.texData.get(u.dataId).values=t}else u=KO(r,s,i);return u}var QO={kernelName:Za,backendName:"webgl",kernelFunc:JO};function eD({a:e,b:t,transposeA:n,transposeB:a,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,d=n?e.shape[u-2]:e.shape[u-1],p=a?t.shape[c-1]:t.shape[c-2],h=n?e.shape[u-1]:e.shape[u-2],f=a?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=br.sizeFromShape(m),A=br.sizeFromShape(g),x=so.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);br.assert(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`));const b=n?[y,d,h]:[y,h,d],v=a?[A,f,p]:[A,p,f],w=GO({inputs:{x:e},backend:r,attrs:{shape:b}}),k=GO({inputs:{x:t},backend:r,attrs:{shape:v}}),I=[w,k],S=Math.max(y,A),N=n?w.shape[1]:w.shape[2],T=null!=s,C=null!=i,E="leakyrelu"===l,R=null!=l?OO(l,!0):null;let F;if((1===h||1===f)&&N>1e3&&!1===(T||C||E||null!=R)){let e=w,t=k;n&&(e=JO({inputs:{x:w},backend:r,attrs:{perm:[0,2,1]}}),I.push(e)),a&&(t=JO({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),I.push(t));const s=1===f;let i=e;1!==f&&(i=GO({inputs:{x:e},backend:r,attrs:{shape:[S,N,1]}}),I.push(i));const o=1===f?2:1;let l=t;s&&(l=GO({inputs:{x:t},backend:r,attrs:{shape:[S,1,N]}}),I.push(l));const u=UO({inputs:{a:i,b:l},backend:r});F=ZO({inputs:{x:u},backend:r,attrs:{axis:o,keepDims:!0}}),I.push(u)}else{const l=ds(e.dtype,t.dtype),u=new DO(b,v,[S,h,f],n,a,T,R,C,E),c=[w,k];if(null!=s&&c.push(s),C&&c.push(i),E){const e=r.makeTensorInfo([],"float32",br.createScalarValue(o,"float32"));c.push(e),I.push(e)}F=r.runWebGLProgram(u,c,l)}const $=GO({inputs:{x:F},backend:r,attrs:{shape:x}});I.push(F);for(const M of I)r.disposeIntermediateTensorInfo(M);return $}var tD={kernelName:rr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=a;return eD({a:r,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:c})}},nD="return abs(x);";var aD={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=V_(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let r;return r=Ze().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new hO(a.shape,nD):new cO(a.shape,nD),n.runWebGLProgram(r,[a],a.dtype)}},rD=zO({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),sD={kernelName:nt,backendName:"webgl",kernelFunc:rD},iD=zO({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),oD={kernelName:at,backendName:"webgl",kernelFunc:iD},lD="return a + b;",uD=_O({opSnippet:lD,packedOpSnippet:lD,supportsComplex:!0,cpuKernelImpl:g_}),cD={kernelName:rt,backendName:"webgl",kernelFunc:uD};var dD={kernelName:st,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,r=n;if(1===r.length)return IO({inputs:{x:r[0]},backend:a});if(r.length>Ze().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),s=e({inputs:r.slice(t),backend:a});return e({inputs:[n,s],backend:a})}const s=r.map((e=>e.dtype)).reduce(((e,t)=>ds(e,t))),i=r.map((e=>e.shape)),o=Ze().getBool("WEBGL_PACK")?new class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${a};\n        setOutput(result);\n      }\n    `}}(r[0].shape,i):new class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${a};\n        setOutput(result);\n      }\n    `}}(r[0].shape,i);return a.runWebGLProgram(o,r,s)}};var pD={kernelName:it,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=br.parseAxisParam(s,r.shape);let u=l;const c=tf.getAxesPermutation(u,o);let d=r;null!=c&&(d=JO({inputs:{x:r},backend:n,attrs:{perm:c}}),u=tf.getInnerMostAxes(u.length,o)),tf.assertAxesAreInnerMostDims("all",u,o);const[p,h]=tf.computeOutAndReduceShapes(d.shape,u),f=GO({inputs:{x:d},backend:n,attrs:{shape:[-1,br.sizeFromShape(h)]}}),m=XO(f,f.dtype,"all",n);let g;if(i){g=GO({inputs:{x:m},backend:n,attrs:{shape:tf.expandShapeToKeepDim(p,l)}})}else g=GO({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(d),g}};var hD={kernelName:ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=br.parseAxisParam(s,r.shape);let u=l;const c=tf.getAxesPermutation(u,o);let d=r;null!=c&&(d=JO({inputs:{x:r},backend:n,attrs:{perm:c}}),u=tf.getInnerMostAxes(u.length,o)),tf.assertAxesAreInnerMostDims("any",u,o);const[p,h]=tf.computeOutAndReduceShapes(d.shape,u),f=GO({inputs:{x:d},backend:n,attrs:{shape:[-1,br.sizeFromShape(h)]}}),m=XO(f,f.dtype,"any",n);let g;if(i){g=GO({inputs:{x:m},backend:n,attrs:{shape:tf.expandShapeToKeepDim(p,l)}})}else g=GO({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(d),g}};function fD(e,t,n,a=null){let r=t.shape[0],s=t.shape[1];null!=a&&(r=a.shape[0],s=a.shape[1]);const i=tf.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:r,outSize:Math.ceil(s/i)},l=new class{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${a};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${a}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}(o,n,null==a),u=[t];null!=a&&u.push(a);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const d=fD(e,t,n,c);return e.disposeIntermediateTensorInfo(c),d}function mD(e,t,n,a=null){const r=null!=a?a.shape:t.shape,s=r[r.length-1],i=tf.computeOptimalWindowSize(s),o=new class{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,br.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=Wz(o),u=sO("coords",o);let c,d;if(1===s){d=o+1;const e=Wz(d);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else d=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),h="."+p[d-1],f=p.map((e=>"int "+e)),m=sO("sourceLocR",d-1).concat("inIdx.r"),g=sO("sourceLocG",d-1).concat("inIdx.g"),y=sO("sourceLocB",d-1).concat("inIdx.b"),A=sO("sourceLocA",d-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",b=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${A.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${A.join()}) : 0.)`,w=a?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${w}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${h}, sourceLocG${h},\n          sourceLocB${h}, sourceLocA${h}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${b}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}(r,i,n,null==a),l=null==a?[t]:[t,a],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){const a=mD(e,t,n,u);return e.disposeIntermediateTensorInfo(u),a}return u}function gD(e,t,n,a){const r=[n];if(tf.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!Ze().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=tf.computeOutAndReduceShapes(i.shape,r),u=br.sizeFromShape(l),c=GO({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const d=fD(e,c,a);n.push(d);const p=GO({inputs:{x:d},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return mD(e,t,a)}var yD={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let i=br.parseAxisParam(s,r.shape);const o=tf.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=o&&(l=JO({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=tf.getInnerMostAxes(i.length,l.shape.length)),tf.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);const c=gD(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};var AD={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let i=br.parseAxisParam(s,r.shape);const o=tf.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=o&&(l=JO({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=tf.getInnerMostAxes(i.length,l.shape.length)),tf.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);const c=gD(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},xD=zO({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),bD={kernelName:ct,backendName:"webgl",kernelFunc:xD},vD=zO({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),wD={kernelName:dt,backendName:"webgl",kernelFunc:vD},kD=zO({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),ID={kernelName:pt,backendName:"webgl",kernelFunc:kD},SD=_O({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),ND={kernelName:ft,backendName:"webgl",kernelFunc:SD},TD=zO({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),CD={kernelName:ht,backendName:"webgl",kernelFunc:TD},ED=class{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${a?r?m:g:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let A=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(A="avgValue / count");const x=4*Math.floor(s/4),b=s%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${A});\n      }\n    `}},RD=class{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const A="avg"===t;let x="0.0";if(A||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${a?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const v=4*Math.floor(s/4),w=s%4,k=`\n      if (${A}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${k}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${2===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${k}\n            } else if (${3===w}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${k}\n            }\n          }\n          setOutput(${b});\n        }\n      }\n    `}};var FD={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;vz(r,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;br.assert(tf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=tf.computePool2DInfo(r.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&br.arraysEqual(u.inShape,u.outShape))return IO({inputs:{x:r},backend:n});const c=new ED(u,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}};var $D={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a,c=tf.computePool3DInfo(r.shape,s,i,[1,1,1],o,l,u),d=new RD(c,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}};var MD={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=a,d=tf.computePool3DInfo(i.shape,o,l,[1,1,1],u,c),p=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=c-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*a);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(p,[r],i.dtype)}};var zD={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;vz([r,s],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=a,c=tf.computePool2DInfo(i.shape,o,l,1,u),d=new class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(c);return n.runWebGLProgram(d,[r],i.dtype)}};var _D={kernelName:xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;return eD({a:r,b:s,transposeA:i,transposeB:o,backend:n})}},OD={kernelName:cn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a,mean:r,variance:s,offset:i,scale:o}=e;br.assert(r.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),br.assert(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),br.assert(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[a,r,s];let c=null;null!=i&&(c=i.shape,u.push(i));let d=null;null!=o&&(d=o.shape,u.push(o));const p=Ze().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],tf.assertAndGetBroadcastShape(e,t),tf.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=a&&(tf.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(tf.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}(a.shape,r.shape,s.shape,c,d,l):new class{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],tf.assertAndGetBroadcastShape(e,t),tf.assertAndGetBroadcastShape(e,n);let i="0.0";null!=a&&(tf.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(tf.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}(a.shape,r.shape,s.shape,c,d,l);return t.runWebGLProgram(p,u,u[0].dtype)}},DD=["x","y","z","w","u","v"];function PD(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a,[o,l]=Io.parseSliceParams(r,s,i);if(Io.assertParamsValid(r,o,l),0===br.sizeFromShape(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=G_(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),c=Io.isSliceContinous(r.shape,o,l);if(u||!c){const e=Ze().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Wz(this.rank),n=sO("coords",this.rank),a=sO("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${a.slice(-2).join()})`,s=`getChannel(getSource(${a.join()}), ${r})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${a[this.rank-1]};\n        result.y = ${s};\n        --${a[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${a[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${a[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${a[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}(l):new class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Wz(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return DD.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${DD[t]} = start[${t}] + coords.${DD[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${a}\n        setOutput(getSource(${n}));\n      }\n    `}}(l),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){const r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),i=a.texData.get(s.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Io.computeFlatOffset(t,br.computeStrides(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,l+1),s}(r,o,l,n)}var LD={kernelName:wa,backendName:"webgl",kernelFunc:PD},WD={kernelName:bt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;br.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),l=tf.getReshaped(r.shape,s,o),u=tf.getPermuted(l.length,s.length),c=tf.getReshapedPermuted(r.shape,s,o),d=tf.getSliceBeginCoords(i,s.length),p=tf.getSliceSize(c,i,s.length),h=[],f=GO({inputs:{x:r},backend:n,attrs:{shape:l}}),m=JO({inputs:{x:f},backend:n,attrs:{perm:u}}),g=GO({inputs:{x:m},backend:n,attrs:{shape:c}}),y=PD({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};var BD={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=y_(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}};var UD={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.readSync(a.dataId),i=n.readSync(r.dataId),o=tf.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},VD=_O({opSnippet:"return float(a != b);",cpuKernelImpl:P_,dtype:"bool"}),GD={kernelName:Xn,backendName:"webgl",kernelFunc:VD};function HD(e){const{inputs:t,backend:n}=e,{input:a}=t;return IO({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}var jD={kernelName:oa,backendName:"webgl",kernelFunc:HD};var qD={kernelName:It,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:s}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return IO({inputs:{x:s},backend:a});const t=qc(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=NO({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===s.dtype){const t=HD({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:i}});return a.disposeIntermediateTensorInfo(t),n}if(!br.hasEncodingLoss(s.dtype,i)){const e=IO({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new cO(e.shape,"return float(int(x));"),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===i){const e=a.makeTensorInfo([],"bool",br.getTypedArrayFromDType("bool",1)),t=VD({inputs:{a:s,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},XD="return ceil(x);",KD=zO({opSnippet:XD,packedOpSnippet:XD,cpuKernelImpl:x_}),ZD={kernelName:St,backendName:"webgl",kernelFunc:KD};var YD={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a;let o;o=Ze().getBool("WEBGL_PACK_CLIP")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}(r.shape):new class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}(r.shape);const l=[[s],[i]];return n.runWebGLProgram(o,[r],r.dtype,l)}};function JD(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}var QD={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}(a.shape),i=[JD(a,r.complexTensorInfos.real),JD(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};function eP(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?`${e} - ${n}`:e)).join()}function tP(e){const{inputs:t,backend:n}=e,{input:a}=t;return IO({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}var nP={kernelName:yn,backendName:"webgl",kernelFunc:tP};function aP(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>HD({inputs:{input:e},backend:n}))),r=e.map((e=>tP({inputs:{input:e},backend:n}))),s=aP(a,t,n),i=aP(r,t,n),o=NO({inputs:{real:s,imag:i},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=br.sizeFromShape(e.shape.slice(t));return GO({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=tf.computeOutShape(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=b_(s,i,a,o),u=tf.computeOutShape(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,a,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>Ze().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const a=Math.floor(e.length/2),r=aP(e.slice(0,a),t,n),s=aP(e.slice(a),t,n),i=aP([r,s],t,n);return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}if(Ze().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const r=new class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=tf.computeOutShape(e,t);const n=this.outputShape,a=n.length,r=Wz(a),s=sO("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];const l=i[t],u=i.slice(-2),c=i.join();let d=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let f=1;f<o.length;f++){const e=o[f-1];d+=`\n        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${eP(i,l,e)}),\n            vec2(${eP(u,l,e)}));\n        }`}const p=o.length,h=o[o.length-1];d+=`\n        return getChannel(\n          getT${p}(${eP(i,l,h)}),\n          vec2(${eP(u,l,h)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${d}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[a-1]} = ${s[a-1]} + 1;\n        if (${s[a-1]} < ${n[a-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[a-2]} = ${s[a-2]} + 1;\n        if (${s[a-2]} < ${n[a-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[a-1]} = ${s[a-1]} - 1;\n        if (${s[a-2]} < ${n[a-2]} &&\n            ${s[a-1]} < ${n[a-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}(e.map((e=>e.shape)),t);return n.runWebGLProgram(r,e,a)}const{tensors2D:s,outShape:i}=function(e,t,n){const a=tf.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>GO({inputs:{x:e},attrs:{shape:[-1,br.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:a}}(e,t,n),o=new class{constructor(e){this.outputShape=[],this.outputShape=tf.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){const e=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${e}));`)}const a=t.length,r=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}(s.map((e=>e.shape))),l=n.runWebGLProgram(o,s,a);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const u=GO({inputs:{x:l},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(l),u}function rP(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=br.parseAxisParam(r,t[0].shape)[0],i=tf.computeOutShape(t.map((e=>e.shape)),s);if(0===br.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>br.sizeFromShape(e.shape)>0));if(1===o.length)return IO({inputs:{x:o[0]},backend:n});const l=o.map((e=>e.shape));return tf.assertParamsConsistent(l,s),aP(o,s,n)}var sP={kernelName:Et,backendName:"webgl",kernelFunc:rP},iP=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,A=m?3:1;let x="",b="";n&&(x=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${A}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${b}\n        setOutput(result);\n      }\n    `}};function oP({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=a.texData.get(e.dataId),c=n.inChannels,d=l[0]*l[1]*l[2],p=n.outChannels,h="channelsLast"===n.dataFormat;let f;const m=[];if(!((1===d||1===p)&&c>1e3)&&u.isPacked&&h&&null!=u.texture&&l[2]%2!==0&&br.arraysEqual(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),d={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,br.assert(uz(u.shape,d.shape),(()=>`packed reshape ${u.shape} to ${d.shape} isn't free`));const h=GO({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(h);const g=eD({a:d,b:h,backend:a,transposeA:false,transposeB:false,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),y=a.texData.get(g.dataId);br.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,y.shape=n.outShape,f=IO({inputs:{x:g},backend:a}),f.shape=n.outShape,m.push(g)}else{const u=GO({inputs:{x:e},backend:a,attrs:{shape:[1,h?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=GO({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=eD({a:u,b:c,transposeA:false,transposeB:false,backend:a,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i});f=GO({inputs:{x:d},backend:a,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(d)}for(const g of m)a.disposeIntermediateTensorInfo(g);return f}function lP({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:d,outHeight:p,dataFormat:h}=n,f="channelsLast"===h,m=l*u*c,g=p*d,y=[m,g],A=[],x=GO({inputs:{x:e},backend:a,attrs:{shape:e.shape.slice(1)}}),b=GO({inputs:{x:t},backend:a,attrs:{shape:[1,m,br.sizeFromShape(t.shape)/m]}});A.push(x),A.push(b);const v=new class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Hz(this.outputShape.length);const{dataFormat:n}=t,a=kz(),r="channelsLast"===n,s=r?0:1,i=r?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.y + ${e};\n          pos = rc.x + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${a.output} = result;\n      }\n    `}}(y,n),w=[x.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],k=a.runWebGLProgram(v,[x],"float32",w),I=GO({inputs:{x:k},backend:a,attrs:{shape:[1,y[0],y[1]]}});A.push(k),A.push(I);const S=null!=r,N=null!=s,T="leakyrelu"===o,C=o?OO(o,!0):null,E=new DO(I.shape,b.shape,[1,g,n.outChannels],!0,!1,S,C,N,T),R=[I,b];if(r&&R.push(r),N&&R.push(s),T){const e=a.makeTensorInfo([],"float32",br.createScalarValue(i,"float32"));R.push(e),A.push(e)}const F=a.runWebGLProgram(E,R,"float32"),$=GO({inputs:{x:F},backend:a,attrs:{shape:f?[1,p,d,n.outChannels]:[1,n.outChannels,p,d]}});A.push(F);for(const M of A)a.disposeIntermediateTensorInfo(M);return $}var uP={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=a,d=tf.convertConv2DDataFormat(l),p=tf.computeConv2DInfo(r.shape,s.shape,i,u,o,c,!1,d);let h;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(Ze().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])h=lP({x:r,filter:s,convInfo:p,backend:n});else{const e=new iP(p);h=n.runWebGLProgram(e,[r,s],"float32")}else h=oP({x:r,filter:s,convInfo:p,backend:n});const f=GO({inputs:{x:h},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(h),f}};var cP={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=a,d=tf.convertConv2DDataFormat(l),p=tf.computeConv2DInfo(r.shape,c,i,1,o,u,!1,d),h=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(h,[r,s],"float32")}};var dP={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=a,d=tf.convertConv2DDataFormat(u),p=tf.computeConv2DInfo(i,s.shape,o,1,l,c,!1,d),h=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p);return n.runWebGLProgram(h,[r,s],"float32")}};var pP={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a,u=tf.computeConv3DInfo(r.shape,s.shape,i,l,o),c=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${a});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(c,[r,s],"float32")}};var hP={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:l}=a,u=tf.computeConv3DInfo(r.shape,l,i,1,o),c=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${a} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(c,[r,s],"float32")}};var fP={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:l}=a,u=tf.computeConv3DInfo(l,s.shape,o,1,i),c=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=a-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${a}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${a} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(u);return n.runWebGLProgram(c,[r,s],"float32")}},mP=zO({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),gP={kernelName:Ot,backendName:"webgl",kernelFunc:mP},yP=zO({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),AP={kernelName:Dt,backendName:"webgl",kernelFunc:yP},xP={kernelName:Lt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=a,c=new class{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,l]=e,[u]=t,[c,d]=n;this.outputShape=[u,c,d,l];const p="bilinear"===a?1:0,[h,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[A,x,b]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${A});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${b};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}(r.shape,s.shape,o,l,u);return n.runWebGLProgram(c,[r,s,i],"float32")}},bP=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const a=e.length,r=t?"0.0":`getX(${vP(a,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${Wz(a)} coords = getOutputCoords();\n        int end = ${wP(a,"coords")};\n        float val = ${r};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${wP(a,"coords")} = idx;\n          val += getX(${vP(a,"coords")});\n        }\n        setOutput(val);\n      }\n    `}};function vP(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function wP(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}var kP={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a,l=r.shape.length,u=tf.getAxesPermutation([s],l);let c=r;null!=u&&(c=JO({inputs:{x:r},backend:n,attrs:{perm:u}}));const d=tf.getInnerMostAxes(1,l)[0];if(d!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${s}`);const p=c.shape[d];let h=IO({inputs:{x:c},backend:n});for(let f=0;f<=Math.ceil(Math.log2(p))-1;f++){const e=new bP(c.shape,!1,o),t=[[f]],a=h;h=n.runWebGLProgram(e,[h],h.dtype,t),n.disposeIntermediateTensorInfo(a)}if(i){const e=new bP(c.shape,i,o),t=h;h=n.runWebGLProgram(e,[h],h.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=JO({inputs:{x:h},backend:n,attrs:{perm:tf.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),e}return h}};var IP={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(s.dataId),a=y_(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,a)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(s),a=A_(e,t,i,o);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};var SP={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a,o=r.shape[0],l=("NHWC"===i?r.shape[1]:r.shape[2])*s,u=("NHWC"===i?r.shape[2]:r.shape[3])*s,c=("NHWC"===i?r.shape[3]:r.shape[1])/(s*s),d="NHWC"===i?[o,l,u,c]:[o,c,l,u],p=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(d,s,i);return n.runWebGLProgram(p,[r],r.dtype)}},NP=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Hz(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}},TP=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Hz(this.outputShape.length);const s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,d=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<c;g++)p+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;p+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let g=0;g<c;g++)p+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(d+1)/2;g++){const e=2*g;if(p+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<c&&(i%2===1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,p+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<c)){const t=i%2===0?br.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,l>1&&(p+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                      xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${e}Ready = 1;\n                    }\n                    `),p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                  `):p+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<c&&(i%2===1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<c&&(p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<c&&(p+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<c&&(p+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let h="",f="";n&&(h=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${h}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}};var CP={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=a;let c=l;null==c&&(c=[1,1]),br.assert(tf.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const d=tf.computeConv2DInfo(r.shape,s.shape,i,c,o,u,!0);let p;p=Ze().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?new TP(d):new NP(d);const h=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(p,[r,s],"float32",h)}};var EP={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=a,d=tf.computeConv2DInfo(r.shape,c,i,o,l,u,!0),p=new class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(p,[r,s],"float32")}};var RP={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=a,d=tf.computeConv2DInfo(c,s.shape,i,o,l,u,!0),p=new class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d);return n.runWebGLProgram(p,[r,s],"float32")}};var FP={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=br.sizeFromShape(a.shape),i=GO({inputs:{x:a},backend:n,attrs:{shape:[s]}}),o=new class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}(s),l=n.runWebGLProgram(o,[i],i.dtype),u=GO({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};var $P={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a,u=tf.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",l);let c;const d=new class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:d}=a;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${s});\n      const ivec2 pads = ivec2(${c}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}(u);c=n.runWebGLProgram(d,[r,s],"float32");const p=GO({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),p}};var MP={kernelName:Zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:i,summedDims:o,idDims:l}=tf.decodeEinsumEquation(r,s.length);tf.checkEinsumDimSizes(i.length,l,s);const{path:u,steps:c}=tf.getEinsumComputePath(o,l),d=c.length;let p=null,h=i.length;const f=[];for(let m=0;m<d;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:a}=tf.getEinsumPermutation(h,l[e]);let r;tf.isIdentityPermutation(t)?r=s[e]:(r=JO({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(r));const i=r.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);br.arraysEqual(r.shape,i)||(r=GO({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===p?p=r:(p=UO({inputs:{a:r,b:p},backend:n}),f.push(p))}m<d-1&&(u[m]>=0&&(p=ZO({inputs:{x:p},backend:n,attrs:{axis:u[m]-(i.length-h),keepDims:!1}}),f.push(p)),h--)}for(const m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}},zP=zO({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),_P={kernelName:Yt,backendName:"webgl",kernelFunc:zP},OP={kernelName:Jt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=Ze().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new kO("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new wO("return (b >= 1.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}},DP=_O({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:v_}),PP={kernelName:en,backendName:"webgl",kernelFunc:DP},LP=zO({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${tf.ERF_P};\n  float a1 = ${tf.ERF_A1};\n  float a2 = ${tf.ERF_A2};\n  float a3 = ${tf.ERF_A3};\n  float a4 = ${tf.ERF_A4};\n  float a5 = ${tf.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),WP={kernelName:Qt,backendName:"webgl",kernelFunc:LP},BP="return exp(x);",UP=zO({opSnippet:BP,packedOpSnippet:BP,cpuKernelImpl:w_,dtype:"float32"}),VP={kernelName:tn,backendName:"webgl",kernelFunc:UP};function GP(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let l=r;return r<0&&(br.assert(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),GO({inputs:{x:s},backend:a,attrs:{shape:o}})}var HP={kernelName:nn,backendName:"webgl",kernelFunc:GP},jP="return exp(x) - 1.0;",qP=zO({opSnippet:jP,packedOpSnippet:jP,cpuKernelImpl:k_}),XP={kernelName:an,backendName:"webgl",kernelFunc:qP},KP=class{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${a}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${a});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${a}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function ZP(e,t,n){const a=n.texData.get(e.dataId),r=br.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=GO({inputs:{x:e},backend:n,attrs:{shape:[r/s,s]}}),o=i.shape,l=new KP("real",o,t),u=new KP("imag",o,t),c=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o}],d=n.runWebGLProgram(l,c,"float32"),p=n.runWebGLProgram(u,c,"float32"),h=NO({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const f=GO({inputs:{x:h},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(h),f}var YP={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return ZP(a,!1,n)}};function JP(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:s}=n;if(s=s||br.inferDtype(r),"string"===s){const e=br.getArrayFromDType(s,br.sizeFromShape(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{const e=new class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}(a,r),n=[[r]];return t.runWebGLProgram(e,[],s,n)}}var QP,eL={kernelName:sn,backendName:"webgl",kernelFunc:JP},tL={kernelName:on,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,a=t,r=new class{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(n.shape);return a.runWebGLProgram(r,[n],n.dtype)}},nL="return floor(x);",aL=zO({opSnippet:nL,packedOpSnippet:nL,cpuKernelImpl:I_}),rL={kernelName:ln,backendName:"webgl",kernelFunc:aL},sL=_O({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),iL={kernelName:un,backendName:"webgl",kernelFunc:sL},oL={kernelName:nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:s}=a,i="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],d=[u,l,s];(o||i)&&(null==QP&&(QP=document.createElement("canvas").getContext("2d")),QP.canvas.width=l,QP.canvas.height=u,QP.drawImage(r,0,0,l,u),r=QP.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=vM.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);const h=Ze().getBool("WEBGL_PACK")?new class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=kz(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${a}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}(d):new class{constructor(e){this.variableNames=["A"];const t=kz(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}(d),f=n.runWebGLProgram(h,[p],"int32");return n.disposeData(p.dataId),f}};var lL={kernelName:sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a,m=tf.convertConv2DDataFormat(c),g=tf.computeConv2DInfo(r.shape,s.shape,l,d,u,p,!1,m);let y;const A=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Ze().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])y=lP({x:r,filter:s,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,a="leakyrelu"===h,l=h?OO(h,!1):null,u=new iP(g,e,l,t,a),c=[r,s];if(i&&c.push(i),o&&c.push(o),a){const e=n.makeTensorInfo([],"float32",br.createScalarValue(f,"float32"));c.push(e),A.push(e)}y=n.runWebGLProgram(u,c,"float32")}else y=oP({x:r,filter:s,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});const x=GO({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return A.push(y),A.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}};var uL={kernelName:ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:d,activation:p,leakyreluAlpha:h}=a,f=[];let m=c;null==m&&(m=[1,1]),br.assert(tf.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=tf.computeConv2DInfo(r.shape,s.shape,l,m,u,d,!0),y=Ze().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,A=p?OO(p,y):null,x=[r,s],b=null!=i,v=null!=o,w="leakyrelu"===p;if(b&&x.push(i),v&&x.push(o),w){const e=n.makeTensorInfo([],"float32",br.createScalarValue(h,"float32"));x.push(e),f.push(e)}let k;k=y?new TP(g,b,A,v,w):new NP(g,b,A,v,w);const I=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],S=n.runWebGLProgram(k,x,"float32",I);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};var cL={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,i=s[s.length-1],o=br.sizeFromShape(a.shape),[l,u,c,d]=tf.prepareAndValidate(a,r),p=GO({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),h=GO({inputs:{x:a},backend:n,attrs:{shape:[br.sizeFromShape(a.shape)/c,c]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),s=S_(e,t,a.dtype,u,i,c,d,a.shape,o);return n.makeTensorInfo(l,a.dtype,s.values)}const f=new class{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const a=Wz(t.length),r=Wz(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${a} strides = ${a}(${this.strides});\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}(i,d,[u,c]),m=n.runWebGLProgram(f,[h,p],h.dtype),g=GO({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(m),g}};function dL(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a,l=br.parseAxisParam(i,r.shape)[0],u=n.readSync(s.dataId),c=r.shape[l];for(let b=0;b<u.length;++b){const e=u[b];br.assert(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}const d=tf.segment_util.collectGatherOpShapeInfo(r,s,l,o),p=br.sizeFromShape(s.shape),h=[],f=GO({inputs:{x:r},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=GO({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}});h.push(f),h.push(m);const g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize];if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.bufferSync(m),t=n.bufferSync(f),a=N_(t,e,g);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d.outputShape,a.dtype,a.values)}const y=new class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Wz(this.rank),a=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e.length;r++)2===r?a.push("int(getIndices(resRC.x, resRC.z))"):a.push(`${n[r]}`);return a.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}(f.shape,g),A=n.runWebGLProgram(y,[f,m],f.dtype);h.push(A);const x=GO({inputs:{x:A},backend:n,attrs:{shape:d.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}var pL={kernelName:dn,backendName:"webgl",kernelFunc:dL},hL=_O({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:T_,dtype:"bool"}),fL={kernelName:hn,backendName:"webgl",kernelFunc:hL},mL=_O({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:C_}),gL={kernelName:fn,backendName:"webgl",kernelFunc:mL};var yL={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return ZP(a,!0,n)}},AL=zO({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),xL={kernelName:An,backendName:"webgl",kernelFunc:AL},bL=zO({opSnippet:"return float(isinf(x));",dtype:"bool"}),vL={kernelName:xn,backendName:"webgl",kernelFunc:bL},wL=zO({opSnippet:"return float(isnan(x));",dtype:"bool"}),kL={kernelName:bn,backendName:"webgl",kernelFunc:wL},IL=_O({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:E_,dtype:"bool"}),SL={kernelName:wn,backendName:"webgl",kernelFunc:IL},NL=_O({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:R_,dtype:"bool"}),TL={kernelName:kn,backendName:"webgl",kernelFunc:NL};var CL={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=F_(a,r,s);return t.makeTensorInfo([i.length],"float32",i)}},EL=zO({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:$_}),RL={kernelName:Sn,backendName:"webgl",kernelFunc:EL},FL=zO({opSnippet:"return log(1.0 + x);"}),$L={kernelName:Nn,backendName:"webgl",kernelFunc:FL},ML=_O({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),zL={kernelName:Tn,backendName:"webgl",kernelFunc:ML},_L=zO({opSnippet:"return float(!(x >= 1.0));"}),OL={kernelName:Cn,backendName:"webgl",kernelFunc:_L},DL=_O({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),PL={kernelName:En,backendName:"webgl",kernelFunc:DL},LL={kernelName:Fn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=a,u=Ze().getBool("WEBGL_PACK_NORMALIZATION")?new class{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${a}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}(r.shape,s,i,o,l):new class{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${a}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}(r.shape,s,i,o,l);return n.runWebGLProgram(u,[r],r.dtype)}},WL={kernelName:$n,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=a,d=new class{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${a}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${a})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}(r.shape,o,l,u,c);return n.runWebGLProgram(d,[r,s,i],r.dtype)}};function BL(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,o=r.shape.length,l=br.parseAxisParam(s,r.shape);let u=l;const c=tf.getAxesPermutation(u,o),d=null!=c,p=n.shouldExecuteOnCPU([r]);let h=r;if(d){if(p){const e=n.texData.get(h.dataId).values,t=new Array(o);for(let n=0;n<t.length;n++)t[n]=r.shape[c[n]];const a=nO(e,r.shape,r.dtype,c,t);h=n.makeTensorInfo(t,r.dtype);n.texData.get(h.dataId).values=a}else h=KO(r,c,n);u=tf.getInnerMostAxes(u.length,o)}tf.assertAxesAreInnerMostDims("max",u,o);const[f,m]=tf.computeOutAndReduceShapes(h.shape,u);let g,y=f;if(i&&(y=tf.expandShapeToKeepDim(f,l)),p){const e=n.texData.get(h.dataId).values,t=M_(e,br.sizeFromShape(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,a){const r=br.sizeFromShape(t),s=GO({inputs:{x:e},attrs:{shape:[br.sizeFromShape(e.shape)/r,r]},backend:a}),i=XO(s,e.dtype,"max",a),o=GO({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}(h,m,y,n);return d&&n.disposeIntermediateTensorInfo(h),g}var UL={kernelName:Mn,backendName:"webgl",kernelFunc:BL},VL=_O({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:z_}),GL={kernelName:zn,backendName:"webgl",kernelFunc:VL};var HL={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;vz(r,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;br.assert(tf.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=tf.computePool2DInfo(r.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&br.arraysEqual(u.inShape,u.outShape))return IO({inputs:{x:r},backend:n});const c=new ED(u,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}};var jL={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=a,c=tf.computePool3DInfo(r.shape,s,i,[1,1,1],o,u,l),d=new RD(c,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}};var qL={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=a,d=tf.computePool3DInfo(i.shape,o,l,[1,1,1],u,c),p=new RD(d,"max",!0),h=n.runWebGLProgram(p,[i],i.dtype),f=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,d=l-1-e.padInfo.top,p=u-1-e.padInfo.left,h=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${d}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(d),m=n.runWebGLProgram(f,[r,h],i.dtype);return n.disposeIntermediateTensorInfo(h),m}};var XL={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;vz([s,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:d}=a,p=tf.computePool2DInfo(o.shape,l,u,1,c,d),h=new ED(p,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=s-1-e.padInfo.left,l=r*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}(p),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};var KL={kernelName:Ln,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;br.assert(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));const u=[1,1];br.assert(tf.eitherStridesOrDilationsAreOne(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));const c=tf.computePool2DInfo(a.shape,r,s,u,i),[d,p]=function(e,t,n,a){let r=new ED(n,"max",!1);const s=a.runWebGLProgram(r,[e],"float32");return r=new ED(n,"max",!0,!0,t),[s,a.runWebGLProgram(r,[e],"float32")]}(a,o,c,l);return[d,p]}};var ZL={kernelName:Wn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{keepDims:r,axis:s}=t,i=n,o=a.shape.length,l=br.parseAxisParam(s,a.shape);let u=l;const c=tf.getAxesPermutation(u,o),d=null!=c,p=i.shouldExecuteOnCPU([a]),h=[];let f=a;if(d){if(p){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let r=0;r<t.length;r++)t[r]=a.shape[c[r]];const n=nO(e,a.shape,a.dtype,c,t);f=i.makeTensorInfo(t,a.dtype);i.texData.get(f.dataId).values=n}else f=KO(a,c,i);h.push(f),u=tf.getInnerMostAxes(u.length,o)}tf.assertAxesAreInnerMostDims("sum",u,o);const[m,g]=tf.computeOutAndReduceShapes(f.shape,u);let y=m;r&&(y=tf.expandShapeToKeepDim(m,l));const A=function(e,t,n,a){const r=br.sizeFromShape(t),s=GO({inputs:{x:e},attrs:{shape:[br.sizeFromShape(e.shape)/r,r]},backend:a}),i=XO(s,"float32","mean",a),o=GO({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const x of h)i.disposeIntermediateTensorInfo(x);return A}};var YL={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=br.parseAxisParam(s,r.shape);let u=l;const c=tf.getAxesPermutation(u,o);let d=r;null!=c&&(d=JO({inputs:{x:r},backend:n,attrs:{perm:c}}),u=tf.getInnerMostAxes(u.length,r.shape.length)),tf.assertAxesAreInnerMostDims("min",u,o);const[p,h]=tf.computeOutAndReduceShapes(d.shape,u),f=GO({inputs:{x:d},backend:n,attrs:{shape:[-1,br.sizeFromShape(h)]}}),m=XO(f,f.dtype,"min",n);let g;if(i){g=GO({inputs:{x:m},backend:n,attrs:{shape:tf.expandShapeToKeepDim(p,l)}})}else g=GO({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(d),g}},JL=_O({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:__}),QL={kernelName:Un,backendName:"webgl",kernelFunc:JL},eW={kernelName:Vn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{paddings:r,mode:s}=n,i=Ze().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=Wz(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=sO("rc",a),l=sO("source",a),u=`${o[a-1]} < ${this.outputShape[a-1]}`,c=1===a?"source":`vec2(${l.slice(-2).join()})`,d="reflect"===n?0:1;let p="";if(1===a){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[a-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[a-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[a-2]} += 1;\n        if(${o[a-2]} < ${this.outputShape[a-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[a-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${s});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}(a.shape,r,s):new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=Wz(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),l="reflect"===n?0:1;this.userCode=1!==a?`\n      ${r} start = ${r}(${s});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${a}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}(a.shape,r,s);return t.runWebGLProgram(i,[a],a.dtype)}},tW=_O({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),nW={kernelName:Gn,backendName:"webgl",kernelFunc:tW},aW=_O({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),rW={kernelName:Kt,backendName:"webgl",kernelFunc:aW},sW="return a - b;",iW=_O({opSnippet:sW,packedOpSnippet:sW,supportsComplex:!0,cpuKernelImpl:Q_}),oW={kernelName:Ga,backendName:"webgl",kernelFunc:iW};function lW(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=br.parseAxisParam([s],r.shape),o=BL({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=tf.expandShapeToKeepDim(o.shape,i),u=GO({inputs:{x:o},backend:n,attrs:{shape:l}}),c=iW({inputs:{a:r,b:u},backend:n}),d=UP({inputs:{x:c},backend:n}),p=ZO({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),h=GO({inputs:{x:p},backend:n,attrs:{shape:l}}),f=aW({inputs:{a:d,b:h},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),f}var uW={kernelName:$a,backendName:"webgl",kernelFunc:lW};var cW={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a,l=o?r:lW({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],d=new class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}(u,c,s),p=[[i]],h=n.runWebGLProgram(d,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),h}},dW="return -x;";var pW={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=D_(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r;return r=Ze().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new hO(a.shape,dW):new cO(a.shape,dW),n.runWebGLProgram(r,[a],a.dtype)}},hW=nm.nonMaxSuppressionV3Impl;var fW={kernelName:Kn,backendName:"webgl",kernelFunc:function(e){tf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a,u=n.readSync(r.dataId),c=n.readSync(s.dataId),{selectedIndices:d}=hW(u,c,i,o,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},mW=nm.nonMaxSuppressionV4Impl;var gW={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){tf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=a,c=n.readSync(r.dataId),d=n.readSync(s.dataId),{selectedIndices:p,validOutputs:h}=mW(c,d,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},yW=nm.nonMaxSuppressionV5Impl;var AW={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){tf.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a,c=n.readSync(r.dataId),d=n.readSync(s.dataId),p=i,h=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=yW(c,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},xW={kernelName:Qn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{depth:s,onValue:i,offValue:o}=a,l=br.sizeFromShape(r.shape),u=new class{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${a}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}(l,s,i,o),c=GO({inputs:{x:r},backend:n,attrs:{shape:[l]}}),d=n.runWebGLProgram(u,[c],r.dtype);n.disposeIntermediateTensorInfo(c);const p=GO({inputs:{x:d},backend:n,attrs:{shape:[...r.shape,s]}});return n.disposeIntermediateTensorInfo(d),p}};function bW(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=HD({inputs:{input:a},backend:n}),t=bW({inputs:{x:e},backend:n}),r=tP({inputs:{input:a},backend:n}),s=bW({inputs:{x:r},backend:n}),i=NO({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}return JP({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}var vW={kernelName:er,backendName:"webgl",kernelFunc:bW};var wW={kernelName:Jn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=HD({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=tP({inputs:{input:r},backend:a}),i=bW({inputs:{x:s},backend:a}),o=NO({inputs:{real:n,imag:i},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}return JP({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};var kW={kernelName:ea,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return GP({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{br.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),br.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=rP({inputs:t.map((e=>{const t=GP({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},IW=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;if(0===br.sizeFromShape(r.shape)){return JP({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+r.shape[t]+e[1])),value:i,dtype:r.dtype}})}const o=Ze().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=Wz(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=sO("rc",a),l=sO("source",a),u=`${o[a-1]} < ${this.outputShape[a-1]}`,c=1===a?"source":`vec2(${l.slice(-2).join()})`,d=[`${r} rc = outputLoc;`,`${o[a-1]} += 1;\n       if(${u}) {\n      `,1===a?"":`}\n       rc = outputLoc;\n       ${o[a-2]} += 1;\n       if(${o[a-2]} < ${this.outputShape[a-2]}) {`,1===a?"":`  ${o[a-1]} += 1;\n         if(${u}) {`],p=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let f=0,m=1===a?2:4;f<m;f++)h+=`\n        ${d[f]}\n        if (${p}) {\n          result[${f}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;h+=1===a?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${s});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}(r.shape,s,i):new class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=Wz(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?`\n      ${r} start = ${r}(${s});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}(r.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[r],r.dtype,l)},SW={kernelName:ta,backendName:"webgl",kernelFunc:IW},NW=_O({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),TW={kernelName:aa,backendName:"webgl",kernelFunc:NW};var CW={kernelName:sa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=[],u=br.parseAxisParam(s,r.shape);let c=u;const d=tf.getAxesPermutation(c,o);let p,h=r;if(null!=d&&(h=JO({inputs:{x:r},backend:n,attrs:{perm:d}}),c=tf.getInnerMostAxes(c.length,o),l.push(h)),tf.assertAxesAreInnerMostDims("prod",c,o),n.shouldExecuteOnCPU([h])){const e=n.texData.get(h.dataId).values,{outVals:t,outShape:a,outDtype:r}=L_(h.shape,h.dtype,e,c);p=n.makeTensorInfo(a,r,t)}else{const[e,t]=tf.computeOutAndReduceShapes(h.shape,c),a=br.sizeFromShape(t),s=GO({inputs:{x:h},backend:n,attrs:{shape:[-1,a]}}),i=XO(s,ps(r.dtype),"prod",n);p=GO({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(s),l.push(i)}if(i){l.push(p);const e=tf.expandShapeToKeepDim(p.shape,u);p=GO({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},EW=e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=W_(a,r,s,i);return t.makeTensorInfo([o.length],i,o)},RW={kernelName:ia,backendName:"webgl",kernelFunc:EW},FW=zO({opSnippet:"return 1.0 / x;"}),$W={kernelName:la,backendName:"webgl",kernelFunc:FW},MW=zO({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),zW={kernelName:ua,backendName:"webgl",kernelFunc:MW},_W=zO({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),OW={kernelName:ma,backendName:"webgl",kernelFunc:_W};var DW={kernelName:ha,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,u]=o,c=Ze().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n];let d;d=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}(r.shape,l,u,s,i):new class{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n];let d;d=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}(r.shape,l,u,s,i);return n.runWebGLProgram(c,[r],"float32")}};var PW={kernelName:fa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,i]=e,o=[n&&s>1?a-1:a,n&&i>1?r-1:r],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],d=1/u,p=1/c,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,r.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};var LW={kernelName:da,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,u]=o,c=Ze().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new class{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";let p;p=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}(r.shape,l,u,s,i):new class{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,i,o,l]=e;this.outputShape=[s,t,n,l];const u=[a&&t>1?i-1:i,a&&n>1?o-1:o],c=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";let p;p=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}(r.shape,l,u,s,i);return n.runWebGLProgram(c,[r],r.dtype)}};var WW={kernelName:pa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=new class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,i]=e,o=[n&&s>1?a-1:a,n&&i>1?r-1:r],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],d=1/u,p=1/c,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}(s.shape,r.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};var BW={kernelName:ga,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=r.shape.length,o=br.parseAxisParam(s,r.shape);if(0===i)return IO({inputs:{x:r},backend:n});const l=Ze().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const a=sO("rc",n),r=`${a[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${a[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Wz(n);var o;function l(n){const a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${a[n]} - 1`:`${a[n]}`}(r,n)));return`getChannel(getX(${a.join(",")}), vec2(${a.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=a.slice(),l(o)};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",l(e)}(a.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",l(e)}(a.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",l(e)}(a.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}(r.shape,o):new class{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(a))).join(","),r=Wz(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}},UW={kernelName:ar,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:r,fillValue:s,center:i}=t,o=n,l=new class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let r="";r="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}(a.shape,s),[u,c]=tf.getImageCenter(i,a.shape[1],a.shape[2]),d=[[u,c,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(l,[a],a.dtype,d)}},VW=zO({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),GW={kernelName:ya,backendName:"webgl",kernelFunc:VW},HW=zO({opSnippet:"return inversesqrt(x);",cpuKernelImpl:B_}),jW={kernelName:Aa,backendName:"webgl",kernelFunc:HW},qW=class{constructor(e,t,n,a,r,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=Wz(r.length),l=Wz(s.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let d="";1===a?d="i":2===a&&(d="i, coords[1]");const p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${h};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}};var XW={kernelName:xa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=tf.calculateShapes(s,r,i),p=[d/u,u];if(0===d)return n.makeTensorInfo(i,r.dtype);const h=GO({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=GO({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new qW(l,o,h.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,h,m],f.dtype),A=GO({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),A}};var KW={kernelName:ba,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=new class{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let a=0;a<t.length;a++)i.push(`${n[a]}`),a<e&&s.push(`${n[a]}`);a=s.join(),r=i.join()}const s=Wz(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${a});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[a,r,s],ds(r.dtype,s.dtype))}},ZW=zO({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${tf.SELU_SCALEALPHA};\n  float scale = ${tf.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),YW={kernelName:va,backendName:"webgl",kernelFunc:ZW},JW="return 1.0 / (1.0 + exp(-1.0 * x));",QW=zO({opSnippet:JW,packedOpSnippet:JW,cpuKernelImpl:U_}),eB={kernelName:Na,backendName:"webgl",kernelFunc:QW},tB=zO({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),nB={kernelName:Sa,backendName:"webgl",kernelFunc:tB},aB=zO({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),rB={kernelName:ka,backendName:"webgl",kernelFunc:aB},sB=zO({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),iB={kernelName:Ia,backendName:"webgl",kernelFunc:sB},oB=zO({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),lB={kernelName:Ta,backendName:"webgl",kernelFunc:oB},uB={kernelName:Ra,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;br.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<r.shape.length;++y)l.push([0,0]);const u=[],c=IW({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=tf.getReshaped(c.shape,s,o,!1),p=tf.getPermuted(d.length,s.length,!1),h=tf.getReshapedPermuted(c.shape,s,o,!1),f=GO({inputs:{x:c},backend:n,attrs:{shape:d}}),m=JO({inputs:{x:f},backend:n,attrs:{perm:p}}),g=GO({inputs:{x:m},backend:n,attrs:{shape:h}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};var cB={kernelName:Ma,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${a.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(r.dataId),u=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[d,p,h,f,m]=H_(o,a.shape,a.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(p,a.dtype,d),n.makeTensorInfo([p[0]],r.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};var dB={kernelName:za,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(r.dataId)),o=n.readSync(a.dataId),l=Array.from(n.readSync(s.dataId)),[u,c,d]=j_(o,a.shape,a.dtype,i,l);return[n.makeTensorInfo(c,a.dtype,u),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};var pB={kernelName:_a,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(s.dataId),[u,c]=q_(i,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(c,a.dtype,u)}};var hB={kernelName:Oa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(s.dataId),[u,c]=q_(i,a.shape,a.dtype,o,l);return n.makeTensorInfo(c,a.dtype,u)}};var fB={kernelName:Da,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:u,strides:c,outputSize:d}=tf.calculateShapes(s,r,o),p=new qW(u,l,r.shape.length,s.shape.length,c,[d,1],!1),h=n.runWebGLProgram(p,[s,r,i],s.dtype),f=GO({inputs:{x:h},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(h),f}};var mB={kernelName:Fa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=br.parseAxisParam(i,r.shape)[0],l=tf.prepareSplitSize(r,s,o),u=r.shape.length,c=new Array(u).fill(0),d=r.shape.slice();return l.map((e=>{const t=[...d];t[o]=e;const a=PD({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,a}))}},gB="return sqrt(x);",yB=zO({opSnippet:gB,packedOpSnippet:gB,cpuKernelImpl:X_}),AB={kernelName:Ca,backendName:"webgl",kernelFunc:yB},xB=zO({opSnippet:"return x * x;"}),bB={kernelName:La,backendName:"webgl",kernelFunc:xB},vB="return (a - b) * (a - b);",wB=_O({opSnippet:vB,packedOpSnippet:vB}),kB={kernelName:Pa,backendName:"webgl",kernelFunc:wB};var IB={kernelName:tr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:a}=e,r=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new cO(a.shape,r);return n.runWebGLProgram(s,[a],a.dtype)}};var SB={kernelName:Wa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:p}=a,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:A,end:x,strides:b}=Io.sliceInfo(r.shape,s,i,o,l,u,c,d,p);let v;if(m)v=GO({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){br.assert(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=Io.computeOutShape(A,x,b),t=PD({inputs:{x:r},backend:n,attrs:{begin:A,size:e}});v=GO({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=Mi(r.shape,r.dtype,e),a=K_(h,t,b,A);v=n.makeTensorInfo(f,r.dtype,a.values)}else{const e=new class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=Wz(n.length),s=Wz(n.length);let i="";if(1===a)i="coords * strides + begin";else{let e=0;i=n.map(((t,a)=>(e++,1===n.length?`coords * strides[${a}] + begin[${a}]`:`coords[${e-1}] * strides[${a}] + begin[${a}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}(A,b,h);v=n.runWebGLProgram(e,[r],r.dtype)}}const w=GO({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),w}};var NB={kernelName:Ba,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:c,dataSplits:d}=t,p=n.readSync(c.dataId),h=n.readSync(d.dataId),[f,m]=Z_(p,h,r,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};var TB={kernelName:Ua,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,c,d]=Y_(o,l,r),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};var CB={kernelName:Va,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=J_(i,r);return n.makeTensorInfo(s.shape,"int32",o)}},EB=zO({opSnippet:"return tan(x);"}),RB={kernelName:Ha,backendName:"webgl",kernelFunc:EB},FB=zO({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),$B={kernelName:ja,backendName:"webgl",kernelFunc:FB};function MB(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>br.decodeString(e))):e,a=Mi(r.shape,r.dtype,t),i=eO(a,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new class{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const a=Wz(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push(`imod(${n[r]}, ${e[r]})`);return a.join()}(e);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}var zB={kernelName:qa,backendName:"webgl",kernelFunc:MB},_B=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function OB(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function DB(e){let t=1;for(;t<e;)t*=2;return t}var PB={kernelName:Xa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a,o=Ze().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=Ze().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<o||s>l){const e=n.readSync(r.dataId),[t,a]=tO(e,u,r.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[r,JP({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const d=n.texData.get(r.dataId),p=null!==d&&d.isPacked,h=p?n.unpackTensor(r):r,f=br.sizeFromShape(u)/c,m=GO({inputs:{x:h},attrs:{shape:[f,c]},backend:n});p&&OB(n,h);const g=DB(s),y=DB(c);let A=null;const x=()=>null===A?[m,m]:[m,A],b=(e,t,a)=>{const r=x(),s=new class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}(a),i=[[c],[null===A?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=A;A=n.runWebGLProgram(s,r,"int32",i),OB(n,o)};for(let S=1;S<g;S*=2){const e=2*S;for(let t=S;t>=1;t/=2)b(e,t,[f,y])}for(let S=y;S>g;S/=2){const e=x(),t=new _B([f,S/2]),a=[[c],[null===A?1:0],[g]],r=A;A=n.runWebGLProgram(t,e,"int32",a),OB(n,r);const s=g/2,i=2*s;for(let n=s;n>=1;n/=2)b(i,n,A.shape)}let v=A;A=PD({inputs:{x:A},backend:n,attrs:{begin:0,size:[f,s]}}),OB(n,v);let w=dL({inputs:{x:m,indices:A},backend:n,attrs:{axis:1,batchDims:1}});OB(n,m);const k=u.slice(0,-1);k.push(s),v=A,A=GO({inputs:{x:A},attrs:{shape:k},backend:n}),OB(n,v);const I=w;return w=GO({inputs:{x:w},attrs:{shape:k},backend:n}),OB(n,I),[w,A]}};var LB={kernelName:Ka,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=a,[c,d,p,h]=r.shape,[f,m]=null!=u?u:[d,p],g=[c,f,m,h],y=new class{constructor(e,t,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(a){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}(d,p,i,o,l,g);return n.runWebGLProgram(y,[r,s],"float32")}};var WB={kernelName:Ya,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;vz(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=a.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=aO(i,r,s.shape,s.dtype);return[a.makeTensorInfo(l,s.dtype,o),a.makeTensorInfo([u.length],"int32",u)]}};var BB={kernelName:Ja,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const i=r,o=i.shape.length,l=r.shape[s],u=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==s&&(u[c++]=i.shape[m]);const d=[],p=new Array(o).fill(0),h=i.shape.slice();h[s]=1;const f=new Array(l);for(let m=0;m<f.length;m++){p[s]=m;const e=PD({inputs:{x:i},backend:n,attrs:{begin:p,size:h}}),t=GO({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,d.push(e)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};var UB=[LL,WL,tD,aD,sD,oD,cD,dD,pD,hD,yD,AD,bD,wD,ND,ID,CD,$D,FD,MD,zD,_D,OD,WD,BD,UD,qD,ZD,YD,QD,TO,sP,cP,dP,uP,hP,fP,pP,gP,AP,xP,kP,IP,SP,EP,RP,CP,FP,$P,MP,_P,OP,PP,WP,VP,HP,XP,YP,eL,tL,rL,iL,oL,lL,uL,cL,pL,fL,gL,SO,yL,nP,xL,vL,kL,RO,SL,TL,CL,$L,RL,zL,OL,PL,UL,jL,HL,qL,XL,KL,GL,ZL,YL,QL,eW,nW,cW,VO,pW,fW,gW,AW,GD,xW,wW,kW,SW,TW,MO,CW,RW,jD,rW,$W,OW,zW,HO,DW,PW,LW,WW,BW,UW,GW,jW,XW,KW,YW,eB,nB,rB,iB,LD,uW,lB,uB,cB,dB,pB,hB,fB,mB,AB,bB,kB,IB,SB,NB,TB,CB,oW,YO,RB,$B,zB,PB,LB,QO,WB,BB,{kernelName:Qa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a,o=r.shape.length,l=[];let u=0;const c=tf.getAxesPermutation([u],o);let d=r;null!=c&&(d=JO({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(d),u=tf.getInnerMostAxes(1,o)[0]);const p=tf.segment_util.computeOutShape(d.shape,u,i),h=br.sizeFromShape([d.shape[u]]),f=GO({inputs:{x:d},backend:n,attrs:{shape:[-1,h]}});l.push(f);const m=ps(r.dtype),g=(e,t,a,r,s)=>{const i=e.shape[0],o=e.shape[1],u=tf.segment_util.segOpComputeOptimalWindowSize(o,s),c={windowSize:u,inSize:o,batchSize:i,numSegments:s},d=new class{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,i=s*Math.ceil(r/n);this.outputShape=[a,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let d="";r%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}(c,t),p=n.compileAndRun(d,[e,a],r);if(l.push(p),p.shape[1]===s)return p;const h=EW({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=MB({inputs:{x:h},backend:n,attrs:{reps:[o/u]}});l.push(h),l.push(f);return g(p,t,f,r,s)},y=GO({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:p}});let A=y;if(null!=c){l.push(y);const e=tf.getUndoAxesPermutation(c);A=JO({inputs:{x:A},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),A}},vW];for(const B0 of UB)fr(B0);var VB=Ze();function GB(e,t){if(Math.max(...e)>3)throw new Error("Cannot symbolically compute strides for rank > 4 tensor.");const n=e.length,a=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=a[n-1];for(let s=n-3;s>=0;--s)r[s]=`(${r[s+1]} * ${a[s+1]})`;return r}function HB(e){if(e<=1)return"i32";if(2===e)return"vec2<i32>";if(3===e)return"vec3<i32>";if(4===e)return"vec4<i32>";throw Error(`GPU for rank ${e} is not yet supported`)}function jB(e,t){return"float32"===e?t?"vec4<f32>":"f32":"int32"===e||"bool"===e?t?"vec4<i32>":"i32":e}function qB(e,t,n,a=!1){const r=`\n    let workGroupSizeX = ${n.workGroupSize[0]}u;\n    let workGroupSizeY = ${n.workGroupSize[1]}u;\n    let workGroupSizeZ = ${n.workGroupSize[2]}u;`;if(!0===a){const e=YB(t.shape),a=`\n      struct Matrix0 {\n        numbers: array<${jB(t.dtype,n.isVec4)}>;\n      };\n      struct Uniform {\n        size            : i32;\n        numChannels     : i32;\n        outShapeStrides : vec2<i32>;\n        dispatchSize    : vec3<u32>;\n      };\n\n      [[group(0), binding(0)]] var<storage, write> result : Matrix0;\n      [[group(0), binding(2)]] var<uniform> uniforms: Uniform;\n    `;return[XB,a,r,KB,e,n.getUserCode()].join("\n")}const s=[];let i="struct Uniforms { NAN : f32; ";n.variableNames.forEach(((t,n)=>{i+=`${t.charAt(0).toLowerCase()+t.slice(1)}Shape : ${HB(e[n].shape.length)}; `})),i+=`outShape : ${HB(t.shape.length)} ; `;const o=t.shape.length-1;i+=`\n       outShapeStrides: ${HB(o)}; `,n.size&&(i+="size : i32; "),n.uniforms&&(i+=n.uniforms),i+="};",s.push(i),n.atomic?s.push("\n    struct Matrix0 {\n        numbers: array<atomic<i32>>;\n    };\n\n    [[group(0), binding(0)]] var<storage, read_write> result : Matrix0;\n  "):s.push(`\n    struct Matrix0 {\n        numbers: array<${jB(t.dtype,n.isVec4)}>;\n    };\n\n    [[group(0), binding(0)]] var<storage, write> result : Matrix0;\n  `),n.variableNames.forEach(((t,a)=>{s.push(`\n    struct Matrix${1+a} {\n      numbers: array<${jB(e[a].dtype,n.isVec4)}>;\n    };\n    [[group(0), binding(${1+a})]] var<storage, read> ${t} : Matrix${1+a};\n    `)})),""!==i&&s.push(`\n    [[group(0), binding(${1+n.variableNames.length})]] var<uniform> uniforms : Uniforms;\n    `),s.push(r);const[l,u]=function(e,t){const{x:n,y:a=[],z:r=[]}=t,s=e.length;if(n.length===s){return[`fn getOutputCoords() -> ${HB(s)}{\n      let globalIndex = getGlobalIndex();\n      return getCoordsFromFlatIndex(globalIndex);\n    }\n    `,s]}let i="";const o=[n,a,r];let l=0;for(let p=0;p<o.length;p++){const e=o[p];if(0!==e.length)if(l+=e.length,1===e.length)i+=`let d${e[0]} = i32(globalId[${p}]);`;else{const t=GB(e,"uniforms.outShape");i+=`var index${p} = i32(globalId[${p}]);`;for(let n=0;n<t.length;n++)i+=`let d${e[n]} = index${p} / ${t[n]};`,n===t.length-1?i+=`let d${e[n+1]} = index${p} - d${e[n]} * ${t[n]};`:i+=`index${p} = index${p} - d${e[n]} * ${t[n]};`}}const u=[];for(let p=0;p<l;p++)u.push(`d${p}`);const c=HB(l);let d=`fn getOutputCoords() -> ${c} {\n    ${i}\n  `;0===u.length?d+=`return ${c}(0); }`:d+=`return ${c}(${u.join(",")}); }`;return[d,l]}(t.shape,n.dispatchLayout),c=YB(t.shape),d=[XB,s.join("\n"),KB,c,l,ZB(t.shape.length)];if(n.atomic||d.push(function(e,t,n){const a=e.length,r=jB(t,n);let s;s=n?`fn setOutputFlat(flatIndex : i32, value : vec4<f32>) {\n      result.numbers[flatIndex] = ${r}(value);\n    }\n    fn setOutputFlatI32(flatIndex : i32, value : vec4<i32>) {\n      result.numbers[flatIndex] = ${r}(value);\n    }`:`fn setOutputFlat(flatIndex : i32, value : f32) {\n      result.numbers[flatIndex] = ${r}(value);\n    }\n    fn setOutputFlatI32(flatIndex : i32, value : i32) {\n      result.numbers[flatIndex] = ${r}(value);\n    }`;if(a>=2){const e=["d0","d1","d2","d3"].slice(0,a),t=HB(a);s+=n?`\n      fn setOutput(${e.map((e=>`${e} : i32`)).join(", ")}, value : vec4<f32>) {\n        let flatIndex = getOutputFlatIndex(${t}(${e.join(", ")}));\n        setOutputFlat(flatIndex / 4, value);\n      }\n      fn setOutputI32(${e.map((e=>`${e} : i32`)).join(", ")}, value : vec4<i32>) {\n        let flatIndex = getOutputFlatIndex(${t}(${e.join(", ")}));\n        setOutputFlatI32(flatIndex / 4, value);\n      }\n    `:`\n      fn setOutput(${e.map((e=>`${e} : i32`)).join(", ")}, value : f32) {\n        let flatIndex = getOutputFlatIndex(${t}(${e.join(", ")}));\n        setOutputFlat(flatIndex, value);\n      }\n      fn setOutputI32(${e.map((e=>`${e} : i32`)).join(", ")}, value : i32) {\n        let flatIndex = getOutputFlatIndex(${t}(${e.join(", ")}));\n        setOutputFlatI32(flatIndex, value);\n      }\n    `}return s}(t.shape,t.dtype,n.isVec4)),u===t.shape.length){const a=e.map((e=>function(e,t,n,a){let r=function(e,t){const n=e.name,a=e.shape.length,r=HB(a),s="get"+n.charAt(0).toUpperCase()+n.slice(1),i=["d0","d1","d2","d3"].slice(0,a),o=i.map((e=>`${e} : i32`)).join(", ");if(a<1)return t?`\n        fn ${s}() -> vec4<f32> {\n          return vec4<f32>(${n}.numbers[0]);\n        }\n      `:`\n      fn ${s}() ->f32 {\n        return f32(${n}.numbers[0]);\n      }\n    `;const l=`uniforms.${n.charAt(0).toLowerCase()+n.slice(1)}Shape`;let u=`${a}D`;0===a&&(u="1D");if(t)return`\n      fn ${s}(${o}) -> vec4<f32> {\n        return vec4<f32>(${n}.numbers[getFlatIndex${u}(${r}(${i.join(",")}),\n          ${l}) / 4]);\n      }\n      `;return`\n    fn ${s}(${o}) -> f32 {\n      return f32(${n}.numbers[getFlatIndex${u}(${r}(${i.join(",")}),\n        ${l})]);\n    }\n   `}(e,n);e.shape.length<=t.length&&(r+=function(e,t,n,a){const r=e.name,s=r.charAt(0).toUpperCase()+r.slice(1),i="get"+s+"AtOutCoords",o=e.shape.length,l=t.length,u=HB(l);if(br.arraysEqual(e.shape,t)&&a)return n?`\n        fn ${i}ByGlobalIndex(globalIndex : i32) -> vec4<f32> {\n          return vec4<f32>(${r}.numbers[globalIndex]);\n        }\n\n        fn ${i}ByCoords(coords : ${u}) -> vec4<f32> {\n          return vec4<f32>(${r}.numbers[${l>1?"getOutputFlatIndex(coords)":"coords"} / 4]);\n        }\n        `:`\n      fn ${i}ByGlobalIndex(globalIndex : i32) -> f32 {\n        return f32(${r}.numbers[globalIndex]);\n      }\n\n      fn ${i}ByCoords(coords : ${u}) -> f32 {\n        return f32(${r}.numbers[${l>1?"getOutputFlatIndex(coords)":"coords"}]);\n      }\n      `;const c=tf.getBroadcastDims(e.shape,t),d=l-o;let p="";if(0===o)return n?`\n      fn ${i}ByGlobalIndex(globalIndex : i32) -> vec4<f32> {\n        return get${s}();\n      }\n\n      fn ${i}ByCoords(coords : ${u}) -> vec4<f32> {\n        return get${s}();\n      }\n    `:`\n      fn ${i}ByGlobalIndex(globalIndex : i32) -> f32{\n        return get${s}();\n      }\n\n      fn ${i}ByCoords(coords : ${u}) -> f32{\n        return get${s}();\n      }\n    `;p=l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords[${e+d}] = 0;`)).join("\n");let h="";if(l<2&&o>0)h="coords";else if(l>1){h=`${HB(o)}(${e.shape.map(((e,t)=>`coords[${t+d}]`)).join(", ")})`}else h="coords";const f=`uniforms.${r.charAt(0).toLowerCase()+r.slice(1)}Shape`,m=`${o}D`;if(n)return`\n      fn ${i}ByGlobalIndex(globalIndex : i32) -> vec4<f32> {\n        var coords = getCoordsFromFlatIndex(globalIndex);\n        ${p}\n        return ${r}.numbers[getFlatIndex${m}(${h}, ${f}) / 4];\n      }\n\n      fn ${i}ByCoords(coordsIn : ${u}) -> vec4<f32> {\n        var coords = coordsIn;\n        ${p}\n        return ${r}.numbers[getFlatIndex${m}(${h}, ${f}) / 4];\n      }\n    `;return`\n    fn ${i}ByGlobalIndex(globalIndex : i32) -> f32 {\n      var coords = getCoordsFromFlatIndex(globalIndex);\n      ${p}\n      return f32(${r}.numbers[getFlatIndex${m}(${h}, ${f})]);\n    }\n\n    fn ${i}ByCoords(coordsIn : ${u}) -> f32 {\n      var coords = coordsIn;\n      ${p}\n      return f32(${r}.numbers[getFlatIndex${m}(${h}, ${f})]);\n    }\n  `}(e,t,n,a));return r}(e,t.shape,n.isVec4,n.dispatchLayout.x.length===t.shape.length))).join("\n");d.push(a)}d.push(n.getUserCode());return d.join("\n")}VB.registerFlag("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE",(()=>15)),VB.registerFlag("WEBGPU_CPU_FORWARD",(()=>!0)),VB.registerFlag("WEBGPU_MATMUL_WORK_PER_THREAD",(()=>4)),VB.registerFlag("WEBGPU_USE_NAIVE_CONV2D",(()=>!1)),VB.registerFlag("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE",(()=>!1)),VB.registerFlag("WEBGPU_CONV_SEPARATE_IM2COL_SHADER",(()=>!1)),VB.registerFlag("WEBGPU_USE_LOW_POWER_GPU",(()=>!1)),VB.registerFlag("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e3)),VB.registerFlag("WEBGPU_USE_PROFILE_TOOL",(()=>!1)),VB.registerFlag("WEBGPU_USE_IMPORT",(()=>!1));var XB="\n  var<private> localId: vec3<u32>;\n  var<private> globalId: vec3<u32>;\n  var<private> numWorkgroups: vec3<u32>;\n\n  fn idiv(a: i32, b: i32, sign: f32) -> i32 {\n    var res: i32 = a / b;\n    let mod: i32 = a % b;\n    if (sign < 0. && mod != 0) {\n      res = res - 1;\n    }\n    return res;\n  }\n\n  fn isNanCustom(val : f32) -> bool {\n    if (val > 0.0) {\n      return false;\n    }\n    if (val < 0.0) {\n      return false;\n    }\n    if (val == 0.0) {\n      return false;\n    }\n    return true;\n  }\n\n  fn isNanCustomVec4(val : vec4<f32>) -> vec4<bool> {\n    return vec4<bool>(isNanCustom(val[0]), isNanCustom(val[1]), isNanCustom(val[2]), isNanCustom(val[3]));\n  }\n\n  // Checks whether coordinates lie within the bounds of the shape.\n  fn coordsInBounds4D(coord : vec4<i32>, shape : vec4<i32>) -> bool {\n    return all(coord >= vec4<i32>(0)) &&\n        all(coord < shape);\n  }\n\n  fn coordsInBounds3D(coord : vec3<i32>, shape : vec3<i32>) -> bool {\n    return all(coord >= vec3<i32>(0)) &&\n        all(coord < shape);\n  }\n\n  fn coordsInBounds2D(coord : vec2<i32>, shape : vec2<i32>) -> bool {\n    return all(coord >= vec2<i32>(0)) &&\n        all(coord < shape);\n  }\n  ",KB="\n  fn getFlatIndex1D(coord : i32, shape : i32) -> i32 {\n    return coord;\n  }\n\n  fn getFlatIndex2D(coords : vec2<i32>, shape : vec2<i32>) -> i32 {\n    return dot(coords, vec2<i32>(shape.y, 1));\n  }\n\n  fn getFlatIndex3D(coords : vec3<i32>, shape : vec3<i32>) -> i32 {\n    return dot(coords, vec3<i32>(shape.y * shape.z, shape.z, 1));\n  }\n\n  fn getFlatIndex4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n    return dot(coords, vec4<i32>(\n        shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n  }\n\n  // Only used when the y/z dimension of workgroup size is 1.\n  fn getGlobalIndex() -> i32 {\n    if (numWorkgroups.y == 1u && numWorkgroups.z == 1u) {\n      return i32(globalId.x);\n    }\n\n    let localInvocationIndex = localId.z * workGroupSizeX * workGroupSizeY +\n        localId.y * workGroupSizeX + localId.x;\n    let workGroupID = (globalId - localId)/vec3<u32>(\n        workGroupSizeX, workGroupSizeY, workGroupSizeZ);\n\n    return i32((workGroupID.z * numWorkgroups.x * numWorkgroups.y +\n      workGroupID.y * numWorkgroups.x + workGroupID.x) *\n      (workGroupSizeX * workGroupSizeY * workGroupSizeZ) +\n      localInvocationIndex);\n  }\n";function ZB(e){let t="";switch(e){case 0:case 1:t+="\n        fn getOutputFlatIndex(coords : i32) -> i32 {\n          return coords;\n        }\n        ";break;case 2:t+="\n        fn getOutputFlatIndex(coords : vec2<i32>) -> i32 {\n          return dot(coords, vec2<i32>(uniforms.outShapeStrides, 1));\n        }\n        ";break;case 3:t+="\n        fn getOutputFlatIndex(coords : vec3<i32>) -> i32 {\n          return dot(coords, vec3<i32>(uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, 1));\n        }\n        ";break;case 4:t+="\n        fn getOutputFlatIndex(coords : vec4<i32>) -> i32 {\n          return dot(coords, vec4<i32>(\n            uniforms.outShapeStrides.x, uniforms.outShapeStrides.y, uniforms.outShapeStrides.z, 1));\n        }\n        ";break;default:br.assert(!1,(()=>`Unsupported ${e}D shape`))}return t}function YB(e){const t=e.length;if(t<=1)return"fn getCoordsFromFlatIndex(index : i32) -> i32 { return index; }";const n=br.computeStrides(e),a=HB(t),r=[];for(let s=0;s<t;s++)r.push(`d${s}`);if(1===n.length)return"    fn getCoordsFromFlatIndex(index : i32) -> vec2<i32> {\n      let d0 = index / uniforms.outShapeStrides; let d1 = index - d0 * uniforms.outShapeStrides;\n      return vec2<i32>(d0, d1);\n    }";return`\n    fn getCoordsFromFlatIndex(index : i32) -> ${a} {\n      ${"var index2 = index;"+n.map(((e,t)=>`${`let ${r[t]} = index2 / uniforms.outShapeStrides[${t}]`}; ${t===n.length-1?`let ${r[t+1]} = index2 - ${r[t]} * uniforms.outShapeStrides[${t}]`:`index2 = index2 - ${r[t]} * uniforms.outShapeStrides[${t}]`};`)).join("")}\n      return ${a}(${r.join(",")});\n    }\n  `}var JB={};C(JB,{ArrayBufferToTypedArray:()=>lU,GPUBytesPerElement:()=>oU,computeDispatch:()=>nU,computeWorkGroupSizeForConv2d:()=>aU,computeWorkGroupSizeForMatMul:()=>rU,computeWorkPerThreadForConv2d:()=>sU,flatDispatchLayout:()=>iU,isWebGPUSupported:()=>uU,tilesFitEvenlyIntoShape:()=>tU});var QB=65535,eU=e=>{let t=1;for(let n=0;n<e.length;n++)t*=e[n];return t};function tU(e,t){if(e.length!==t.length)throw new Error(`Cannot compute whether rank ${e.length} tiles fit evenly into rank ${t.length} shape - ranks must match.`);return t.every(((t,n)=>t%e[n]===0))}function nU(e,t,n=[1,1,1],a=[1,1,1]){const[r,s,i]=[Math.ceil(eU(e.x.map((e=>t[e])))/(n[0]*a[0])),e.y?Math.ceil(eU(e.y.map((e=>t[e])))/(n[1]*a[1])):1,e.z?Math.ceil(eU(e.z.map((e=>t[e])))/(n[2]*a[2])):1];if(r<=QB&&s<=QB&&i<=QB)return[r,s,i];br.assert(r>QB&&void 0===e.y&&void 0===e.z,(()=>"Dispatch size exceeds WebGPU limits in Y or Z dimension."));let o=Math.ceil(Math.sqrt(r));return o>QB?(o=Math.ceil(Math.cbrt(r)),br.assert(o<=QB,(()=>"Total dispatch size exceeds WebGPU maximum.")),[o,o,o]):[o,o,1]}function aU(e,t){const n=eU(e.x.map((e=>t[e]))),a=eU(e.y.map((e=>t[e])));return n<=4?[4,16,1]:a<=4?[16,4,1]:[16,16,1]}function rU(e,t,n){return 1===e?[32,1,1]:1===n?[1,32,1]:[8,8,1]}function sU(e,t){const n=eU(e.x.map((e=>t[e]))),a=eU(e.y.map((e=>t[e])));return n<=4?[1,2,1]:a<=4?[2,1,1]:[2,2,1]}function iU(e){return{x:e.map(((e,t)=>t))}}function oU(e){if("float32"===e||"int32"===e||"bool"===e||"string"===e)return 4;if("complex64"===e)return 8;throw new Error(`Unknown dtype ${e}`)}function lU(e,t){if("float32"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t||"string"===t){const t=new Int32Array(e),n=new ArrayBuffer(t.length),a=new Uint8Array(n);for(let e=0;e<t.length;e++)a[e]=t[e];return a}throw new Error(`Unknown dtype ${t}`)}function uU(){return!!navigator.gpu}var cU,dU=((cU=dU||{})[cU.MUL=0]="MUL",cU[cU.ADD=1]="ADD",cU[cU.SUB=2]="SUB",cU[cU.DIV=3]="DIV",cU[cU.EQUAL=4]="EQUAL",cU[cU.GREATER=5]="GREATER",cU[cU.GREATER_EQUAL=6]="GREATER_EQUAL",cU[cU.LESS=7]="LESS",cU[cU.LESS_EQUAL=8]="LESS_EQUAL",cU[cU.LOGICAL_AND=9]="LOGICAL_AND",cU[cU.NOT_EQUAL=10]="NOT_EQUAL",cU[cU.SQUARED_DIFFERENCE=11]="SQUARED_DIFFERENCE",cU[cU.INT_DIV=12]="INT_DIV",cU[cU.POW=13]="POW",cU[cU.PRELU=14]="PRELU",cU[cU.MAX=15]="MAX",cU[cU.MIN=16]="MIN",cU[cU.COMPLEX_MULTIPLY_REAL=17]="COMPLEX_MULTIPLY_REAL",cU[cU.COMPLEX_MULTIPLY_IMAG=18]="COMPLEX_MULTIPLY_IMAG",cU),pU="\n  if (isNaN.r) {\n    resultTemp.r = uniforms.NAN;\n  }\n  if (isNaN.g) {\n    resultTemp.g = uniforms.NAN;\n  }\n  if (isNaN.b) {\n    resultTemp.b = uniforms.NAN;\n  }\n  if (isNaN.a) {\n    resultTemp.a = uniforms.NAN;\n  }\n  ",hU=`\n  let isModRound1Bool = vec4<i32>(round(abs(b) % vec4<f32>(2.0))) == vec4<i32>(1);\n  let isModRound1 = vec4<f32>(isModRound1Bool);\n  let multiplier = sign(a) * isModRound1 + (vec4<f32>(1.0) - isModRound1);\n  var resultTemp = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  let isExpZero = b == vec4<f32>(0.0);\n  if (isExpZero.r) {\n    resultTemp.r = 1.0;\n  }\n  if (isExpZero.g) {\n    resultTemp.g = 1.0;\n  }\n  if (isExpZero.b) {\n    resultTemp.b = 1.0;\n  }\n  if (isExpZero.a) {\n    resultTemp.a = 1.0;\n  }\n  let isNaN = a < vec4<f32>(0.0) & floor(b) < b;\n  ${pU}\n  return resultTemp;\n  `;function fU(e,t){const n=t?pU:"\n  if (isNanCustom(a)) { return a; }\n  if (isNanCustom(b)) { return b; }\n  ";return t?`\n    var resultTemp = vec4<f32>(${e}(a, b));\n    let isNaN = isNanCustomVec4(a) | isNanCustomVec4(b);\n    `+n+"\n    return resultTemp;\n  ":n+`\n    return ${e}(a, b);\n  `}function mU(e,t){switch(e){case 0:return"return a * b;";case 1:return"return a + b;";case 2:return"return a - b;";case 3:return"return a / b;";case 4:return t?"return vec4<f32>(a == b);":"return f32(a == b);";case 5:return t?"return vec4<f32>(a > b);":"return f32(a > b);";case 6:return t?"return vec4<f32>(a >= b);":"return f32(a >= b);";case 7:return t?"return vec4<f32>(a < b);":"return f32(a < b);";case 8:return t?"return vec4<f32>(a <= b);":"return f32(a <= b);";case 9:return t?"return (vec4<f32>(a >= vec4<f32>(1.0)) *\n  vec4<f32>(b >= vec4<f32>(1.0)));":"return f32(f32(a) >= 1.0 && f32(b) >= 1.0);";case 10:return t?"return vec4<f32>(a != b);":"return f32(a != b);";case 11:return"return (a - b) * (a - b);";case 12:return t?"\n  let ia = vec4<i32>(round(a));\n  let ib = vec4<i32>(round(b));\n  let cond = ib != vec4<i32>(0);\n  var resultTemp = vec4<i32>(0);\n  let s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    resultTemp[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    resultTemp[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    resultTemp[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    resultTemp[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4<f32>(resultTemp);\n  ":"\n  let s = sign(a) * sign(b);\n  let ia = i32(round(a));\n  let ib = i32(round(b));\n  return f32(idiv(ia, ib, s));\n  ";case 14:return t?"\n  let aLessThanZero = vec4<f32>(a < vec4<f32>(0.0));\n  return (aLessThanZero * (b * a)) + ((vec4<f32>(1.0) - aLessThanZero) * a);\n  ":"if (a < 0.0) { return b * a; }  return a;";case 15:return fU("max",t);case 16:return fU("min",t);case 13:return t?hU:"\n  if(a < 0.0 && floor(b) < b) {\n    return uniforms.NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  if (round(abs(b) % 2.0) != 1.0) {\n    return pow(abs(a), b);\n  }\n  return sign(a) * pow(abs(a), b);\n  ";case 17:return"return areal * breal - aimag * bimag;";case 18:return"return areal * bimag + aimag * breal;";default:throw new Error(`BinaryType ${e} is not implemented!`)}}var gU,yU=((gU=yU||{})[gU.ABS=0]="ABS",gU[gU.CEIL=1]="CEIL",gU[gU.COS=2]="COS",gU[gU.COSH=3]="COSH",gU[gU.ELU=4]="ELU",gU[gU.EXP=5]="EXP",gU[gU.EXPM1=6]="EXPM1",gU[gU.FLOOR=7]="FLOOR",gU[gU.LINEAR=8]="LINEAR",gU[gU.LOG=9]="LOG",gU[gU.LOGICAL_NOT=10]="LOGICAL_NOT",gU[gU.NEG=11]="NEG",gU[gU.PRELU=12]="PRELU",gU[gU.RELU=13]="RELU",gU[gU.RELU6=14]="RELU6",gU[gU.LEAKYRELU=15]="LEAKYRELU",gU[gU.RSQRT=16]="RSQRT",gU[gU.SIN=17]="SIN",gU[gU.SINH=18]="SINH",gU[gU.SIGMOID=19]="SIGMOID",gU[gU.SQRT=20]="SQRT",gU[gU.SQUARE=21]="SQUARE",gU[gU.TANH=22]="TANH",gU[gU.TO_INT=23]="TO_INT",gU);function AU(e,t){switch(e){case 0:return"return abs(a);";case 2:return"return cos(a);";case 3:return"\n  let e2x = exp(-a);\n  return (e2x + 1.0 / e2x) / 2.0;\n";case 1:return"return ceil(a);";case 4:return t?"\n  var resFloat = exp(a) - vec4<f32>(1.0);\n  if (a.r >= 0.0) {\n    resFloat.r = a.r;\n  }\n  if (a.g >= 0.0) {\n    resFloat.g = a.g;\n  }\n  if (a.b >= 0.0) {\n    resFloat.b = a.b;\n  }\n  if (a.a >= 0.0) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n":"if (a >= 0.0) { return a; }  return (exp(a) - 1.0);";case 5:return"return exp(a);";case 6:return"return exp(a) - 1.0;";case 7:return"return floor(a);";case 8:return"return a;";case 9:return"if (a < 0.0) { return 1.0/0.0; }\n  return log(a);";case 10:return"return f32(!(a >= 1.0));";case 11:return"return -a;";case 12:return"return (a < 0.0) ? b * a : a;";case 15:return"if (a < 0.0) { return uniforms.alpha * a; } return a;";case 13:return t?"\n  var resFloat = a * vec4<f32>(a >= vec4<f32>(0.0));\n  let isNaN = isNanCustomVec4(a);\n\n  if (isNaN.r) {\n    resFloat.r = a.r;\n  }\n  if (isNaN.g) {\n    resFloat.g = a.g;\n  }\n  if (isNaN.b) {\n    resFloat.b = a.b;\n  }\n  if (isNaN.a) {\n    resFloat.a = a.a;\n  }\n  return resFloat;\n":"return max(a, 0.0);";case 14:return t?"return clamp(a, vec4<f32>(0.0, 0.0, 0.0, 0.0), vec4<f32>(6.0, 6.0, 6.0, 6.0));":"return clamp(a, 0.0, 6.0);";case 16:return"return 1.0/sqrt(a);";case 19:return"return 1.0 / (1.0 + exp(-1.0 * a));";case 17:return"return sin(a);";case 18:return"\n  let e2x = exp(a);\n  return (e2x - 1.0 / e2x) / 2.0;\n";case 20:return"return sqrt(a);";case 21:return"return a * a;";case 22:return"\n  let e2x = exp(-2.0 * abs(a));\n  return sign(a) * (1.0 - e2x) / (1.0 + e2x);\n";case 23:return"return f32(i32((a)));";default:throw new Error(`BinaryType ${e} is not implemented!`)}}function xU(e,t=!1){if(null===e)return null;if("linear"===e)return AU(yU.LINEAR);if("relu"===e)return AU(yU.RELU,t);if("elu"===e)return AU(yU.ELU,t);if("relu6"===e)return AU(yU.RELU6,t);if("prelu"===e)return mU(dU.PRELU,t);if("sigmoid"===e)return AU(yU.SIGMOID);throw new Error(`Activation ${e} has not been implemented for the WebGPU backend.`)}function bU(e,t){const n=e[1],a=e[0],r=t[1]*e[1],s=t[0]*e[0],i=t[0]*e[0];return`\n  var<workgroup> mm_Asub : array<array<vec4<f32>, ${i/a}>, ${r}>;\n  var<workgroup> mm_Bsub : array<array<vec4<f32>, ${s/a}>, ${i}>;\n\n  let RowPerThread = ${n};\n  let ColPerThread = ${a}; // only support ColPerThread = 4\n  let TileAOuter = ${r};\n  let TileBOuter = ${s};\n  let TileInner = ${i};\n\n  \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n\n    let tileRow = i32(localId.y) * RowPerThread;\n    let tileCol = i32(localId.x);\n\n    let globalRow = i32(globalId.y) * RowPerThread;\n    let globalCol = i32(globalId.x);\n    let numTiles = (uniforms.dimInner - 1) / TileInner + 1;\n\n    var acc: array<vec4<f32>, ${n}>;\n    var ACached : vec4<f32>;\n    var BCached : array<vec4<f32>, 4>;\n\n    // Loop over shared dimension.\n    var globalColA = tileCol;\n    let RowPerThreadB = TileInner / ${t[1]};\n    let tileRowB = i32(localId.y) * RowPerThreadB;\n    for (var t = 0; t < numTiles; t = t + 1) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileCol;\n            mm_Asub[inputRow][inputCol] = mm_readA(globalRow + innerRow, globalColA, globalId);\n        }\n        globalColA = globalColA + TileInner / ColPerThread;\n\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol;\n            mm_Bsub[inputRow][inputCol] = mm_readB(t * TileInner + inputRow, globalCol, globalId);\n        }\n\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < TileInner / ColPerThread; k = k + 1) {\n            BCached[0] = mm_Bsub[k * ColPerThread][tileCol];\n            BCached[1] = mm_Bsub[k * ColPerThread + 1][tileCol];\n            BCached[2] = mm_Bsub[k * ColPerThread + 2][tileCol];\n            BCached[3] = mm_Bsub[k * ColPerThread + 3][tileCol];\n\n            for (var i = 0; i < RowPerThread; i = i + 1) {\n                ACached = mm_Asub[tileRow + i][k];\n                acc[i] = BCached[0] * ACached.x + acc[i];\n                acc[i] = BCached[1] * ACached.y + acc[i];\n                acc[i] = BCached[2] * ACached.z + acc[i];\n                acc[i] = BCached[3] * ACached.w + acc[i];\n            }\n        }\n\n        workgroupBarrier();\n    }\n\n    for (var innerRow = 0; innerRow < RowPerThread; innerRow = innerRow + 1) {\n        mm_write(globalRow + innerRow,\n                 globalCol,\n                 acc[innerRow], globalId);\n    }\n  }`}function vU(e,t){const n=t[1]*e[1],a=t[0]*e[0],r=n>a?n:a;return`\n    var<workgroup> mm_Asub : array<array<f32, ${r}>, ${n}>;\n    var<workgroup> mm_Bsub : array<array<f32, ${a}>, ${r}>;\n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let tileRow = i32(localId.y) * ${e[1]};\n      let tileCol = i32(localId.x) * ${e[0]};\n\n      let globalRow = i32(globalId.y) * ${e[1]};\n      let globalCol = i32(globalId.x) * ${e[0]};\n\n      let numTiles = (uniforms.dimInner - 1) / ${r} + 1;\n\n      var acc : array<array<f32, ${e[0]}>, ${e[1]}>;\n      var ACached : f32;\n      var BCached : array<f32, ${e[0]}>;\n\n      // Without this initialization strange values show up in acc.\n      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n          acc[innerRow][innerCol] = 0.0;\n        }\n      }\n\n      let ColPerThreadA = ${r} / ${t[0]};\n      let tileColA = i32(localId.x) * ColPerThreadA;\n      let RowPerThreadB = ${r} / ${t[1]};\n      let tileRowB = i32(localId.y) * RowPerThreadB;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t = t + 1) {\n        // Load one tile of A into local memory.\n        for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n          for (var innerCol = 0; innerCol < ColPerThreadA; innerCol = innerCol + 1) {\n            let inputRow = tileRow + innerRow;\n            let inputCol = tileColA + innerCol;\n\n            mm_Asub[inputRow][inputCol] = mm_readA(\n                globalRow + innerRow,\n                t * ${r} + inputCol, globalId);\n          }\n        }\n        // Load one tile of B into local memory.\n        for (var innerRow = 0; innerRow < RowPerThreadB; innerRow = innerRow + 1) {\n          for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n            let inputRow = tileRowB + innerRow;\n            let inputCol = tileCol + innerCol;\n\n            mm_Bsub[inputRow][inputCol] = mm_readB(\n              t * ${r} + inputRow,\n              globalCol + innerCol, globalId);\n          }\n        }\n\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < ${r}; k = k + 1) {\n          for (var inner = 0; inner < ${e[0]}; inner = inner + 1) {\n            BCached[inner] = mm_Bsub[k][tileCol + inner];\n          }\n\n          for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n            ACached = mm_Asub[tileRow + innerRow][k];\n            for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n              acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n            }\n          }\n        }\n\n        workgroupBarrier();\n      }\n\n      for (var innerRow = 0; innerRow < ${e[1]}; innerRow = innerRow + 1) {\n        for (var innerCol = 0; innerCol < ${e[0]}; innerCol = innerCol + 1) {\n\n          if ((globalCol + innerCol) < uniforms.dimBOuter &&\n              (globalRow + innerRow) < uniforms.dimAOuter) {\n            mm_write(globalRow + innerRow,\n                     globalCol + innerCol,\n                     acc[innerRow][innerCol], globalId);\n          }\n        }\n      }\n    }\n  `}var wU=class{constructor(e,t,n,a=!1,r=!1,s=null,i=null,o=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.outputShape=t,this.dispatchLayout={x:[2],y:[1],z:[0]};const l=a?e[1]:e[2];this.workGroupSize=rU(t[1],0,t[2]),1!==t[1]&&1!==t[2]||(n=1),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]),br.arraysEqual(this.dispatch,[1,1,1])&&(n=1,this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,[n,n,1]));const u=null!=s,c=null!=o;u&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.transposeA=a,this.transposeB=r,this.addBias=u,this.activation=i,this.hasPreluActivationWeights=c;const d=this.outputShape[2],p=this.transposeB?[this.outputShape[0],d,l]:[this.outputShape[0],l,d];[this.fitA,this.fitB]=this.getShapeFit(p),this.shaderKey=`matMulPacked_${this.workPerThread}_${a}_${r}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(e){const t=this.workGroupSize[1]*this.workPerThread,n=this.workGroupSize[0]*this.workPerThread;let a=t>n?t:n;1===this.outputShape[1]&&(a*=4),br.assert(a%this.workGroupSize[0]===0&&a%this.workGroupSize[1]===0,(()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y"));const r=[a,n];return[tU([t,a],this.aShape.slice(1)),tU(r,e.slice(1))]}getUserCode(){let e,t;e=!1===this.transposeA?this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n             return A.numbers[batch * batchASize + row * uniforms.dimInner + col];\n           }\n           return 0.0;":this.fitA?"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n             return A.numbers[batch* batchASize + col * uniforms.dimAOuter + row];\n           }\n           return 0.0;",t=!1===this.transposeB?this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];\n           }\n           return 0.0;":this.fitB?"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n             return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];\n           }\n           return 0.0;";let n="",a="";if(this.activation){const e=xU(this.activation,!1);n=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);\n               ${e}\n            }`:`\n              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n                ${e}\n              }\n            `,a="value = activation(value, outCoord);"}var r;return`\n      ${n}\n\n      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];\n        let batch = i32(globalId.z);\n        ${e}\n      }\n\n      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batch = i32(globalId.z);\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];\n        ${t}\n      }\n\n      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {\n        var value = valueIn;\n        let batch = i32(globalId.z);\n        let outCoord = vec3<i32>(batch, row, col);\n        ${this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":""}\n        ${a}\n        setOutput(batch, row, col, value);\n      }\n      ${this.outputShape[1]>1?vU([this.workPerThread,this.workPerThread,1],this.workGroupSize):(r=this.workGroupSize,`\n    let TileSize = ${4*r[0]};\n    var<workgroup> mm_Asub : array<vec4<f32>, ${r[0]}>;\n\n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let tileCol = i32(localId.x);\n      let globalCol = i32(globalId.x);\n      let globalRow = i32(globalId.y);\n\n      let numTiles = (uniforms.dimInner - 1) / TileSize + 1;\n\n      // Without this initialization strange values show up in acc.\n      var acc = 0.0;\n\n      // Loop over shared dimension.\n      for (var t = 0; t < numTiles; t = t + 1) {\n        // Load one tile of A into local memory.\n        let colA = t * TileSize + tileCol * 4;\n        mm_Asub[tileCol] = vec4<f32>(mm_readA(globalRow, colA, globalId),\n                                mm_readA(globalRow, colA + 1, globalId),\n                                mm_readA(globalRow, colA + 2, globalId),\n                                mm_readA(globalRow, colA + 3, globalId));\n        workgroupBarrier();\n\n        // Compute acc values for a single thread.\n        for (var k = 0; k < TileSize / 4; k = k + 1) {\n          let rowB = t * TileSize + k * 4;\n          let BCached = vec4<f32>(mm_readB(rowB, globalCol, globalId),\n                              mm_readB(rowB + 1, globalCol, globalId),\n                              mm_readB(rowB + 2, globalCol, globalId),\n                              mm_readB(rowB + 3, globalCol, globalId));\n\n          let ACached = mm_Asub[k];\n          acc = acc + dot(ACached, BCached);\n        }\n\n        workgroupBarrier();\n      }\n\n      if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {\n        mm_write(globalRow, globalCol, acc, globalId);\n      }\n    }\n  `)}\n    `}};function kU(e){const{inputs:t,attrs:n}=e,{x:a}=t,{shape:r}=n,s=br.sizeFromShape(a.shape),i=br.inferFromImplicitShape(r,s),o=br.sizeFromShape(i);return br.assert(s===o,(()=>`The new shape (${i}) has ${o} elements and the old shape (${a.shape}) has ${s} elements. The new shape and old shape must have the same number of elements.`)),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:i,dtype:a.dtype}}var IU={kernelName:ca,backendName:"webgpu",kernelFunc:kU};function SU({a:e,b:t,transposeA:n,transposeB:a,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,d=n?e.shape[u-2]:e.shape[u-1],p=a?t.shape[c-1]:t.shape[c-2],h=n?e.shape[u-1]:e.shape[u-2],f=a?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=br.sizeFromShape(m),A=br.sizeFromShape(g),x=so.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([h,f]);br.assert(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`));const b=n?[y,d,h]:[y,h,d],v=a?[A,f,p]:[A,p,f],w=kU({inputs:{x:e},backend:r,attrs:{shape:b}}),k=kU({inputs:{x:t},backend:r,attrs:{shape:v}}),I=[w,k],S=Math.max(y,A),N=d%4===0&&f%4===0&&!n&&!a&&f>=32;let T;T=h*f<=32?new class{constructor(e,t=!1,n=!1,a=null,r=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[256,1,1],this.outputShape=e,this.dispatchLayout={x:[],y:[1,2],z:[0]},this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize);const i=null!=a,o=null!=s;i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.transposeA=t,this.transposeB=n,this.addBias=i,this.activation=r,this.hasPreluActivationWeights=o,this.shaderKey=`matMulReduce_${this.activation}_${t}_${n}`}getUserCode(){let e,t;e=!1===this.transposeA?"return A.numbers[batch * batchASize + row * uniforms.dimInner + col];":"return A.numbers[batch * batchASize + col * uniforms.dimAOuter + row];",t=!1===this.transposeB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];":"return B.numbers[batch * batchBSize + col * uniforms.dimInner + row];";let n="",a="";if(this.activation){const e=xU(this.activation,!1);n=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);\n               ${e}\n            }`:`\n              fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n                ${e}\n              }\n            `,a="value = activation(value, outCoord);"}return`\n      ${n}\n\n      fn mm_readA(batch: i32, row : i32, col : i32) -> f32 {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];\n        ${e}\n      }\n\n      fn mm_readB(batch: i32, row : i32, col : i32) -> f32 {\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];\n        ${t}\n      }\n\n      fn mm_write(batch: i32, row : i32, col : i32, valueIn : f32) {\n        var value = valueIn;\n        let outCoord = vec3<i32>(batch, row, col);\n        ${this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":""}\n        ${a}\n        setOutput(batch, row, col, value);\n      }\n      \n    var<workgroup> sumValues : array<f32, workGroupSizeX>;\n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let coords = getOutputCoords();\n      let batch = coords[0];\n      let row = coords[1];\n      let col = coords[2];\n      var sum = 0.0;\n      let Length = uniforms.dimInner;\n      for (var k = i32(localId.x); k < Length; k = k + i32(workGroupSizeX)) {\n        let dataA = mm_readA(batch, row, k);\n        let dataB = mm_readB(batch, k, col);\n        sum = sum + dataA * dataB;\n      }\n      sumValues[localId.x] = sum;\n      workgroupBarrier();\n\n      for(var currentSize = workGroupSizeX / 2u; currentSize > 1u;\n          currentSize = currentSize / 2u) {\n        if (localId.x < currentSize)\n        {\n          sumValues[localId.x] = sumValues[localId.x] + sumValues[localId.x + currentSize];\n        }\n        workgroupBarrier();\n      }\n\n      if (localId.x == 0u) {\n        sum = sumValues[0] + sumValues[1];\n        mm_write(batch, row, col, sum);\n      }\n    }\n  \n    `}}([S,h,f],n,a,s,l,i):n||a||!(h<=16&&(f<=512||p>=2*f)||f<=16&&(h<=512||d>=2*h))?N?new class{constructor(e,t,n,a=null,r=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[16,16,1],this.isVec4=!0,this.vecSize=4,this.outputShape=t,this.workGroupSize=rU(t[1],e[2],t[2]),this.dispatchLayout={x:[2],y:[1],z:[0]},1===t[1]&&(n=1),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.vecSize,n,1]);const i=null!=a,o=null!=s;i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),this.workPerThread=n,this.aShape=e,this.addBias=i,this.activation=r,this.hasPreluActivationWeights=o,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`matMulPackedVec4_${n}_${this.activation}_${this.fitA}_${this.fitB}_${this.outputShape[1]>1}`}getShapeFit(){const e=this.aShape[2],t=this.outputShape[2],n=[this.outputShape[0],e,t],a=this.workGroupSize[1]*this.workPerThread,r=this.workGroupSize[0]*this.vecSize,s=[r,r];return[tU([a,r],this.aShape.slice(1)),tU(s,n.slice(1))]}getUserCode(){const e=this.fitA?"return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col]":"if (coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n            return A.numbers[batch * batchASize + row * uniforms.dimInner / 4 + col];\n        }\n        return vec4<f32>(0.0)",t=this.fitB?"return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col]":"if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n             return B.numbers[batch * batchBSize + row * uniforms.dimBOuter / 4 + col];\n        }\n        return vec4<f32>(0.0)";let n="",a="";if(this.activation){const e=xU(this.activation,this.isVec4);n=this.hasPreluActivationWeights?`fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {\n                  let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);\n                  ${e}\n                }`:`\n            fn activation(a : vec4<f32>, outCoord : vec3<i32>) -> vec4<f32> {\n              ${e}\n            }`,a="value = activation(value, outCoord);"}const r=this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":"";var s;return`\n      ${n}\n      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2] / ${this.vecSize};\n        let batch = i32(globalId.z);\n        ${e};\n      }\n\n      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> vec4<f32> {\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2] / ${this.vecSize};\n        let batch = i32(globalId.z);\n        ${t};\n      }\n\n      fn mm_write(row : i32, col : i32, valueIn : vec4<f32>, globalId : vec3<u32>) {\n        if (row < uniforms.aShape[1] && col * 4 < uniforms.bShape[2])\n        {\n          var value = valueIn;\n          let batch = i32(globalId.z);\n          let outCoord = vec3<i32>(batch, row, col * 4);\n          ${r}\n          ${a}\n          setOutput(outCoord[0], outCoord[1], outCoord[2], value);\n        }\n      }\n      ${this.outputShape[1]>1?bU([this.vecSize,this.workPerThread,1],this.workGroupSize):(s=this.workGroupSize,`\n  var<workgroup> mm_Asub : array<vec4<f32>, ${s[0]}>;\n  let tileSize = ${4*s[0]};\n  \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n    let tileCol = i32(localId.x);\n    let globalCol = i32(globalId.x);\n    let globalRow = i32(globalId.y);\n\n    let numTiles = (uniforms.dimInner - 1) / tileSize + 1;\n\n    // Without this initialization strange values show up in acc.\n    var acc = vec4<f32>(0.0);\n\n    // Loop over shared dimension.\n    for (var t = 0; t < numTiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      let colA = t * tileSize / 4 + tileCol;\n      mm_Asub[tileCol] = mm_readA(globalRow, colA, globalId);\n\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileSize / 4; k = k + 1) {\n        let rowB = t * tileSize + k * 4;\n        let BCached0 = mm_readB(rowB, globalCol, globalId);\n        let BCached1 = mm_readB(rowB + 1, globalCol, globalId);\n        let BCached2 = mm_readB(rowB + 2, globalCol, globalId);\n        let BCached3 = mm_readB(rowB + 3, globalCol, globalId);\n\n        let ACached = mm_Asub[k];\n        acc = acc + BCached0 * ACached.x;\n        acc = acc + BCached1 * ACached.y;\n        acc = acc + BCached2 * ACached.z;\n        acc = acc + BCached3 * ACached.w;\n      }\n\n      workgroupBarrier();\n    }\n\n    if (globalRow < uniforms.dimAOuter && globalCol < uniforms.dimBOuter) {\n      mm_write(globalRow, globalCol, acc, globalId);\n    }\n  }\n`)}\n\n    `}}(b,[S,h,f],Ze().get("WEBGPU_MATMUL_WORK_PER_THREAD"),s,l,i):new wU(b,[S,h,f],Ze().get("WEBGPU_MATMUL_WORK_PER_THREAD"),n,a,s,l,i):new class{constructor(e,t,n,a=null,r=null,s=null){this.variableNames=["A","B"],this.uniforms="dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.workGroupSize=[8,16,1],br.assert(e[1]<=16||t[2]<=16,(()=>"This program can be only used when A width or B Height are small")),this.outputShape=n,this.dispatchLayout={x:[2],y:[1],z:[0]},this.dispatch=[Math.ceil(n[2]/this.workGroupSize[0]),Math.ceil(2*n[1]/this.workGroupSize[1]),n[0]];const i=null!=a;i&&this.variableNames.push("bias");const o=null!=s;o&&this.variableNames.push("preluActivationWeights"),this.addBias=i,this.activation=r,this.hasPreluActivationWeights=o,this.shaderKey=`matMulSmallOutputSize_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){const n=xU(this.activation,!1);e=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n            let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);\n            ${n}\n            }`:`fn activation(a : f32, outCoord : vec3<i32>) -> f32 {\n            ${n}\n        }`,t="value = activation(value, outCoord);"}return`\n      ${e}\n\n      fn mm_readA(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batchASize = uniforms.aShape[1] * uniforms.aShape[2];\n        let batch = i32(globalId.z);\n        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimInner))) {\n          return A.numbers[batch * batchASize + row * uniforms.dimInner + col];\n        }\n        return 0.0;\n      }\n      fn mm_readB(row : i32, col : i32,  globalId : vec3<u32>) -> f32 {\n        let batch = i32(globalId.z);\n        let batchBSize = uniforms.bShape[1] * uniforms.bShape[2];\n        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n           return B.numbers[batch * batchBSize + row * uniforms.dimBOuter + col];\n         }\n         return 0.0;\n      }\n      fn mm_write(row : i32, col : i32, valueIn : f32, globalId : vec3<u32>) {\n        if (coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimAOuter, uniforms.dimBOuter))) {\n          let batch = i32(globalId.z);\n          let outCoord = vec3<i32>(batch, row, col);\n          var value = valueIn;\n          ${this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":""}\n          ${t}\n          setOutput(batch, row, col, value);\n        }\n      }\n      ${function(e){const t=e[1]/2,n=e[0],a=t>n?t:n;return`\n  var<workgroup> mm_Asub1 : array<array<f32, ${a}>, ${t}>;\n  var<workgroup> mm_Bsub1 : array<array<f32, ${n}>, ${a}>;\n  var<workgroup> mm_Asub2 : array<array<f32, ${a}>, ${t}>;\n  var<workgroup> mm_Bsub2 : array<array<f32, ${n}>, ${a}>;\n\n  // If the output size is small for matrix multiplication, avoid to use vec4\n  // and handle some elements per thread to optimally utilize the ALU.\n  // Introduces two shared memory buffers, some logical threads could handle\n  // arithmetic operations and others handle IO operations between barrier api,\n  // makes ALUs and load/store units work simultaneously, could improves\n  // the performance.\n  \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n    let tileRow = i32(localId.y);\n    let tileCol = i32(localId.x);\n    let globalRow = i32(globalId.y);\n    let globalCol = i32(globalId.x);\n\n    // uniforms.dimInner should be greater than 0.\n    let numTiles = (uniforms.dimInner - 1) / ${a} + 1;\n    var acc = 0.0;\n\n    var globalColA = tileCol;\n    var globalRowB = tileRow;\n    for (var t = 0; t < numTiles; t = t + 1) {\n      if (t == 0) {\n        if (tileRow < ${t}) {\n          // Load one tile of A and B into local memory.\n          // globalRow is always greater than or equal tileRow.\n          mm_Asub1[tileRow][tileCol] =\n              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);\n          globalColA = globalColA + ${a};\n          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);\n          globalRowB = globalRowB + ${a};\n        }\n      } else {\n        if (tileRow < ${t}) {\n          // Load one tile of A and B into local memory.\n          // globalRow is always greater than or equal tileRow.\n          mm_Asub1[tileRow][tileCol] =\n              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);\n          globalColA = globalColA + ${a};\n          mm_Bsub1[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);\n          globalRowB = globalRowB + ${a};\n        } else {\n          // Compute acc values for a single thread.\n          for (var k = 0; k < ${a}; k = k + 1) {\n            let subRow = tileRow - ${t};\n            if (subRow < 0) {\n              continue;\n            }\n            acc = acc + mm_Asub2[subRow][k] * mm_Bsub2[k][tileCol];\n          }\n        }\n      }\n      workgroupBarrier();\n      if (t != 0) {\n        t = t + 1;\n      }\n\n      if (t < numTiles) {\n        if (tileRow < ${t}) {\n          // Load one tile of A and B into local memory.\n          // globalRow is always greater than or equal tileRow.\n          mm_Asub2[tileRow][tileCol] =\n              mm_readA((globalRow - tileRow) / 2 + tileRow, globalColA, globalId);\n          globalColA = globalColA + ${a};\n          mm_Bsub2[tileRow][tileCol] = mm_readB(globalRowB, globalCol, globalId);\n          globalRowB = globalRowB + ${a};\n        } else {\n          // Compute acc values for a single thread.\n          for (var k = 0; k < ${a}; k = k + 1) {\n            let subRow = tileRow - ${t};\n            if (subRow < 0) {\n              continue;\n            }\n            acc = acc + mm_Asub1[subRow][k] * mm_Bsub1[k][tileCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    let writeCol = (globalRow - tileRow) / 2 + tileRow - ${t};\n    if (tileRow >= ${t} && writeCol >= 0) {\n      mm_write(writeCol, globalCol, acc, globalId);\n    }\n  }\n  `}(this.workGroupSize)}\n    `}}(b,v,[S,h,f],s,l,i);const C=[w,k];s&&C.push(s),i&&C.push(i);const E=[{type:"int32",data:[h]},{type:"int32",data:[f]},{type:"int32",data:[d]}],R=r.runWebGPUProgram(T,C,e.dtype,E),F=kU({inputs:{x:R},backend:r,attrs:{shape:x}});I.push(R);for(const $ of I)r.disposeData($.dataId);return F}var NU={kernelName:rr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=a;return SU({a:r,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:c})}},TU=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=tf.assertAndGetBroadcastShape(t,n),this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binaryOpComplex_${e}`,this.op=e}getUserCode(){return`\n      fn binaryOpComplex(\n          areal : f32, aimag : f32, breal : f32, bimag : f32) -> f32 {\n        ${mU(this.op,!1)}\n      }\n\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if(index < uniforms.size) {\n          let areal = getARealAtOutCoordsByGlobalIndex(index);\n          let aimag = getAImagAtOutCoordsByGlobalIndex(index);\n          let breal = getBRealAtOutCoordsByGlobalIndex(index);\n          let bimag = getBImagAtOutCoordsByGlobalIndex(index);\n          setOutputFlat(index, binaryOpComplex(areal, aimag, breal, bimag));\n        }\n      }\n    `}},CU=class{constructor(e,t,n){this.variableNames=["A","B"],this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=tf.assertAndGetBroadcastShape(t,n),this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`binary_${e}`,this.op=e}getUserCode(){return`\n      fn binaryOperation(a : f32, b : f32) -> f32 {\n        ${mU(this.op,!1)}\n      }\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let a = getAAtOutCoordsByGlobalIndex(index);\n          let b = getBAtOutCoordsByGlobalIndex(index);\n          setOutputFlat(index, binaryOperation(a, b));\n        }\n      }\n      `}};function EU(e,t,n){if(br.arraysEqual(t,n)&&br.sizeFromShape(t)%4===0)return new class{constructor(e,t,n){this.variableNames=["A","B"],this.workPerThread=4,this.isVec4=!0,this.size=!0,this.workGroupSize=[128,1,1],this.outputShape=tf.assertAndGetBroadcastShape(t,n),this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.op=e,this.shaderKey=`binaryVec4_${e}`}getUserCode(){return`\n      fn binaryOperation(a : vec4<f32>, b : vec4<f32>) -> vec4<f32> {\n        ${mU(this.op,this.isVec4)}\n      }\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let a = getAAtOutCoordsByGlobalIndex(index);\n          let b = getBAtOutCoordsByGlobalIndex(index);\n          setOutputFlat(index, binaryOperation(a, b));\n        }\n      }\n    `}}(e,t,n);const a=1===t.length&&n.length>1&&t[0]<1024,r=1===n.length&&t.length>1&&n[0]<1024;return a||r?new class{constructor(e,t,n,a){this.variableNames=["A","B"],this.size=!0,this.workGroupSize=[256,1,1],this.outputShape=tf.assertAndGetBroadcastShape(t,n),this.dispatchLayout=iU(this.outputShape),this.lastDimensionSize=a?n[0]:t[0],this.lastDimensionSize<256?this.workPerThread=1:this.lastDimensionSize<512?this.workPerThread=2:this.workPerThread=4,this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.useSharedMemoryWithB=a,this.op=e,this.shaderKey=`binaryShared_${e}_${this.lastDimensionSize}_${this.useSharedMemoryWithB}`}getUserCode(){const e=this.lastDimensionSize>1?`coords[${this.outputShape.length-1}]`:"0",t=this.useSharedMemoryWithB?`let a = getAAtOutCoordsByCoords(coords);\n         let b = sharedBuf[${e}];`:`let a = sharedBuf[${e}];\n         let b = getBAtOutCoordsByCoords(coords);`;return`\n        fn binaryOperation(a : f32, b : f32) -> f32 {\n          ${mU(this.op,!1)}\n        }\n        var<workgroup> sharedBuf : array<f32, ${this.lastDimensionSize}>;\n        \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n          // Fill in the shared memory buffer. Here we need a loop to make sure\n          // that all data in A|B are uploaded when |sharedMemorySize| is larger\n          // than work group size.\n          for(var localIndex = i32(localId.x); localIndex < ${this.lastDimensionSize}; localIndex = localIndex + ${this.workGroupSize[0]}) {\n            sharedBuf[localIndex] = f32(${this.useSharedMemoryWithB?"B":"A"}.numbers[localIndex]);\n          }\n          workgroupBarrier();\n\n          for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n            let flatIndex = index * ${this.workPerThread} + i;\n            if(flatIndex < uniforms.size) {\n              let coords = getCoordsFromFlatIndex(flatIndex);\n\n              ${t}\n              setOutputFlat(flatIndex, binaryOperation(a, b));\n            }\n          }\n        }\n        `}}(e,t,n,r):new CU(e,t,n)}function RU(e){const{inputs:t}=e,{x:n}=t;return e.backend.incRef(n.dataId),{dataId:n.dataId,shape:n.shape,dtype:n.dtype}}var FU={kernelName:mn,backendName:"webgpu",kernelFunc:RU};function $U(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),i=n.tensorMap.get(s.dataId),o=RU({inputs:{x:a},backend:n}),l=RU({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var MU={kernelName:Tt,backendName:"webgpu",kernelFunc:$U},zU=class{constructor(e,t){this.variableNames=["A"],this.size=!0;this.workGroupSize=[128,1,1],this.outputShape=e,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.op=t,this.shaderKey=`unary_${t}`}getUserCode(){return`\n      fn unaryOperation(a : f32) -> f32 {\n        ${AU(this.op,!1)}\n      }\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let a = getAAtOutCoordsByGlobalIndex(index);\n          setOutputFlat(index, unaryOperation(a));\n        }\n      }\n      `}};function _U({opType:e,cpuKernelImpl:t,dtype:n}){return({inputs:a,backend:r})=>{const{x:s}=a,i=r,o=n||s.dtype;if(i.shouldExecuteOnCPU([s])&&null!=t){const e=i.tensorMap.get(s.dataId),n=t(e.values,o);return i.makeTensorInfo(s.shape,o,n)}const l=new zU(s.shape,e);return i.runWebGPUProgram(l,[s],o)}}function OU({opSnippet:e,cpuKernelImpl:t,supportsComplex:n=!1,dtype:a}){return({inputs:r,backend:s})=>{const{a:i,b:o}=r,l=s;if(n&&"complex64"===i.dtype){const t=l.tensorMap.get(i.dataId),n=l.tensorMap.get(o.dataId);let a,r;if(e!==dU.MUL)[a,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,a]=t,r={dataId:n.dataId,dtype:n.dtype,shape:i.shape},s={dataId:a.dataId,dtype:a.dtype,shape:o.shape},u=EU(e,i.shape,o.shape);return l.runWebGPUProgram(u,[r,s],ds(n.dtype,a.dtype))}));else{const e=new TU(dU.COMPLEX_MULTIPLY_REAL,i.shape,o.shape),s=new TU(dU.COMPLEX_MULTIPLY_IMAG,i.shape,o.shape),u=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:i.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:n.complexTensorInfos.real.dataId,dtype:n.complexTensorInfos.real.dtype,shape:o.shape},{dataId:n.complexTensorInfos.imag.dataId,dtype:n.complexTensorInfos.imag.dtype,shape:o.shape}];a=l.runWebGPUProgram(e,u,"float32"),r=l.runWebGPUProgram(s,u,"float32")}const s=$U({inputs:{real:a,imag:r},backend:l});return l.disposeData(a.dataId),l.disposeData(r.dataId),s}const u=a||ds(i.dtype,o.dtype);if(("string"===i.dtype||"string"===o.dtype||l.shouldExecuteOnCPU([i,o]))&&null!=t){const e=l.tensorMap.get(i.dataId).values,n=l.tensorMap.get(o.dataId).values,a="string"===i.dtype?tf.fromUint8ToStringArray(e):e,r="string"===i.dtype?tf.fromUint8ToStringArray(n):n,[s,c]=t(i.shape,o.shape,a,r,u);return l.makeTensorInfo(c,u,s)}const c=EU(e,i.shape,o.shape);return l.runWebGPUProgram(c,[i,o],u)}}var{addImpl:DU,ceilImpl:PU,concatImpl:LU,equalImpl:WU,expImpl:BU,expm1Impl:UU,floorImpl:VU,gatherNdImpl:GU,gatherV2Impl:HU,greaterEqualImpl:jU,greaterImpl:qU,lessEqualImpl:XU,lessImpl:KU,logImpl:ZU,maxImpl:YU,maximumImpl:JU,minimumImpl:QU,multiplyImpl:eV,negImpl:tV,notEqualImpl:nV,prodImpl:aV,rangeImpl:rV,rsqrtImpl:sV,simpleAbsImpl:iV,sliceImpl:oV,stridedSliceImpl:lV,stringNGramsImpl:uV,subImpl:cV,tileImpl:dV,topKImpl:pV,transposeImpl:hV,uniqueImpl:fV}=pT,mV=_U({opType:yU.ABS,cpuKernelImpl:iV}),gV={kernelName:tt,backendName:"webgpu",kernelFunc:mV},yV=OU({opSnippet:dU.ADD,cpuKernelImpl:DU,supportsComplex:!0}),AV={kernelName:rt,backendName:"webgpu",kernelFunc:yV};var xV={kernelName:st,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;if(1===a.length)return RU({inputs:{x:a[0]},backend:n});const r=a.map((e=>e.dtype)).reduce(((e,t)=>ds(e,t))),s=a.map((e=>e.shape)),i=new class{constructor(e){this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e[0],this.variableNames=e.map(((e,t)=>`T${t}`)),this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="addN"}getUserCode(){const e=[];this.variableNames.forEach((t=>{e.push(`let v${t} = get${t}AtOutCoordsByCoords(coords);`)}));const t=this.variableNames.map((e=>`v${e}`)).join(" + ");return`\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        for (var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromFlatIndex(flatIndex);\n            ${e.join("\n        ")}\n            setOutputFlat(flatIndex, ${t});\n          }\n        }\n      }\n    `}}(s);return n.runWebGPUProgram(i,a,r)}},bV=class{constructor(e,t,n){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="axis : i32; infinityValue : f32;",this.size=!0;const a=[t];tf.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),a,e.length),this.op="min"===n?"<":">";const[r]=tf.computeOutAndReduceShapes(e,a);this.outputShape=0===r.length?[1]:r,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,[1,1,1]),this.inputShape=e,this.shaderKey=`argMinMax${this.op}`}getUserCode(){const e=e=>1===this.inputShape.length?"uniforms.xShape":`uniforms.xShape[${e}]`;return`\n      fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n      }\n\n      ${`\n      var<workgroup> xBestIndices : array<i32, ${this.workGroupSize[0]}>;\n      var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;\n    `}\n\n      // In order to get a flattened index into the input tensor, we need to\n      // add back the index along the reduced dimension to |outputCoords|.\n      // This function outputs the offset to the first value along\n      // |axis| and the stride to get the next value of the input along |axis|.\n      fn getInputCoordInfo(outputIndex : i32) -> vec2<i32>{\n        let outputCoords = getCoordsFromFlatIndex(outputIndex);\n        var i = ${this.outputShape.length-1};\n\n        var stride = 1;\n        var inputStride = 1;\n        var offset = 0;\n\n        for (var r = 1; r <= ${this.inputShape.length}; r = r + 1) {\n          let length = ${e(`${this.inputShape.length} - r`)};\n          if (${this.inputShape.length} - r == uniforms.axis) {\n            inputStride = stride;\n          } else {\n            offset = offset + ${((e,t)=>1===this.outputShape.length?e:`${e}[${t}]`)("outputCoords","i")} * stride;\n            i = i - 1;\n          }\n          stride = stride * length;\n        }\n\n        return vec2<i32>(offset, inputStride);\n      }\n\n      fn getInputIndex(coordInfo : vec2<i32>, index : i32) -> i32{\n        return coordInfo[0] + coordInfo[1] * index;\n      }\n\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        let outputIndex = index / i32(workGroupSizeX);\n        let coordInfo = getInputCoordInfo(outputIndex);\n        let Length = ${e("uniforms.axis")};\n\n        var bestIndex = i32(localId.x);\n        var bestValue = uniforms.infinityValue;\n\n        for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n            k = k + i32(workGroupSizeX)) {\n          let candidate = f32(x.numbers[getInputIndex(coordInfo, k)]);\n          if (!isNanCustom(candidate) && candidate ${this.op} bestValue) {\n            bestValue = candidate;\n            bestIndex = k;\n          }\n        }\n        xBestValues[localId.x] = bestValue;\n        xBestIndices[localId.x] = bestIndex;\n        workgroupBarrier();\n\n        var reduceSize = min(u32(Length), workGroupSizeX);\n        for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n            currentSize = reduceSize / 2u) {\n          let interval = DIV_CEIL(reduceSize, 2u);\n          if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            if (candidate ${this.op} bestValue) {\n              bestValue = candidate;\n              xBestValues[localId.x] = bestValue;\n              xBestIndices[localId.x] = xBestIndices[localId.x + interval];\n            }\n          }\n          reduceSize = interval;\n          workgroupBarrier();\n        }\n\n        if (localId.x == 0u && outputIndex < uniforms.size) {\n          setOutputFlatI32(outputIndex, xBestIndices[localId.x]);\n        }\n      }\n    `}};function vV(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,i=n,o=r.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=r.shape[s[c]];if(n.shouldExecuteOnCPU([r])){const e=i.tensorMap.get(r.dataId).values,t=hV(e,r.shape,r.dtype,s,l);return n.makeTensorInfo(l,r.dtype,t)}if(2===r.shape.length&&br.arraysEqual(s,[1,0])){const e=new class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[16,16,1];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.dispatchLayout={x:[0],y:[1]},this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,1,1]),this.shaderKey="transposeShared"}getUserCode(){return`\n      let TILE_DIM = ${this.workGroupSize[0]};\n      var<workgroup> tile : array<array<f32, ${this.workGroupSize[0]+1}>, ${this.workGroupSize[0]}>;\n      \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n      fn main([[builtin(local_invocation_id)]] localId : vec3<u32>,\n              [[builtin(workgroup_id)]] workgroupId : vec3<u32>) {\n        var x = i32(workgroupId.x) * TILE_DIM + i32(localId.x);\n        var y = i32(workgroupId.y) * TILE_DIM + i32(localId.y);\n        let width = uniforms.outShape[0];\n        let height = uniforms.outShape[1];\n        if (x < width && y < height) {\n          tile[localId.y][localId.x] =\n              A.numbers[y * width + x];\n        }\n        workgroupBarrier();\n\n        x = i32(workgroupId.y) * TILE_DIM + i32(localId.x);\n        y = i32(workgroupId.x) * TILE_DIM + i32(localId.y);\n        if (x < height && y < width) {\n          setOutputFlat((y * height + x), tile[localId.x]\n            [localId.y]);\n        }\n      }\n    `}}(r.shape,s);return i.runWebGPUProgram(e,[r],r.dtype)}const u=new class{constructor(e,t){this.variableNames=["A"],this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.newDim=t,this.shaderKey=`transpose_${t}`}getUserCode(){const e=HB(this.outputShape.length),t=function(e){const t=e.length;if(t>4)throw Error(`Transpose for rank ${t} is not yet supported`);const n=new Array(t);for(let a=0;a<e.length;a++)n[e[a]]=`resRC[${a}]`;return n.join()}(this.newDim);return`\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let resRC = getCoordsFromFlatIndex(flatIndex);\n            setOutputFlat(flatIndex, A.numbers[getFlatIndex${this.outputShape.length}D(\n              ${e}(${t}), uniforms.aShape)]);\n          }\n        }\n      }\n    `}}(r.shape,s);return i.runWebGPUProgram(u,[r],r.dtype)}var wV={kernelName:Za,backendName:"webgpu",kernelFunc:vV};var kV={kernelName:lt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let i=br.parseAxisParam(s,r.shape);const o=tf.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=o&&(l=vV({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=tf.getInnerMostAxes(i.length,l.shape.length)),tf.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);const c=new bV(l.shape,i[0],"max"),d=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.NEGATIVE_INFINITY]}],p=n.runWebGPUProgram(c,[l],"int32",d);return u.forEach((e=>n.disposeData(e.dataId))),p}};var IV={kernelName:ut,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let i=br.parseAxisParam(s,r.shape);const o=tf.getAxesPermutation(i,r.shape.length);let l=r;const u=[];null!=o&&(l=vV({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=tf.getInnerMostAxes(i.length,l.shape.length)),tf.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);const c=new bV(l.shape,i[0],"min"),d=[{type:"int32",data:[i[0]]},{type:"float32",data:[Number.POSITIVE_INFINITY]}],p=n.runWebGPUProgram(c,[l],"int32",d);return u.forEach((e=>n.disposeData(e.dataId))),p}},SV=class{constructor(e,t){this.variableNames=["x"],this.uniforms="stride : vec2<i32>; pad : vec2<i32>; dilation : vec2<i32>; convDims : vec2<i32>; filterDims : vec2<i32>;",this.workGroupSize=[128,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`pool2D_${t}`,this.poolType=t}getUserCode(){let e="resultValue = max(value, resultValue);";"avg"===this.poolType&&(e="resultValue = resultValue + value; count = count + 1.0;");let t="resultValue";"avg"===this.poolType&&(t="resultValue / count");return`\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n      if (index < uniforms.size) {\n        let coords = getCoordsFromFlatIndex(index);\n          let batch = coords[0];\n          let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          var resultValue = ${"avg"===this.poolType?"0.0":"-1.0 / pow(10.0, -20.0)"};\n          var count = 0.0;\n\n          for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + uniforms.dilation.x) {\n            let xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= uniforms.convDims.x) {\n              continue;\n            }\n\n            for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + uniforms.dilation.y) {\n              let xC = xCCorner + wC;\n              if (xC < 0 || xC >= uniforms.convDims.y) {\n                continue;\n              }\n\n              let value = getX(batch, xR, xC, coords[3]);\n              ${e}\n            }\n          }\n\n          setOutputFlat(index, ${t});\n        }\n      }\n    `}},NV=class{constructor(e){this.variableNames=["x"],this.uniforms="stride : vec2<i32>;",this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e.outShape,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="poolWithFilterSizeEqualsOne"}getUserCode(){return"\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromFlatIndex(index);\n          let batch = coords[0];\n          let d = coords[3];\n\n          let xRCCorner = coords.yz * uniforms.stride;\n          let xRCorner = xRCCorner.x;\n          let xCCorner = xRCCorner.y;\n\n          let value = getX(batch, xRCorner, xCCorner, d);\n          setOutputFlat(index, value);\n        }\n      }\n    "}};var TV={kernelName:mt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a,u=tf.computePool2DInfo(r.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&br.arraysEqual(u.inShape,u.outShape))return RU({inputs:{x:r},backend:n});let c;const d=[{type:"int32",data:[u.strideHeight,u.strideWidth]}];return 1===u.filterHeight&&1===u.filterWidth?c=new NV(u):(c=new SV(u,"avg"),d.push({type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]})),n.runWebGPUProgram(c,[r],r.dtype,d)}};var CV={kernelName:xt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;return SU({a:r,b:s,transposeA:i,transposeB:o,backend:n})}},EV=["x","y","z","w","u","v"];function RV(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a,[o,l]=Io.parseSliceParams(r,s,i);if(Io.assertParamsValid(r,o,l),n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.tensorMap.get(r.dataId),t=oV(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}if(0===br.sizeFromShape(l))return n.makeTensorInfo(l,r.dtype,[]);const u=new class{constructor(e,t){this.variableNames=["source"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.rank=t.length,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.start=e,this.uniforms=`start : ${HB(e.length)}; `,this.shaderKey="slice"}getUserCode(){const e=HB(this.rank),t=function(e){if(1===e)return"sourceLoc";if(e<=6)return EV.slice(0,e).map((e=>`sourceLoc.${e}`)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let n;return n=1===this.start.length?this.outputShape.map(((e,t)=>"sourceLoc = uniforms.start + coords;")):this.outputShape.map(((e,t)=>`sourceLoc.${EV[t]} = uniforms.start[${t}] + coords.${EV[t]};`)),`\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          var sourceLoc : ${e};\n          let coords = getCoordsFromFlatIndex(index);\n          ${n.join("\n")}\n          setOutputFlat(index, getSource(${t}));\n        }\n      }\n    `}}(o,l),c=[{type:"int32",data:o}];return n.runWebGPUProgram(u,[r],r.dtype,c)}var FV={kernelName:wa,backendName:"webgpu",kernelFunc:RV},$V={kernelName:bt,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;br.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGPU backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),l=tf.getReshaped(r.shape,s,o),u=tf.getPermuted(l.length,s.length),c=tf.getReshapedPermuted(r.shape,s,o),d=tf.getSliceBeginCoords(i,s.length),p=tf.getSliceSize(c,i,s.length),h=[],f=kU({inputs:{x:r},backend:n,attrs:{shape:l}}),m=vV({inputs:{x:f},backend:n,attrs:{perm:u}}),g=kU({inputs:{x:m},backend:n,attrs:{shape:c}}),y=RV({inputs:{x:g},backend:n,attrs:{begin:d,size:p}});return h.push(f),h.push(m),h.push(g),h.forEach((e=>n.disposeData(e.dataId))),y}},MV=OU({opSnippet:dU.NOT_EQUAL,dtype:"bool",cpuKernelImpl:nV}),zV={kernelName:Xn,backendName:"webgpu",kernelFunc:MV};function _V(e){const{inputs:t,backend:n}=e,{input:a}=t;return RU({inputs:{x:n.tensorMap.get(a.dataId).complexTensorInfos.real},backend:n})}var OV={kernelName:oa,backendName:"webgpu",kernelFunc:_V};var DV={kernelName:It,backendName:"webgpu",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:s}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===s.dtype)return RU({inputs:{x:s},backend:a});const t=qc(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=$U({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeData(n.dataId),r}if("complex64"===s.dtype){const t=_V({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:i}});return a.disposeData(t.dataId),n}if(!br.hasEncodingLoss(s.dtype,i)){const e=RU({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new zU(e.shape,yU.TO_INT),a=t.runWebGPUProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===i){const e=a.makeTensorInfo([],"bool",br.getTypedArrayFromDType("bool",1)),t=MV({inputs:{a:s,b:e},backend:a});return a.disposeData(e.dataId),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},PV=_U({opType:yU.CEIL,cpuKernelImpl:PU}),LV={kernelName:St,backendName:"webgpu",kernelFunc:PV};var WV={kernelName:Nt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a;let o;const l=[{type:"float32",data:[s]},{type:"float32",data:[i]}];return o=br.sizeFromShape(r.shape)%4===0?new class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workPerThread=4,this.workGroupSize=[64,1,1],this.isVec4=!0,this.size=!0,this.outputShape=e,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.shaderKey="clipVec4"}getUserCode(){return"\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if(index < uniforms.size) {\n          let value = getAAtOutCoordsByGlobalIndex(index);\n          var clampedValue : vec4<f32>;\n          for (var i = 0; i < 4; i = i + 1) {\n            if (isNanCustom(value[i])) {\n              clampedValue[i] = value[i];\n            } else {\n              clampedValue[i] = clamp(value[i], uniforms.minVal, uniforms.maxVal);\n            }\n          }\n\n          setOutputFlat(index, clampedValue);\n        }\n      }\n    "}}(r.shape):new class{constructor(e){this.variableNames=["A"],this.uniforms="minVal : f32; maxVal : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="clip"}getUserCode(){return"\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if(index < uniforms.size) {\n          let value = getAAtOutCoordsByGlobalIndex(index);\n          if (isNanCustom(value)) {\n            setOutputFlat(index, value);\n            return;\n          }\n          setOutputFlat(index, clamp(value, uniforms.minVal, uniforms.maxVal));\n        }\n      }\n    "}}(r.shape),n.runWebGPUProgram(o,[r],r.dtype,l)}};function BV(e){const{inputs:t,backend:n}=e,{input:a}=t;return RU({inputs:{x:n.tensorMap.get(a.dataId).complexTensorInfos.imag},backend:n})}var UV={kernelName:yn,backendName:"webgpu",kernelFunc:BV};function VV(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>_V({inputs:{input:e},backend:n}))),r=e.map((e=>BV({inputs:{input:e},backend:n}))),s=VV(a,t,n),i=VV(r,t,n),o=$U({inputs:{real:s,imag:i},backend:n});return a.forEach((e=>n.disposeData(e.dataId))),r.forEach((e=>n.disposeData(e.dataId))),n.disposeData(s.dataId),n.disposeData(i.dataId),o}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=br.sizeFromShape(e.shape.slice(t));return kU({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=tf.computeOutShape(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=LU(s,i,a,o),u=tf.computeOutShape(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,a,l);return r.forEach((e=>n.disposeData(e.dataId))),c}const{tensors2D:s,outShape:i}=function(e,t,n){const a=tf.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>kU({inputs:{x:e},backend:n,attrs:{shape:[br.sizeFromShape(e.shape.slice(0,t)),br.sizeFromShape(e.shape.slice(t))]}}))),outShape:a}}(e,t,n),o=s.map((e=>e.shape)),l=new class{constructor(e){this.uniforms="",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=tf.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`)),this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.offsetLength=e.length-1;for(let t=0;t<this.offsetLength;t++)this.uniforms+=`offset${t} : i32;`;this.shaderKey="concat"}getUserCode(){const e=[];if(this.offsetLength>0){e.push("if (yC < uniforms.offset0){ setOutput(coords.x, coords.y, getT0(yR, yC)); }");for(let a=1;a<this.offsetLength;a++)e.push(`elseif (yC < uniforms.offset${[a]}){ setOutput(coords.x, coords.y, getT${a}(yR, yC - uniforms.offset${a-1})); }`);const t=this.offsetLength,n=this.offsetLength-1;e.push(`else { setOutput(coords.x, coords.y, getT${t}(yR, yC - uniforms.offset${n})); }`)}else e.push("setOutput(coords.x, coords.y, getT0(yR, yC));");return`\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        for(var i = 0; i < ${this.workPerThread}; i = i + 1) {\n          let flatIndex = index * ${this.workPerThread} + i;\n          if(flatIndex < uniforms.size) {\n            let coords = getCoordsFromFlatIndex(flatIndex);\n            let yR = coords.x;\n            let yC = coords.y;\n\n            ${e.join("\n        ")}\n          }\n        }\n      }\n    `}}(o),u=[],c=new Array(o.length-1);if(c.length>0){c[0]=o[0][1],u.push({type:"int32",data:[c[0]]});for(let e=1;e<c.length;e++)c[e]=c[e-1]+o[e][1],u.push({type:"int32",data:[c[e]]})}const d=n.runWebGPUProgram(l,s,s[0].dtype,u);s.forEach((e=>n.disposeData(e.dataId)));const p=kU({inputs:{x:d},backend:n,attrs:{shape:i}});return n.disposeData(d.dataId),p}function GV(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=br.parseAxisParam(r,t[0].shape)[0],i=tf.computeOutShape(t.map((e=>e.shape)),s);if(0===br.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>br.sizeFromShape(e.shape)>0));if(1===o.length)return RU({inputs:{x:o[0]},backend:n});const l=o.map((e=>e.shape));return tf.assertParamsConsistent(l,s),VV(o,s,n)}var HV={kernelName:Et,backendName:"webgpu",kernelFunc:GV};function jV({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=kU({inputs:{x:e},backend:a,attrs:{shape:[1,"channelsLast"===n.dataFormat?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=kU({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=SU({a:u,b:c,transposeA:!1,transposeB:!1,backend:a,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),p=kU({inputs:{x:d},backend:a,attrs:{shape:n.outShape}});return a.disposeData(u.dataId),a.disposeData(c.dataId),a.disposeData(d.dataId),p}function qV({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,strideWidth:d,strideHeight:p,padInfo:h,outWidth:f,outHeight:m,dilationWidth:g,dilationHeight:y,dataFormat:A}=n,x="channelsLast"===A,b=l*u*c,v=m*f,w=[v,b],k=[],I=kU({inputs:{x:e},backend:a,attrs:{shape:e.shape.slice(1)}}),S=kU({inputs:{x:t},backend:a,attrs:{shape:[1,b,-1]}});k.push(I),k.push(S);const N=new class{constructor(e,t){this.variableNames=["A"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; outWidth : i32; itemsPerBlockRow : i32;\n      inChannels : i32;",this.workPerThread=4,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]),this.isChannelsLast=t,this.shaderKey=`im2col_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?0:1,t=this.isChannelsLast?1:2;return`\n    \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n      for(var i = 0; i<${this.workPerThread}; i = i + 1) {\n        let flatIndex = index * ${this.workPerThread} + i;\n\n        let rc = getCoordsFromFlatIndex(flatIndex);\n\n        if(flatIndex < uniforms.size) {\n          let blockIndex = rc[0];\n          let pos = rc[1];\n\n          let offsetY = blockIndex / uniforms.outWidth * uniforms.stride[1] - uniforms.pad[1];\n          let d0 = offsetY + uniforms.dilation[1] * pos / uniforms.itemsPerBlockRow;\n          var value = 0.0;\n          if(d0 < uniforms.aShape[${e}] && d0 >= 0) {\n            let offsetX = (blockIndex % uniforms.outWidth) * uniforms.stride[0] -\n              uniforms.pad[0];\n            let d1 = offsetX + uniforms.dilation[0] * ((pos %\n              uniforms.itemsPerBlockRow) / uniforms.inChannels);\n            let ch = pos % uniforms.inChannels;\n            if(d1 < uniforms.aShape[${t}] && d1 >= 0) {\n              value = getA(d0, d1, ch);\n            }\n          }\n          setOutputFlat(flatIndex, value);\n        }\n      }\n    }\n  `}}(w,x),T=[{type:"int32",data:[h.left,h.top]},{type:"int32",data:[d,p]},{type:"int32",data:[g,y]},{type:"int32",data:[f]},{type:"int32",data:[c*l]},{type:"int32",data:[c]}],C=a.runWebGPUProgram(N,[I],I.dtype,T),E=kU({inputs:{x:C},backend:a,attrs:{shape:[1,w[0],w[1]]}});k.push(C),k.push(E);const R=[1,w[0],w[1]],F=new wU(R,[1,v,n.outChannels],Ze().get("WEBGPU_MATMUL_WORK_PER_THREAD"),!1,!1),$=R[2],M=[{type:"int32",data:[R[1]]},{type:"int32",data:[n.outChannels]},{type:"int32",data:[$]}],z=a.runWebGPUProgram(F,[E,S],E.dtype,M),_=kU({inputs:{x:z},backend:a,attrs:{shape:x?[1,m,f,n.outChannels]:[1,n.outChannels,m,f]}});k.push(z);for(const O of k)a.disposeData(O.dataId);return _}var XV=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;\n      dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.isVec4=!0,this.outputShape=e.outShape,br.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=[8,8,1];const s=[4,4,1];this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,s),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=a,this.hasLeakyreluAlpha=r,this.addBias&&this.variableNames.push("bias"),this.hasPreluActivationWeights&&this.variableNames.push("preluActivationWeights"),this.hasLeakyreluAlpha&&this.variableNames.push("leakyreluAlpha"),[this.fitA,this.fitB]=this.getShapeFit(s),this.shaderKey=`conv2DMMVec4_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(e){const t=this.workGroupSize[1]*e[1],n=this.workGroupSize[0]*e[0],a=[t,n],r=[n,n],s=this.outputShape[1]*this.outputShape[2],i=this.outputShape[3],o=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[tU(a,[s,o]),tU(r,[o,i])]}getSampleAWithRemainder(e){return`let flatIndex${e} = getFlatIndex4D(coord, uniforms.xShape);\n    let divBy4Remainder${e} = flatIndex${e} % 4;\n    let divBy4Index${e} = flatIndex${e} / 4;\n    let curData${e} = x.numbers[divBy4Index${e}];\n    if (divBy4Remainder${e} == 0) {\n      temp = curData${e};\n    } else {\n      // TODO: This could end up being a redundant load with another one in\n      // the same shader invocation. Perhaps there's an opportunity for\n      // optimization\n      let nextData${e} = x.numbers[divBy4Index${e} + 1];\n      if (divBy4Remainder${e} == 1) {\n        temp = vec4<f32>(curData${e}.yzw, nextData${e}.x);\n      } elseif (divBy4Remainder${e} == 2) {\n        temp = vec4<f32>(curData${e}.zw, nextData${e}.xy);\n      } elseif (divBy4Remainder${e} == 3) {\n        temp = vec4<f32>(curData${e}.w, nextData${e}.xyz);\n      }\n    }\n    `}getUserCode(){const e=bU([4,4,1],this.workGroupSize),t=`let outRow = r / uniforms.outShape[2];\n        let outCol = r % uniforms.outShape[2];\n        let WRow = c / (uniforms.filterDims[1] * uniforms.xShape[3]);\n        let WCol = c / uniforms.xShape[3] % uniforms.filterDims[1];\n        let inChCoord = c % uniforms.xShape[3];\n        var coord = vec4<i32>(\n            batch,\n            outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],\n            outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],\n            inChCoord);\n        var resData = vec4<f32>(0.0);\n        ${0===this.convInfo.inChannels%4?"// The bounds checking is always needed since we use it to pad zero for\n          // the 'same' padding type.\n          if (coordsInBounds4D(coord, uniforms.xShape)) {\n            resData = x.numbers[getFlatIndex4D(coord, uniforms.xShape) / 4];\n          } else {\n            resData = vec4<f32>(0.0); }":`var temp = vec4<f32>(0.0);\n          ${this.getSampleAWithRemainder(1)}\n          resData = temp;\n          if (WCol == (uniforms.filterDims[1] - 1)) {\n            coord = vec4<i32>(\n              coord.x, coord.y + 1, coord.z + 1 - uniforms.filterDims[1], 0);\n              ${this.getSampleAWithRemainder(2)}\n            if (inChCoord == 0) {\n              resData = vec4<f32>(resData.xyz, temp.x);\n            } elseif (inChCoord == 1) {\n              resData = vec4<f32>(resData.xy, temp.xy);\n            } else {\n              resData = vec4<f32>(resData.x, temp.xyz);\n            }\n          }\n          `}\n        return resData;`,n=this.fitA?`${t}`:`if (r < uniforms.dimAOuter && c < uniforms.dimInner) {\n          ${t}\n         }\n         return vec4<f32>(0.0);\n        `,a=this.fitB?"return W.numbers[row * uniforms.dimBOuter / 4 + col];":"if(coordsInBounds2D(vec2<i32>(row, col * 4), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n           return W.numbers[row * uniforms.dimBOuter / 4 + col];\n         }\n         return vec4<f32>(0.0);\n        ";let r="",s="";if(this.activation){const e=xU(this.activation,this.isVec4);if(this.hasPreluActivationWeights)r=`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n          let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);\n          ${e}\n        }`;else{if(this.hasLeakyreluAlpha)throw r=`fn activation(a: vec4<f32>) -> vec4<f32> {\n          let b = getLeakyreluAlphaAtOutCoords();\n          ${e}\n        }`,new Error("Leakyrelu is not supported.");r=`\n        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n          ${e}\n        }`}s="value = activation(value, outCoord);"}return`\n        ${r}\n        fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {\n          let r = row;\n          let c = col * 4;\n          var batch = i32(globalId.z);\n          ${n}\n        }\n\n        fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> vec4<f32> {\n          ${a}\n        }\n\n        fn mm_write(row : i32, col : i32, valueInput : vec4<f32>, globalId : vec3<u32>) {\n          var batch = i32(globalId.z);\n          var value = valueInput;\n          if (row < uniforms.dimAOuter && col * 4 < uniforms.dimBOuter)\n          {\n            let outCoord = vec4<i32>(\n              batch,\n              row / uniforms.outShape[2],\n              row % uniforms.outShape[2],\n              col * 4);\n            ${this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":""}\n            ${s}\n            setOutput(outCoord[0], outCoord[1], outCoord[2], outCoord[3],\n              value);\n          }\n        }\n        ${e}\n      `}},KV=class{constructor(e,t=!1,n=null,a=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.outShape,br.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=aU(this.dispatchLayout,this.outputShape),this.elementsPerThread=sU(this.dispatchLayout,this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=a,[this.fitA,this.fitB]=this.getShapeFit(),this.shaderKey=`conv2DMM_${this.elementsPerThread}_${this.activation}_${this.fitA}_${this.fitB}`}getShapeFit(){const e=this.workGroupSize[1]*this.elementsPerThread[1],t=this.workGroupSize[0]*this.elementsPerThread[0],n=e>t?e:t;br.assert(n%this.workGroupSize[0]===0&&n%this.workGroupSize[1]===0,(()=>"tileInner must be multiple of workgroupsize.x and workgroupsize.y"));const a=[e,n],r=[n,t],s=this.outputShape[1]*this.outputShape[2],i=this.outputShape[3],o=this.convInfo.filterHeight*this.convInfo.filterWidth*this.convInfo.inChannels;return[tU(a,[s,o]),tU(r,[o,i])]}getUserCode(){const e=vU(this.elementsPerThread,this.workGroupSize),t="\n    let outRow = row / uniforms.outShape[2];\n    let outCol = row % uniforms.outShape[2];\n\n    let WRow = col / (uniforms.filterDims[1] * uniforms.xShape[3]);\n    let WCol = col / uniforms.xShape[3] % uniforms.filterDims[1];\n    let coord = vec4<i32>(\n        batch,\n        outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0],\n        outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1],\n        col % uniforms.xShape[3]);\n    // The bounds checking is always needed since we use it to pad zero for the\n    // 'same' padding type.\n    if(coordsInBounds4D(coord, uniforms.xShape)) {\n      return x.numbers[getFlatIndex4D(coord, uniforms.xShape)];\n    }\n    return 0.0;",n=this.fitA?`${t}`:`if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n      ${t}\n    }\n    return 0.0;\n    `,a=this.fitB?"return W.numbers[row * uniforms.dimBOuter + col];":"if(coordsInBounds2D(vec2<i32>(row, col), vec2<i32>(uniforms.dimInner, uniforms.dimBOuter))) {\n           return W.numbers[row * uniforms.dimBOuter + col];\n\t }\n\t return 0.0;\n\t ";let r="",s="";if(this.activation){const e=xU(this.activation,!1);r=this.hasPreluActivationWeights?`fn activation(a: f32, outCoord : vec4<i32>) -> f32 {\n                  let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);\n                  ${e}\n                }`:`\n                  fn activation(a : f32, outCoord : vec4<i32>) -> f32 {\n                    ${e}\n                  }\n                `,s="value = activation(value, outCoord);"}return`\n    ${r}\n    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      var batch = i32(globalId.z);\n      ${n}\n    }\n\n    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      ${a}\n    }\n\n    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {\n      var batch = i32(globalId.z);\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      ${this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":""}\n      ${s}\n      result.numbers[getFlatIndex4D(outCoord, uniforms.outShape)] = value;\n    }\n    ${e}\n  `}},ZV=class{constructor(e,t=!1,n=null,a=!1){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;",this.workGroupSize=[128,1,1],this.outputShape=e.outShape,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),br.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivationWeights=a,this.shaderKey=`conv2DNaive_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){const n=xU(this.activation);e=this.hasPreluActivationWeights?`fn activation(a : f32, outCoord : vec4<i32>) -> f32{\n               let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);\n               ${n}\n             }`:`\n                  fn activation(a : f32, outCoord : vec4<i32>) -> f32{\n                    ${n}\n                  }\n                `,t="value = activation(value, outCoord);"}return`\n      ${e}\n      fn readInp(batch : i32, row : i32, col : i32, chan : i32) -> f32 {\n        let coord = vec4<i32>(batch, row, col, chan);\n        if(coordsInBounds4D(coord, uniforms.xShape)) {\n          return getX(batch, row, col, chan);\n        }\n        return 0.0;\n      }\n\n      fn readFilt(row : i32, col : i32, xChannel : i32, outChannel : i32) -> f32{\n        let coord = vec4<i32>(row, col, xChannel, outChannel);\n        if(coordsInBounds4D(coord, uniforms.wShape)) {\n          return getW(row, col, xChannel, outChannel);\n        }\n        return 0.0;\n      }\n\n      fn writeResult(batch : i32, row : i32, col : i32, chan : i32, value : f32) {\n        let coord = vec4<i32>(batch, row, col, chan);\n        if (coordsInBounds4D(coord, uniforms.outShape)) {\n          ${this.addBias?"value = value + getBiasAtOutCoordsByCoords(outCoord);":""}\n          ${t}\n          setOutput(batch, row, col, chan, value);\n        }\n      }\n\n      \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let outChannel = coords[3];\n\n        var acc = 0.0;\n\n        for (var row = 0; row < uniforms.filterDims[0]; row = row + 1) {\n          for (var col = 0; col < uniforms.filterDims[1]; col = col + 1) {\n            for (var xChannel = 0; xChannel < uniforms.xShape[3]; xChannel = xChannel + 1) {\n              let coordRow = coords[1] * uniforms.stride[0] + uniforms.dilation[0] * row - uniforms.pad[0];\n              let coordCol = coords[2] * uniforms.stride[1] + uniforms.dilation[1] * col - uniforms.pad[1];\n              let v = readInp(batch, coordRow, coordCol, xChannel);\n              let f = readFilt(row, col, xChannel, outChannel);\n              acc = acc + v * f;\n            }\n          }\n        }\n\n        writeResult(batch, coords[1], coords[2], outChannel, acc);\n      }\n    `}};var YV={kernelName:Rt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=n,d=tf.convertConv2DDataFormat(l),p=tf.computeConv2DInfo(r.shape,s.shape,i,u,o,c,!1,d);if(1===p.filterHeight&&1===p.filterWidth&&1===p.dilationHeight&&1===p.dilationWidth&&1===p.strideHeight&&1===p.strideWidth&&("SAME"===p.padInfo.type||"VALID"===p.padInfo.type))return jV({x:r,filter:s,convInfo:p,backend:a});if(Ze().getBool("WEBGPU_CONV_SEPARATE_IM2COL_SHADER")&&1===r.shape[0])return qV({x:r,filter:s,convInfo:p,backend:a});let h;const f=[p.padInfo.top,p.padInfo.left],m=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[...f]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.dilationHeight,p.dilationWidth]}],g=Ze().getBool("WEBGPU_USE_NAIVE_CONV2D");if(h=g?new ZV(p):(p.inChannels%4===0||3===p.inChannels&&"VALID"===p.padInfo.type)&&p.outChannels%4===0&&p.outChannels>=64?new XV(p):new KV(p),!g){const e=p.outShape[1]*p.outShape[2],t=p.outShape[3],n=p.filterHeight*p.filterWidth*p.inShape[3];m.push({type:"int32",data:[e]},{type:"int32",data:[t]},{type:"int32",data:[n]})}return a.runWebGPUProgram(h,[r,s],r.dtype,m)}};var JV={kernelName:$t,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=a,d=tf.convertConv2DDataFormat(u),p=tf.computeConv2DInfo(i,s.shape,o,1,l,c,!1,d),h=[{type:"int32",data:[p.filterHeight,p.filterWidth]},{type:"int32",data:[p.filterHeight-1-p.padInfo.top,p.filterWidth-1-p.padInfo.left]},{type:"int32",data:[p.strideHeight,p.strideWidth]},{type:"int32",data:[p.batchSize,p.outHeight,p.outWidth,p.outChannels]}];let f;if(Ze().getBool("WEBGPU_USE_NAIVE_CONV2D_TRANSPOSE"))f=new class{constructor(e){this.variableNames=["dy","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.inShape,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.isChannelsLast="channelsLast"===e.dataFormat,this.shaderKey=`conv2DDerInput_${this.isChannelsLast}`}getUserCode(){const e=this.isChannelsLast?1:2,t=this.isChannelsLast?2:3;return`\n    \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n {\n      if(index < uniforms.size) {\n        let coords = getCoordsFromFlatIndex(index);\n        let batch = coords[0];\n        let d1 = coords[${this.isChannelsLast?3:1}];\n\n        let dyCorner = vec2<i32>(coords[${e}]), coords[${t}]) - uniforms.pads;\n        let dyRCorner = dyCorner.x;\n        let dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n        for (var wR = 0; wR < uniforms.filterDims.x; wR = wR + 1) {\n          let dyR = (f32(dyRCorner) + f32(wR)) / f32(uniforms.stride.x);\n          let wRPerm = uniforms.filterDims.x - 1 - wR;\n          if (dyR < 0.0 || dyR >= f32(uniforms.outBackprop[1]) || fract(dyR) > 0.0 ||\n              wRPerm < 0) {\n            continue;\n          }\n          let idyR = dyR;\n\n          for (var wC = 0; wC < uniforms.filterDims.y; wC = wC + 1) {\n            let dyC = (f32(dyCCorner) + f32(wC)) / f32(uniforms.stride.y);\n            let wCPerm = uniforms.filterDims.y - 1 - wC;\n            if (dyC < 0.0 || dyC >= f32(uniforms.outBackprop[2]) ||\n                fract(dyC) > 0.0 || wCPerm < 0) {\n              continue;\n            }\n            let idyC = dyC;\n\n            for (var d2 = 0; d2 < uniforms.outBackprop[3]; d2 = d2 + 1) {\n              if (${this.isChannelsLast}) {\n                let xValue = getDy(batch, idyR, idyC, d2);\n                let wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd = dotProd + xValue * wValue;\n              } else {\n                let xValue = getDy(batch, d2, idyR, idyC);\n                let wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd = dotProd + xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutputFlat(index, dotProd);\n      }\n    }\n  `}}(p);else{f=new class{constructor(e){this.variableNames=["x","W"],this.uniforms="filterDims : vec2<i32>; pads : vec2<i32>; stride : vec2<i32>; outBackprop : vec4<i32>; dimAOuter : i32; dimBOuter : i32; dimInner : i32;",this.outputShape=e.inShape,br.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),this.dispatchLayout={x:[3],y:[1,2],z:[0]},this.workGroupSize=aU(this.dispatchLayout,this.outputShape),this.elementsPerThread=sU(this.dispatchLayout,this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,this.elementsPerThread),this.shaderKey=`conv2DDerInputMM_${this.elementsPerThread}`}getUserCode(){return`\n    fn mm_readA(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      var batch = i32(globalId.z);\n      if (row < uniforms.dimAOuter && col < uniforms.dimInner) {\n      \n    let outRow = row / uniforms.outShape[2];\n    let outCol = row % uniforms.outShape[2];\n\n    let WRow = col / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n    let WCol = col / uniforms.outBackprop[3] % uniforms.filterDims[1];\n    let xR = f32(outRow - uniforms.pads[0] + WRow) / f32(uniforms.stride[0]);\n    let xC = f32(outCol - uniforms.pads[1] + WCol) / f32(uniforms.stride[1]);\n    if (xR < 0.0 || xR >= f32(uniforms.outBackprop[1]) || fract(xR) > 0.0) {\n      return 0.0;\n    }\n    if (xC < 0.0 || xC >= f32(uniforms.outBackprop[2]) || fract(xC) > 0.0) {\n      return 0.0;\n    }\n    let coord = vec4<i32>(\n        batch,\n        i32(xR),\n        i32(xC),\n        col % uniforms.outBackprop[3]);\n    return x.numbers[getFlatIndex4D(coord, uniforms.xShape)];\n    }\n    return 0.0;\n    }\n\n    fn mm_readB(row : i32, col : i32, globalId : vec3<u32>) -> f32 {\n      let coordX = uniforms.filterDims.x - 1 -\n          row / (uniforms.filterDims[1] * uniforms.outBackprop[3]);\n      let coordY = uniforms.filterDims.y - 1 -\n          (row / uniforms.outBackprop[3]) % uniforms.filterDims[1];\n      if (row < uniforms.dimInner && col < uniforms.dimBOuter &&\n          coordX >= 0 && coordY >= 0) {\n        let coord = vec4<i32>(coordX, coordY, col,\n            row % uniforms.outBackprop[3]);\n        return W.numbers[getFlatIndex4D(coord, uniforms.wShape)];\n      }\n      return 0.0;\n    }\n\n    fn mm_write(row : i32, col : i32, valueInput : f32, globalId : vec3<u32>) {\n      var batch = i32(globalId.z);\n      var value = valueInput;\n      let outCoord = vec4<i32>(\n          batch,\n          row / uniforms.outShape[2],\n          row % uniforms.outShape[2],\n          col);\n      result.numbers[getFlatIndex4D(outCoord, uniforms.outShape)] = value;\n    }\n\n    ${vU(this.elementsPerThread,this.workGroupSize)}\n  `}}(p);const e=p.inShape[1]*p.inShape[2],t=p.inShape[3],n=p.filterHeight*p.filterWidth*p.outChannels;h.push({type:"uint32",data:[e]},{type:"uint32",data:[t]},{type:"uint32",data:[n]})}return n.runWebGPUProgram(f,[r,s],"float32",h)}},QV=_U({opType:yU.COS}),eG={kernelName:Ot,backendName:"webgpu",kernelFunc:QV},tG=_U({opType:yU.COSH}),nG={kernelName:Dt,backendName:"webgpu",kernelFunc:tG},aG={kernelName:Lt,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=a,c=new class{constructor(e,t,n,a){this.variableNames=["Image","Boxes","BoxInd"],this.uniforms="extrapolationValue : f32;",this.workGroupSize=[64,1,1],this.size=!0;const[r]=t;this.outputShape=[r,n[0],n[1],e],this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.methodId="bilinear"===a?1:0,this.cropHeightBiggerThan1=this.outputShape[1]>1,this.cropWidthBiggerThan1=this.outputShape[2]>1,this.shaderKey=`cropAndResize_${this.methodId}_${this.cropHeightBiggerThan1}_${this.cropWidthBiggerThan1}`}getUserCode(){const[e,t]=["f32(uniforms.imageShape[1] - 1)","f32(uniforms.imageShape[2] - 1)"],[n,a,r]=this.cropHeightBiggerThan1?[`(${e} / f32(uniforms.outShape[1] - 1))`,"(y2-y1) * height_ratio",`y1*${e} + f32(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${e}`],[s,i,o]=this.cropWidthBiggerThan1?[`(${t} / f32(uniforms.outShape[2] - 1))`,"(x2-x1) * width_ratio",`x1*${t} + f32(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${t}`];return`\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n      if (index < uniforms.size) {\n        let coords = getCoordsFromFlatIndex(index);\n        let height_ratio = f32(${n});\n        let width_ratio = f32(${s});\n        let b = coords[0];\n        let y = coords[1];\n        let x = coords[2];\n        let d = coords[3];\n        // get box vals\n        let y1 = getBoxes(b, 0);\n        let x1 = getBoxes(b, 1);\n        let y2 = getBoxes(b, 2);\n        let x2 = getBoxes(b, 3);\n        // get image in batch index\n        let bInd = i32(round(getBoxInd(b)));\n        if(bInd < 0 || bInd >= uniforms.outShape[0]) {\n          return;\n        }\n        let height_scale = ${a};\n        let width_scale = ${i};\n        let in_y = ${r};\n        if( in_y < 0.0 || in_y > ${e} ) {\n          setOutputFlat(index, uniforms.extrapolationValue);\n          return;\n        }\n        let in_x = ${o};\n        if( in_x < 0.0 || in_x > ${t} ) {\n          setOutputFlat(index, uniforms.extrapolationValue);\n          return;\n        }\n        let sourceFracIndexCR = vec2<f32>(in_x,in_y);\n        if(${this.methodId} == 1) {\n          // Compute the four integer indices.\n          let sourceFloorCR = vec2<i32>(sourceFracIndexCR);\n          let sourceCeilCR = vec2<i32>(ceil(sourceFracIndexCR));\n          let topLeft = getImage(bInd, sourceFloorCR.y, sourceFloorCR.x, d);\n          let bottomLeft = getImage(bInd, sourceCeilCR.y, sourceFloorCR.x, d);\n          let topRight = getImage(bInd, sourceFloorCR.y, sourceCeilCR.x, d);\n          let bottomRight = getImage(bInd, sourceCeilCR.y, sourceCeilCR.x, d);\n          let fracCR = sourceFracIndexCR - vec2<f32>(sourceFloorCR);\n          let top = topLeft + (topRight - topLeft) * fracCR.x;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          let newValue = top + (bottom - top) * fracCR.y;\n          setOutputFlat(index, newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          let sourceNearestCR = vec2<i32>(floor(\n            sourceFracIndexCR + vec2<f32>(0.5,0.5)));\n          let newValue = getImage(\n            bInd, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutputFlat(index, newValue);\n        }\n      }\n    }\n    `}}(r.shape[3],s.shape,o,l),d=[{type:"float32",data:[u]}];return n.runWebGPUProgram(c,[r,s,i],"float32",d)}};var rG={kernelName:Bt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a,o=r.shape[0],l=("NHWC"===i?r.shape[1]:r.shape[2])*s,u=("NHWC"===i?r.shape[2]:r.shape[3])*s,c=("NHWC"===i?r.shape[3]:r.shape[1])/(s*s),d="NHWC"===i?[o,l,u,c]:[o,c,l,u],p=[{type:"int32",data:[s]}],h=new class{constructor(e,t){this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.uniforms="blockSize : i32;",this.outputShape=e,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`depthToSpace_${t}`,this.dataFormat=t}getUserCode(){return`\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromFlatIndex(index);\n          let b = coords[0];\n          let h = ${this.getHeightCoordString()};\n          let w = ${this.getWidthCoordString()};\n          let d = ${this.getDepthCoordString()};\n\n          let in_h = h / uniforms.blockSize;\n          let offset_h = h % uniforms.blockSize;\n          let in_w = w / uniforms.blockSize;\n          let offset_w = w % uniforms.blockSize;\n          let offset_d = (offset_h * uniforms.blockSize + offset_w) *\n            ${this.getOutputDepthSize()};\n          let in_d = d + offset_d;\n\n          let rlt = ${this.getInputSamplingString()};\n          setOutputFlat(index, rlt);\n        }\n      }`}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?"uniforms.outShape[3]":"uniforms.outShape[1]"}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}(d,i);return n.runWebGPUProgram(h,[r],r.dtype,p)}},sG=class{constructor(e,t=!1,n=null,a=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>; inDims : vec2<i32>;",this.workGroupSize=[4,4,4],this.isVec4=!0,this.outputShape=e.outShape,this.dispatchLayout={x:[0,1],y:[2],z:[3]},this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,[1,4,4]),br.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=a,this.shaderKey=`depthwise3x3_${n}`}getUserCode(){let e="",t="";if(this.activation){const n=xU(this.activation,this.isVec4);e=this.hasPreluActivation?`fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n          let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);\n          ${n}\n        }`:`\n        fn activation(a : vec4<f32>, outCoord : vec4<i32>) -> vec4<f32> {\n            ${n}\n          }\n        `,t="dotProd[i] = activation(dotProd[i], coords);"}return`\n      ${e}\n\n      \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n      fn main([[builtin(global_invocation_id)]] globalId: vec3<u32>) {\n        let batch = 0;\n        let r = i32(globalId.x);\n        let c = i32(globalId.y) * 4;\n        let d2 = i32(globalId.z) * 4;\n        let xRCCorner = vec2<i32>(r, c) * uniforms.stride - uniforms.pad;\n        let d1 = d2;\n        let q = 0;\n\n        let xRCorner = xRCCorner.x;\n        let xCCorner = xRCCorner.y;\n\n        var wVals : array<vec4<f32>, 9>;\n        wVals[0] = getW(0, 0, d1, q);\n        wVals[1] = getW(0, 1, d1, q);\n        wVals[2] = getW(0, 2, d1, q);\n        wVals[3] = getW(1, 0, d1, q);\n        wVals[4] = getW(1, 1, d1, q);\n        wVals[5] = getW(1, 2, d1, q);\n        wVals[6] = getW(2, 0, d1, q);\n        wVals[7] = getW(2, 1, d1, q);\n        wVals[8] = getW(2, 2, d1, q);\n\n        var xVals : array<array<vec4<f32>, 6>, 3>;\n        for (var wR = 0; wR < 3; wR = wR + 1) {\n          let xR = xRCorner + wR * uniforms.dilation[0];\n          for (var wC = 0; wC < 6; wC = wC + 1) {\n            let xC = xCCorner + wC * uniforms.dilation[1];\n            if (xR < 0 || xR >= uniforms.inDims[0] || xC < 0 || xC >= uniforms.inDims[1]) {\n              xVals[wR][wC] = vec4<f32>(0.0);\n            } else {\n              xVals[wR][wC] = getX(batch, xR, xC, d1);\n            }\n          }\n        }\n\n        var dotProd : array<vec4<f32>, 4>;\n        dotProd[0] = vec4<f32>(0.0);\n        dotProd[1] = vec4<f32>(0.0);\n        dotProd[2] = vec4<f32>(0.0);\n        dotProd[3] = vec4<f32>(0.0);\n\n        for (var wR = 0; wR < 3; wR = wR + 1) {\n          for (var wC = 0; wC < 3; wC = wC + 1) {\n            let indexW = wR * 3 + wC;\n            dotProd[0] = dotProd[0] + xVals[wR][0 + wC] * wVals[indexW];\n            dotProd[1] = dotProd[1] + xVals[wR][1 + wC] * wVals[indexW];\n            dotProd[2] = dotProd[2] + xVals[wR][2 + wC] * wVals[indexW];\n            dotProd[3] = dotProd[3] + xVals[wR][3 + wC] * wVals[indexW];\n          }\n        }\n\n        for (var i = 0; i < 4; i = i + 1) {\n          let coords = vec4<i32>(batch, r, c + i, d2);\n          if (coordsInBounds4D(coords, uniforms.outShape)) {\n            ${this.addBias?"dotProd[i] = dotProd[i] + getBiasAtOutCoordsByCoords(coords);":""}\n            ${t}\n            setOutput(coords[0], coords[1], coords[2], coords[3], dotProd[i]);\n          }\n        }\n      }\n    `}},iG=class{constructor(e,t=!1,n=null,a=!1){this.variableNames=["x","W"],this.uniforms="pad : vec2<i32>; stride : vec2<i32>; dilation : vec2<i32>;\n      inDims : vec2<i32>; filterHeight : i32; filterWidth : i32;\n      channelMul : i32;",this.workGroupSize=[256,1,1],this.outputShape=e.outShape,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),br.assert("channelsLast"===e.dataFormat,(()=>"TODO: NCHW is unimplemented")),t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),this.convInfo=e,this.addBias=t,this.activation=n,this.hasPreluActivation=a,this.shaderKey=`depthwise_${this.activation}`}getUserCode(){let e="",t="";if(this.activation){const n=xU(this.activation,!1);e=this.hasPreluActivation?`fn activation(a : f32, outCoord : vec4<i32>) -> f32 {\n          let b = getPreluActivationWeightsAtOutCoordsByCoords(outCoord);\n          ${n}\n        }`:`\n          fn activation(a : f32, outCoord : vec4<i32>) -> f32 {\n            ${n}\n          }\n        `,t="dotProd = activation(dotProd, coords);"}return`\n      ${e}\n\n      fn writeResult(batch : i32, row : i32, col : i32, chan : i32,\n          value : f32) {\n        let coord = vec4<i32>(batch, row, col, chan);\n        if (coordsInBounds4D(coord, uniforms.outShape)) {\n          setOutput(batch, row, col, chan, value);\n        }\n      }\n\n      \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n        let coords = getOutputCoords();\n        let batch = coords[0];\n        let xRCCorner = vec2<i32>(coords.yz) * uniforms.stride - uniforms.pad;\n        let d2 = coords[3];\n        let d1 = d2 / uniforms.channelMul;\n        let q = d2 - d1 * uniforms.channelMul;\n\n        let inputRowStart = xRCCorner.x;\n        let inputColStart = xRCCorner.y;\n        let inputRowEnd = inputRowStart + uniforms.filterHeight *\n            uniforms.dilation[0];\n        let inputColEnd = inputColStart + uniforms.filterWidth *\n            uniforms.dilation[1];\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd = 0.0;\n\n        // Extract if checking out of for loop for performance.\n        if (inputRowStart >= 0 && inputColStart >= 0 &&\n          inputRowEnd < uniforms.inDims[0] &&\n              inputColEnd < uniforms.inDims[1]) {\n            // Here using a constant value |this.convInfo.filterHeight| instead\n            // of uniform value is in order to loop unrolling.\n            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n              let xR = inputRowStart + wR * uniforms.dilation[0];\n\n              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                let xC = inputColStart + wC * uniforms.dilation[1];\n\n                let xVal = getX(batch, xR, xC, d1);\n                let wVal = getW(wR, wC, d1, q);\n                dotProd = dotProd + xVal * wVal;\n              }\n            }\n          } else {\n            for (var wR = 0; wR < uniforms.filterHeight; wR = wR + 1) {\n              let xR = inputRowStart + wR * uniforms.dilation[0];\n\n              if (xR < 0 || xR >= uniforms.inDims[0]) {\n                continue;\n              }\n\n              for (var wC = 0; wC < uniforms.filterWidth; wC = wC + 1) {\n                let xC = inputColStart + wC * uniforms.dilation[1];\n\n                if (xC < 0 || xC >= uniforms.inDims[1]) {\n                  continue;\n                }\n\n                let xVal = getX(batch, xR, xC, d1);\n                let wVal = getW(wR, wC, d1, q);\n                dotProd = dotProd + xVal * wVal;\n              }\n            }\n          }\n\n        ${this.addBias?"dotProd = dotProd + getBiasAtOutCoordsByCoords(coords);":""}\n        ${t}\n        writeResult(batch, coords[1], coords[2], d2, dotProd);\n      }\n    `}};var oG={kernelName:Ut,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=a;let c=l;null==c&&(c=[1,1]);const d=tf.computeConv2DInfo(r.shape,s.shape,i,c,o,u,!0),p=[{type:"int32",data:[d.padInfo.top,d.padInfo.left]},{type:"int32",data:[d.strideHeight,d.strideWidth]},{type:"int32",data:[d.dilationHeight,d.dilationWidth]},{type:"int32",data:[d.inHeight,d.inWidth]}];let h;return 1===d.batchSize&&d.inHeight===d.outHeight&&d.inWidth===d.outWidth&&1===d.strideHeight&&1===d.strideWidth&&d.filterHeight===d.filterWidth&&d.inChannels===d.outChannels&&3===d.filterHeight&&d.inChannels%4===0?h=new sG(d):(h=new iG(d),p.push({type:"int32",data:[d.filterHeight]},{type:"int32",data:[d.filterWidth]},{type:"int32",data:[d.outChannels/d.inChannels]})),n.runWebGPUProgram(h,[r,s],r.dtype,p)}},lG=OU({opSnippet:dU.MUL,cpuKernelImpl:eV,supportsComplex:!0}),uG={kernelName:jn,backendName:"webgpu",kernelFunc:lG};function cG(e,t,n,a,r){const s=e.shape.length,i=[],o=br.parseAxisParam(t,e.shape);let l=o;const u=tf.getAxesPermutation(l,s);let c=e;null!=u&&(c=vV({inputs:{x:e},attrs:{perm:u},backend:r}),l=tf.getInnerMostAxes(l.length,s),i.push(c)),tf.assertAxesAreInnerMostDims(a,l,s);const[d,p]=tf.computeOutAndReduceShapes(c.shape,l);let h,f=d;if(n&&(f=tf.expandShapeToKeepDim(d,o)),"max"!==a&&"prod"!==a||!r.shouldExecuteOnCPU([c])){const t=br.sizeFromShape(p),n={windowSize:t,inSize:t,batchSize:br.sizeFromShape(c.shape)/t,outSize:1},s="mean"===a?"float32":ps(e.dtype),o=[{type:"int32",data:[t]}],l=new class{constructor(e,t){this.workGroupSize=[64,1,1],this.variableNames=["x"],this.uniforms="reduceSize : i32;",this.size=!0,this.inputShape=[e.batchSize,e.inSize];const[n]=tf.computeOutAndReduceShapes(this.inputShape,[1]);this.outputShape=0===n.length?[1]:n,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,[1,1,1]),this.reduceType=t,this.shaderKey=`reduce_${t}`}getUserCode(){let e="",t="0.0";"min"===this.reduceType||"max"===this.reduceType?(e=`\n         if (isNanCustom(candidate)) {\n          bestValue = uniforms.NAN;\n         } elseif (!isNanCustom(bestValue) && candidate ${"min"===this.reduceType?"<":">"} bestValue)\n           {  bestValue = candidate; }`,t="f32(x.numbers[offset])"):"sum"===this.reduceType||"mean"===this.reduceType?e=" bestValue = bestValue + candidate; ":"prod"===this.reduceType&&(e=" bestValue = bestValue * candidate; ",t="1.0");const n="mean"===this.reduceType?"setOutputFlat(outputIndex, bestValue / f32(uniforms.reduceSize));":"setOutputFlat(outputIndex, bestValue);";return`\n       fn DIV_CEIL(a : u32, b : u32) -> u32 {\n        return ((a - 1u) / b + 1u);\n       }\n\n       \n         var<workgroup> xBestValues : array<f32, ${this.workGroupSize[0]}>;\n       \n       fn getOffset(outputIndex : i32) -> i32 {\n         let outputCoords = getCoordsFromFlatIndex(outputIndex);\n         let offset = ${1===this.outputShape.length?"outputCoords":"outputCoords[0]"} * uniforms.reduceSize;\n          return offset;\n       }\n       \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n         let outputIndex = index / i32(workGroupSizeX);\n         let offset = getOffset(outputIndex);\n         var bestValue = ${t};\n         let Length = uniforms.reduceSize;\n         let WorkPerThread = DIV_CEIL(u32(Length), workGroupSizeX);\n         for (var k = i32(localId.x); k < Length && outputIndex < uniforms.size;\n             k = k + i32(workGroupSizeX)) {\n           let candidate = f32(x.numbers[offset + k]);\n           ${e}\n         }\n         xBestValues[localId.x] = bestValue;\n         workgroupBarrier();\n\n         var reduceSize = min(u32(Length), workGroupSizeX);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (localId.x < currentSize) {\n            let candidate = xBestValues[localId.x + interval];\n            ${e}\n            xBestValues[localId.x] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (localId.x == 0u && outputIndex < uniforms.size) {\n          ${n}\n        }\n       }\n     `}}(n,a),u=r.runWebGPUProgram(l,[c],s,o);i.push(u),h=kU({inputs:{x:u},attrs:{shape:f},backend:r})}else{const t=r.tensorMap.get(c.dataId).values;switch(a){case"max":const n=YU(t,br.sizeFromShape(p),f,e.dtype);h=r.makeTensorInfo(f,e.dtype,n);break;case"prod":const{outVals:s,outShape:i,outDtype:o}=aV(c.shape,c.dtype,t,l);h=r.makeTensorInfo(i,o,s);break;default:throw new Error(`${a} CPU implementation is not yet supported.`)}}return i.forEach((e=>r.disposeData(e.dataId))),h}function dG(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;return cG(r,s,i,"sum",n)}var pG={kernelName:Ea,backendName:"webgpu",kernelFunc:dG};var hG={kernelName:Zt,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:i,summedDims:o,idDims:l}=tf.decodeEinsumEquation(r,s.length);tf.checkEinsumDimSizes(i.length,l,s);const{path:u,steps:c}=tf.getEinsumComputePath(o,l),d=c.length;let p=null,h=i.length;const f=[];for(let m=0;m<d;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:a}=tf.getEinsumPermutation(h,l[e]);let r;tf.isIdentityPermutation(t)?r=s[e]:(r=vV({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(r));const i=r.shape.slice();for(let e=0;e<a.length;++e)i.splice(a[e],0,1);br.arraysEqual(r.shape,i)||(r=kU({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===p?p=r:(p=lG({inputs:{a:r,b:p},backend:n}),f.push(p))}m<d-1&&(u[m]>=0&&(p=dG({inputs:{x:p},backend:n,attrs:{axis:u[m]-(i.length-h),keepDims:!1}}),f.push(p)),h--)}for(const m of f)m!==p&&n.disposeData(m.dataId);return p}},fG=_U({opType:yU.ELU}),mG={kernelName:Yt,backendName:"webgpu",kernelFunc:fG},gG=OU({opSnippet:dU.EQUAL,dtype:"bool",cpuKernelImpl:WU}),yG={kernelName:en,backendName:"webgpu",kernelFunc:gG},AG=_U({opType:yU.EXP,cpuKernelImpl:BU,dtype:"float32"}),xG={kernelName:tn,backendName:"webgpu",kernelFunc:AG};function bG(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let l=r;return r<0&&(br.assert(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),kU({inputs:{x:s},backend:a,attrs:{shape:o}})}var vG={kernelName:nn,backendName:"webgpu",kernelFunc:bG},wG=_U({opType:yU.EXPM1,cpuKernelImpl:UU}),kG={kernelName:an,backendName:"webgpu",kernelFunc:wG};function IG(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:s}=n;if(s=s||br.inferDtype(r),"string"===s){const e=br.getArrayFromDType(s,br.sizeFromShape(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{const e=new class{constructor(e){this.variableNames=[],this.outputShape=[],this.uniforms="value : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="fill"}getUserCode(){return"\n    \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n      if (index < uniforms.size) {\n        setOutputFlat(index, uniforms.value);\n      }\n    }\n  "}}(a),n=[{type:"float32",data:[r]}];return t.runWebGPUProgram(e,[],s,n)}}var SG={kernelName:sn,backendName:"webgpu",kernelFunc:IG},NG={kernelName:on,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,a=t,r=new class{constructor(e){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="flipLeftRight"}getUserCode(){return"\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromFlatIndex(index);\n          let coordX = uniforms.xShape[2] - coords[2] - 1;\n          let outputValue = getX(coords[0], coords[1], coordX, coords[3]);\n          setOutputFlat(index, outputValue);\n        }\n      }\n    "}}(n.shape);return a.runWebGPUProgram(r,[n],n.dtype)}},TG=_U({opType:yU.FLOOR,cpuKernelImpl:VU}),CG={kernelName:ln,backendName:"webgpu",kernelFunc:TG},EG=OU({opSnippet:dU.INT_DIV,dtype:"int32"}),RG={kernelName:un,backendName:"webgpu",kernelFunc:EG},FG=(e,t,n,a,r,s=!1)=>{const i=qB(a,{dtype:r.dtype,shape:r.shape},t,s),o=e.createShaderModule({code:i,label:t.constructor.name});return e.createComputePipeline({layout:n,compute:{module:o,entryPoint:"main"},label:t.constructor.name})};function $G(e,t,n,a="",r=""){return e.shaderKey+"_"+(e.workGroupSize?e.workGroupSize.join(","):"")+t.map((e=>e.length)).join(",")+n.join(",")+e.variableNames.join(",")+a+r}function MG(e){const{externalImage:t,backend:n,attrs:a,outShape:r,useImport:s}=e,{numChannels:i}=a,o=br.sizeFromShape(r),l=br.computeStrides(r),u=n.makeTensorInfo(r,"int32"),c=n.getFromPixelsProgram(s?"import":"copyExternal");c.updateOutputShape(r);const d=[u.shape],p=[u.dtype,s?"import":"copyExternal"],h=$G(c,d,p),f=c.getLayout(n.device),m=n.getAndSavePipeline(h,(()=>FG(n.device,c,f.pipelineLayout,[],u,!0)));c.setPipeline(m),s||n.queue.copyExternalImageToTexture({source:t,origin:{x:0,y:0}},{texture:c.makeInputTexture(n.device,r[1],r[0])},[r[1],r[0]]);const g=n.tensorMap.get(u.dataId);g.bufferInfo.buffer=n.acquireBuffer(g.bufferInfo.byteSize);const y=[o,i,...l,...c.dispatch];let A;if(c.setUniform(n.device,y),s){const e={source:t};A=n.device.importExternalTexture(e)}else A=c.inputTexture.createView();return n.runFromPixelsProgram(c,g.bufferInfo.buffer,f,A,u.dataId),u}var zG,_G={kernelName:nr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:s}=a;if(null==r)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");const i="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,l="undefined"!==typeof HTMLCanvasElement&&r instanceof HTMLCanvasElement||"undefined"!==typeof OffscreenCanvas&&r instanceof OffscreenCanvas,u="undefined"!==typeof ImageBitmap&&r instanceof ImageBitmap,[c,d]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],p=[d,c,s];if(Ze().getBool("WEBGPU_USE_IMPORT")&&i)return MG({externalImage:r,backend:n,attrs:a,outShape:p,useImport:!0});(i||o)&&(null==zG&&(zG=document.createElement("canvas").getContext("2d")),zG.canvas.width=c,zG.canvas.height=d,zG.drawImage(r,0,0,c,d),r=zG.canvas);if(u||l||i||o)return MG({externalImage:r,backend:n,attrs:a,outShape:p,useImport:!1});const h=r.data;let f=h;if(null!=s&&4!==s){f=new Uint8Array(r.width*r.height*s);const e=h.length;let t=0;for(let n=0;n<e;n++)n%4<s&&(f[t++]=h[n])}const m=n.makeTensorInfo(p,"int32");return n.tensorMap.get(m.dataId).values=new Int32Array(f),n.maybeReleaseBuffer(m.dataId),n.uploadToGPU(m.dataId),m}};var OG={kernelName:cn,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a,scale:r,offset:s,mean:i,variance:o}=e,{varianceEpsilon:l}=t,u=n,c=[a,i,o];let d=null;null!=s&&(d=s.shape,c.push(s));let p=null;null!=r&&(p=r.shape,c.push(r));const h=new class{constructor(e,t,n,a,r){this.uniforms="varianceEpsilon : f32;",this.workGroupSize=[128,1,1],this.size=!0,this.variableNames=["x","mean","variance"],tf.assertAndGetBroadcastShape(e,t),tf.assertAndGetBroadcastShape(e,n),this.outputShape=e,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),null!=a&&(tf.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset")),null!=r&&(tf.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale")),this.offsetShape=a,this.scaleShape=r,this.shaderKey="batchNorm"}getUserCode(){let e="0.0";null!=this.offsetShape&&(e="getOffsetAtOutCoordsByGlobalIndex(index)");let t="1.0";return null!=this.scaleShape&&(t="getScaleAtOutCoordsByGlobalIndex(index)"),`\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size)\n        {\n          let xValue = getXAtOutCoordsByGlobalIndex(index);\n          let meanValue = getMeanAtOutCoordsByGlobalIndex(index);\n          let varianValue = getVarianceAtOutCoordsByGlobalIndex(index);\n          let offsetValue = ${e};\n          let scaleValue = ${t};\n          let inv = scaleValue * inverseSqrt(varianValue + f32(uniforms.varianceEpsilon));\n          setOutputFlat(index,dot(vec3<f32>(xValue, -meanValue, offsetValue), vec3<f32>(inv, inv, 1.0)));\n        }\n      }\n  `}}(a.shape,i.shape,o.shape,d,p),f=[{type:"float32",data:[l]}];return u.runWebGPUProgram(h,c,a.dtype,f)}};var DG={kernelName:sr,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=a,m=tf.convertConv2DDataFormat(c),g=tf.computeConv2DInfo(r.shape,s.shape,l,d,u,p,!1,m),y=null!=i,A=null!=o;let x;if(1===g.filterHeight&&1===g.filterWidth&&1===g.dilationHeight&&1===g.dilationWidth&&1===g.strideHeight&&1===g.strideWidth&&("SAME"===g.padInfo.type||"VALID"===g.padInfo.type))return jV({x:r,filter:s,convInfo:g,backend:n,bias:i,activation:h,preluActivationWeights:o,leakyreluAlpha:f});const b=Ze().getBool("WEBGPU_USE_NAIVE_CONV2D"),v=g.inChannels%4===0&&g.outChannels%4===0,w=[g.padInfo.top,g.padInfo.left],k=[{type:"int32",data:[g.filterHeight,g.filterWidth]},{type:"int32",data:[...w]},{type:"int32",data:[g.strideHeight,g.strideWidth]},{type:"int32",data:[g.dilationHeight,g.dilationWidth]}];if(b)x=new ZV(g,y,h,A);else{x=v?new XV(g,y,h,A):new KV(g,y,h,A);const e=g.outShape[1]*g.outShape[2],t=g.outShape[3],n=g.filterHeight*g.filterWidth*g.inShape[3];k.push({type:"int32",data:[e]},{type:"int32",data:[t]},{type:"int32",data:[n]})}const I=[r,s];return y&&I.push(i),A&&I.push(o),n.runWebGPUProgram(x,I,r.dtype,k)}};var PG={kernelName:ir,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:d,activation:p}=a;let h=c;null==h&&(h=[1,1]),br.assert(tf.eitherStridesOrDilationsAreOne(l,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${h}'`));const f=tf.computeConv2DInfo(r.shape,s.shape,l,h,u,d,!0),m=[r,s],g=null!=i,y=null!=o;g&&m.push(i),y&&m.push(o);const A=[{type:"int32",data:[f.padInfo.top,f.padInfo.left]},{type:"int32",data:[f.strideHeight,f.strideWidth]},{type:"int32",data:[f.dilationHeight,f.dilationWidth]},{type:"int32",data:[f.inHeight,f.inWidth]}];let x;return 1===f.batchSize&&f.inHeight===f.outHeight&&f.inWidth===f.outWidth&&1===f.strideHeight&&1===f.strideWidth&&f.filterHeight===f.filterWidth&&f.inChannels===f.outChannels&&3===f.filterHeight&&f.inChannels%4===0?x=new sG(f,g,p,y):(x=new iG(f,g,p,y),A.push({type:"int32",data:[f.filterHeight]},{type:"int32",data:[f.filterWidth]},{type:"int32",data:[f.outChannels/f.inChannels]})),n.runWebGPUProgram(x,m,"float32",A)}};var LG={kernelName:pn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,i=s[s.length-1],o=br.sizeFromShape(a.shape),[l,u,c,d]=tf.prepareAndValidate(a,r),p=kU({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),h=kU({inputs:{x:a},backend:n,attrs:{shape:[br.sizeFromShape(a.shape)/c,c]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),s=GU(e,t,a.dtype,u,i,c,d,a.shape,o);return n.makeTensorInfo(l,a.dtype,s.values)}const f=new class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey=`gathernd_${e}`,this.sliceDim=e,this.uniforms=`sliceDim : i32; strides : ${HB(e)};`}getUserCode(){let e;return e=this.sliceDim>1?"uniforms.strides[j]":"uniforms.strides",`\n        \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromFlatIndex(index);\n          var flattenIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexTemp = i32(round(getIndices(coords[0], j)));\n            let strideNum = ${e};\n            flattenIndex = flattenIndex + indexTemp * strideNum;\n          }\n\n          setOutputFlat(index, getA(flattenIndex, coords[1]));\n        }\n      }\n      `}}(i,[u,c]),m=[{type:"int32",data:[i]},{type:"int32",data:d}],g=n.runWebGPUProgram(f,[h,p],h.dtype,m),y=kU({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeData(p.dataId),n.disposeData(h.dataId),n.disposeData(g.dataId),y}};function WG(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a,l=br.parseAxisParam(i,r.shape)[0],u=tf.segment_util.collectGatherOpShapeInfo(r,s,l,o),c=br.sizeFromShape(s.shape),d=[],p=kU({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),h=kU({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});d.push(p),d.push(h);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,s])){const e=n.tensorMap.get(h.dataId).values,t=Mi(h.shape,h.dtype,e),a=n.tensorMap.get(p.dataId).values,r=Mi(p.shape,p.dtype,a),s=HU(r,t,f);return d.forEach((e=>n.disposeData(e.dataId))),n.makeTensorInfo(u.outputShape,s.dtype,s.values)}const m=new class{constructor(e,t){this.variableNames=["A","indices"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e.slice(),this.aShape=e,this.outputShape=t,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="gather"}getUserCode(){return`\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromFlatIndex(index);\n          setOutputFlat(index, getA(${function(e,t="int"){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e.length;r++)2===r?a.push(`${t}(getIndices(resRC.x, resRC.z))`):a.push(`${n[r]}`);return a.join()}(this.aShape,"i32")}));\n        }\n      }\n    `}}(p.shape,f),g=n.runWebGPUProgram(m,[p,h],p.dtype);d.push(g);const y=kU({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return d.forEach((e=>n.disposeData(e.dataId))),y}var BG={kernelName:dn,backendName:"webgpu",kernelFunc:WG},UG=OU({opSnippet:dU.GREATER,cpuKernelImpl:qU,dtype:"bool"}),VG={kernelName:hn,backendName:"webgpu",kernelFunc:UG},GG=OU({opSnippet:dU.GREATER_EQUAL,dtype:"bool",cpuKernelImpl:jU}),HG={kernelName:fn,backendName:"webgpu",kernelFunc:GG},jG=OU({opSnippet:dU.LESS,dtype:"bool",cpuKernelImpl:KU}),qG={kernelName:wn,backendName:"webgpu",kernelFunc:jG},XG=OU({opSnippet:dU.LESS_EQUAL,dtype:"bool",cpuKernelImpl:XU}),KG={kernelName:kn,backendName:"webgpu",kernelFunc:XG},ZG=_U({opType:yU.LOG,cpuKernelImpl:ZU}),YG={kernelName:Sn,backendName:"webgpu",kernelFunc:ZG},JG=OU({opSnippet:dU.LOGICAL_AND,dtype:"bool"}),QG={kernelName:Tn,backendName:"webgpu",kernelFunc:JG},eH=_U({opType:yU.LOGICAL_NOT}),tH={kernelName:Cn,backendName:"webgpu",kernelFunc:eH};function nH(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a;return cG(r,s,i,"max",n)}var aH={kernelName:Mn,backendName:"webgpu",kernelFunc:nH},rH=OU({opSnippet:dU.MAX,cpuKernelImpl:JU}),sH={kernelName:zn,backendName:"webgpu",kernelFunc:rH};var iH={kernelName:_n,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a,u=tf.computePool2DInfo(r.shape,s,i,1,o,l);let c;const d=[];if(1===u.filterHeight&&1===u.filterWidth){if(br.arraysEqual(u.inShape,u.outShape))return RU({inputs:{x:r},backend:n});c=new NV(u),d.push({type:"int32",data:[u.strideHeight,u.strideWidth]})}else c=new SV(u,"max"),d.push({type:"int32",data:[u.strideHeight,u.strideWidth]},{type:"int32",data:[u.padInfo.top,u.padInfo.left]},{type:"int32",data:[u.dilationHeight,u.dilationWidth]},{type:"int32",data:[u.inHeight,u.inWidth]},{type:"int32",data:[u.effectiveFilterHeight,u.effectiveFilterWidth]});return n.runWebGPUProgram(c,[r],r.dtype,d)}};var oH={kernelName:Wn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{keepDims:s,axis:i}=a;return cG(r,i,s,"mean",n)}};var lH={kernelName:Bn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;return cG(r,s,i,"min",n)}},uH=OU({opSnippet:dU.MIN,cpuKernelImpl:QU}),cH={kernelName:Un,backendName:"webgpu",kernelFunc:uH},dH={kernelName:Vn,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:a}=e,{paddings:r,mode:s}=t,i=n,o=r.map((e=>({type:"int32",data:[e[0],e[1]]}))),l=new class{constructor(e,t,n){this.uniforms="",this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.xShape=e,t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>;`})),this.offset="reflect"===n?0:1,this.shaderKey=`mirrorPad_${n}`}getUserCode(){const e=this.xShape.length,t=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),n=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(","),a=1===e?"start":"start[i]",r=1===e?"end":"end[i]",s=1===e?"outC":"outC[i]",i=HB(e),o=e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords";return`\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let start = ${i}(${t});\n          let end = ${i}(${n});\n          var outC = getCoordsFromFlatIndex(index);\n          for (var i = 0; i < ${e}; i = i + 1) {\n            if (${s} < ${a}) {\n              ${s} = ${a} * 2 - ${s} - ${this.offset};\n            } elseif(${s} >= ${r}) {\n              ${s} = (${r} - 1) * 2 - ${s} + ${this.offset};\n            }\n          }\n          let coords = outC - start;\n          setOutputFlat(index, getX(${o}));\n        }\n      }\n    `}}(a.shape,r,s);return i.runWebGPUProgram(l,[a],a.dtype,o)}};var pH={kernelName:qn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.tensorMap.get(a.dataId),[t,r]=tV(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}const r=new zU(a.shape,yU.NEG);return n.runWebGPUProgram(r,[a],a.dtype)}};var hH={kernelName:Kn,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a,u=n.readSync(r.dataId),c=n.readSync(s.dataId),{selectedIndices:d}=nm.nonMaxSuppressionV3Impl(u,c,i,o,l);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}};var fH={kernelName:Yn,backendName:"webgpu",kernelFunc:function(e){console.warn("tf.nonMaxSuppression() in webgpu locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a,c=n.readSync(r.dataId),d=n.readSync(s.dataId),p=i,h=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=nm.nonMaxSuppressionV5Impl(c,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};function mH(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=_V({inputs:{input:a},backend:n}),t=mH({inputs:{x:e},backend:n}),r=BV({inputs:{input:a},backend:n}),s=mH({inputs:{x:r},backend:n}),i=$U({inputs:{real:t,imag:s},backend:n});return n.disposeData(e.dataId),n.disposeData(t.dataId),n.disposeData(r.dataId),n.disposeData(s.dataId),i}return IG({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}var gH={kernelName:er,backendName:"webgpu",kernelFunc:mH};var yH={kernelName:Jn,backendName:"webgpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=_V({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=BV({inputs:{input:r},backend:a}),i=mH({inputs:{x:s},backend:a}),o=$U({inputs:{real:n,imag:i},backend:a});return a.disposeData(t.dataId),a.disposeData(n.dataId),a.disposeData(s.dataId),a.disposeData(i.dataId),o}return IG({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};var AH={kernelName:ea,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return bG({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{br.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),br.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=GV({inputs:t.map((e=>{const t=bG({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeData(e.dataId))),l}},xH=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;if(s.every((e=>br.arraysEqual(e,[0,0]))))return RU({inputs:{x:r},backend:n});if(0===br.sizeFromShape(r.shape)){return IG({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+r.shape[t]+e[1])),value:i,dtype:r.dtype}})}const o=[{type:"float32",data:[i]}];s.map((e=>o.push({type:"int32",data:[e[0],e[1]]})));const l=new class{constructor(e,t){this.variableNames=["x"],this.uniforms="constantValue : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1])),this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),t.map(((e,t)=>{this.uniforms+=` pad${t} : vec2<i32>;`})),this.xShape=e,this.shaderKey="pad"}getUserCode(){const e=this.xShape.length,t=HB(e),n=this.xShape.map(((e,t)=>`uniforms.pad${t}[0]`)).join(","),a=this.xShape.map(((t,n)=>`uniforms.pad${n}[0] + uniforms.xShape${e>1?`[${n}]`:""}`)).join(",");return`\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let start = ${e>1?`${t}(${n})`:`${n}`};\n          let end = ${e>1?`${t}(${a})`:`${a}`};\n          let outC = getCoordsFromFlatIndex(index);\n\n          if (${e>1?"any(outC < start)":"outC < start"} || ${e>1?"any(outC >= end)":"outC >= end"}) {\n            setOutputFlat(index, uniforms.constantValue);\n          } else {\n            let coords = outC - start;\n            setOutputFlat(index, getX(${e>1?["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,e):"coords"}));\n          }\n        }\n      }\n    `}}(r.shape,s);return n.runWebGPUProgram(l,[r],r.dtype,o)},bH={kernelName:ta,backendName:"webgpu",kernelFunc:xH},vH=OU({opSnippet:dU.POW}),wH={kernelName:aa,backendName:"webgpu",kernelFunc:vH};var kH={kernelName:ra,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=new CU(dU.PRELU,a.shape,r.shape);return n.runWebGPUProgram(s,[a,r],"float32")}};var IH={kernelName:sa,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;return cG(r,s,i,"prod",n)}},SH={kernelName:ia,backendName:"webgpu",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=rV(a,r,s,i);return t.makeTensorInfo([o.length],i,o)}},NH=OU({opSnippet:dU.DIV}),TH={kernelName:Kt,backendName:"webgpu",kernelFunc:NH},CH=_U({opType:yU.RELU}),EH={kernelName:ua,backendName:"webgpu",kernelFunc:CH},RH=_U({opType:yU.RELU6}),FH={kernelName:ma,backendName:"webgpu",kernelFunc:RH};var $H={kernelName:vn,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,i=[{type:"float32",data:[s]}],o=new zU(r.shape,yU.LEAKYRELU);return o.uniforms="alpha : f32;",n.runWebGPUProgram(o,[r],"float32",i)}};var MH={kernelName:ha,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,size:i,halfPixelCenters:o}=a,[l,u]=i,c=[{type:"float32",data:[s&&l>1?1:0,s&&u>1?1:0]},{type:"float32",data:[o?.5:0]}],d=new class{constructor(e,t,n){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>; halfPixelCenters : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="resizeBilinear"}getUserCode(){return"\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n        let coords = getCoordsFromFlatIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC =\n            (vec2<f32>(rc) + vec2<f32>(uniforms.halfPixelCenters)) *\n            effectiveInputOverOutputRatioRC - vec2<f32>(uniforms.halfPixelCenters);\n\n          // Compute the four integer indices.\n          let sourceFloorRC = vec2<i32>(sourceFracIndexRC);\n          let sourceCeilRC = vec2<i32>(\n            min(vec2<f32>(uniforms.xShape.yz) - vec2<f32>(1.0), ceil(sourceFracIndexRC)));\n\n          let topLeft = getX(b, sourceFloorRC.x, sourceFloorRC.y, d);\n          let bottomLeft = getX(b, sourceCeilRC.x, sourceFloorRC.y, d);\n          let topRight = getX(b, sourceFloorRC.x, sourceCeilRC.y, d);\n          let bottomRight = getX(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n          let fracRC = sourceFracIndexRC - vec2<f32>(sourceFloorRC);\n\n          let top = topLeft + (topRight - topLeft) * fracRC.y;\n          let bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n          let newValue = top + (bottom - top) * fracRC.x;\n\n          setOutputFlat(index, newValue);\n        }\n      }\n    "}}(r.shape,l,u);return n.runWebGPUProgram(d,[r],"float32",c)}};var zH={kernelName:da,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,u]=o,c=[{type:"float32",data:[s&&l>1?1:0,s&&u>1?1:0]},{type:"float32",data:[s?.5:0]}],d=new class{constructor(e,t,n,a){this.variableNames=["x"],this.uniforms="adjustHeightWidth : vec2<f32>; roundBase : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=[e[0],t,n,e[3]],this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.halfPixelCenters=a,this.shaderKey=`resizeNearest_${a}`}getUserCode(){let e;return e=this.halfPixelCenters?"max((vec2<f32>(rc) + vec2<f32>(0.5)) * effectiveInputOverOutputRatioRC, vec2<f32>(0.0))":"vec2<f32>(rc) * effectiveInputOverOutputRatioRC",`\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let coords = getCoordsFromFlatIndex(index);\n          let b = coords[0];\n          let d = coords[3];\n          let rc = coords.yz;\n\n          let effectiveInSize = vec2<f32>(\n            f32(uniforms.xShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.xShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveOutSize = vec2<f32>(\n            f32(uniforms.outShape.y) - uniforms.adjustHeightWidth[0],\n            f32(uniforms.outShape.z) - uniforms.adjustHeightWidth[1]);\n\n          let effectiveInputOverOutputRatioRC =\n              effectiveInSize / effectiveOutSize;\n\n          // Fractional source index\n          let sourceFracIndexRC = ${e};\n\n          // Compute the coordinators of nearest neighbor point.\n          let inputShapeRC = vec2<f32>(f32(uniforms.xShape.y), f32(uniforms.xShape.z));\n          let sourceNearestRC = vec2<i32>(\n            min(inputShapeRC - 1.0, floor(sourceFracIndexRC + uniforms.roundBase)));\n          let newValue = getX(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n          setOutputFlat(index, newValue);\n        }\n      }\n    `}}(r.shape,l,u,i);return n.runWebGPUProgram(d,[r],r.dtype,c)}},_H={kernelName:ar,backendName:"webgpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:a}=e,{radians:r,fillValue:s,center:i}=t,o=n,l=new class{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="centerX : f32; centerY : f32; sinRadians : f32;\n          cosRadians : f32;",this.shaderKey="rotate",this.outputShape=e,"number"===typeof t?(this.uniforms+=" fillValue : f32;",this.fillSnippet="var outputValue = uniforms.fillValue;",this.shaderKey+="_float"):(this.uniforms+=" fillValue : vec3<f32>;",this.fillSnippet="var outputValue = uniforms.fillValue[coords[3]];",this.shaderKey+="_vec3")}getUserCode(){return`\n        \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n          if (index < uniforms.size) {\n            let coords = getCoordsFromFlatIndex(index);\n            let coordXFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.cosRadians - (f32(coords[1]) - uniforms.centerY) *\n                uniforms.sinRadians;\n            let coordYFloat = (f32(coords[2]) - uniforms.centerX) *\n                uniforms.sinRadians + (f32(coords[1]) - uniforms.centerY) *\n                uniforms.cosRadians;\n            let coordX = i32(round(coordXFloat + uniforms.centerX));\n            let coordY = i32(round(coordYFloat + uniforms.centerY));\n            ${this.fillSnippet}\n            if(coordX >= 0 && coordX < uniforms.xShape[2] && coordY >= 0 &&\n                coordY < uniforms.xShape[1]) {\n              outputValue = getX(coords[0], coordY, coordX, coords[3]);\n            }\n            setOutputFlat(index, outputValue);\n          }\n        }\n      `}}(a.shape,s),[u,c]=tf.getImageCenter(i,a.shape[1],a.shape[2]),d=[{type:"float32",data:[u]},{type:"float32",data:[c]},{type:"float32",data:[Math.sin(r)]},{type:"float32",data:[Math.cos(r)]}];"number"===typeof s?d.push({type:"float32",data:[Number.parseFloat(s.toFixed(2))]}):d.push({type:"float32",data:s});return o.runWebGPUProgram(l,[a],a.dtype,d)}},OH=_U({opType:yU.RSQRT,cpuKernelImpl:sV}),DH={kernelName:Aa,backendName:"webgpu",kernelFunc:OH};var PH={kernelName:xa,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:d}=tf.calculateShapes(s,r,i),p=[d/u,u];if(0===d)return n.makeTensorInfo(i,r.dtype);const h=kU({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=kU({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=f.dtype,g=IG({backend:n,attrs:{shape:p,value:0,dtype:m}}),y=[{type:"int32",data:[o]},{type:"int32",data:c},{type:"int32",data:[br.sizeFromShape(f.shape)]}],A=new class{constructor(e,t,n,a,r,s,i){this.variableNames=["updates","indices"],this.workGroupSize=[64,1,1],this.atomic=!0,this.outputShape=s,this.type=i,this.dispatchLayout=iU(e),this.dispatch=nU(this.dispatchLayout,e,this.workGroupSize),this.sliceDimGreaterThanOne=t>1,this.shaderKey=`scatter_${n}_${a}_${this.sliceDimGreaterThanOne}_${i}`;const o=HB(r.length);this.uniforms=`sliceDim : i32; strides: ${o}; size: i32;`,this.updatesRank=a,this.indicesRank=n}getUserCode(){let e="";1===this.indicesRank?e="coords[0]":2===this.indicesRank&&(e="coords[0], j");const t=`getIndices(${e})`,n=this.sliceDimGreaterThanOne?"uniforms.strides[j]":"uniforms.strides";let a="",r="",s="";return 1===this.updatesRank?(a="coords[0]",r="flattenedIndex",s="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> i32 {\n        return index;\n      }\n      "):2===this.updatesRank&&(a="coords[0], coords[1]",r="vec2<i32>(flattenedIndex, coords[1])",s="\n      fn getUpdatesCoordsFromFlatIndex(index : i32) -> vec2<i32> {\n        let d0 = index / uniforms.updatesShape[1];\n        let d1 = index - d0 * uniforms.updatesShape[1];\n        return vec2<i32>(d0, d1);\n      }\n      "),`\n    ${s}\n\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n        if (index < uniforms.size) {\n          let coords = getUpdatesCoordsFromFlatIndex(index);\n          var flattenedIndex = 0;\n          for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n            let indexInside = i32(round(${t}));\n            flattenedIndex = flattenedIndex + indexInside * ${n};\n          }\n          let updateValue = getUpdates(${a});\n          let flatIndex = getOutputFlatIndex(${r});\n\n         ${"int32"===this.type?"atomicAdd(&(result.numbers[flatIndex]), i32(updateValue));":"\n     var assumed = atomicLoad(&(result.numbers[flatIndex]));\n     var success = 0;\n     for (; success == 0;) {\n       let new = bitcast<f32>(assumed) + updateValue;\n       let newI32 = bitcast<i32>(new);\n       let resValue = atomicCompareExchangeWeak(&(result.numbers[flatIndex]), assumed, newI32);\n       assumed = resValue[0];\n       success = resValue[1];\n     }\n     "}\n        }\n      }`}}(f.shape,o,h.shape.length,f.shape.length,c,p,m),x=n.runWebGPUProgram(A,[f,h],m,y,g),b=kU({inputs:{x:x},backend:n,attrs:{shape:i}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(x.dataId),b}};var LH={kernelName:ba,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=new class{constructor(e,t,n){this.variableNames=["c","a","b"],this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=t,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.cRank=e,this.rank=n,this.shaderKey="select"}getUserCode(){let e,t;if(this.rank>4)throw Error(`Where for rank ${this.rank} is not yet supported`);if(1===this.rank)t="resRC",e="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],r=[];for(let e=0;e<this.outputShape.length;e++)r.push(`${n[e]}`),e<this.cRank&&a.push(`${n[e]}`);e=a.join(),t=r.join()}return`\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromFlatIndex(index);\n          let cVal = getC(${e});\n          if (cVal >= 1.0) {\n            setOutputFlat(index, getA(${t}));\n          } else {\n            setOutputFlat(index, getB(${t}));\n          }\n        }\n      }\n    `}}(a.shape.length,r.shape,r.shape.length);return n.runWebGPUProgram(i,[a,r,s],ds(r.dtype,s.dtype))}},WH=_U({opType:yU.SIGMOID}),BH={kernelName:Na,backendName:"webgpu",kernelFunc:WH},UH=_U({opType:yU.SIN}),VH={kernelName:ka,backendName:"webgpu",kernelFunc:UH},GH=_U({opType:yU.SINH}),HH={kernelName:Ia,backendName:"webgpu",kernelFunc:GH},jH=OU({opSnippet:dU.SUB,cpuKernelImpl:cV,supportsComplex:!0}),qH={kernelName:Ga,backendName:"webgpu",kernelFunc:jH};var XH={kernelName:$a,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=br.parseAxisParam([s],r.shape),o=nH({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=tf.expandShapeToKeepDim(o.shape,i),u=kU({inputs:{x:o},backend:n,attrs:{shape:l}}),c=jH({inputs:{a:r,b:u},backend:n}),d=AG({inputs:{x:c},backend:n}),p=dG({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),h=kU({inputs:{x:p},backend:n,attrs:{shape:l}}),f=NH({inputs:{a:d,b:h},backend:n});return n.disposeData(o.dataId),n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(d.dataId),n.disposeData(p.dataId),n.disposeData(h.dataId),f}},KH={kernelName:Ra,backendName:"webgpu",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;br.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGPU backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let y=1+s.length;y<r.shape.length;++y)l.push([0,0]);const u=[],c=xH({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),d=tf.getReshaped(c.shape,s,o,!1),p=tf.getPermuted(d.length,s.length,!1),h=tf.getReshapedPermuted(c.shape,s,o,!1),f=kU({inputs:{x:c},backend:n,attrs:{shape:d}}),m=vV({inputs:{x:f},backend:n,attrs:{perm:p}}),g=kU({inputs:{x:m},backend:n,attrs:{shape:h}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeData(e.dataId))),g}};var ZH={kernelName:Da,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:u,strides:c,outputSize:d}=tf.calculateShapes(s,r,o),p=[{type:"int32",data:[u]},{type:"int32",data:[l]},{type:"int32",data:c}],h=new class{constructor(e,t,n,a,r,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.workGroupSize=[64,1,1],this.workPerThread=4,this.size=!0,this.outputShape=s,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);const o=t>1;this.shaderKey=`scatter_${n}_${a}_${o}`;const l=HB(r.length);this.uniforms=`updateSize : i32; sliceDim : i32; strides: ${l};`;let u="";1===n?u="i":2===n&&(u="i, j"),this.indicesSnippet=`getIndices(${u})`;let c="";1===a?c="i":2===a&&(c="i, coords[1]"),this.updatesSnippet=`getUpdates(${c})`,this.strideString=o?"uniforms.strides[j]":"uniforms.strides"}getUserCode(){return`\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n\n        let globalIndex = index * ${this.workPerThread};\n        if (globalIndex < uniforms.size) {\n          var sum = vec4<f32>(0.0);\n          var found = vec4<bool>(false);\n          for (var i = 0; i < uniforms.updateSize; i = i + 1) {\n            var flattenedIndex = 0;\n            for (var j = 0; j < uniforms.sliceDim; j = j + 1) {\n              let indexInside = i32(round(${this.indicesSnippet}));\n              flattenedIndex = flattenedIndex + indexInside * ${this.strideString};\n            }\n            for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {\n              let curIndex = globalIndex + innerIndex;\n              let coords = getCoordsFromFlatIndex(curIndex);\n              if (flattenedIndex == coords[0]) {\n                sum[innerIndex] = sum[innerIndex] + ${this.updatesSnippet};\n                found[innerIndex] = true;\n              }\n            }\n          }\n          for (var innerIndex = 0; innerIndex < ${this.workPerThread}; innerIndex = innerIndex + 1) {\n            let curIndex = globalIndex + innerIndex;\n            if (curIndex < uniforms.size)\n            {\n              setOutputFlat(curIndex, mix(getDefaultValue(), sum[innerIndex], f32(found[innerIndex])));\n            }\n          }\n        }\n      }`}}(u,l,r.shape.length,s.shape.length,c,[d,1],!1),f=n.runWebGPUProgram(h,[s,r,i],s.dtype,p),m=kU({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeData(f.dataId),m}};var YH={kernelName:Fa,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=br.parseAxisParam(i,r.shape)[0],l=tf.prepareSplitSize(r,s,o),u=r.shape.length,c=new Array(u).fill(0),d=r.shape.slice();return l.map((e=>{const t=[...d];t[o]=e;const a=RV({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,a}))}},JH=_U({opType:yU.SQRT}),QH={kernelName:Ca,backendName:"webgpu",kernelFunc:JH},ej={kernelName:La,backendName:"webgpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,a=t,r=new zU(n.shape,yU.SQUARE);return a.runWebGPUProgram(r,[n],n.dtype)}},tj=OU({opSnippet:dU.SQUARED_DIFFERENCE}),nj={kernelName:Pa,backendName:"webgpu",kernelFunc:tj};var aj={kernelName:Wa,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:p}=a,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:A,end:x,strides:b}=Io.sliceInfo(r.shape,s,i,o,l,u,c,d,p);let v;if(m)v=kU({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){br.assert(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=Io.computeOutShape(A,x,b),t=RV({inputs:{x:r},backend:n,attrs:{begin:A,size:e}});v=kU({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeData(t.dataId)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=Mi(r.shape,r.dtype,e),a=lV(h,t,b,A);v=n.makeTensorInfo(f,r.dtype,a.values)}else{const e=new class{constructor(e){this.variableNames=["x"],this.workPerThread=1,this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]);const t=HB(this.outputShape.length);this.uniforms=`begin : ${t};  strides : ${t}; `,this.shaderKey="stridedSlice"}getUserCode(){let e="";if(1===this.outputShape.length)e="coords * uniforms.strides + uniforms.begin";else{let t=0;e=this.outputShape.map(((e,n)=>(t++,1===this.outputShape.length?`coords * uniforms.strides[${n}] + uniforms.begin[${n}]`:`coords[${t-1}] * uniforms.strides[${n}] + uniforms.begin[${n}]`))).join(",")}return`\n       \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n         if (index < uniforms.size) {\n           let coords = getCoordsFromFlatIndex(index);\n           setOutputFlat(index, getX(${e}));\n         }\n       }\n     `}}(h),t=[{type:"int32",data:A},{type:"int32",data:b}],a=n.runWebGPUProgram(e,[r],r.dtype,t);v=kU({inputs:{x:a},backend:n,attrs:{shape:f}}),n.disposeData(a.dataId)}}return v}};var rj={kernelName:Ba,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:c,dataSplits:d}=t,p=n.readSync(c.dataId),h=n.readSync(d.dataId),[f,m]=uV(p,h,r,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}},sj=_U({opType:yU.TANH}),ij={kernelName:ja,backendName:"webgpu",kernelFunc:sj};var oj={kernelName:qa,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if(n.shouldExecuteOnCPU([r])||"string"===r.dtype||r.shape.length>=5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>br.decodeString(e))):e,a=Mi(r.shape,r.dtype,t),i=dV(a,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new class{constructor(e,t){this.variableNames=["A"],this.workGroupSize=[64,1,1],this.size=!0;const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.rank=this.outputShape.length,this.shaderKey="tile"}getUserCode(){return`\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        if (index < uniforms.size) {\n          let resRC = getCoordsFromFlatIndex(index);\n          setOutputFlat(index, getA(${function(e,t=""){if(e>=5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`(resRC % ${t}aShape)`;const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e;r++)a.push(`(${n[r]} % ${t}aShape[${r}])`);return a.join()}(this.rank,"uniforms.")}));\n        }\n      }\n    `}}(r.shape,s);return n.runWebGPUProgram(i,[r],r.dtype)}},lj=class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32; firstPass : i32; k : i32;",this.shaderKey="merge"}getUserCode(){return"\n        \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n          if (index < uniforms.size) {\n            let outC = getCoordsFromFlatIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // The output size is half of the previous size.\n            // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _\n            // (k=4), we only need to output the indices at positions |, the\n            // indices at positions _ can be thrown away, see Figure5(b) After\n            // Phase 2 (Merge phase) in the Bitonic Top K paper referenced\n            // above.\n            // For example, the paper shows we only need to output the orange\n            // bars. The output sequence should look like this | | | | | | | |.\n            // Because the sequence is halved, to map the output index back to\n            // the previous sequence to find the corresponding value, we need\n            // to double the index. When we double the index, we basically\n            // interpolate a position, so 2i looks like\n            // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k\n            // position of each 2k positions by - elemIdx % k. E.g. for output\n            // at index 4,5,6,7, we want to get the corresponding element at\n            // original index 8,9,10,11, for output at index 8,9,10,11,\n            // we want to get the corresponding element at original index\n            // 16,17,18,19, so on and so forth.\n\n            var i = 0;\n            if (elemIdx < uniforms.k) {\n              i = elemIdx;\n            } else {\n              i = elemIdx * 2 - elemIdx % uniforms.k;\n            }\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.k;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.k));\n            }\n\n            let x0 = getX(batch, i0);\n            var x1 = f32(0.0);\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = x0;\n            }\n\n            if (x0 >= x1) {\n              setOutputFlat(index, f32(i0));\n            } else {\n              setOutputFlat(index, f32(i1));\n            }\n          }\n        }\n      "}};function uj(e,t){null!==t&&e.disposeData(t.dataId)}function cj(e){let t=1;for(;t<e;)t*=2;return t}var dj={kernelName:Xa,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a,o=r.shape,l=o[o.length-1];if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),[t,a]=pV(e,o,r.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return o[o.length-1]=0,[n.makeTensorInfo(o,r.dtype,[]),n.makeTensorInfo(o,"int32",[])];if(1===l)return[r,IG({attrs:{shape:o,dtype:"int32",value:0},backend:n})];const u=br.sizeFromShape(o)/l,c=kU({inputs:{x:r},attrs:{shape:[u,l]},backend:n}),d=cj(s),p=cj(l);let h=null;const f=()=>null===h?[c,c]:[c,h],m=(e,t,a)=>{const r=f(),s=new class{constructor(e){this.variableNames=["x","indices"],this.workGroupSize=[256,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.uniforms="inputSize : i32; firstPass : i32; negativeInf : f32;\n        dir : i32; inc : i32;",this.shaderKey="swap"}getUserCode(){return"\n        \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n          if (index < uniforms.size) {\n            let outC = getCoordsFromFlatIndex(index);\n            let batch = outC[0];\n            let elemIdx = outC[1];\n            // We compare elements pair-wise within a group of size 2 * inc.\n            // The comparing rule for each group alternates between ascending\n            // and descending. Within each group, we compare each pair at\n            // positions i and i+inc. To decide whether an element at position i\n            // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n            // inc, it is in the first half of the group, we denote it as x0,\n            // otherwise we denote it as x1.\n            // For example, as shown in the Bitonic top K paper referenced\n            // above, Figure5(a) shows that element[1] is in the second half of\n            // the group when group size is 2, but it is in the first half of\n            // the group when group size is 4.\n            let isFirstInPair = elemIdx % (2 * uniforms.inc) < uniforms.inc;\n            var i = 0;\n            if (isFirstInPair) {\n              i = elemIdx;\n            } else {\n              i = elemIdx - uniforms.inc;\n            }\n\n            var i0 = 0;\n            if (uniforms.firstPass == 1) {\n              i0 = i;\n            } else {\n              i0 = i32(getIndices(batch, i));\n            }\n\n            var i1 = 0;\n            if (uniforms.firstPass == 1) {\n              i1 = i + uniforms.inc;\n            } else {\n              i1 = i32(getIndices(batch, i + uniforms.inc));\n            }\n\n            var x0 = f32(0.0);\n            var x1 = f32(0.0);\n            if (i0 < uniforms.inputSize) {\n              x0 = getX(batch, i0);\n            } else {\n              x0 = uniforms.negativeInf;\n            }\n            if (i1 < uniforms.inputSize) {\n              x1 = getX(batch, i1);\n            } else {\n              x1 = uniforms.negativeInf;\n            }\n\n            let reverse = elemIdx % (2 * uniforms.dir) >= uniforms.dir;\n            let isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n            if (reverse == isGreater) {\n              // Elements in opposite order of direction\n              let iTemp = i0;\n              i0 = i1;\n              i1 = iTemp;\n            }\n            if (isFirstInPair) {\n              setOutputFlat(index, f32(i0));\n            } else {\n              setOutputFlat(index, f32(i1));\n            }\n          }\n        }\n      "}}(a),i=[{type:"int32",data:[l]},{type:"int32",data:[null===h?1:0]},{type:"float32",data:[Number.NEGATIVE_INFINITY]},{type:"int32",data:[e]},{type:"int32",data:[t]}],o=h;h=n.runWebGPUProgram(s,r,"int32",i),uj(n,o)};for(let b=1;b<d;b*=2){const e=2*b;for(let t=b;t>=1;t/=2)m(e,t,[u,p])}for(let b=p;b>d;b/=2){const e=f(),t=new lj([u,b/2]),a=[{type:"int32",data:[l]},{type:"int32",data:[null===h?1:0]},{type:"int32",data:[d]}],r=h;h=n.runWebGPUProgram(t,e,"int32",a),uj(n,r);const s=d/2,i=2*s;for(let n=s;n>=1;n/=2)m(i,n,h.shape)}let g=h;h=RV({inputs:{x:h},backend:n,attrs:{begin:0,size:[u,s]}}),uj(n,g);let y=WG({inputs:{x:c,indices:h},backend:n,attrs:{axis:1,batchDims:1}});uj(n,c);const A=o.slice(0,-1);A.push(s),g=h,h=kU({inputs:{x:h},attrs:{shape:A},backend:n}),uj(n,g);const x=y;return y=kU({inputs:{x:y},attrs:{shape:A},backend:n}),uj(n,x),[y,h]}};var pj=[NU,gV,AV,xV,kV,IV,TV,CV,$V,DV,LV,WV,MU,HV,YV,JV,eG,nG,aG,rG,oG,hG,mG,yG,vG,xG,kG,SG,NG,_G,CG,RG,OG,DG,PG,LG,BG,VG,HG,FU,UV,qG,KG,YG,QG,tH,aH,sH,iH,oH,lH,cH,dH,uG,pH,hH,fH,zV,yH,AH,bH,kH,IH,wH,SH,OV,TH,EH,FH,$H,IU,MH,zH,_H,DH,PH,LH,BH,VH,HH,FV,aj,rj,XH,KH,YH,ZH,QH,ej,nj,qH,pG,ij,oj,dj,{kernelName:Ka,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=a,[c,d,p,h]=r.shape,[f,m]=null!=u?u:[d,p],g=[c,f,m,h],y=new class{constructor(e){this.variableNames=["Image","Transforms"],this.uniforms="interpolationModeId : i32; fillModeId : i32; fillValue : f32;",this.workGroupSize=[64,1,1],this.size=!0,this.outputShape=e,this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize),this.shaderKey="transform"}getUserCode(){return"\n          fn mapCoord(outCoord : f32, len : f32) -> f32{\n            var inCoord = outCoord;\n            if(uniforms.fillModeId == 2) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  if (inCoord < sz2) {\n                    inCoord = sz2 * f32(i32(f32(-inCoord / sz2))) +\n                    inCoord;\n                  }\n                  if (inCoord < -len) {\n                    inCoord = inCoord + sz2;\n                  } else {\n                    inCoord = -inCoord - 1.0;\n                  }\n                }\n              } elseif (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz2 = 2.0 * len;\n                  inCoord = inCoord - sz2 * f32(i32(f32(inCoord / sz2)));\n                  if (inCoord >= len) {\n                    inCoord = sz2 - inCoord - 1.0;\n                  }\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } elseif (uniforms.fillModeId == 3) {\n              if (inCoord < 0.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord + len * (f32(i32(f32(-inCoord / sz))) + 1.0);\n                }\n              } elseif (inCoord > len - 1.0) {\n                if (len <= 1.0) {\n                  inCoord = 0.0;\n                } else {\n                  let sz = len - 1.0;\n                  inCoord = inCoord - len * f32(i32(f32(inCoord / sz)));\n                }\n              }\n              return clamp(inCoord, 0.0, len - 1.0);\n            } elseif (uniforms.fillModeId == 4) {\n              return clamp(outCoord, 0.0, len - 1.0);\n            }\n            return outCoord;\n          }\n          fn readWithFillValue(batch : i32, coordY : i32, coordX : i32,\n            channel : i32) -> f32 {\n            var outputValue : f32;\n            if (0 <= coordY && coordY < uniforms.imageShape[1] && 0 <= coordX && coordX < uniforms.imageShape[2]) {\n                outputValue = getImage(batch, coordY, coordX, channel);\n            } else {\n              outputValue = uniforms.fillValue;\n            }\n            return outputValue;\n          }\n\n          \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n            if (index < uniforms.size) {\n              let coords = getCoordsFromFlatIndex(index);\n              var outputValue : f32;\n              let batch = coords[0];\n              let x = coords[2];\n              let y = coords[1];\n              let channel = coords[3];\n              let xf = f32(x);\n              let yf = f32(y);\n              let a1 = getTransforms(batch, 0);\n              let a2 = getTransforms(batch, 1);\n              let a3 = getTransforms(batch, 2);\n              let b1 = getTransforms(batch, 3);\n              let b2 = getTransforms(batch, 4);\n              let b3 = getTransforms(batch, 5);\n              let c1 = getTransforms(batch, 6);\n              let c2 = getTransforms(batch, 7);\n              let projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = uniforms.fillValue;\n              } else {\n                let inX = (a1 * xf + a2 * yf + a3) / projection;\n                let inY = (b1 * xf + b2 * yf + b3) / projection;\n                let mapX = mapCoord(inX, f32(uniforms.imageShape[2]));\n                let mapY = mapCoord(inY, f32(uniforms.imageShape[1]));\n\n                if (uniforms.interpolationModeId == 1) {\n                  let coordY = i32(round(mapY));\n                  let coordX = i32(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  let yFloor = floor(mapY);\n                  let xFloor = floor(mapX);\n                  let yCeil = yFloor + 1.0;\n                  let xCeil = xFloor + 1.0;\n                  let valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yFloor), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yFloor), i32(xCeil), channel);\n                  let valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, i32(yCeil), i32(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, i32(yCeil), i32(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutputFlat(index, outputValue);\n            }\n          }\n        "}}(g),A="nearest"===i?1:2;let x;switch(o){case"constant":x=1;break;case"reflect":x=2;break;case"wrap":x=3;break;case"nearest":x=4;break;default:x=1}const b=[{type:"int32",data:[A]},{type:"int32",data:[x]},{type:"float32",data:[l]}];return n.runWebGPUProgram(y,[r,s],"float32",b)}},wV,{kernelName:Ja,backendName:"webgpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const i=r,o=i.shape.length,l=r.shape[s],u=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==s&&(u[c++]=i.shape[m]);const d=[],p=new Array(o).fill(0),h=i.shape.slice();h[s]=1;const f=new Array(l);for(let m=0;m<f.length;m++){p[s]=m;const e=RV({inputs:{x:i},backend:n,attrs:{begin:p,size:h}}),t=kU({inputs:{x:e},backend:n,attrs:{shape:u}});f[m]=t,d.push(e)}return d.forEach((e=>n.disposeData(e.dataId))),f}},gH];for(const B0 of pj)fr(B0);function hj(e,t){return`${e}_${t}`}var fj=class{constructor(){this.outputShape=[0],this.variableNames=[],this.workGroupSize=[256,1,1],this.lastUniformData=[],this.inputTexture=null,this.layout=null,this.lastPixelSize={width:0,height:0},this.disposed=!1,this.shaderKey="fromPixels",this.useImport=!1}updateOutputShape(e){br.arraysEqual(this.outputShape,e)||(this.outputShape=e,this.workPerThread=e[2],this.dispatchLayout=iU(this.outputShape),this.dispatch=nU(this.dispatchLayout,this.outputShape,this.workGroupSize,[this.workPerThread,1,1]))}makeFromPixelsSource(){const e=this.useImport?"textureLoad(src, vec2<i32>(coords.yx));":"textureLoad(src, vec2<i32>(coords.yx), 0)";return`\n      [[binding(1), group(0)]] var src: ${this.useImport?"texture_external":"texture_2d<f32>"};\n\n      \n    \n  \n  [[stage(compute), workgroup_size(workGroupSizeX, workGroupSizeY, workGroupSizeZ)]]\n\n  fn main([[builtin(local_invocation_id)]] LocalId : vec3<u32>,\n          [[builtin(global_invocation_id)]] GlobalId : vec3<u32>,\n          [[builtin(num_workgroups)]] NumWorkgroups: vec3<u32>) {\n    localId = LocalId;\n    globalId = GlobalId;\n    numWorkgroups = NumWorkgroups;\n\n      let index = getGlobalIndex();\n\n        let flatIndexBase = index * uniforms.numChannels;\n        for (var i = 0; i < uniforms.numChannels; i = i + 1) {\n          let flatIndex = flatIndexBase + i;\n          if (flatIndex < uniforms.size) {\n            let coords = getCoordsFromFlatIndex(flatIndexBase);\n            let values = ${e};\n            result.numbers[flatIndex] = i32(floor(255.0 * values[i]));\n          }\n        }\n      }\n  `}getUserCode(){return this.makeFromPixelsSource()}setPipeline(e){this.pipeline=e}setUniform(e,t){if(!this.uniform){const n=e.createBuffer({size:4*t.length,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});this.uniform=n}!t||t.length===this.lastUniformData.length&&t.every(((e,t)=>e===this.lastUniformData[t]))||(e.queue.writeBuffer(this.uniform,0,new Uint32Array(t)),this.lastUniformData=t)}makeInputTexture(e,t,n){return this.inputTexture&&this.lastPixelSize.width===t&&this.lastPixelSize.height===n||(this.inputTexture&&this.inputTexture.destroy(),this.inputTexture=e.createTexture({size:[t,n],format:"rgba8unorm",usage:GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),this.lastPixelSize.width=t,this.lastPixelSize.height=n),this.inputTexture}dispose(){this.disposed||(this.uniform&&this.uniform.destroy(),this.inputTexture&&this.inputTexture.destroy(),this.disposed=!0)}getLayout(e){return null===this.layout&&(this.layout=this.createTextureLayout(e)),this.layout}createTextureLayout(e){const t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,texture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});const n=e.createBindGroupLayout({entries:t});return{bindGroupLayout:n,pipelineLayout:e.createPipelineLayout({bindGroupLayouts:[n]})}}},mj=class extends fj{constructor(){super(...arguments),this.layout=null,this.useImport=!0}getUserCode(){return this.makeFromPixelsSource()}getLayout(e){return null===this.layout&&(this.layout=this.createTextureImportLayout(e)),this.layout}createTextureImportLayout(e){const t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}}),t.push({binding:1,visibility:GPUShaderStage.COMPUTE,externalTexture:{}}),t.push({binding:2,visibility:GPUShaderStage.COMPUTE,buffer:{}});const n=e.createBindGroupLayout({entries:t});return{bindGroupLayout:n,pipelineLayout:e.createPipelineLayout({bindGroupLayouts:[n]})}}},gj=Ze().getNumber("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD"),yj=class extends Y{constructor(e,t=!1){if(super(),this.commandQueueOwnedIds=new WeakSet,this.tensorDisposalQueue=[],this.uniformDisposalQueue=[],this.disposed=!1,this.uploadWaitMs=0,this.downloadWaitMs=0,this.dispatchNumberInEncoder=0,!uU())throw new Error("WebGPU is not supported on this device");this.layoutCache={},this.pipelineCache={},this.device=e,this.queue=e.queue,this.currentCommandEncoder=null,this.currentComputePass=null,this.supportTimeQuery=t,this.bufferManager=new class{constructor(e){this.device=e,this.numUsedBuffers=0,this.numFreeBuffers=0,this.freeBuffers=new Map,this.usedBuffers=new Map,this.numBytesUsed=0,this.numBytesAllocated=0}acquireBuffer(e,t){const n=hj(e,t);if(this.freeBuffers.has(n)||this.freeBuffers.set(n,[]),this.usedBuffers.has(n)||this.usedBuffers.set(n,[]),this.numBytesUsed+=e,this.numUsedBuffers++,this.freeBuffers.get(n).length>0){this.numFreeBuffers--;const e=this.freeBuffers.get(n).shift();return this.usedBuffers.get(n).push(e),e}this.numBytesAllocated+=e;const a=this.device.createBuffer({size:e,usage:t});return this.usedBuffers.get(n).push(a),a}releaseBuffer(e,t,n){if(null==this.freeBuffers)return;const a=hj(t,n);this.freeBuffers.has(a)||this.freeBuffers.set(a,[]),this.freeBuffers.get(a).push(e),this.numFreeBuffers++,this.numUsedBuffers--;const r=this.usedBuffers.get(a),s=r.indexOf(e);if(s<0)throw new Error("Cannot release a buffer that was never provided by this buffer manager");r.splice(s,1),this.numBytesUsed-=t}getNumUsedBuffers(){return this.numUsedBuffers}getNumFreeBuffers(){return this.numFreeBuffers}reset(){this.freeBuffers=new Map,this.usedBuffers=new Map,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0}dispose(){null==this.freeBuffers&&null==this.usedBuffers||(this.freeBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.usedBuffers.forEach(((e,t)=>{e.forEach((e=>{e.destroy()}))})),this.freeBuffers=null,this.usedBuffers=null,this.numUsedBuffers=0,this.numFreeBuffers=0,this.numBytesUsed=0,this.numBytesAllocated=0)}}(this.device),this.tensorMap=new Z(this,cl()),this.supportTimeQuery&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:2})),Ze().getBool("WEBGPU_USE_PROFILE_TOOL")&&(this.dummyCanvas=document.createElement("canvas"),this.dummyCanvas.width=1,this.dummyCanvas.height=1,this.dummyContext=this.dummyCanvas.getContext("webgpu"),this.dummyContext.configure({device:e,format:"bgra8unorm"}),document.body.appendChild(this.dummyCanvas))}nextDataId(){return yj.nextDataId++}floatPrecision(){return 32}defaultGpuBufferUsage(){return GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}flushDisposalQueue(){this.tensorDisposalQueue.forEach((e=>{this.maybeReleaseBuffer(e),this.tensorMap.delete(e)})),this.uniformDisposalQueue.forEach((e=>this.bufferManager.releaseBuffer(e.buffer,e.byteSize,e.usage))),this.tensorDisposalQueue=[],this.uniformDisposalQueue=[]}disposeData(e,t=!1){if(this.tensorMap.has(e)){const n=this.tensorMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;if(this.commandQueueOwnedIds.has(e))return this.tensorDisposalQueue.push(e),!1;this.maybeReleaseBuffer(e);const{complexTensorInfos:a}=this.tensorMap.get(e);null!=a&&(this.disposeData(a.real.dataId,!0),this.disposeData(a.imag.dataId,!0)),this.tensorMap.delete(e)}return!0}memory(){return{numBytesInGPU:this.bufferManager.numBytesUsed,numBytesAllocatedInGPU:this.bufferManager.numBytesAllocated,unreliable:!1}}getBufferManager(){return this.bufferManager}acquireBuffer(e,t=this.defaultGpuBufferUsage()){return this.bufferManager.acquireBuffer(e,t)}maybeReleaseBuffer(e){const t=this.tensorMap.get(e);null!=t&&null!=t.bufferInfo.buffer&&(this.bufferManager.releaseBuffer(t.bufferInfo.buffer,t.bufferInfo.byteSize,t.bufferInfo.usage),t.bufferInfo.buffer=null)}refCount(e){if(this.tensorMap.has(e)){return this.tensorMap.get(e).refCount}return 0}incRef(e){this.tensorMap.get(e).refCount++}decRef(e){if(this.tensorMap.has(e)){this.tensorMap.get(e).refCount--}}write(e,t,n){if("complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()},r=br.sizeFromShape(t)*oU(n);return"bool"===n&&e instanceof Uint8Array&&(e=Int32Array.from(e)),this.tensorMap.set(a,{dtype:n,values:e,bufferInfo:{byteSize:r,usage:this.defaultGpuBufferUsage()},refCount:1}),a}move(e,t,n,a,r){if("complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s=br.sizeFromShape(n)*oU(a);this.tensorMap.set(e,{dtype:a,values:t,bufferInfo:{byteSize:s,usage:this.defaultGpuBufferUsage()},refCount:r})}submitQueue(){this.ensureComputePassEnded(),this.queue.submit([this.currentCommandEncoder.finish()]),this.currentCommandEncoder=null,this.dispatchNumberInEncoder=0,this.commandQueueOwnedIds=new WeakSet,this.flushDisposalQueue()}getBuffer(e){return this.uploadToGPU(e),this.tensorMap.get(e).bufferInfo.buffer}getFromPixelsProgram(e){switch(e){case"copyExternal":return this.fromPixelProgram||(this.fromPixelProgram=new fj),this.fromPixelProgram;case"import":return this.fromPixelImportProgram||(this.fromPixelImportProgram=new mj),this.fromPixelImportProgram;default:return void br.assert(!1,(()=>"Unsupported fromPixels shape"))}}ensureCommandEncoderReady(){this.currentCommandEncoder||(this.currentCommandEncoder=this.device.createCommandEncoder())}ensureComputePassEnded(){this.currentComputePass&&(this.currentComputePass.endPass(),this.currentComputePass=null)}getComputePass(){return this.currentComputePass||(this.currentComputePass=this.currentCommandEncoder.beginComputePass()),this.currentComputePass}async getBufferData(e){if(null!=e.values)return e.values;const t=this.acquireBuffer(e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.copyBufferToBuffer(e.bufferInfo.buffer,0,t,0,e.bufferInfo.byteSize),this.submitQueue(),await t.mapAsync(GPUMapMode.READ);const n=t.getMappedRange().slice(0);return t.unmap(),null!=t&&this.bufferManager.releaseBuffer(t,e.bufferInfo.byteSize,GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ),Ze().getBool("WEBGPU_USE_PROFILE_TOOL")&&(br.assert(void 0!==this.dummyContext,(()=>"Fail to get context for profiling tool")),this.dummyContext.getCurrentTexture()),n}convertAndCacheOnCPU(e,t){const n=this.tensorMap.get(e);return this.maybeReleaseBuffer(e),n.values=t,n.values}readSync(e){const t=this.tensorMap.get(e),{values:n}=t;if(null==n)throw new Error("WebGPU readSync is only available for CPU-resident tensors.");return n}async read(e){if(!this.tensorMap.has(e))throw new Error(`Tensor ${e} was not registered!`);const t=this.tensorMap.get(e),{values:n}=t;if(null!=n)return this.convertAndCacheOnCPU(e,n);let a;if("complex64"===t.dtype){const e=await Promise.all([this.read(t.complexTensorInfos.real.dataId),this.read(t.complexTensorInfos.imag.dataId)]),n=e[0],r=e[1];a=tf.mergeRealAndImagArrays(n,r)}else{a=lU(await this.getBufferData(t),t.dtype)}return this.convertAndCacheOnCPU(e,a),a}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>br.decodeString(e)))}catch(a){throw new Error("Failed to decode encoded string bytes into utf-8")}return Mi(e.shape,e.dtype,n)}async time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=br.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=br.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null},o=await Promise.all(r);return i.kernelMs=br.sum(o),i.getExtraProfileInfo=()=>o.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", "),this.uploadWaitMs=0,this.downloadWaitMs=0,i}getAndSavePipeline(e,t){return e in this.pipelineCache||(this.pipelineCache[e]=t()),this.pipelineCache[e]}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&br.isString(n[0])){const r=n.map((e=>br.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}tensorToBinding(e){if(!e)return null;const t=this.tensorMap.get(e.dataId);return{offset:0,size:t.bufferInfo.byteSize,buffer:t.bufferInfo.buffer}}async getQueryTime(e){return this.supportTimeQuery?this.getTimeFromQuerySet(e):0}uploadToGPU(e){const t=this.tensorMap.get(e);null==t.bufferInfo.buffer&&(t.bufferInfo.buffer=this.acquireBuffer(t.bufferInfo.byteSize),t.values&&this.queue.writeBuffer(t.bufferInfo.buffer,0,t.values))}makeUniformsDataView(e){const t=this.acquireBuffer(e.byteLength,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);return this.queue.writeBuffer(t,0,e),{offset:0,size:e.byteLength,buffer:t}}arrayToDataView(e,t){const n=new DataView(new ArrayBuffer(4*t));let a=0;return e.forEach((e=>{const t=e.data;if("int32"!==e.type&&"float32"!==e.type&&"uint32"!==e.type)throw new Error(`${e.type} not supported!`);"int32"===e.type?t.forEach((e=>{n.setInt32(4*a,e,!0),a++})):"uint32"===e.type?t.forEach((e=>{n.setUint32(4*a,e,!0),a++})):t.forEach((e=>{n.setFloat32(4*a,e,!0),a++}))})),n}computePadding(e){let t=0,n=0,a=0;const r=[];return e.forEach(((e,s)=>{let i;switch(0===e.data.length&&(e.data=[1]),e.data.length){case 0:case 1:i=1;break;case 2:i=2;break;case 3:case 4:i=4;break;default:br.assert(!1,(()=>`Unsupported ${e.data.length}D shape`))}n=Math.ceil(t/i)*i-t;for(let t=0;t<n;++t)r.push({type:e.type,data:[0]}),a++;r.push({type:e.type,data:e.data}),a+=e.data.length,t+=e.data.length+n})),this.arrayToDataView(r,a)}createLayout(e){const t=[];t.push({binding:0,visibility:GPUShaderStage.COMPUTE,buffer:{type:"storage"}});for(let a=0;a<e;a++)t.push({binding:a+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"read-only-storage"}});t.push({binding:e+1,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}});const n=this.device.createBindGroupLayout({entries:t});return{bindGroupLayout:n,pipelineLayout:this.device.createPipelineLayout({bindGroupLayouts:[n]})}}getCachedOrCreateLayout(e){return e in this.layoutCache||(this.layoutCache[e]=this.createLayout(e)),this.layoutCache[e]}runWebGPUProgram(e,t,n,a,r){if(!r){if(r=this.makeTensorInfo(e.outputShape,n),0===br.sizeFromShape(r.shape)){return this.tensorMap.get(r.dataId).values=br.getTypedArrayFromDType(r.dtype,0),r}this.uploadToGPU(r.dataId)}let s=[{type:"float32",data:[NaN]}];const i=t.concat(r).map((e=>e.shape)),o="int32";i.map((e=>{s.push({type:o,data:e})}));const l=br.computeStrides(r.shape);if(s.push({type:o,data:l}),e.size){const t=br.sizeFromShape(e.outputShape);s.push({type:o,data:[e.isVec4?t/4:t]})}a&&(s=[...s,...a]);let u=null;const c=this.computePadding(s),d=c.byteLength;u=this.makeUniformsDataView(c);const p=t.map(((t,n)=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");return this.uploadToGPU(t.dataId),{dtype:this.tensorMap.get(t.dataId).dtype,shape:t.shape,name:e.variableNames[n]}})),h=p.map((e=>e.dtype)).concat(r.dtype),f=p.map((e=>tf.getBroadcastDims(e.shape,r.shape))),m=p.map((e=>br.arraysEqual(e.shape,r.shape))).join("_"),g=f.map((e=>e.join("_"))).join(";"),y=$G(e,i,h,g,m),{bindGroupLayout:A,pipelineLayout:x}=this.getCachedOrCreateLayout(e.variableNames.length),b=this.getAndSavePipeline(y,(()=>FG(this.device,e,x,p,r))),v=null!=this.activeTimers,w=((e,t,n,a,r)=>{const s=[a,...n];return r&&s.push(r),e.createBindGroup({layout:t,entries:s.map(((e,t)=>({binding:t,resource:e})))})})(this.device,A,t.map((e=>this.tensorToBinding(e))),this.tensorToBinding(r),u);this.ensureCommandEncoderReady();const k=this.getComputePass();if(v&&this.supportTimeQuery&&k.writeTimestamp(this.querySet,0),k.setPipeline(b),k.setBindGroup(0,w),k.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),v&&this.supportTimeQuery&&k.writeTimestamp(this.querySet,1),this.dispatchNumberInEncoder++,t.forEach((e=>{this.commandQueueOwnedIds.add(e.dataId)})),this.commandQueueOwnedIds.add(r.dataId),u){const e={byteSize:d,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM,buffer:u.buffer};this.uniformDisposalQueue.push(e)}return Ze().get("WEBGPU_DEFERRED_SUBMIT_BATCH_SIZE")<=this.dispatchNumberInEncoder&&this.submitQueue(),v&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)}),r}runFromPixelsProgram(e,t,n,a,r){const s=this.device.createBindGroup({layout:n.bindGroupLayout,entries:[{binding:0,resource:{buffer:t}},{binding:1,resource:a},{binding:2,resource:{buffer:e.uniform}}]});this.ensureCommandEncoderReady();const i=this.getComputePass(),o=null!=this.activeTimers;o&&this.supportTimeQuery&&i.writeTimestamp(this.querySet,0),i.setPipeline(e.pipeline),i.setBindGroup(0,s),i.dispatch(e.dispatch[0],e.dispatch[1],e.dispatch[2]),o&&this.supportTimeQuery&&i.writeTimestamp(this.querySet,1),this.commandQueueOwnedIds.add(r),this.submitQueue(),o&&this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(this.querySet)})}async getTimeFromQuerySet(e){const t=this.acquireBuffer(16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),n=this.acquireBuffer(16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST);this.ensureCommandEncoderReady(),this.ensureComputePassEnded(),this.currentCommandEncoder.resolveQuerySet(e,0,2,t,0),this.currentCommandEncoder.copyBufferToBuffer(t,0,n,0,16),this.submitQueue(),await n.mapAsync(GPUMapMode.READ);const a=new BigUint64Array(n.getMappedRange()),r=Number(a[1]-a[0]);return n.unmap(),this.bufferManager.releaseBuffer(n,16,GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST),this.bufferManager.releaseBuffer(t,16,GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE),r/1e6}shouldExecuteOnCPU(e,t=gj){return Ze().getBool("WEBGPU_CPU_FORWARD")&&e.every((e=>null==this.tensorMap.get(e.dataId).bufferInfo.buffer&&br.sizeFromShape(e.shape)<t))}numDataIds(){return this.tensorMap.numDataIds()-this.tensorDisposalQueue.length}dispose(){this.disposed||(this.bufferManager.dispose(),this.fromPixelProgram&&this.fromPixelProgram.dispose(),this.fromPixelImportProgram&&this.fromPixelImportProgram.dispose(),this.disposed=!0)}},Aj=yj;Aj.nextDataId=0;var xj={};C(xj,{WebGPUBackend:()=>Aj,webgpu_util:()=>JB}),Ns.isBrowser()&&uU()&&kl("webgpu",(async()=>{Ze().set("CHECK_COMPUTATION_FOR_ERRORS",!1);const e={powerPreference:Ze().get("WEBGPU_USE_LOW_POWER_GPU")?"low-power":"high-performance"},t=await navigator.gpu.requestAdapter(e);let n={};const a=t.features.has("timestamp-query");a?n={requiredFeatures:["timestamp-query"]}:console.warn("This device doesn't support timestamp-query extension. Start Chrome browser with flag --disable-dawn-features=disallow_unsafe_apis then try again. Or zero will shown for the kernel time when profiling mode isenabled. Using performance.now is not workable for webgpu sinceit doesn't support synchronously to read data from GPU.");const r=await t.requestDevice(n);return new Aj(r,a)}),3);var bj,vj,wj,kj=((bj=kj||{})[bj.float32=0]="float32",bj[bj.int32=1]="int32",bj[bj.bool=2]="bool",bj[bj.string=3]="string",bj[bj.complex64=4]="complex64",bj),Ij=((vj=Ij||{})[vj.linear=0]="linear",vj[vj.relu=1]="relu",vj[vj.relu6=2]="relu6",vj[vj.prelu=3]="prelu",vj[vj.leakyrelu=4]="leakyrelu",vj[vj.sigmoid=5]="sigmoid",vj[vj.elu=6]="elu",vj);var Sj={kernelName:rr,backendName:"wasm",setupFunc:function(e){wj=e.wasm.cwrap(rr,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==r.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:d}=a,p=n.dataIdMap.get(r.dataId).id,h=n.dataIdMap.get(s.dataId).id;let f=0;if(null!=i){const e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}const m=null==o?0:n.dataIdMap.get(o.dataId).id,g=Ij[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);const y=l?r.shape[2]:r.shape[1],A=u?s.shape[1]:s.shape[2],x=so.assertAndGetBroadcastShape(r.shape.slice(0,-2),s.shape.slice(0,-2)),b=n.makeOutput([...x,y,A],r.dtype),v=n.dataIdMap.get(b.dataId).id,w=new Uint8Array(new Int32Array(r.shape).buffer),k=new Uint8Array(new Int32Array(s.shape).buffer);return wj(p,w,r.shape.length,h,k,s.shape.length,l,u,g,f,m,d||0,v),b}};function Nj(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){const{backend:a,inputs:{x:r}}=e,s=a.dataIdMap.get(r.dataId).id,i=a.makeOutput(r.shape,t||r.dtype),o=a.dataIdMap.get(i.dataId).id;return 0===br.sizeFromShape(i.shape)||n(s,kj[r.dtype],o),i}}}var Tj=Nj(tt);function Cj(e,t,n){let a;return{kernelName:e,backendName:"wasm",setupFunc:function(t){a=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:r}=e,{a:s,b:i}=r,o=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=null!=n?n:s.dtype,c=tf.assertAndGetBroadcastShape(s.shape,i.shape),d=t.makeOutput(c,u);if(0===br.sizeFromShape(c))return d;const p=new Uint8Array(new Int32Array(s.shape).buffer),h=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(d.dataId).id;return a(o,p,s.shape.length,l,h,i.shape.length,kj[s.dtype],f),d}}}var Ej,Rj=Cj(rt);var Fj={kernelName:st,backendName:"wasm",setupFunc:function(e){Ej=e.wasm.cwrap(st,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,a=n.makeOutput(t[0].shape,t[0].dtype);if(0===br.sizeFromShape(a.shape))return a;const r=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(r).buffer),i=n.dataIdMap.get(a.dataId).id;return Ej(s,r.length,kj[a.dtype],i),a}};function $j(e){const{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(a).set(r),a}var Mj,zj={kernelName:mn,backendName:"wasm",kernelFunc:$j};function _j(e){const{inputs:t,backend:n,attrs:a}=e,[r,s]=function(e,t){const n=[],a=[];for(let r=0;r<e.length;++r)1!==e[r]&&n.push(e[r]),1!==e[t[r]]&&a.push(t[r]);for(let r=0;r<a.length;++r){let e=-1;for(let t=0;t<a.length;++t)a[t]>=r&&(-1===e||a[e]>a[t])&&(e=t);a[e]=r}return[n,a]}(t.x.shape,a.perm);let i=!0;for(let f=0;f<s.length;f++)s[f]!==f&&(i=!1);const o=function(e,t){const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];return n}(t.x.shape,a.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(i){const e=$j({inputs:t,backend:n});return e.shape=o,e}const u=n.makeOutput(o,l.dtype),c=n.dataIdMap.get(l.dataId).id,d=n.dataIdMap.get(u.dataId).id,p=new Uint8Array(new Int32Array(s).buffer),h=new Uint8Array(new Int32Array(l.shape).buffer);return Mj(c,h,l.shape.length,kj[l.dtype],d,p,s.length),u}var Oj,Dj={kernelName:Za,backendName:"wasm",kernelFunc:_j,setupFunc:function(e){Mj=e.wasm.cwrap(Za,null,["number","array","number","number","number","array","number"])}};function Pj(e,t,n){const a=e.shape,r=e.shape.length,s=br.parseAxisParam(t,a);let i=s;const o=tf.getAxesPermutation(i,r);let l=null,u=!1;if(null!=o){const t=new Array(r);for(let e=0;e<t.length;e++)t[e]=a[o[e]];i=tf.getInnerMostAxes(i.length,r),l=_j({inputs:{x:e},attrs:{perm:o},backend:n});const s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}var Lj,Wj={kernelName:it,backendName:"wasm",setupFunc:function(e){Oj=e.wasm.cwrap(it,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,l=i;const{transposed:u,axes:c,originalAxes:d,inputWasTransposed:p}=Pj(i,r,t);if(p){l=u,o=t.dataIdMap.get(u.dataId).id}const h=l.shape.length;tf.assertAxesAreInnerMostDims("all",c,h);const[f,m]=tf.computeOutAndReduceShapes(l.shape,c),g=br.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==br.sizeFromShape(l.shape)){const e=t.dataIdMap.get(y.dataId).id;Oj(o,g,e)}if(p&&t.disposeData(u.dataId),s){const e=tf.expandShapeToKeepDim(y.shape,d);y.shape=e}return y}};var Bj,Uj={kernelName:ot,backendName:"wasm",setupFunc:function(e){Lj=e.wasm.cwrap(ot,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,l=i;const{transposed:u,axes:c,originalAxes:d,inputWasTransposed:p}=Pj(i,r,t);if(p){l=u,o=t.dataIdMap.get(u.dataId).id}const h=l.shape.length;tf.assertAxesAreInnerMostDims("any",c,h);const[f,m]=tf.computeOutAndReduceShapes(l.shape,c),g=br.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==br.sizeFromShape(l.shape)){const e=t.dataIdMap.get(y.dataId).id;Lj(o,g,e)}if(p&&t.disposeData(u.dataId),s){const e=tf.expandShapeToKeepDim(y.shape,d);y.shape=e}return y}};var Vj,Gj={kernelName:lt,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r}=a,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let o=i,l=s;const{transposed:u,axes:c,inputWasTransposed:d}=Pj(s,r,t);if(d){const e=t.dataIdMap.get(u.dataId).id;e!==i&&(l=u,o=e)}const p=l.shape.slice(0,-1),h=t.makeOutput(p,"int32"),f=t.dataIdMap.get(h.dataId).id,m=br.sizeFromShape(h.shape),g=l.shape[c[0]];return Bj(o,kj[l.dtype],m,g,f),d&&t.disposeData(u.dataId),h},setupFunc:function(e){Bj=e.wasm.cwrap(lt,null,["number","number","number","number","number"])}};var Hj={kernelName:mt,backendName:"wasm",setupFunc:function(e){Vj=e.wasm.cwrap(mt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,r=t.x,s=a.dataIdMap.get(r.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,c=tf.computePool2DInfo(r.shape,i,o,1,l,u),d=c.filterHeight,p=c.filterWidth,h=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,A=c.strideWidth,x=c.inChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(1!==c.dilationWidth||1!==c.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);const b=a.makeOutput(c.outShape,"float32"),v=a.dataIdMap.get(b.dataId).id;return Vj(s,r.shape[0],r.shape[1],r.shape[2],d,p,h,f,m,g,y,A,x,v),b}};function jj(e){const{inputs:t,attrs:n}=e,{x:a}=t,{shape:r}=n,s=br.sizeFromShape(a.shape),i=br.inferFromImplicitShape(r,s);return br.assert(s===br.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${a.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:i,dtype:a.dtype}}var qj,Xj={kernelName:ca,backendName:"wasm",kernelFunc:jj};var Kj={kernelName:xt,backendName:"wasm",setupFunc:function(e){qj=e.wasm.cwrap(xt,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;if("float32"!==r.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const l=r.shape.length,u=s.shape.length,c=i?r.shape[l-2]:r.shape[l-1],d=o?s.shape[u-1]:s.shape[u-2],p=i?r.shape[l-1]:r.shape[l-2],h=o?s.shape[u-2]:s.shape[u-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=br.sizeFromShape(f),y=br.sizeFromShape(m),A=so.assertAndGetBroadcastShape(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([p,h]);br.assert(c===d,(()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,h,d]:[y,d,h],b=jj({inputs:{x:r},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),v=jj({inputs:{x:s},backend:n,attrs:{shape:x}}),w=n.dataIdMap.get(b.dataId).id,k=n.dataIdMap.get(v.dataId).id,I=i?b.shape[2]:b.shape[1],S=o?v.shape[1]:v.shape[2],N=Math.max(g,y),T=n.makeOutput([N,I,S],b.dtype),C=n.dataIdMap.get(T.dataId).id,E=new Uint8Array(new Int32Array(b.shape).buffer),R=new Uint8Array(new Int32Array(v.shape).buffer);return qj(w,E,b.shape.length,k,R,v.shape.length,i,o,C),n.disposeData(b.dataId),n.disposeData(v.dataId),T.shape=A,T}};function Zj(e){const{inputs:{x:t},attrs:{begin:n,size:a},backend:r}=e,[s,i]=Io.parseSliceParams(t,n,a),o=Io.isSliceContinous(t.shape,s,i),l=r.readSync(t.dataId),u=r.makeOutput(i,t.dtype),c=br.computeStrides(t.shape),d=r.dataIdMap.get(u.dataId);if(o){const e=Io.computeFlatOffset(s,c);if("string"===t.dtype)d.stringBytes=l.slice(e,e+br.sizeFromShape(i));else{r.typedArrayFromHeap(u).set(l.subarray(e,e+br.sizeFromShape(i)))}return u}if("string"===t.dtype){const e=GC(l,s,i,t.shape,t.dtype);return d.stringBytes=e,u}const p=r.typedArrayFromHeap(u),h=t.shape.length;if(2===h)!function(e,t,n,a,r){let s=0;const i=a[0],o=a[1],l=i+r[0];for(let u=i;u<l;u++){const a=u*t+o;n.set(e.subarray(a,a+r[1]),s),s+=r[1]}}(l,c[0],p,s,i);else if(3===h)!function(e,t,n,a,r,s){let i=0;const o=r[0],l=r[1],u=r[2],c=o+s[0],d=l+s[1];for(let p=o;p<c;p++)for(let r=l;r<d;r++){const o=p*t+r*n+u;a.set(e.subarray(o,o+s[2]),i),i+=s[2]}}(l,c[0],c[1],p,s,i);else if(4===h)!function(e,t,n,a,r,s,i){let o=0;const l=s[0],u=s[1],c=s[2],d=l+i[0],p=u+i[1],h=c+i[2],f=s[3];for(let m=l;m<d;m++)for(let s=u;s<p;s++)for(let l=c;l<h;l++){const u=m*t+s*n+l*a+f;r.set(e.subarray(u,u+i[3]),o),o+=i[3]}}(l,c[0],c[1],c[2],p,s,i);else{const e=GC(l,s,i,t.shape,t.dtype);p.set(e)}return u}var Yj={kernelName:wa,backendName:"wasm",kernelFunc:Zj};var Jj={kernelName:bt,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a,o=s.reduce(((e,t)=>e*t)),l=tf.getReshaped(r.shape,s,o),u=tf.getPermuted(l.length,s.length),c=tf.getReshapedPermuted(r.shape,s,o),d=tf.getSliceBeginCoords(i,s.length),p=tf.getSliceSize(c,i,s.length),h=jj({inputs:{x:r},backend:n,attrs:{shape:l}}),f=_j({inputs:{x:h},backend:n,attrs:{perm:u}}),m=Zj({inputs:{x:jj({inputs:{x:f},backend:n,attrs:{shape:c}})},backend:n,attrs:{begin:d,size:p}});return n.disposeData(h.dataId),n.disposeData(f.dataId),n.disposeData(h.dataId),m}};function Qj(e){const{inputs:{x:t},attrs:{dtype:n},backend:a}=e,r=a.makeOutput(t.shape,n),s=a.typedArrayFromHeap(t);return a.typedArrayFromHeap(r).set(s),r}var eq,tq={kernelName:It,backendName:"wasm",kernelFunc:Qj},nq=Nj(St);var aq={kernelName:Nt,backendName:"wasm",setupFunc:function(e){eq=e.wasm.cwrap(Nt,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a,o=n.dataIdMap.get(r.dataId).id,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(l.dataId).id;return eq(o,s,i,u),l}};function rq(e){const{inputs:t,backend:n}=e,a=br.parseAxisParam(e.attrs.axis,t[0].shape)[0];let r=tf.computeOutShape(t.map((e=>e.shape)),a);const s=t.filter((e=>br.sizeFromShape(e.shape)>0));if(1===s.length)return $j({inputs:{x:s[0]},backend:n});const i=n.makeOutput(r,t[0].dtype);if(0===br.sizeFromShape(r))return i;const o=s.map((e=>e.shape));if(tf.assertParamsConsistent(o,a),"string"===s[0].dtype){const e=s.map((e=>{const t=br.sizeFromShape(e.shape.slice(a));return jj({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),o=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));r=tf.computeOutShape(e.map((e=>e.shape)),1);const l=1===e[0].shape[0],u=LT(o,r,t[0].dtype,l),c=tf.computeOutShape(s.map((e=>e.shape)),a);i.shape=c;return n.dataIdMap.get(i.dataId).stringBytes=tf.fromStringArrayToUint8(u),e.forEach((e=>n.disposeData(e.dataId))),i}const l=br.sizeFromShape(s[0].shape.slice(0,a));let u=0;const c=s.map((e=>{const t=br.sizeFromShape(e.shape.slice(a));return u+=t,t})),d=s.map((e=>n.typedArrayFromHeap(e))),p=n.typedArrayFromHeap(i);for(let h=0;h<l;h++){let e=h*u;for(let t=0;t<d.length;t++){const n=c[t],a=h*n,r=d[t].subarray(a,a+n);p.set(r,e),e+=n}}return i}var sq,iq={kernelName:Et,backendName:"wasm",kernelFunc:rq};var oq,lq={kernelName:Rt,backendName:"wasm",setupFunc:function(e){sq=e.wasm.cwrap(Rt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:d,dataFormat:p}=n,h=tf.convertConv2DDataFormat(p),f=tf.computeConv2DInfo(r.shape,s.shape,l,u,c,d,!1,h),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,A=f.padInfo.right,x=f.padInfo.bottom,b=f.padInfo.left,v=f.dilationHeight,w=f.dilationWidth,k=f.strideHeight,I=f.strideWidth,S=f.inChannels,N=f.outChannels,T="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const C=a.makeOutput(f.outShape,"float32"),E=a.dataIdMap.get(C.dataId).id;return sq(i,r.shape[0],r.shape[1],r.shape[2],o,m,g,y,A,x,b,T,v,w,k,I,S,N,E),C}};var uq,cq,dq={kernelName:$t,backendName:"wasm",setupFunc:function(e){oq=e.wasm.cwrap($t,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{dy:r,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:c}=a,d=tf.convertConv2DDataFormat(l),p=tf.computeConv2DInfo(c,s.shape,i,1,o,u,!1,d),{batchSize:h,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:A,outChannels:x,outHeight:b,outWidth:v,strideHeight:w,strideWidth:k}=p,I=f-1-p.padInfo.top,S=m-1-p.padInfo.left,N="channelsLast"===p.dataFormat,T=br.computeStrides(p.inShape),C=br.computeStrides(r.shape),[E,R,F]=br.computeStrides(s.shape),$=T[0],M=N?T[1]:T[2],z=N?T[2]:1,_=N?1:T[1],O=C[0],D=N?C[1]:C[2],P=N?C[2]:1,L=N?1:C[1],W=t.makeOutput(p.inShape,"float32"),B=t.dataIdMap.get(W.dataId).id,U=t.dataIdMap.get(r.dataId).id,V=t.dataIdMap.get(s.dataId).id;return oq(U,V,h,f,m,y,A,g,b,v,x,w,k,I,S,E,R,F,$,M,z,_,O,D,P,L,B),W}},pq=Nj(Ot),hq=Nj(Dt),fq=((uq=fq||{})[uq.bilinear=0]="bilinear",uq[uq.nearest=1]="nearest",uq);var mq,gq={kernelName:Lt,backendName:"wasm",setupFunc:function(e){cq=e.wasm.cwrap(Lt,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{method:r,extrapolationValue:s,cropSize:i}=a,{image:o,boxes:l,boxInd:u}=n,c=l.shape[0],[d,p]=i,h=[c,d,p,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=Qj({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(l.dataId).id,A=t.dataIdMap.get(u.dataId).id,x=t.makeOutput(h,"float32"),b=t.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return cq(g,y,A,c,v,d,p,fq[r],s,b),null!=f&&t.disposeData(f.dataId),x}};var yq,Aq={kernelName:Pt,backendName:"wasm",setupFunc:function(e){mq=e.wasm.cwrap(Pt,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a,l=r.shape.length;br.assert("float32"===r.dtype||"int32"===r.dtype,(()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`));const u=tf.getAxesPermutation([s],l);let c=r;null!==u&&(c=_j({inputs:{x:r},attrs:{perm:u},backend:n}));const d=tf.getInnerMostAxes(1,l)[0];tf.assertAxesAreInnerMostDims("cumsum",[d],l);const p=n.makeOutput(c.shape,c.dtype),h=c.shape[d],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(p.dataId).id;mq(f,i?1:0,o?1:0,h,m,kj[r.dtype]);let g=p;if(null!==u){g=_j({inputs:{x:p},attrs:{perm:tf.getUndoAxesPermutation(u)},backend:n}),n.disposeData(c.dataId),n.disposeData(p.dataId)}return g}};var xq,bq={kernelName:Bt,backendName:"wasm",setupFunc:function(e){yq=e.wasm.cwrap(Bt,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:r}=n,{blockSize:s,dataFormat:i}=a,o=r.shape[0],l=("NHWC"===i?r.shape[1]:r.shape[2])*s,u=("NHWC"===i?r.shape[2]:r.shape[3])*s,c=("NHWC"===i?r.shape[3]:r.shape[1])/(s*s),d="NHWC"===i?[o,l,u,c]:[o,c,l,u],p=t.makeOutput(d,"float32"),h=t.dataIdMap.get(r.dataId).id,f=new Uint8Array(new Int32Array(br.computeStrides(r.shape)).buffer),m=new Uint8Array(new Int32Array(d).buffer),g=new Uint8Array(new Int32Array(br.computeStrides(d)).buffer),y=t.dataIdMap.get(p.dataId).id;return yq(h,s,"NHWC"===i?1:0,f,r.shape.length-1,m,g,d.length,y),p}};var vq={kernelName:Ut,backendName:"wasm",setupFunc:function(e){xq=e.wasm.cwrap(Ut,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:c,dimRoundingMode:d}=n,p=null==u?[1,1]:u,h=tf.computeConv2DInfo(r.shape,s.shape,l,p,c,d,!0),f=h.filterHeight,m=h.filterWidth,g=h.padInfo.top,y=h.padInfo.right,A=h.padInfo.bottom,x=h.padInfo.left,b=h.dilationHeight,v=h.dilationWidth,w=h.strideHeight,k=h.strideWidth,I=h.inChannels,S=h.outChannels,N="SAME"===h.padInfo.type?1:0;if("channelsLast"!==h.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${h.dataFormat}'. Please use 'channelsLast'.`);const T=a.makeOutput(h.outShape,"float32"),C=a.dataIdMap.get(T.dataId).id;return xq(i,r.shape[0],r.shape[1],r.shape[2],o,f,m,g,y,A,x,N,b,v,w,k,I,S,C),T}},wq=Nj(Yt),kq=Cj(en,0,"bool"),Iq=Nj(tn,"float32");function Sq(e){const{inputs:t,attrs:n,backend:a}=e,{input:r}=t,{dim:s}=n,i=r.shape.length,o=r.shape.slice();let l=s;return s<0&&(br.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),jj({inputs:{x:r},backend:a,attrs:{shape:o}})}var Nq={kernelName:nn,backendName:"wasm",kernelFunc:Sq};function Tq(e){const{attrs:{shape:t,value:n,dtype:a},backend:r}=e,s=r.makeOutput(t,a);return r.typedArrayFromHeap(s).fill(n),s}var Cq,Eq={kernelName:sn,backendName:"wasm",kernelFunc:Tq};var Rq,Fq={kernelName:on,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:a}=t,r=n.makeOutput(a.shape,a.dtype),s=n.dataIdMap.get(a.dataId).id,i=n.dataIdMap.get(r.dataId).id,[o,l,u,c]=a.shape;return Cq(s,o,l,u,c,i),r},setupFunc:function(e){Cq=e.wasm.cwrap(on,null,["number","number","number","number","number","number"])}},$q=Nj(ln),Mq=Cj(un);var zq,_q={kernelName:cn,backendName:"wasm",setupFunc:function(e){Rq=e.wasm.cwrap(cn,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{varianceEpsilon:r}=a,{x:s,mean:i,variance:o,offset:l,scale:u}=n,c=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(o.dataId).id,h=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===br.sizeFromShape(s.shape))return m;const g=t.dataIdMap.get(m.dataId).id;return Rq(c,d,p,h,f,r,g),m}};var Oq,Dq={kernelName:sr,backendName:"wasm",setupFunc:function(e){zq=e.wasm.cwrap(sr,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=tf.computeConv2DInfo(r.shape,s.shape,l,c,u,p),g=Ij[h];if(null==g)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);const y=a.dataIdMap.get(r.dataId).id,A=a.dataIdMap.get(s.dataId).id,x=m.outChannels;let b=0;if(null!=i){const e=a.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);b=e.id}const v=m.filterHeight,w=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,N=m.padInfo.left,T=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,R=m.strideWidth,F=m.inChannels,$="SAME"===m.padInfo.type?1:0,M=m.batchSize,z=m.inHeight,_=m.inWidth;if("NHWC"!==d)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const O=a.makeOutput(m.outShape,"float32"),D=a.dataIdMap.get(O.dataId).id,P=null==o?0:a.dataIdMap.get(o.dataId).id;return zq(y,M,z,_,A,v,w,b,k,I,S,N,$,T,C,E,R,F,x,g,P,f||0,D),O}};var Pq,Lq={kernelName:ir,backendName:"wasm",setupFunc:function(e){Oq=e.wasm.cwrap(ir,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dataFormat:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=n,m=tf.computeConv2DInfo(r.shape,s.shape,l,c,u,p,!0),g=Ij[h];if(null==g)throw new Error(`${h} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const y=a.dataIdMap.get(r.dataId).id,A=a.dataIdMap.get(s.dataId).id,x=m.outChannels;let b=0;if(null!=i){const e=a.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);b=e.id}const v=m.filterHeight,w=m.filterWidth,k=m.padInfo.top,I=m.padInfo.right,S=m.padInfo.bottom,N=m.padInfo.left,T=m.dilationHeight,C=m.dilationWidth,E=m.strideHeight,R=m.strideWidth,F=m.inChannels,$="SAME"===m.padInfo.type?1:0,M=m.batchSize,z=m.inHeight,_=m.inWidth;if("NHWC"!==d)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const O=a.makeOutput(m.outShape,"float32"),D=a.dataIdMap.get(O.dataId).id,P=null==o?0:a.dataIdMap.get(o.dataId).id;return Oq(y,M,z,_,A,v,w,b,k,I,S,N,$,T,C,E,R,F,x,g,P,f||0,D),O}};var Wq,Bq={kernelName:pn,backendName:"wasm",setupFunc:function(e){Pq=e.wasm.cwrap(pn,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:a,indices:r}=n,[s,i,o,l]=Ao.prepareAndValidate(a,r),u=t.makeOutput(s,a.dtype);if(0===i)return u;const c=r.shape,d=c[c.length-1],p=t.dataIdMap.get(a.dataId).id,h=t.dataIdMap.get(r.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return Pq(p,kj[a.dtype],h,i,d,o,f,m),u}};var Uq,Vq={kernelName:dn,backendName:"wasm",setupFunc:function(e){Wq=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:r,indices:s}=n,{axis:i,batchDims:o}=a,l=br.parseAxisParam(i,r.shape)[0],u=t.readSync(s.dataId),c=r.shape[l];for(let k=0;k<u.length;++k){const e=u[k];br.assert(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}const d=tf.segment_util.collectGatherOpShapeInfo(r,s,l,o),p=jj({inputs:{x:r},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),h=br.sizeFromShape(s.shape),f=jj({inputs:{x:s},attrs:{shape:[d.batchSize,h/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,h/d.batchSize,d.sliceSize],g=t.makeOutput(m,r.dtype);if(0===br.sizeFromShape(r.shape))return g;const y=p.shape.length-1,A=t.dataIdMap.get(p.dataId).id,x=t.dataIdMap.get(f.dataId).id,b=t.dataIdMap.get(g.dataId).id,v=new Uint8Array(new Int32Array(br.computeStrides(p.shape)).buffer),w=new Uint8Array(new Int32Array(br.computeStrides(m)).buffer);return Wq(A,kj[r.dtype],v,y,x,d.batchSize,w,b),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}},Gq=Cj(hn,0,"bool"),Hq=Cj(fn,0,"bool");var jq,qq={kernelName:vn,backendName:"wasm",setupFunc:function(e){Uq=e.wasm.cwrap(vn,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:a}=e,r=a.dataIdMap.get(t.dataId).id,s=a.makeOutput(t.shape,"float32");if(0!==br.sizeFromShape(t.shape)){const e=a.dataIdMap.get(s.dataId).id;Uq(r,kj[t.dtype],n,e)}return s}},Xq=Cj(wn,0,"bool"),Kq=Cj(kn,0,"bool"),Zq=Nj(Sn),Yq=Cj(Tn,0,"bool");var Jq,Qq={kernelName:Mn,backendName:"wasm",setupFunc:function(e){jq=e.wasm.cwrap(Mn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{reductionIndices:r,keepDims:s}=a,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,l=i;const{transposed:u,axes:c,originalAxes:d,inputWasTransposed:p}=Pj(i,r,t);if(p){l=u,o=t.dataIdMap.get(u.dataId).id}const h=l.shape.length;tf.assertAxesAreInnerMostDims("max",c,h);const[f,m]=tf.computeOutAndReduceShapes(l.shape,c),g=br.sizeFromShape(m),y=t.makeOutput(f,i.dtype);if(0!==br.sizeFromShape(l.shape)){const e=t.dataIdMap.get(y.dataId).id;jq(o,kj[i.dtype],g,e)}if(p&&t.disposeData(u.dataId),s){const e=tf.expandShapeToKeepDim(y.shape,d);y.shape=e}return y}},eX=Cj(zn);var tX,nX={kernelName:_n,backendName:"wasm",setupFunc:function(e){Jq=e.wasm.cwrap(_n,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,r=t.x,s=a.dataIdMap.get(r.dataId).id;br.assert("float32"===r.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`));const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,c=tf.computePool2DInfo(r.shape,i,o,1,l,u),d=c.filterHeight,p=c.filterWidth,h=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,A=c.dilationWidth,x=c.strideHeight,b=c.strideWidth,v=c.inChannels,w=c.outChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);const k=a.makeOutput(c.outShape,"float32"),I=a.dataIdMap.get(k.dataId).id;return Jq(s,r.shape[0],r.shape[1],r.shape[2],d,p,h,f,m,g,y,A,x,b,v,w,I),k}};var aX,rX={kernelName:Wn,backendName:"wasm",setupFunc:function(e){tX=e.wasm.cwrap(Wn,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let l=o,u=i;const{transposed:c,axes:d,originalAxes:p,inputWasTransposed:h}=Pj(i,r,t);let f=d;if(h){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(u=c,l=e,f=tf.getInnerMostAxes(f.length,u.shape.length))}tf.assertAxesAreInnerMostDims("mean",f,u.shape.length);const[m,g]=tf.computeOutAndReduceShapes(u.shape,f),y=br.sizeFromShape(g);let A=u;"float32"!==u.dtype&&(A=Qj({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(A.dataId).id);const x=t.makeOutput(m,"float32");if(0!==br.sizeFromShape(u.shape)){const e=t.dataIdMap.get(x.dataId).id;tX(l,y,e)}if(h&&t.disposeData(c.dataId),s){const e=tf.expandShapeToKeepDim(x.shape,p);x.shape=e}return"float32"!==u.dtype&&t.disposeData(A.dataId),x}};var sX,iX,oX={kernelName:Bn,backendName:"wasm",setupFunc:function(e){aX=e.wasm.cwrap(Bn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let l=o,u=i;const{transposed:c,axes:d,originalAxes:p,inputWasTransposed:h}=Pj(i,r,t);if(h){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(u=c,l=e)}const f=u.shape.length;tf.assertAxesAreInnerMostDims("min",d,f);const[m,g]=tf.computeOutAndReduceShapes(u.shape,d),y=br.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(0!==br.sizeFromShape(u.shape)){const e=t.dataIdMap.get(A.dataId).id;aX(l,kj[i.dtype],y,e)}if(h&&t.disposeData(c.dataId),s){const e=tf.expandShapeToKeepDim(A.shape,p);A.shape=e}return A}},lX=Cj(Un),uX=((sX=uX||{})[sX.reflect=0]="reflect",sX[sX.symmetric=1]="symmetric",sX);var cX,dX={kernelName:Vn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:a,mode:r}}=e,s=a.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),c=a.map((e=>e[0])),d=a.map((e=>e[1])),p=new Uint8Array(new Int32Array(c).buffer),h=new Uint8Array(new Int32Array(d).buffer);return iX(i,u,t.shape.length,kj[t.dtype],p,h,uX[r],l),o},setupFunc:function(e){iX=e.wasm.cwrap(Vn,null,["number","array","number","number","array","array","number","number"])}},pX=Cj(jn),hX=Nj(qn);function fX(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),a=n[0],r=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:a,selectedSize:r,pSelectedScores:s,pValidOutputs:i}}var mX,gX={kernelName:Kn,backendName:"wasm",setupFunc:function(e){cX=e.wasm.cwrap(Kn,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i}=a,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(l.dataId).id,d=cX(u,c,s,r,i),{pSelectedIndices:p,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=fX(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",p)}};var yX,AX={kernelName:Zn,backendName:"wasm",setupFunc:function(e){mX=e.wasm.cwrap(Zn,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=a,{boxes:l,scores:u}=n,c=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(u.dataId).id,p=mX(c,d,s,r,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=fX(t,p);return t.wasm._free(m),[t.makeOutput([f],"int32",h),t.makeOutput([],"int32",g)]}};var xX,bX={kernelName:Yn,backendName:"wasm",setupFunc:function(e){yX=e.wasm.cwrap(Yn,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=a,{boxes:l,scores:u}=n,c=t.dataIdMap.get(l.dataId).id,d=t.dataIdMap.get(u.dataId).id,p=yX(c,d,s,r,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=fX(t,p);return t.wasm._free(g),[t.makeOutput([f],"int32",h),t.makeOutput([f],"float32",m)]}},vX=Cj(Xn,0,"bool");var wX={kernelName:Qn,backendName:"wasm",setupFunc:function(e){xX=e.wasm.cwrap(Qn,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{depth:s,onValue:i,offValue:o}=a,l=n.makeOutput([...r.shape,s],"int32"),u=n.dataIdMap.get(l.dataId).id,c=n.dataIdMap.get(r.dataId).id;return xX(c,s,i,o,u),l}};var kX={kernelName:Jn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(1),a}};var IX,SX={kernelName:ea,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return Sq({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{br.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),br.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=rq({inputs:t.map((e=>{const t=Sq({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeData(e.dataId))),l}};var NX,TX={kernelName:ta,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:a,constantValue:r}}=e,s=a.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===br.sizeFromShape(t.shape))return Tq({backend:n,attrs:{shape:s,value:r,dtype:t.dtype}});const i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),c=a.map((e=>e[0])),d=a.map((e=>e[1])),p=new Uint8Array(new Int32Array(c).buffer),h=new Uint8Array(new Int32Array(d).buffer);return IX(i,u,t.shape.length,kj[t.dtype],p,h,r,l),o},setupFunc:function(e){IX=e.wasm.cwrap(ta,null,["number","array","number","number","array","array","number","number"])}},CX=Cj(aa);var EX,RX={kernelName:ra,backendName:"wasm",setupFunc:function(e){NX=e.wasm.cwrap(ra,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=n.dataIdMap.get(a.dataId).id,i=n.dataIdMap.get(r.dataId).id;let o=s;const l=a;let u=l;"float32"!==l.dtype&&(u=Qj({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);const c=n.makeOutput(a.shape,"float32"),d=n.dataIdMap.get(c.dataId).id;return NX(o,i,d),"float32"!==l.dtype&&n.disposeData(u.dataId),c}};var FX,$X={kernelName:sa,backendName:"wasm",setupFunc:function(e){EX=e.wasm.cwrap(sa,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let l=o,u=i;const{transposed:c,axes:d,originalAxes:p,inputWasTransposed:h}=Pj(i,r,t);let f=d;if(h){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(u=c,l=e,f=tf.getInnerMostAxes(f.length,u.shape.length))}tf.assertAxesAreInnerMostDims("prod",f,u.shape.length);const[m,g]=tf.computeOutAndReduceShapes(u.shape,f),y=br.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(0!==br.sizeFromShape(u.shape)){const e=t.dataIdMap.get(A.dataId).id;EX(l,y,kj[A.dtype],e)}if(h&&t.disposeData(c.dataId),s){const e=tf.expandShapeToKeepDim(A.shape,p);A.shape=e}return A}},MX={kernelName:ia,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=DC(a,r,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l}},zX=Cj(Kt),_X=Nj(ua),OX=Nj(ma);var DX,PX={kernelName:ha,backendName:"wasm",setupFunc:function(e){FX=e.wasm.cwrap(ha,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{images:r}=n,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,u]=o,[c,d,p,h]=r.shape,f=[c,l,u,h];let m,g=t.dataIdMap.get(r.dataId);"float32"!==g.dtype&&(m=Qj({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(m.dataId));const y=g.id,A=t.makeOutput(f,"float32");if(0===br.sizeFromShape(r.shape))return A;const x=t.dataIdMap.get(A.dataId).id;return FX(y,c,d,p,h,l,u,s?1:0,i?1:0,x),null!=m&&t.disposeData(m.dataId),A}};var LX,WX={kernelName:ga,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=br.parseAxisParam(s,r.shape);if(0===r.shape.length)return $j({inputs:{x:r},backend:n});const o=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),d=new Uint8Array(new Int32Array(r.shape).buffer);DX(l,c,i.length,d,r.shape.length,u);const p=jj({inputs:{x:o},attrs:{shape:r.shape},backend:n});return n.disposeData(o.dataId),p},setupFunc:function(e){DX=e.wasm.cwrap(ga,null,["number","array","number","array","number","number"])}};var BX,UX={kernelName:ar,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{radians:s,fillValue:i,center:o}=a,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(l.dataId).id,[d,p,h,f]=r.shape,[m,g]=tf.getImageCenter(o,p,h),y="number"===typeof i?[i,i,i,0===i?0:255]:[...i,255],A=new Uint8Array(new Int32Array(y).buffer);return LX(u,d,p,h,f,s,m,g,A,y.length,c),l},setupFunc:function(e){LX=e.wasm.cwrap(ar,null,["number","number","number","number","number","number","number","number","array","number","number"])}},VX=Nj(ya),GX=Nj(Aa);var HX,jX={kernelName:xa,backendName:"wasm",setupFunc:function(e){BX=e.wasm.cwrap(xa,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{indices:r,updates:s}=n,{shape:i}=a,o=t.makeOutput(i,s.dtype);if(0===br.sizeFromShape(i))return o;const{sliceRank:l,numUpdates:u,sliceSize:c,strides:d,outputSize:p}=bo.calculateShapes(s,r,i),h=t.dataIdMap.get(r.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(d).buffer),g=t.dataIdMap.get(o.dataId).id;return BX(h,f,kj[s.dtype],l,u,c,m,p,g),o}};var qX,XX={kernelName:ba,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=n.dataIdMap.get(a.dataId).id,o=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(r.shape,r.dtype),c=n.dataIdMap.get(u.dataId).id,d=a.shape.length,p=r.shape.length,h=0===d||d>1||1===p?1:br.sizeFromShape(r.shape.slice(1));return HX(i,o,l,h,c),u},setupFunc:function(e){HX=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};var KX,ZX={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){qX=e.wasm.cwrap(Na,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,a=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(r.dataId).id;return 0===br.sizeFromShape(r.shape)||qX(a,s),r}},YX=Nj(ka);var JX={kernelName:$a,backendName:"wasm",setupFunc:function(e){KX=e.wasm.cwrap($a,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:a}}=e,r=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[a],l=br.sizeFromShape(n.shape)/o;return 0===br.sizeFromShape(s.shape)||KX(r,i,o,l),s}};var QX,eK={kernelName:Ra,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a,o=br.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let g=1+s.length;g<r.shape.length;++g)l.push([0,0]);const u=TX.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=tf.getReshaped(u.shape,s,o,!1),d=tf.getPermuted(c.length,s.length,!1),p=tf.getReshapedPermuted(u.shape,s,o,!1),h=jj({inputs:{x:u},backend:n,attrs:{shape:c}}),f=_j({inputs:{x:h},backend:n,attrs:{perm:d}}),m=jj({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeData(u.dataId),n.disposeData(h.dataId),n.disposeData(f.dataId),m}};var tK,nK={kernelName:Ma,backendName:"wasm",setupFunc:function(e){QX=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{indices:a,values:r,denseShape:s,defaultValue:i}=n,o=a.shape[0],l=a.shape[1],u=t.readSync(s.dataId)[0],c=[o+u,l],d=t.dataIdMap.get(a.dataId).id,p=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(i.dataId).id,f=t.makeOutput(c,a.dtype),m=t.dataIdMap.get(f.dataId).id,g=t.makeOutput(c.slice(0,1),r.dtype),y=t.dataIdMap.get(g.dataId).id,A=t.makeOutput([u],"bool"),x=t.dataIdMap.get(A.dataId).id,b=t.makeOutput([o],a.dtype),v=t.dataIdMap.get(b.dataId).id,w=t.makeOutput([4],"int32"),k=t.dataIdMap.get(w.dataId).id,I=QX(d,p,kj[r.dtype],o,u,l,h,m,y,x,v,k),S=t.readSync(w.dataId);let N;switch(S[0]){case 1:N=tf.getSparseFillEmptyRowsIndicesDenseShapeMismatch(S[1]);break;case 2:N=tf.getSparseFillEmptyRowsNegativeIndexErrorMessage(S[1],S[2]);break;case 3:N=tf.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(S[1],S[2],S[3]);break;default:N=""}if(t.disposeData(w.dataId),N)throw t.disposeData(f.dataId),t.disposeData(g.dataId),t.disposeData(A.dataId),t.disposeData(b.dataId),new Error(N);let T=f,C=g;return I!==c[0]&&(T=Zj({inputs:{x:f},attrs:{begin:0,size:[I,l]},backend:t}),C=Zj({inputs:{x:g},attrs:{begin:0,size:I},backend:t}),t.disposeData(f.dataId),t.disposeData(g.dataId)),[T,C,A,b]}};var aK,rK={kernelName:za,backendName:"wasm",setupFunc:function(e){tK=e.wasm.cwrap(za,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{inputIndices:a,inputShape:r,newShape:s}=n;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=t.dataIdMap.get(a.dataId).id,o=t.dataIdMap.get(r.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=a.shape[0],c=br.sizeFromShape(s.shape),d=t.makeOutput([u,c],a.dtype),p=t.dataIdMap.get(d.dataId).id,h=t.makeOutput([c],s.dtype),f=t.dataIdMap.get(h.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;tK(i,o,l,u,p,f,g);const y=t.readSync(m.dataId);let A;switch(y[0]){case 0:A=tf.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break;case 1:A=tf.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break;case 2:A=tf.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{const e=Array.from(t.readSync(r.dataId)),n=Array.from(t.readSync(h.dataId));A=tf.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{const e=Array.from(t.readSync(r.dataId)),n=Array.from(t.readSync(h.dataId));A=tf.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:A=""}if(t.disposeData(m.dataId),A)throw t.disposeData(d.dataId),t.disposeData(h.dataId),new Error(A);return[d,h]}};function sK(e){aK=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function iK(e,t){const{backend:n,inputs:a}=e,{data:r,indices:s,segmentIds:i}=a,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(tf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const c=r.shape.slice();c[0]=u;const d=n.dataIdMap.get(r.dataId).id,p=n.dataIdMap.get(s.dataId).id,h=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(c,r.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;aK(d,kj[r.dtype],r.shape[0],p,h,m,y,t,0);const A=n.readSync(g.dataId);let x;switch(A[0]){case 0:x=tf.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:x=tf.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:x=tf.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(A[1],A[2]);break;case 3:x=tf.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(A[1],A[2],A[3]);break;default:x=""}if(n.disposeData(g.dataId),x)throw n.disposeData(f.dataId),new Error(x);return f}var oK={kernelName:_a,backendName:"wasm",setupFunc:sK,kernelFunc:function(e){return iK(e,!0)}};var lK={kernelName:Oa,backendName:"wasm",setupFunc:sK,kernelFunc:function(e){return iK(e,!1)}};var uK,cK={kernelName:Fa,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=n,o=br.parseAxisParam(i,r.shape)[0],l=tf.prepareSplitSize(r,s,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const n=Zj({inputs:{x:r},attrs:{begin:u,size:t},backend:a});return u[o]+=e,n}))}},dK=Nj(Ca),pK=Nj(La),hK=Cj(Pa);var fK,mK={kernelName:tr,backendName:"wasm",setupFunc:function(e){uK=e.wasm.cwrap(tr,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{alpha:r}=a,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return uK(i,r,kj[s.dtype],l),o}};var gK,yK={kernelName:Wa,backendName:"wasm",setupFunc:function(e){fK=e.wasm.cwrap(Wa,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:r}=n,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:p}=a,{finalShapeSparse:h,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:A,end:x,strides:b}=Io.sliceInfo(r.shape,s,i,o,l,u,c,d,p);let v;if(m)v=jj({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||y){br.assert(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=Io.computeOutShape(A,x,b),n=Zj({inputs:{x:r},backend:t,attrs:{begin:A,size:e}});v=jj({inputs:{x:n},backend:t,attrs:{shape:f}}),t.disposeData(n.dataId)}else{const e=t.makeOutput(h,"float32"),n=t.dataIdMap.get(r.dataId).id,a=new Uint8Array(new Int32Array(br.computeStrides(r.shape)).buffer),s=new Uint8Array(new Int32Array(A).buffer),i=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(b).buffer),l=new Uint8Array(new Int32Array(h).buffer),u=new Uint8Array(new Int32Array(br.computeStrides(h)).buffer),c=t.dataIdMap.get(e.dataId).id;fK(n,a,r.shape.length,s,i,o,l,u,h.length,c),v=jj({inputs:{x:e},backend:t,attrs:{shape:f}}),t.disposeData(e.dataId)}return v}},AK=Cj(Ga);var xK,bK,vK={kernelName:Ea,backendName:"wasm",setupFunc:function(e){gK=e.wasm.cwrap(Ea,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let l=o,u=i;const{transposed:c,axes:d,originalAxes:p,inputWasTransposed:h}=Pj(i,r,t);let f=d;if(h){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(u=c,l=e,f=tf.getInnerMostAxes(f.length,u.shape.length))}tf.assertAxesAreInnerMostDims("sum",f,u.shape.length);const[m,g]=tf.computeOutAndReduceShapes(u.shape,f),y=br.sizeFromShape(g),A=t.makeOutput(m,u.dtype);if(0!==br.sizeFromShape(u.shape)){const e=t.dataIdMap.get(A.dataId).id;gK(l,y,kj[A.dtype],e)}if(h&&t.disposeData(c.dataId),s){const e=tf.expandShapeToKeepDim(A.shape,p);A.shape=e}return A}},wK=Nj(Ha),kK=Nj(ja);var IK;var SK=[Tj,Rj,Fj,Wj,Uj,Gj,Hj,Kj,Jj,tq,nq,aq,iq,lq,dq,pq,hq,gq,Aq,bq,vq,wq,kq,Iq,Nq,Eq,Fq,$q,Mq,Sj,_q,Dq,Lq,Bq,Vq,Gq,Hq,zj,qq,Xq,Kq,Zq,Yq,Qq,eX,nX,rX,oX,lX,dX,pX,hX,gX,AX,bX,vX,wX,kX,SX,TX,CX,RX,$X,MX,zX,_X,OX,Xj,PX,WX,UX,GX,VX,jX,XX,ZX,YX,Yj,JX,eK,nK,rK,oK,lK,cK,dK,pK,hK,mK,yK,AK,vK,wK,kK,{kernelName:qa,backendName:"wasm",setupFunc:function(e){xK=e.wasm.cwrap(qa,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,s=n.dataIdMap.get(r.dataId).id,{reps:i}=a,o=new Array(r.shape.length);for(let p=0;p<o.length;p++)o[p]=r.shape[p]*i[p];const l=new Uint8Array(new Int32Array(r.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,r.dtype),d=n.dataIdMap.get(c.dataId).id;return xK(s,l,r.shape.length,u,o.length,kj[c.dtype],d),c}},{kernelName:Xa,backendName:"wasm",setupFunc:function(e){bK=e.wasm.cwrap(Xa,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{k:r,sorted:s}=n,i=t.dataIdMap.get(a.dataId).id,o=new Uint8Array(new Int32Array(a.shape).buffer),l=a.shape.slice();l[l.length-1]=r;const u=t.makeOutput(l,a.dtype),c=t.dataIdMap.get(u.dataId).id,d=t.makeOutput(l,"int32"),p=t.dataIdMap.get(d.dataId).id;return bK(i,o,a.shape.length,kj[a.dtype],r,s,c,p),[u,d]}},{kernelName:Ka,backendName:"wasm",setupFunc:function(e){IK=e.wasm.cwrap(Ka,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{image:r,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=a,[c,d,p,h]=r.shape,[f,m]=null!=u?u:[d,p],g=[c,f,m,h],y=new Uint8Array(new Int32Array(br.computeStrides(r.shape)).buffer),A=t.makeOutput(g,r.dtype),x=t.dataIdMap.get(A.dataId).id,b=t.dataIdMap.get(r.dataId).id,v=t.dataIdMap.get(s.dataId).id,w="nearest"===i?1:2;let k;switch(o){case"constant":k=1;break;case"reflect":k=2;break;case"wrap":k=3;break;case"nearest":k=4;break;default:k=1}return IK(b,v,s.shape[0]>1,c,f,m,h,p,d,y,r.shape.length-1,w,k,l,x),A}},Dj,{kernelName:Ja,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const i=r.shape[s],o=r.shape.length,l=new Array(o-1);let u=0;for(let h=0;h<o;h++)h!==s&&(l[u++]=r.shape[h]);const c=new Array(i),d=new Array(o).fill(0),p=r.shape.slice();p[s]=1;for(let h=0;h<c.length;h++)d[s]=h,c[h]=Zj({inputs:{x:r},attrs:{begin:d,size:p},backend:n});return c.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l})))}},{kernelName:er,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(0),a}}];for(const B0 of SK)fr(B0);var NK=Ze();NK.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),NK.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(NK.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var TK=E(X()),CK=E(K()),EK=class extends Y{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(WK),BK=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Z(this,cl())}write(e,t,n){const a={id:this.dataIdNextNumber++};return this.move(a,e,t,n,1),a}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=br.now();e();return{kernelMs:br.now()-t}}move(e,t,n,a,r){const s=this.dataIdNextNumber++;if("string"===a){const i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:a,memoryOffset:null,refCount:r})}const i=br.sizeFromShape(n),o=i*br.bytesPerElement(a),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:a,refCount:r}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){const{memoryOffset:a,dtype:r,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===r)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||br.sizeFromShape(s);const o=br.bytesPerElement(r);return function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(a+t*o,a+n*o).buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){if(this.dataIdMap.has(e)){return this.dataIdMap.get(e).refCount}return 0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let a;if(null==n)a=this.write(null,e,t);else{const r=this.dataIdNextNumber++;a={id:r},this.dataIdMap.set(a,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});const s=br.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,s,n)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const a=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),s=br.sizeFromShape(e);switch(t){case"float32":return new Float32Array(a,r,s);case"int32":return new Int32Array(a,r,s);case"bool":return new Uint8Array(a,r,s);default:throw new Error(`Unknown dtype ${t}`)}}};function RK(e,t,n){if(null!=MK)return MK;let a="tfjs-backend-wasm.wasm";return e&&t?a="tfjs-backend-wasm-threaded-simd.wasm":e&&(a="tfjs-backend-wasm-simd.wasm"),null!=_K&&null!=_K[a]?_K[a]:n+a}async function FK(){const[e,t]=await Promise.all([Ze().getAsync("WASM_HAS_SIMD_SUPPORT"),Ze().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,a)=>{const r={};var s;r.locateFile=(n,a)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?RK(e,t,null!=zK?zK:a):a+n},DK&&(r.instantiateWasm=(s=RK(e,t,null!=zK?zK:""),(e,t)=>(br.fetch(s,{credentials:"same-origin"}).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${s}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let i,o=!1;r.onAbort=()=>{if(o)return;if(OK)return;OK=!0;a({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})},t&&e&&null==MK?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+TK.default.toString()],{type:"text/javascript"}),i=(0,TK.default)(r)):i=(0,CK.default)(r),i.then((e=>{o=!0,OK=!1;e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}var $K=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],MK=null,zK=null,_K={},OK=!1,DK=!1;function PK(e,t=!1){if(ll("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),OK)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");MK=e,DK=t}function LK(e,t=!1){if(OK)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"===typeof e)zK=e;else{_K=e;const t=$K.filter((e=>null==_K[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}DK=t}var WK=-1,BK=-1;function UK(e){WK=e}function VK(){if(-1===BK)throw new Error("WASM backend not initialized.");return BK}var GK="0.0.0";kl("wasm",(async()=>{const{wasm:e}=await FK();return new EK(e)}),2);var HK="3.12.0-20211215",jK={tfjs:HK,"tfjs-core":HK,"tfjs-data":HK,"tfjs-layers":HK,"tfjs-converter":HK,"tfjs-backend-cpu":HK,"tfjs-backend-webgl":HK,"tfjs-backend-wasm":HK},qK=(e,t,n)=>{const a=new RegExp("\\b"+t+" \\w+ (\\w+)","ig");e.replace(a,((e,t)=>(n[t]=0,e)))};function XK(){let e=0,t=null,n=!1,a=-1,r=[null,null],s=[],i=null,o=null;const u=nZ(100,100),c={},d=1,p=u.getContext("webgl");if(this.gl=p,!p)return void h("filter: cannot get webgl context");function f(e){return r[e]=r[e]||function(e,t){const n=p.createFramebuffer();p.bindFramebuffer(p.FRAMEBUFFER,n);const a=p.createRenderbuffer();p.bindRenderbuffer(p.RENDERBUFFER,a);const r=p.createTexture();return p.bindTexture(p.TEXTURE_2D,r),p.texImage2D(p.TEXTURE_2D,0,p.RGBA,e,t,0,p.RGBA,p.UNSIGNED_BYTE,null),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,p.LINEAR),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,p.LINEAR),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE),p.framebufferTexture2D(p.FRAMEBUFFER,p.COLOR_ATTACHMENT0,p.TEXTURE_2D,r,0),p.bindTexture(p.TEXTURE_2D,null),p.bindFramebuffer(p.FRAMEBUFFER,null),{fbo:n,texture:r}}(u.width,u.height),r[e]}function m(r=0){if(!o)return;let s=null,i=null,l=!1;s=0===e?t:f(a).texture||null,e++,!n||r&d?(a=(a+1)%2,i=f(a).fbo||null):(i=null,l=e%2===0),p.bindTexture(p.TEXTURE_2D,s),p.bindFramebuffer(p.FRAMEBUFFER,i),p.uniform1f(o.uniform.flipY,l?-1:1),p.drawArrays(p.TRIANGLES,0,6)}function g(e){if(c[e])return o=c[e],p.useProgram((o?o.id:null)||null),o;if(o=new class{constructor(e,t,n){l(this,"uniform",{}),l(this,"attribute",{}),l(this,"gl"),l(this,"id"),l(this,"compile",((e,t)=>{const n=this.gl.createShader(t);return n?(this.gl.shaderSource(n,e),this.gl.compileShader(n),this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS)?n:(h(`filter: gl compile failed: ${this.gl.getShaderInfoLog(n)}`),null)):(h("filter: could not create shader"),null)})),this.gl=e;const a=this.compile(t,this.gl.VERTEX_SHADER),r=this.compile(n,this.gl.FRAGMENT_SHADER);if(this.id=this.gl.createProgram(),a&&r)if(this.id)if(this.gl.attachShader(this.id,a),this.gl.attachShader(this.id,r),this.gl.linkProgram(this.id),this.gl.getProgramParameter(this.id,this.gl.LINK_STATUS)){this.gl.useProgram(this.id),qK(t,"attribute",this.attribute);for(const e in this.attribute)this.attribute[e]=this.gl.getAttribLocation(this.id,e);qK(t,"uniform",this.uniform),qK(n,"uniform",this.uniform);for(const e in this.uniform)this.uniform[e]=this.gl.getUniformLocation(this.id,e)}else h(`filter: gl link failed: ${this.gl.getProgramInfoLog(this.id)}`);else h("filter: could not create webgl program")}}(p,"\n  precision highp float;\n  attribute vec2 pos;\n  attribute vec2 uv;\n  varying vec2 vUv;\n  uniform float flipY;\n  void main(void) {\n    vUv = uv;\n    gl_Position = vec4(pos.x, pos.y*flipY, 0.0, 1.);\n  }\n",e),!o)return h("filter: could not get webgl program"),null;const t=Float32Array.BYTES_PER_ELEMENT,n=4*t;return p.enableVertexAttribArray(o.attribute.pos),p.vertexAttribPointer(o.attribute.pos,2,p.FLOAT,!1,n,0*t),p.enableVertexAttribArray(o.attribute.uv),p.vertexAttribPointer(o.attribute.uv,2,p.FLOAT,!1,n,2*t),c[e]=o,o}const y={colorMatrix:e=>{const t=new Float32Array(e);t[4]/=255,t[9]/=255,t[14]/=255,t[19]/=255;const n=g(1===t[18]&&0===t[3]&&0===t[8]&&0===t[13]&&0===t[15]&&0===t[16]&&0===t[17]&&0===t[19]?"\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform float m[20];\n  void main(void) {\n    vec4 c = texture2D(texture, vUv);\n    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[4];\n    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[9];\n    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[14];\n    gl_FragColor.a = c.a;\n  }\n":"\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform float m[20];\n  void main(void) {\n    vec4 c = texture2D(texture, vUv);\n    gl_FragColor.r = m[0] * c.r + m[1] * c.g + m[2] * c.b + m[3] * c.a + m[4];\n    gl_FragColor.g = m[5] * c.r + m[6] * c.g + m[7] * c.b + m[8] * c.a + m[9];\n    gl_FragColor.b = m[10] * c.r + m[11] * c.g + m[12] * c.b + m[13] * c.a + m[14];\n    gl_FragColor.a = m[15] * c.r + m[16] * c.g + m[17] * c.b + m[18] * c.a + m[19];\n  }\n");n&&(p.uniform1fv(n.uniform.m,t),m())},brightness:e=>{const t=(e||0)+1;y.colorMatrix([t,0,0,0,0,0,t,0,0,0,0,0,t,0,0,0,0,0,1,0])},saturation:e=>{const t=2*(e||0)/3+1,n=-.5*(t-1);y.colorMatrix([t,n,n,0,0,n,t,n,0,0,n,n,t,0,0,0,0,0,1,0])},desaturate:()=>{y.saturation(-1)},contrast:e=>{const t=(e||0)+1,n=-128*(t-1);y.colorMatrix([t,0,0,0,n,0,t,0,0,n,0,0,t,0,n,0,0,0,1,0])},negative:()=>{y.contrast(-2)},hue:e=>{e=(e||0)/180*Math.PI;const t=Math.cos(e),n=Math.sin(e),a=.213,r=.715,s=.072;y.colorMatrix([a+.787*t+n*-a,r+t*-r+n*-r,s+t*-s+.928*n,0,0,a+t*-a+.143*n,r+t*(1-r)+.14*n,s+t*-s+-.283*n,0,0,a+t*-a+-.787*n,r+t*-r+n*r,s+.928*t+n*s,0,0,0,0,0,1,0])},desaturateLuminance:()=>{y.colorMatrix([.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,.2764723,.929708,.0938197,0,-37.1,0,0,0,1,0])},sepia:()=>{y.colorMatrix([.393,.7689999,.18899999,0,0,.349,.6859999,.16799999,0,0,.272,.5339999,.13099999,0,0,0,0,0,1,0])},brownie:()=>{y.colorMatrix([.5997023498159715,.34553243048391263,-.2708298674538042,0,47.43192855600873,-.037703249837783157,.8609577587992641,.15059552388459913,0,-36.96841498319127,.24113635128153335,-.07441037908422492,.44972182064877153,0,-7.562075277591283,0,0,0,1,0])},vintagePinhole:()=>{y.colorMatrix([.6279345635605994,.3202183420819367,-.03965408211312453,0,9.651285835294123,.02578397704808868,.6441188644374771,.03259127616149294,0,7.462829176470591,.0466055556782719,-.0851232987247891,.5241648018700465,0,5.159190588235296,0,0,0,1,0])},kodachrome:()=>{y.colorMatrix([1.1285582396593525,-.3967382283601348,-.03992559172921793,0,63.72958762196502,-.16404339962244616,1.0835251566291304,-.05498805115633132,0,24.732407896706203,-.16786010706155763,-.5603416277695248,1.6014850761964943,0,35.62982807460946,0,0,0,1,0])},technicolor:()=>{y.colorMatrix([1.9125277891456083,-.8545344976951645,-.09155508482755585,0,11.793603434377337,-.3087833385928097,1.7658908555458428,-.10601743074722245,0,-70.35205161461398,-.231103377548616,-.7501899197440212,1.847597816108189,0,30.950940869491138,0,0,0,1,0])},polaroid:()=>{y.colorMatrix([1.438,-.062,-.062,0,0,-.122,1.378,-.122,0,0,-.016,-.016,1.483,0,0,0,0,0,1,0])},shiftToBGR:()=>{y.colorMatrix([0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0])},convolution:e=>{const t=new Float32Array(e),n=1/u.width,a=1/u.height,r=g("\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform vec2 px;\n  uniform float m[9];\n  void main(void) {\n    vec4 c11 = texture2D(texture, vUv - px); // top left\n    vec4 c12 = texture2D(texture, vec2(vUv.x, vUv.y - px.y)); // top center\n    vec4 c13 = texture2D(texture, vec2(vUv.x + px.x, vUv.y - px.y)); // top right\n    vec4 c21 = texture2D(texture, vec2(vUv.x - px.x, vUv.y) ); // mid left\n    vec4 c22 = texture2D(texture, vUv); // mid center\n    vec4 c23 = texture2D(texture, vec2(vUv.x + px.x, vUv.y) ); // mid right\n    vec4 c31 = texture2D(texture, vec2(vUv.x - px.x, vUv.y + px.y) ); // bottom left\n    vec4 c32 = texture2D(texture, vec2(vUv.x, vUv.y + px.y) ); // bottom center\n    vec4 c33 = texture2D(texture, vUv + px ); // bottom right\n    gl_FragColor = \n    c11 * m[0] + c12 * m[1] + c22 * m[2] +\n    c21 * m[3] + c22 * m[4] + c23 * m[5] +\n    c31 * m[6] + c32 * m[7] + c33 * m[8];\n    gl_FragColor.a = c22.a;\n  }\n");r&&(p.uniform1fv(r.uniform.m,t),p.uniform2f(r.uniform.px,n,a),m())},detectEdges:()=>{y.convolution.call(this,[0,1,0,1,-4,1,0,1,0])},sobelX:()=>{y.convolution.call(this,[-1,0,1,-2,0,2,-1,0,1])},sobelY:()=>{y.convolution.call(this,[-1,-2,-1,0,0,0,1,2,1])},sharpen:e=>{const t=e||1;y.convolution.call(this,[0,-1*t,0,-1*t,1+4*t,-1*t,0,-1*t,0])},emboss:e=>{const t=e||1;y.convolution.call(this,[-2*t,-1*t,0,-1*t,1,1*t,0,1*t,2*t])},blur:e=>{const t=e/7/u.width,n=e/7/u.height,a=g("\n  precision highp float;\n  varying vec2 vUv;\n  uniform sampler2D texture;\n  uniform vec2 px;\n  void main(void) {\n    gl_FragColor = vec4(0.0);\n    gl_FragColor += texture2D(texture, vUv + vec2(-7.0*px.x, -7.0*px.y))*0.0044299121055113265;\n    gl_FragColor += texture2D(texture, vUv + vec2(-6.0*px.x, -6.0*px.y))*0.00895781211794;\n    gl_FragColor += texture2D(texture, vUv + vec2(-5.0*px.x, -5.0*px.y))*0.0215963866053;\n    gl_FragColor += texture2D(texture, vUv + vec2(-4.0*px.x, -4.0*px.y))*0.0443683338718;\n    gl_FragColor += texture2D(texture, vUv + vec2(-3.0*px.x, -3.0*px.y))*0.0776744219933;\n    gl_FragColor += texture2D(texture, vUv + vec2(-2.0*px.x, -2.0*px.y))*0.115876621105;\n    gl_FragColor += texture2D(texture, vUv + vec2(-1.0*px.x, -1.0*px.y))*0.147308056121;\n    gl_FragColor += texture2D(texture, vUv                             )*0.159576912161;\n    gl_FragColor += texture2D(texture, vUv + vec2( 1.0*px.x,  1.0*px.y))*0.147308056121;\n    gl_FragColor += texture2D(texture, vUv + vec2( 2.0*px.x,  2.0*px.y))*0.115876621105;\n    gl_FragColor += texture2D(texture, vUv + vec2( 3.0*px.x,  3.0*px.y))*0.0776744219933;\n    gl_FragColor += texture2D(texture, vUv + vec2( 4.0*px.x,  4.0*px.y))*0.0443683338718;\n    gl_FragColor += texture2D(texture, vUv + vec2( 5.0*px.x,  5.0*px.y))*0.0215963866053;\n    gl_FragColor += texture2D(texture, vUv + vec2( 6.0*px.x,  6.0*px.y))*0.00895781211794;\n    gl_FragColor += texture2D(texture, vUv + vec2( 7.0*px.x,  7.0*px.y))*0.0044299121055113265;\n  }\n");a&&(p.uniform2f(a.uniform.px,0,n),m(d),p.uniform2f(a.uniform.px,t,0),m())},pixelate:e=>{const t=e/u.width,n=e/u.height,a=g("\n  precision highp float;\n  varying vec2 vUv;\n  uniform vec2 size;\n  uniform sampler2D texture;\n  vec2 pixelate(vec2 coord, vec2 size) {\n    return floor( coord / size ) * size;\n  }\n  void main(void) {\n    gl_FragColor = vec4(0.0);\n    vec2 coord = pixelate(vUv, size);\n    gl_FragColor += texture2D(texture, coord);\n  }\n");a&&(p.uniform2f(a.uniform.size,t,n),m())}};this.add=function(e){const t=Array.prototype.slice.call(arguments,1),n=y[e];s.push({func:n,args:t})},this.reset=function(){s=[]},this.get=function(){return s},this.apply=function(a){!function(e,t){if(e!==u.width||t!==u.height){if(u.width=e,u.height=t,!i){const e=new Float32Array([-1,-1,0,1,1,-1,1,1,-1,1,0,0,-1,1,0,0,1,-1,1,1,1,1,1,0]);i=p.createBuffer(),p.bindBuffer(p.ARRAY_BUFFER,i),p.bufferData(p.ARRAY_BUFFER,e,p.STATIC_DRAW),p.pixelStorei(p.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0)}p.viewport(0,0,u.width,u.height),r=[null,null]}}(a.width,a.height),e=0,t||(t=p.createTexture()),p.bindTexture(p.TEXTURE_2D,t),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_S,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_WRAP_T,p.CLAMP_TO_EDGE),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MIN_FILTER,p.NEAREST),p.texParameteri(p.TEXTURE_2D,p.TEXTURE_MAG_FILTER,p.NEAREST),p.texImage2D(p.TEXTURE_2D,0,p.RGBA,p.RGBA,p.UNSIGNED_BYTE,a);for(let e=0;e<s.length;e++){n=e===s.length-1;const t=s[e];t.func.apply(this,t.args||[])}return u},this.draw=function(e){return this.add("brightness",0),this.apply(e)}}async function KK(e){const t=4===e.shape.length?ep(e):e,n=Zd(t,3,2),a=[Zc(n[0]),Zc(n[1]),Zc(n[2])],r=[Sc(n[0]),Sc(n[1]),Sc(n[2])],s=await Promise.all(r.map((e=>e.data()))),i=.99*Math.max(s[0][0],s[1][0],s[2][0]),o=[Nc(n[0],a[0]),Nc(n[1],a[1]),Nc(n[2],a[2])],l=[Nc(r[0],a[0]),Nc(r[1],a[1]),Nc(r[2],a[2])],u=[Cl(i,l[0]),Cl(i,l[1]),Cl(i,l[2])],c=[El(o[0],u[0]),El(o[1],u[1]),El(o[2],u[2])],d=tp([c[0],c[1],c[2]],2),p=au(d,[1,t.shape[0],t.shape[1],3]);return fl([...n,...a,...r,...o,...l,...u,...c,d,t]),p}var ZK,YK=2048,JK=null,QK=null,eZ=null,tZ={inputSum:0,cacheDiff:1,sumMethod:0,inputTensor:void 0};function nZ(e,t){let n;if(iZ.browser)if(iZ.worker){if("undefined"===typeof OffscreenCanvas)throw new Error("canvas error: attempted to run in web worker but OffscreenCanvas is not supported");n=new OffscreenCanvas(e,t)}else{if("undefined"===typeof document)throw new Error("canvas error: attempted to run in browser but DOM is not defined");n=document.createElement("canvas"),n.width=e,n.height=t}else"undefined"!==typeof iZ.Canvas?n=new iZ.Canvas(e,t):"undefined"!==typeof globalThis.Canvas&&(n=new globalThis.Canvas(e,t));return n}function aZ(e,t){const n=t||nZ(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),n}async function rZ(e,t,n=!0){if(!e)return t.debug&&h("input error: input is missing"),{tensor:null,canvas:null};if(!(e instanceof Yr)&&!("undefined"!==typeof Image&&e instanceof Image)&&!("undefined"!==typeof iZ.Canvas&&e instanceof iZ.Canvas)&&!("undefined"!==typeof globalThis.Canvas&&e instanceof globalThis.Canvas)&&!("undefined"!==typeof ImageData&&e instanceof ImageData)&&!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap)&&!("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)&&!("undefined"!==typeof HTMLMediaElement&&e instanceof HTMLMediaElement)&&!("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)&&!("undefined"!==typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement)&&!("undefined"!==typeof OffscreenCanvas&&e instanceof OffscreenCanvas))throw new Error("input error: type is not recognized");if(e instanceof Yr){let n=null;if(e.isDisposedInternal)throw new Error("input error: attempted to use tensor but it is disposed");if(!e.shape)throw new Error("input error: attempted to use tensor without a shape");if(3===e.shape.length){if(3===e.shape[2])n=Ku(e,0);else if(4===e.shape[2]){const t=Gd(e,[0,0,0],[-1,-1,3]);n=Ku(t,0),fl(t)}}else 4===e.shape.length&&(3===e.shape[3]?n=_i(e):4===e.shape[3]&&(n=Hd(e,[0,0,0,0],[-1,-1,-1,3])));if(null==n||4!==n.shape.length||1!==n.shape[0]||3!==n.shape[3])throw new Error(`input error: attempted to use tensor with unrecognized shape: ${e.shape}`);if("int32"===n.dtype){const e=zi(n,"float32");fl(n),n=e}return{tensor:n,canvas:t.filter.return?QK:null}}{if("undefined"!==typeof e.readyState&&e.readyState<=2)return t.debug&&h("input stream is not ready"),{tensor:null,canvas:JK};const a=e.naturalWidth||e.videoWidth||e.width||e.shape&&e.shape[1]>0,r=e.naturalHeight||e.videoHeight||e.height||e.shape&&e.shape[2]>0;if(!a||!r)return t.debug&&h("cannot determine input dimensions"),{tensor:null,canvas:JK};let s=a,i=r;if(s>YK&&(s=YK,i=Math.trunc(s*r/a)),i>YK&&(i=YK,s=Math.trunc(i*a/r)),(t.filter.width||0)>0?s=t.filter.width:(t.filter.height||0)>0&&(s=a*((t.filter.height||0)/r)),(t.filter.height||0)>0?i=t.filter.height:(t.filter.width||0)>0&&(i=r*((t.filter.width||0)/a)),!s||!i)throw new Error("input error: cannot determine dimension");JK&&(null==JK?void 0:JK.width)===s&&(null==JK?void 0:JK.height)===i||(JK=nZ(s,i));const o=JK.getContext("2d");if("undefined"!==typeof ImageData&&e instanceof ImageData?o.putImageData(e,0,0):t.filter.flip&&"undefined"!==typeof o.translate?(o.translate(a,0),o.scale(-1,1),o.drawImage(e,0,0,a,r,0,0,null==JK?void 0:JK.width,null==JK?void 0:JK.height),o.setTransform(1,0,0,1,0,0)):o.drawImage(e,0,0,a,r,0,0,null==JK?void 0:JK.width,null==JK?void 0:JK.height),QK&&JK.width===QK.width&&(null==JK?void 0:JK.height)===(null==QK?void 0:QK.height)||(QK=nZ(JK.width,JK.height)),t.filter.enabled&&iZ.webgl.supported){if(ZK||(ZK=iZ.browser?new XK:null),iZ.filter=!!ZK,!ZK||!ZK.add)return t.debug&&h("input process error: cannot initialize filters"),{tensor:null,canvas:JK};ZK.reset(),0!==t.filter.brightness&&ZK.add("brightness",t.filter.brightness),0!==t.filter.contrast&&ZK.add("contrast",t.filter.contrast),0!==t.filter.sharpness&&ZK.add("sharpen",t.filter.sharpness),0!==t.filter.blur&&ZK.add("blur",t.filter.blur),0!==t.filter.saturation&&ZK.add("saturation",t.filter.saturation),0!==t.filter.hue&&ZK.add("hue",t.filter.hue),t.filter.negative&&ZK.add("negative"),t.filter.sepia&&ZK.add("sepia"),t.filter.vintage&&ZK.add("brownie"),t.filter.sepia&&ZK.add("sepia"),t.filter.kodachrome&&ZK.add("kodachrome"),t.filter.technicolor&&ZK.add("technicolor"),t.filter.polaroid&&ZK.add("polaroid"),0!==t.filter.pixelate&&ZK.add("pixelate",t.filter.pixelate),QK=ZK.get()>0?ZK.apply(JK):ZK.draw(JK)}else aZ(JK,QK),ZK&&(ZK=null),iZ.filter=!!ZK;if(!n)return{tensor:null,canvas:QK};if(!QK)throw new Error("canvas error: cannot create output");let l,u=3;if("undefined"!==typeof ImageData&&e instanceof ImageData||e.data&&e.width&&e.height)if(iZ.browser&&co)l=co?co.fromPixels(e):null;else{u=e.data.length/e.height/e.width;l=Ws(new Uint8Array(e.data.buffer),[e.height,e.width,u],"int32")}else if(eZ&&QK.width===eZ.width&&QK.height===eZ.height||(eZ=nZ(QK.width,QK.height)),co&&iZ.browser)"webgl"===t.backend||"humangl"===t.backend||"webgpu"===t.backend?l=co.fromPixels(QK):(eZ=aZ(QK),l=co.fromPixels(eZ));else{const e=aZ(QK).getContext("2d").getImageData(0,0,s,i);u=e.data.length/s/i;l=Ws(new Uint8Array(e.data.buffer),[s,i,u])}if(4===u){const e=Gd(l,[0,0,0],[-1,-1,3]);fl(l),l=e}if(!l)throw new Error("input error: cannot create tensor");const c=zi(l,"float32"),d=t.filter.equalization?await KK(c):Ku(c,0);return fl([l,c]),{tensor:d,canvas:t.filter.return?QK:null}}}var sZ,iZ=new class{constructor(){if(l(this,"browser"),l(this,"node"),l(this,"worker"),l(this,"platform",""),l(this,"agent",""),l(this,"backends",[]),l(this,"initial"),l(this,"filter"),l(this,"tfjs"),l(this,"offscreen"),l(this,"perfadd",!1),l(this,"wasm",{supported:void 0,backend:void 0,simd:void 0,multithread:void 0}),l(this,"webgl",{supported:void 0,backend:void 0,version:void 0,renderer:void 0}),l(this,"webgpu",{supported:void 0,backend:void 0,adapter:void 0}),l(this,"cpu",{model:void 0,flags:[]}),l(this,"kernels",[]),l(this,"Canvas"),l(this,"Image"),l(this,"ImageData"),this.browser="undefined"!==typeof navigator,this.node="undefined"!==typeof r&&"undefined"!==typeof r.versions&&"undefined"!==typeof r.versions.node,this.tfjs={version:jK["tfjs-core"]},this.offscreen="undefined"!==typeof OffscreenCanvas,this.initial=!0,this.worker=this.browser&&this.offscreen?"undefined"!==typeof WorkerGlobalScope:void 0,"undefined"!==typeof navigator){const e=navigator.userAgent.match(/\(([^()]+)\)/g);if(e&&e[0]){const t=e[0].match(/\(([^()]+)\)/g);this.platform=t&&t[0]?t[0].replace(/\(|\)/g,""):"",this.agent=navigator.userAgent.replace(e[0],""),this.platform[1]&&(this.agent=this.agent.replace(e[1],"")),this.agent=this.agent.replace(/  /g," ")}}else"undefined"!==typeof r&&(this.platform=`${r.platform} ${r.arch}`,this.agent=`NodeJS ${r.version}`)}async updateBackend(){this.backends=Object.keys(cl().registryFactory),this.wasm.supported="undefined"!==typeof WebAssembly,this.wasm.backend=this.backends.includes("wasm"),this.wasm.supported&&this.wasm.backend&&"wasm"===xl()&&(this.wasm.simd=await Ze().getAsync("WASM_HAS_SIMD_SUPPORT"),this.wasm.multithread=await Ze().getAsync("WASM_HAS_MULTITHREAD_SUPPORT"));const e=nZ(100,100),t=e?e.getContext("webgl2"):void 0;if(this.webgl.supported="undefined"!==typeof t,this.webgl.backend=this.backends.includes("webgl"),this.webgl.supported&&this.webgl.backend&&("webgl"===xl()||"humangl"===xl())){const e="undefined"!==Il().gpgpu?await Il().getGPGPUContext().gl:null;e&&(this.webgl.version=e.getParameter(e.VERSION),this.webgl.renderer=e.getParameter(e.RENDERER))}this.webgpu.supported=this.browser&&"undefined"!==typeof navigator.gpu,this.webgpu.backend=this.backends.includes("webgpu");try{this.webgpu.supported&&(this.webgpu.adapter=(await navigator.gpu.requestAdapter()).name)}catch(n){this.webgpu.supported=!1}try{this.kernels=hr(xl()).map((e=>e.kernelName.toLowerCase()))}catch(n){}}async updateCPU(){const e={model:"",flags:[]};this.node&&this.platform.startsWith("linux"),this.cpu?this.cpu=e:Object.defineProperty(this,"cpu",{value:e})}},oZ="2.5.6",lZ=[],uZ=["white","black","asian","indian","other"],cZ=[15,23,28,35.5,45.5,55.5,65],dZ=0,pZ=0,hZ=Number.MAX_SAFE_INTEGER;async function fZ(e,t,n,a){var r,s;if(!sZ)return{age:0,gender:"unknown",genderScore:0,race:[]};const i=hZ<((null==(r=t.face.gear)?void 0:r.skipFrames)||0),o=((null==(s=t.face.gear)?void 0:s.skipTime)||0)>m()-pZ;return t.skipAllowed&&o&&i&&dZ===a&&lZ[n]?(hZ++,lZ[n]):(hZ=0,new Promise((async r=>{var s,i;if(!(null==sZ?void 0:sZ.inputs[0].shape))return;const o={};o.resize=Ph.cropAndResize(e,[[0,.1,.9,.9]],[0],[sZ.inputs[0].shape[2],sZ.inputs[0].shape[1]]);const l={age:0,gender:"unknown",genderScore:0,race:[]};(null==(s=t.face.gear)?void 0:s.enabled)&&([o.age,o.gender,o.race]=sZ.execute(o.resize,["age_output","gender_output","race_output"]));const u=await o.gender.data();l.gender=u[0]>u[1]?"male":"female",l.genderScore=Math.round(100*(u[0]>u[1]?u[0]:u[1]))/100;const c=await o.race.data();for(let e=0;e<c.length;e++)c[e]>((null==(i=t.face.gear)?void 0:i.minConfidence)||.2)&&l.race.push({score:Math.round(100*c[e])/100,race:uZ[e]});l.race.sort(((e,t)=>t.score-e.score));const d=Array.from(await o.age.data()).map(((e,t)=>[cZ[t],e])).sort(((e,t)=>t[1]-e[1]));let p=d[0][0];for(let e=1;e<d.length;e++)p+=d[e][1]*(d[e][0]-p);l.age=Math.round(10*p)/10,Object.keys(o).forEach((e=>fl(o[e]))),lZ[n]=l,dZ=a,pZ=m(),r(l)})))}var mZ,gZ={tf255:255,tf1:1,tf2:2,tf05:.5,tf127:127.5,rgb:[.2989,.587,.114]};var yZ,AZ=[],xZ=0,bZ=0,vZ=Number.MAX_SAFE_INTEGER;async function wZ(e,t,n,a){var r,s,i,o;if(!mZ)return{age:0};const l=vZ<((null==(r=t.face.ssrnet)?void 0:r.skipFrames)||0),u=((null==(s=t.face.ssrnet)?void 0:s.skipTime)||0)>m()-bZ;return t.skipAllowed&&l&&u&&xZ===a&&(null==(i=AZ[n])?void 0:i.age)&&(null==(o=AZ[n])?void 0:o.age)>0?(vZ++,AZ[n]):(vZ=0,new Promise((async r=>{if(!(null==mZ?void 0:mZ.inputs)||!mZ.inputs[0]||!mZ.inputs[0].shape)return;const s={};s.resize=Ph.resizeBilinear(e,[mZ.inputs[0].shape[2],mZ.inputs[0].shape[1]],!1),s.enhance=El(s.resize,gZ.tf255);const i={age:0};if(t.face.ssrnet.enabled&&(s.age=mZ.execute(s.enhance)),s.age){const e=await s.age.data();i.age=Math.trunc(10*e[0])/10}Object.keys(s).forEach((e=>fl(s[e]))),AZ[n]=i,xZ=a,bZ=m(),r(i)})))}var kZ,IZ=[],SZ=0,NZ=0,TZ=Number.MAX_SAFE_INTEGER,CZ=[.2989,.587,.114];async function EZ(e,t,n,a){var r,s,i,o;if(!yZ)return{gender:"unknown",genderScore:0};const l=TZ<((null==(r=t.face.ssrnet)?void 0:r.skipFrames)||0),u=((null==(s=t.face.ssrnet)?void 0:s.skipTime)||0)>m()-NZ;return t.skipAllowed&&l&&u&&SZ===a&&(null==(i=IZ[n])?void 0:i.gender)&&(null==(o=IZ[n])?void 0:o.genderScore)>0?(TZ++,IZ[n]):(TZ=0,new Promise((async r=>{if(!(null==yZ?void 0:yZ.inputs[0].shape))return;const s={};s.resize=Ph.resizeBilinear(e,[yZ.inputs[0].shape[2],yZ.inputs[0].shape[1]],!1),s.enhance=hl((()=>{const[e,t,n]=Zd(s.resize,3,3),a=El(e,CZ[0]),r=El(t,CZ[1]),i=El(n,CZ[2]),o=Ml([a,r,i]);return El(Nc(o,gZ.tf05),2)}));const i={gender:"unknown",genderScore:0};t.face.ssrnet.enabled&&(s.gender=yZ.execute(s.enhance));const o=await s.gender.data();i.gender=o[0]>o[1]?"female":"male",i.genderScore=o[0]>o[1]?Math.trunc(100*o[0])/100:Math.trunc(100*o[1])/100,Object.keys(s).forEach((e=>fl(s[e]))),IZ[n]=i,SZ=a,NZ=m(),r(i)})))}var RZ=[],FZ=Number.MAX_SAFE_INTEGER,$Z=0,MZ=0;async function zZ(e,t,n,a){var r,s;if(!kZ)return 0;const i=((null==(r=t.face.antispoof)?void 0:r.skipTime)||0)>m()-MZ,o=FZ<((null==(s=t.face.antispoof)?void 0:s.skipFrames)||0);return t.skipAllowed&&i&&o&&$Z===a&&RZ[n]?(FZ++,RZ[n]):(FZ=0,new Promise((async t=>{const r=Ph.resizeBilinear(e,[(null==kZ?void 0:kZ.inputs[0].shape)?kZ.inputs[0].shape[2]:0,(null==kZ?void 0:kZ.inputs[0].shape)?kZ.inputs[0].shape[1]:0],!1),s=null==kZ?void 0:kZ.execute(r),i=(await s.data())[0];RZ[n]=Math.round(100*i)/100,$Z=a,MZ=m(),fl([r,s]),t(RZ[n])})))}var _Z={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]},OZ={count:468,mouth:13,symmetryLine:[13,_Z.midwayBetweenEyes[0]]},DZ={leftEye:0,rightEye:1,nose:2,mouth:3,leftEar:4,rightEar:5,symmetryLine:[3,2]},PZ=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]}],LZ=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]],WZ=[127,34,139,11,0,37,232,231,120,72,37,39,128,121,47,232,121,128,104,69,67,175,171,148,157,154,155,118,50,101,73,39,40,9,151,108,48,115,131,194,204,211,74,40,185,80,42,183,40,92,186,230,229,118,202,212,214,83,18,17,76,61,146,160,29,30,56,157,173,106,204,194,135,214,192,203,165,98,21,71,68,51,45,4,144,24,23,77,146,91,205,50,187,201,200,18,91,106,182,90,91,181,85,84,17,206,203,36,148,171,140,92,40,39,193,189,244,159,158,28,247,246,161,236,3,196,54,68,104,193,168,8,117,228,31,189,193,55,98,97,99,126,47,100,166,79,218,155,154,26,209,49,131,135,136,150,47,126,217,223,52,53,45,51,134,211,170,140,67,69,108,43,106,91,230,119,120,226,130,247,63,53,52,238,20,242,46,70,156,78,62,96,46,53,63,143,34,227,173,155,133,123,117,111,44,125,19,236,134,51,216,206,205,154,153,22,39,37,167,200,201,208,36,142,100,57,212,202,20,60,99,28,158,157,35,226,113,160,159,27,204,202,210,113,225,46,43,202,204,62,76,77,137,123,116,41,38,72,203,129,142,64,98,240,49,102,64,41,73,74,212,216,207,42,74,184,169,170,211,170,149,176,105,66,69,122,6,168,123,147,187,96,77,90,65,55,107,89,90,180,101,100,120,63,105,104,93,137,227,15,86,85,129,102,49,14,87,86,55,8,9,100,47,121,145,23,22,88,89,179,6,122,196,88,95,96,138,172,136,215,58,172,115,48,219,42,80,81,195,3,51,43,146,61,171,175,199,81,82,38,53,46,225,144,163,110,246,33,7,52,65,66,229,228,117,34,127,234,107,108,69,109,108,151,48,64,235,62,78,191,129,209,126,111,35,143,163,161,246,117,123,50,222,65,52,19,125,141,221,55,65,3,195,197,25,7,33,220,237,44,70,71,139,122,193,245,247,130,33,71,21,162,153,158,159,170,169,150,188,174,196,216,186,92,144,160,161,2,97,167,141,125,241,164,167,37,72,38,12,145,159,160,38,82,13,63,68,71,226,35,111,158,153,154,101,50,205,206,92,165,209,198,217,165,167,97,220,115,218,133,112,243,239,238,241,214,135,169,190,173,133,171,208,32,125,44,237,86,87,178,85,86,179,84,85,180,83,84,181,201,83,182,137,93,132,76,62,183,61,76,184,57,61,185,212,57,186,214,207,187,34,143,156,79,239,237,123,137,177,44,1,4,201,194,32,64,102,129,213,215,138,59,166,219,242,99,97,2,94,141,75,59,235,24,110,228,25,130,226,23,24,229,22,23,230,26,22,231,112,26,232,189,190,243,221,56,190,28,56,221,27,28,222,29,27,223,30,29,224,247,30,225,238,79,20,166,59,75,60,75,240,147,177,215,20,79,166,187,147,213,112,233,244,233,128,245,128,114,188,114,217,174,131,115,220,217,198,236,198,131,134,177,132,58,143,35,124,110,163,7,228,110,25,356,389,368,11,302,267,452,350,349,302,303,269,357,343,277,452,453,357,333,332,297,175,152,377,384,398,382,347,348,330,303,304,270,9,336,337,278,279,360,418,262,431,304,408,409,310,415,407,270,409,410,450,348,347,422,430,434,313,314,17,306,307,375,387,388,260,286,414,398,335,406,418,364,367,416,423,358,327,251,284,298,281,5,4,373,374,253,307,320,321,425,427,411,421,313,18,321,405,406,320,404,405,315,16,17,426,425,266,377,400,369,322,391,269,417,465,464,386,257,258,466,260,388,456,399,419,284,332,333,417,285,8,346,340,261,413,441,285,327,460,328,355,371,329,392,439,438,382,341,256,429,420,360,364,394,379,277,343,437,443,444,283,275,440,363,431,262,369,297,338,337,273,375,321,450,451,349,446,342,467,293,334,282,458,461,462,276,353,383,308,324,325,276,300,293,372,345,447,382,398,362,352,345,340,274,1,19,456,248,281,436,427,425,381,256,252,269,391,393,200,199,428,266,330,329,287,273,422,250,462,328,258,286,384,265,353,342,387,259,257,424,431,430,342,353,276,273,335,424,292,325,307,366,447,345,271,303,302,423,266,371,294,455,460,279,278,294,271,272,304,432,434,427,272,407,408,394,430,431,395,369,400,334,333,299,351,417,168,352,280,411,325,319,320,295,296,336,319,403,404,330,348,349,293,298,333,323,454,447,15,16,315,358,429,279,14,15,316,285,336,9,329,349,350,374,380,252,318,402,403,6,197,419,318,319,325,367,364,365,435,367,397,344,438,439,272,271,311,195,5,281,273,287,291,396,428,199,311,271,268,283,444,445,373,254,339,263,466,249,282,334,296,449,347,346,264,447,454,336,296,299,338,10,151,278,439,455,292,407,415,358,371,355,340,345,372,390,249,466,346,347,280,442,443,282,19,94,370,441,442,295,248,419,197,263,255,359,440,275,274,300,383,368,351,412,465,263,467,466,301,368,389,380,374,386,395,378,379,412,351,419,436,426,322,373,390,388,2,164,393,370,462,461,164,0,267,302,11,12,374,373,387,268,12,13,293,300,301,446,261,340,385,384,381,330,266,425,426,423,391,429,355,437,391,327,326,440,457,438,341,382,362,459,457,461,434,430,394,414,463,362,396,369,262,354,461,457,316,403,402,315,404,403,314,405,404,313,406,405,421,418,406,366,401,361,306,408,407,291,409,408,287,410,409,432,436,410,434,416,411,264,368,383,309,438,457,352,376,401,274,275,4,421,428,262,294,327,358,433,416,367,289,455,439,462,370,326,2,326,370,305,460,455,254,449,448,255,261,446,253,450,449,252,451,450,256,452,451,341,453,452,413,464,463,441,413,414,258,442,441,257,443,442,259,444,443,260,445,444,467,342,445,459,458,250,289,392,290,290,328,460,376,433,435,250,290,392,411,416,433,341,463,464,453,464,465,357,465,412,343,412,399,360,363,440,437,399,456,420,456,363,401,435,288,372,383,353,339,255,249,448,261,255,133,243,190,133,155,112,33,246,247,33,130,25,398,384,286,362,398,414,362,463,341,263,359,467,263,249,255,466,467,260,75,60,166,238,239,79,162,127,139,72,11,37,121,232,120,73,72,39,114,128,47,233,232,128,103,104,67,152,175,148,173,157,155,119,118,101,74,73,40,107,9,108,49,48,131,32,194,211,184,74,185,191,80,183,185,40,186,119,230,118,210,202,214,84,83,17,77,76,146,161,160,30,190,56,173,182,106,194,138,135,192,129,203,98,54,21,68,5,51,4,145,144,23,90,77,91,207,205,187,83,201,18,181,91,182,180,90,181,16,85,17,205,206,36,176,148,140,165,92,39,245,193,244,27,159,28,30,247,161,174,236,196,103,54,104,55,193,8,111,117,31,221,189,55,240,98,99,142,126,100,219,166,218,112,155,26,198,209,131,169,135,150,114,47,217,224,223,53,220,45,134,32,211,140,109,67,108,146,43,91,231,230,120,113,226,247,105,63,52,241,238,242,124,46,156,95,78,96,70,46,63,116,143,227,116,123,111,1,44,19,3,236,51,207,216,205,26,154,22,165,39,167,199,200,208,101,36,100,43,57,202,242,20,99,56,28,157,124,35,113,29,160,27,211,204,210,124,113,46,106,43,204,96,62,77,227,137,116,73,41,72,36,203,142,235,64,240,48,49,64,42,41,74,214,212,207,183,42,184,210,169,211,140,170,176,104,105,69,193,122,168,50,123,187,89,96,90,66,65,107,179,89,180,119,101,120,68,63,104,234,93,227,16,15,85,209,129,49,15,14,86,107,55,9,120,100,121,153,145,22,178,88,179,197,6,196,89,88,96,135,138,136,138,215,172,218,115,219,41,42,81,5,195,51,57,43,61,208,171,199,41,81,38,224,53,225,24,144,110,105,52,66,118,229,117,227,34,234,66,107,69,10,109,151,219,48,235,183,62,191,142,129,126,116,111,143,7,163,246,118,117,50,223,222,52,94,19,141,222,221,65,196,3,197,45,220,44,156,70,139,188,122,245,139,71,162,145,153,159,149,170,150,122,188,196,206,216,92,163,144,161,164,2,167,242,141,241,0,164,37,11,72,12,144,145,160,12,38,13,70,63,71,31,226,111,157,158,154,36,101,205,203,206,165,126,209,217,98,165,97,237,220,218,237,239,241,210,214,169,140,171,32,241,125,237,179,86,178,180,85,179,181,84,180,182,83,181,194,201,182,177,137,132,184,76,183,185,61,184,186,57,185,216,212,186,192,214,187,139,34,156,218,79,237,147,123,177,45,44,4,208,201,32,98,64,129,192,213,138,235,59,219,141,242,97,97,2,141,240,75,235,229,24,228,31,25,226,230,23,229,231,22,230,232,26,231,233,112,232,244,189,243,189,221,190,222,28,221,223,27,222,224,29,223,225,30,224,113,247,225,99,60,240,213,147,215,60,20,166,192,187,213,243,112,244,244,233,245,245,128,188,188,114,174,134,131,220,174,217,236,236,198,134,215,177,58,156,143,124,25,110,7,31,228,25,264,356,368,0,11,267,451,452,349,267,302,269,350,357,277,350,452,357,299,333,297,396,175,377,381,384,382,280,347,330,269,303,270,151,9,337,344,278,360,424,418,431,270,304,409,272,310,407,322,270,410,449,450,347,432,422,434,18,313,17,291,306,375,259,387,260,424,335,418,434,364,416,391,423,327,301,251,298,275,281,4,254,373,253,375,307,321,280,425,411,200,421,18,335,321,406,321,320,405,314,315,17,423,426,266,396,377,369,270,322,269,413,417,464,385,386,258,248,456,419,298,284,333,168,417,8,448,346,261,417,413,285,326,327,328,277,355,329,309,392,438,381,382,256,279,429,360,365,364,379,355,277,437,282,443,283,281,275,363,395,431,369,299,297,337,335,273,321,348,450,349,359,446,467,283,293,282,250,458,462,300,276,383,292,308,325,283,276,293,264,372,447,346,352,340,354,274,19,363,456,281,426,436,425,380,381,252,267,269,393,421,200,428,371,266,329,432,287,422,290,250,328,385,258,384,446,265,342,386,387,257,422,424,430,445,342,276,422,273,424,306,292,307,352,366,345,268,271,302,358,423,371,327,294,460,331,279,294,303,271,304,436,432,427,304,272,408,395,394,431,378,395,400,296,334,299,6,351,168,376,352,411,307,325,320,285,295,336,320,319,404,329,330,349,334,293,333,366,323,447,316,15,315,331,358,279,317,14,316,8,285,9,277,329,350,253,374,252,319,318,403,351,6,419,324,318,325,397,367,365,288,435,397,278,344,439,310,272,311,248,195,281,375,273,291,175,396,199,312,311,268,276,283,445,390,373,339,295,282,296,448,449,346,356,264,454,337,336,299,337,338,151,294,278,455,308,292,415,429,358,355,265,340,372,388,390,466,352,346,280,295,442,282,354,19,370,285,441,295,195,248,197,457,440,274,301,300,368,417,351,465,251,301,389,385,380,386,394,395,379,399,412,419,410,436,322,387,373,388,326,2,393,354,370,461,393,164,267,268,302,12,386,374,387,312,268,13,298,293,301,265,446,340,380,385,381,280,330,425,322,426,391,420,429,437,393,391,326,344,440,438,458,459,461,364,434,394,428,396,262,274,354,457,317,316,402,316,315,403,315,314,404,314,313,405,313,421,406,323,366,361,292,306,407,306,291,408,291,287,409,287,432,410,427,434,411,372,264,383,459,309,457,366,352,401,1,274,4,418,421,262,331,294,358,435,433,367,392,289,439,328,462,326,94,2,370,289,305,455,339,254,448,359,255,446,254,253,449,253,252,450,252,256,451,256,341,452,414,413,463,286,441,414,286,258,441,258,257,442,257,259,443,259,260,444,260,467,445,309,459,250,305,289,290,305,290,460,401,376,435,309,250,392,376,411,433,453,341,464,357,453,465,343,357,412,437,343,399,344,360,440,420,437,456,360,420,363,361,401,288,265,372,353,390,339,249,339,448,255],BZ=([127,234,132,58,172,150,149,148,152,377,378,379,397,288,361,454,356,70,63,105,66,107,336,296,334,293,300,168,6,195,4,98,97,2,326,327,33,160,158,133,153,144,362,385,387,263,373,380,57,40,37,0,267,270,287,321,314,17,84,91,78,81,13,311,308,402,14,178].map((e=>LZ[e])),[33,133,362,263,1,62,308,159,145,386,374,6,102,331,2,13,14,70,105,107,336,334,300,54,10,284,50,280,234,454,58,288,152].map((e=>LZ[e])),[33,133,362,263,1,78,308].map((e=>LZ[e])),e=>[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]),UZ=e=>[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2],VZ=(e,t)=>e?[Math.trunc(Math.max(0,e.startPoint[0])),Math.trunc(Math.max(0,e.startPoint[1])),Math.trunc(Math.min(t.shape[2]||0,e.endPoint[0])-Math.max(0,e.startPoint[0])),Math.trunc(Math.min(t.shape[1]||0,e.endPoint[1])-Math.max(0,e.startPoint[1]))]:[0,0,0,0],GZ=(e,t)=>e?[e.startPoint[0]/(t.shape[2]||0),e.startPoint[1]/(t.shape[1]||0),(e.endPoint[0]-e.startPoint[0])/(t.shape[2]||0),(e.endPoint[1]-e.startPoint[1])/(t.shape[1]||0)]:[0,0,0,0],HZ=(e,t,n)=>{const a=t.shape[1],r=t.shape[2],s=Ph.cropAndResize(t,[[e.startPoint[1]/a,e.startPoint[0]/r,e.endPoint[1]/a,e.endPoint[0]/r]],[0],n),i=Cl(s,gZ.tf255);return fl(s),i},jZ=(e,t)=>{const n=UZ(e),a=BZ(e),r=[t*a[0]/2,t*a[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],landmarks:e.landmarks,confidence:e.confidence}},qZ=e=>{const t=UZ(e),n=BZ(e),a=Math.max(...n)/2;return{startPoint:[Math.round(t[0]-a),Math.round(t[1]-a)],endPoint:[Math.round(t[0]+a),Math.round(t[1]+a)],landmarks:e.landmarks,confidence:e.confidence}},XZ=e=>{const t=e.map((e=>e[0])),n=e.map((e=>e[1]));return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)],landmarks:e}},KZ=[[1,0,0],[0,1,0],[0,0,1]],ZZ=(e,t)=>{return(n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI));var n},YZ=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]],JZ=(e,t)=>{let n=0;for(let a=0;a<e.length;a++)n+=e[a]*t[a];return n},QZ=(e,t)=>{const n=[];for(let a=0;a<e.length;a++)n.push(e[a][t]);return n},eY=(e,t)=>{const n=[],a=e.length;for(let r=0;r<a;r++){n.push([]);for(let s=0;s<a;s++)n[r].push(JZ(e[r],QZ(t,s)))}return n},tY=(e,t)=>{const n=Math.cos(e),a=Math.sin(e),r=[[n,-a,0],[a,n,0],[0,0,1]],s=YZ(t[0],t[1]),i=eY(s,r),o=YZ(-t[0],-t[1]);return eY(i,o)},nY=(e,t)=>[JZ(e,t[0]),JZ(e,t[1])];function aY(e,t,n,a,r){const s=BZ(t),i=e.map((e=>[s[0]/r*(e[0]-r/2),s[1]/r*(e[1]-r/2),e[2]||0])),o=n&&0!==n&&Math.abs(n)>.2,l=o?tY(n,[0,0]):KZ,u=o?i.map((e=>[...nY(e,l),e[2]])):i,c=o?(e=>{const t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],a=[-JZ(t[0],n),-JZ(t[1],n)];return[t[0].concat(a[0]),t[1].concat(a[1]),[0,0,1]]})(a):KZ,d=[...UZ({startPoint:t.startPoint,endPoint:t.endPoint}),1];return u.map((e=>[Math.round(e[0]+JZ(d,c[0])),Math.round(e[1]+JZ(d,c[1])),Math.round(e[2]||0)]))}function rY(e,t,n,a){const r=t.landmarks.length>=OZ.count?OZ.symmetryLine:DZ.symmetryLine;let s,i=0,o=KZ;if(e&&iZ.kernels.includes("rotatewithoffset")){i=ZZ(t.landmarks[r[0]],t.landmarks[r[1]]);if(i&&0!==i&&Math.abs(i)>.2){const e=UZ({startPoint:t.startPoint,endPoint:t.endPoint}),r=[e[0]/n.shape[2],e[1]/n.shape[1]],l=Ph.rotateWithOffset(n,i,0,r);o=tY(-i,e),s=HZ(t,l,[a,a]),fl(l)}else s=HZ(t,n,[a,a])}else s=HZ(t,n,[a,a]);return[i,o,s]}var sY,iY=null,oY=0,lY=null,uY=()=>oY;async function cY(e){var t,n;return iZ.initial&&(sY=null),sY?e.debug&&h("cached model:",sY.modelUrl):(sY=await jS(f(e.modelBasePath,(null==(t=e.face.detector)?void 0:t.modelPath)||"")))&&sY.modelUrl?e.debug&&h("load model:",sY.modelUrl):h("load model failed:",null==(n=e.face.detector)?void 0:n.modelPath),oY=sY.inputs[0].shape?sY.inputs[0].shape[2]:0,lY=_d(oY,"int32"),iY=ip(function(e){const t={strides:[e/16,e/8],anchors:[2,6]},n=[];for(let a=0;a<t.strides.length;a++){const r=t.strides[a],s=Math.floor((e+r-1)/r),i=Math.floor((e+r-1)/r),o=t.anchors[a];for(let e=0;e<s;e++){const t=r*(e+.5);for(let e=0;e<i;e++){const a=r*(e+.5);for(let e=0;e<o;e++)n.push([a,t])}}}return n}(oY)),sY}async function dY(e,t){var n,a,r,s;if(!e||e.isDisposedInternal||4!==e.shape.length||e.shape[1]<1||e.shape[2]<1)return{boxes:[]};const i={};i.resized=Ph.resizeBilinear(e,[oY,oY]),i.div=Cl(i.resized,gZ.tf127),i.normalized=Nc(i.div,gZ.tf05);const o=null==sY?void 0:sY.execute(i.normalized);if(Array.isArray(o)){const e=o.sort(((e,t)=>e.size-t.size));i.concat384=iu([e[0],e[2]],2),i.concat512=iu([e[1],e[3]],2),i.concat=iu([i.concat512,i.concat384],1),i.batch=ep(i.concat,0)}else i.batch=ep(o);fl(o),i.boxes=function(e){const t={};t.boxStarts=lu(e,[0,1],[-1,2]),t.centers=Nl(t.boxStarts,iY),t.boxSizes=lu(e,[0,3],[-1,2]),t.boxSizesNormalized=Cl(t.boxSizes,lY),t.centersNormalized=Cl(t.centers,lY),t.halfBoxSize=Cl(t.boxSizesNormalized,gZ.tf2),t.starts=Nc(t.centersNormalized,t.halfBoxSize),t.ends=Nl(t.centersNormalized,t.halfBoxSize),t.startNormalized=El(t.starts,lY),t.endNormalized=El(t.ends,lY);const n=wu([t.startNormalized,t.endNormalized],1);return Object.keys(t).forEach((e=>fl(t[e]))),n}(i.batch),i.logits=lu(i.batch,[0,0],[-1,1]),i.sigmoid=ou(i.logits),i.scores=ep(i.sigmoid),i.nms=await Ph.nonMaxSuppressionAsync(i.boxes,i.scores,(null==(n=t.face.detector)?void 0:n.maxDetected)||0,(null==(a=t.face.detector)?void 0:a.iouThreshold)||0,(null==(r=t.face.detector)?void 0:r.minConfidence)||0);const l=await i.nms.array(),u=[],c=await i.scores.data();for(let d=0;d<l.length;d++){const e=c[l[d]];if(e>((null==(s=t.face.detector)?void 0:s.minConfidence)||0)){const t={};t.bbox=lu(i.boxes,[l[d],0],[1,-1]),t.slice=lu(i.batch,[l[d],5],[1,-1]),t.squeeze=ep(t.slice),t.landmarks=au(t.squeeze,[6,-1]);const n=await t.bbox.data();u.push({startPoint:[n[0],n[1]],endPoint:[n[2],n[3]],landmarks:await t.landmarks.array(),confidence:e}),Object.keys(t).forEach((e=>fl(t[e])))}}return Object.keys(i).forEach((e=>fl(i[e]))),{boxes:u,scaleFactor:[e.shape[2]/oY,e.shape[1]/oY]}}var pY={};o(pY,{connected:()=>fY,kpt:()=>hY});var hY=["nose","leftEyeInside","leftEye","leftEyeOutside","rightEyeInside","rightEye","rightEyeOutside","leftEar","rightEar","leftMouth","rightMouth","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftPinky","rightPinky","leftIndex","rightIndex","leftThumb","rightThumb","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle","leftHeel","rightHeel","leftFoot","rightFoot","bodyCenter","bodyTop","leftPalm","leftHand","rightPalm","rightHand"],fY={leftLeg:["leftHip","leftKnee","leftAnkle","leftHeel","leftFoot"],rightLeg:["rightHip","rightKnee","rightAnkle","rightHeel","rightFoot"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder","rightShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist","leftPalm"],rightArm:["rightShoulder","rightElbow","rightWrist","rightPalm"],leftEye:["leftEyeInside","leftEye","leftEyeOutside"],rightEye:["rightEyeInside","rightEye","rightEyeOutside"],mouth:["leftMouth","rightMouth"]},mY=[8,16,32,32,32];function gY(e,t=[1,1]){const n=[e.map((e=>e[0])),e.map((e=>e[1]))],a=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],s=[a[0],a[1],r[0]-a[0],r[1]-a[1]];return{box:s,boxRaw:[s[0]/t[0],s[1]/t[1],s[2]/t[0],s[3]/t[1]]}}function yY(e,t=[1,1]){const n=[e.map((e=>e[0])),e.map((e=>e[1]))],a=[Math.min(...n[0]),Math.min(...n[1])],r=[Math.max(...n[0]),Math.max(...n[1])],s=[(a[0]+r[0])/2,(a[1]+r[1])/2],i=Math.max(s[0]-a[0],s[1]-a[1],-s[0]+r[0],-s[1]+r[1]),o=[Math.trunc(s[0]-i),Math.trunc(s[1]-i),Math.trunc(2*i),Math.trunc(2*i)];return{box:o,boxRaw:[o[0]/t[0],o[1]/t[1],o[2]/t[0],o[3]/t[1]]}}function AY(e,t){const n=[e[2]*t,e[3]*t];return[e[0]-(n[0]-e[2])/2,e[1]-(n[1]-e[3])/2,n[0],n[1]]}function xY(e){return[Math.max(0,e[1]),Math.max(0,e[0]),Math.min(1,e[3]+e[1]),Math.min(1,e[2]+e[0])]}var bY=!0,vY={detector:null,landmarks:null},wY={detector:[224,224],landmarks:[256,256]},kY=Number.MAX_SAFE_INTEGER,IY=["ld_3d","activation_segmentation","activation_heatmap","world_3d","output_poseflag"],SY=null,NY=[[0,0],[0,0],[0,0],[0,0]],TY=0,CY=e=>1-1/(1+Math.exp(e));async function EY(e){if(bY&&(vY.detector=null),!vY.detector&&e.body.detector&&e.body.detector.modelPath){vY.detector=await jS(f(e.modelBasePath,e.body.detector.modelPath||""));const t=Object.values(vY.detector.modelSignature.inputs);wY.detector[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,wY.detector[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,vY.detector&&vY.detector.modelUrl?e.debug&&h("load model:",vY.detector.modelUrl):h("load model failed:",e.body.detector.modelPath)}else e.debug&&vY.detector&&h("cached model:",vY.detector.modelUrl);return await async function(){const e=[];let t=0;for(;t<5;){let n=0,a=t;for(;a<mY.length&&mY[a]===mY[t];)n+=2,a++;const r=mY[t],s=Math.ceil(224/r),i=Math.ceil(224/r);for(let t=0;t<s;++t)for(let a=0;a<i;++a)for(let r=0;r<n;++r)e.push({x:(a+.5)/i,y:(t+.5)/s});t=a}({x:sp(e.map((e=>e.x))),y:sp(e.map((e=>e.y)))})}(),vY.detector}async function RY(e,t,n){var a;const r={};[r.ld,r.segmentation,r.heatmap,r.world,r.poseflag]=null==(a=vY.landmarks)?void 0:a.execute(e,IY);const s=(await r.poseflag.data())[0],i=await r.ld.data();Object.keys(r).forEach((e=>fl(r[e])));const o=[];for(let d=0;d<i.length/5;d++){const e=CY(i[5*d+3]),t=CY(i[5*d+4]),a=Math.trunc(100*e*t*s)/100,r=[i[5*d+0]/wY.landmarks[0],i[5*d+1]/wY.landmarks[1],i[5*d+2]+0],l=[Math.trunc(n[0]*r[0]),Math.trunc(n[1]*r[1]),r[2]];o.push({part:hY[d],positionRaw:r,position:l,score:a})}if(s<(t.body.minConfidence||0))return null;const l=function(e,t){for(const n of e)n.position=[Math.trunc(n.position[0]*(t[0]+NY[2][0]+NY[2][1])/t[0]-NY[2][0]),Math.trunc(n.position[1]*(t[1]+NY[1][0]+NY[1][1])/t[1]-NY[1][0]),n.position[2]],n.positionRaw=[n.position[0]/t[0],n.position[1]/t[1],n.position[2]];return e}(o,n),u=gY(l.map((e=>e.position)),[n[0],n[1]]),c={};for(const[d,p]of Object.entries(fY)){const e=[];for(let t=0;t<p.length-1;t++){const n=l.find((e=>e.part===p[t])),a=l.find((e=>e.part===p[t+1]));n&&a&&e.push([n.position,a.position])}c[d]=e}return{id:0,score:Math.trunc(100*s)/100,box:u.box,boxRaw:u.boxRaw,keypoints:l,annotations:c}}async function FY(e,t){const n=[e.shape[2]||0,e.shape[1]||0],a=(t.body.skipTime||0)>m()-TY,r=kY<(t.body.skipFrames||0);if(t.skipAllowed&&a&&r&&null!==SY)kY++;else{const a={};a.landmarks=await async function(e,t){const n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;let a;if(e.shape[1]!==e.shape[2]){const r=[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],s=[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0];NY=[[0,0],r,s,[0,0]],n.pad=od(n.cropped||e,NY),n.resize=Ph.resizeBilinear(n.pad,[t,t]),a=Cl(n.resize,gZ.tf255)}else e.shape[1]!==t?(n.resize=Ph.resizeBilinear(n.cropped||e,[t,t]),a=Cl(n.resize,gZ.tf255)):a=Cl(n.cropped||e,gZ.tf255);return Object.keys(n).forEach((e=>fl(n[e]))),a}(e,256),SY=await RY(a.landmarks,t,n),Object.keys(a).forEach((e=>fl(a[e]))),TY=m(),kY=0}return SY?[SY]:[]}var $Y,MY=[{class:1,label:"person"},{class:2,label:"bicycle"},{class:3,label:"car"},{class:4,label:"motorcycle"},{class:5,label:"airplane"},{class:6,label:"bus"},{class:7,label:"train"},{class:8,label:"truck"},{class:9,label:"boat"},{class:10,label:"traffic light"},{class:11,label:"fire hydrant"},{class:12,label:"stop sign"},{class:13,label:"parking meter"},{class:14,label:"bench"},{class:15,label:"bird"},{class:16,label:"cat"},{class:17,label:"dog"},{class:18,label:"horse"},{class:19,label:"sheep"},{class:20,label:"cow"},{class:21,label:"elephant"},{class:22,label:"bear"},{class:23,label:"zebra"},{class:24,label:"giraffe"},{class:25,label:"backpack"},{class:26,label:"umbrella"},{class:27,label:"handbag"},{class:28,label:"tie"},{class:29,label:"suitcase"},{class:30,label:"frisbee"},{class:31,label:"skis"},{class:32,label:"snowboard"},{class:33,label:"sports ball"},{class:34,label:"kite"},{class:35,label:"baseball bat"},{class:36,label:"baseball glove"},{class:37,label:"skateboard"},{class:38,label:"surfboard"},{class:39,label:"tennis racket"},{class:40,label:"bottle"},{class:41,label:"wine glass"},{class:42,label:"cup"},{class:43,label:"fork"},{class:44,label:"knife"},{class:45,label:"spoon"},{class:46,label:"bowl"},{class:47,label:"banana"},{class:48,label:"apple"},{class:49,label:"sandwich"},{class:50,label:"orange"},{class:51,label:"broccoli"},{class:52,label:"carrot"},{class:53,label:"hot dog"},{class:54,label:"pizza"},{class:55,label:"donut"},{class:56,label:"cake"},{class:57,label:"chair"},{class:58,label:"couch"},{class:59,label:"potted plant"},{class:60,label:"bed"},{class:61,label:"dining table"},{class:62,label:"toilet"},{class:63,label:"tv"},{class:64,label:"laptop"},{class:65,label:"mouse"},{class:66,label:"remote"},{class:67,label:"keyboard"},{class:68,label:"cell phone"},{class:69,label:"microwave"},{class:70,label:"oven"},{class:71,label:"toaster"},{class:72,label:"sink"},{class:73,label:"refrigerator"},{class:74,label:"book"},{class:75,label:"clock"},{class:76,label:"vase"},{class:77,label:"scissors"},{class:78,label:"teddy bear"},{class:79,label:"hair drier"},{class:80,label:"toothbrush"}],zY=0,_Y=[],OY=0,DY=Number.MAX_SAFE_INTEGER;async function PY(e,t){const n=(t.object.skipTime||0)>m()-OY,a=DY<(t.object.skipFrames||0);return t.skipAllowed&&n&&a&&_Y.length>0?(DY++,_Y):(DY=0,new Promise((async n=>{const a=[e.shape[2],e.shape[1]],r=Ph.resizeBilinear(e,[zY,zY]),s=t.object.enabled?null==$Y?void 0:$Y.execute(r,["tower_0/detections"]):null;OY=m(),fl(r);const i=await async function(e,t,n){if(!e)return[];const a={},r=[],s=await e.array();a.squeeze=ep(e);const i=Zd(a.squeeze,6,1);a.stack=tp([i[1],i[0],i[3],i[2]],1),a.boxes=ep(a.stack),a.scores=ep(i[4]),a.classes=ep(i[5]),fl([e,...i]),a.nms=await Ph.nonMaxSuppressionAsync(a.boxes,a.scores,n.object.maxDetected,n.object.iouThreshold,n.object.minConfidence);const o=await a.nms.data();let l=0;for(const u of Array.from(o)){const e=Math.trunc(100*s[0][u][4])/100,n=s[0][u][5],a=MY[n].label,[i,o]=[s[0][u][0]/zY,s[0][u][1]/zY],c=[i,o,s[0][u][2]/zY-i,s[0][u][3]/zY-o],d=[Math.trunc(c[0]*t[0]),Math.trunc(c[1]*t[1]),Math.trunc(c[2]*t[0]),Math.trunc(c[3]*t[1])];r.push({id:l++,score:e,class:n,label:a,box:d,boxRaw:c})}return Object.keys(a).forEach((e=>fl(a[e]))),r}(s,a,t);_Y=i,n(i)})))}var LY={};o(LY,{connected:()=>UY,kpt:()=>BY});var WY,BY=["head","neck","rightShoulder","rightElbow","rightWrist","chest","leftShoulder","leftElbow","leftWrist","bodyCenter","rightHip","rightKnee","rightAnkle","leftHip","leftKnee","leftAnkle"],UY={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},VY=0,GY={id:0,keypoints:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,annotations:{}},HY=Number.MAX_SAFE_INTEGER;async function jY(e,t){const[n,a]=e.shape,r=au(e,[a*n]),s=Sc(r,0),i=(await s.data())[0];if(fl([r,s]),i>t){const e=Ol(r,0),t=Qc(e,n),a=(await t.data())[0],s=Cl(e,_d(n,"int32")),o=(await s.data())[0];return fl([t,s]),[a,o,i]}return[0,0,i]}async function qY(e,t){const n=(t.body.skipTime||0)>m()-VY,a=HY<(t.body.skipFrames||0);return t.skipAllowed&&n&&a&&Object.keys(GY.keypoints).length>0?(HY++,[GY]):(HY=0,new Promise((async n=>{var a;const r=hl((()=>{if(!(null==WY?void 0:WY.inputs[0].shape))return null;const t=Ph.resizeBilinear(e,[WY.inputs[0].shape[2],WY.inputs[0].shape[1]],!1),n=El(t,gZ.tf2);return Nc(n,gZ.tf1)}));let s;if(t.body.enabled&&(s=null==WY?void 0:WY.execute(r)),VY=m(),fl(r),s){GY.keypoints.length=0;const n=s.squeeze();fl(s);const r=n.unstack(2);fl(n);for(let s=0;s<r.length;s++){const[n,i,o]=await jY(r[s],t.body.minConfidence);o>((null==(a=t.body)?void 0:a.minConfidence)||0)&&GY.keypoints.push({score:Math.round(100*o)/100,part:BY[s],positionRaw:[n/WY.inputs[0].shape[2],i/WY.inputs[0].shape[1]],position:[Math.round(e.shape[2]*n/WY.inputs[0].shape[2]),Math.round(e.shape[1]*i/WY.inputs[0].shape[1])]})}r.forEach((e=>fl(e)))}GY.score=GY.keypoints.reduce(((e,t)=>t.score>e?t.score:e),0);const i=GY.keypoints.map((e=>e.position[0])),o=GY.keypoints.map((e=>e.position[1]));GY.box=[Math.min(...i),Math.min(...o),Math.max(...i)-Math.min(...i),Math.max(...o)-Math.min(...o)];const l=GY.keypoints.map((e=>e.positionRaw[0])),u=GY.keypoints.map((e=>e.positionRaw[1]));GY.boxRaw=[Math.min(...l),Math.min(...u),Math.max(...l)-Math.min(...l),Math.max(...u)-Math.min(...u)];for(const[e,c]of Object.entries(UY)){const n=[];for(let e=0;e<c.length-1;e++){const a=GY.keypoints.find((t=>t.part===c[e])),r=GY.keypoints.find((t=>t.part===c[e+1]));a&&r&&a.score>(t.body.minConfidence||0)&&r.score>(t.body.minConfidence||0)&&n.push([a.position,r.position])}GY.annotations[e]=n}n([GY])})))}var XY,KY,ZY=["angry","disgust","fear","happy","sad","surprise","neutral"],YY=[],JY=0,QY=0,eJ=Number.MAX_SAFE_INTEGER;async function tJ(e,t,n,a){var r,s;if(!XY)return[];const i=eJ<((null==(r=t.face.emotion)?void 0:r.skipFrames)||0),o=((null==(s=t.face.emotion)?void 0:s.skipTime)||0)>m()-QY;return t.skipAllowed&&o&&i&&JY===a&&YY[n]&&YY[n].length>0?(eJ++,YY[n]):(eJ=0,new Promise((async r=>{var s,i;const o=[];if(null==(s=t.face.emotion)?void 0:s.enabled){const n={},a=(null==XY?void 0:XY.inputs[0].shape)?XY.inputs[0].shape[2]:0;n.resize=Ph.resizeBilinear(e,[a,a],!1),n.channels=El(n.resize,gZ.rgb),n.grayscale=Tc(n.channels,3,!0),n.grayscaleSub=Nc(n.grayscale,gZ.tf05),n.grayscaleMul=El(n.grayscaleSub,gZ.tf2),n.emotion=null==XY?void 0:XY.execute(n.grayscaleMul),QY=m();const r=await n.emotion.data();for(let e=0;e<r.length;e++)r[e]>((null==(i=t.face.emotion)?void 0:i.minConfidence)||0)&&o.push({score:Math.min(.99,Math.trunc(100*r[e])/100),emotion:ZY[e]});o.sort(((e,t)=>t.score-e.score)),Object.keys(n).forEach((e=>fl(n[e])))}YY[n]=o,JY=a,r(o)})))}var nJ,aJ=[],rJ=0,sJ=0,iJ=Number.MAX_SAFE_INTEGER;async function oJ(e,t,n,a){var r,s;if(!KY)return[];const i=iJ<((null==(r=t.face.embedding)?void 0:r.skipFrames)||0),o=((null==(s=t.face.embedding)?void 0:s.skipTime)||0)>m()-sJ;return t.skipAllowed&&o&&i&&rJ===a&&aJ[n]?(iJ++,aJ[n]):new Promise((async r=>{var s;let i=[];if((null==(s=t.face.embedding)?void 0:s.enabled)&&(null==KY?void 0:KY.inputs[0].shape)){const t={};t.crop=Ph.resizeBilinear(e,[KY.inputs[0].shape[2],KY.inputs[0].shape[1]],!1),t.data=null==KY?void 0:KY.execute(t.crop);const n=await t.data.data();i=Array.from(n)}aJ[n]=i,rJ=a,sJ=m(),r(i)}))}var lJ=0,uJ=_Z.leftEyeLower0,cJ=_Z.rightEyeLower0,dJ={leftBounds:[uJ[0],uJ[uJ.length-1]],rightBounds:[cJ[0],cJ[cJ.length-1]]},pJ=3,hJ=4,fJ=71,mJ=76;function gJ(e,t,n,a){for(let r=0;r<PZ.length;r++){const{key:s,indices:i}=PZ[r],o=_Z[`${n}${s}`];if(!a||a.includes(s))for(let n=0;n<i.length;n++){const a=i[n];e[o[n]]=[t[a][0],t[a][1],(t[a][2]+e[o[n]][2])/2]}}}var yJ=(e,t,n,a,r,s=!1)=>{const i=qZ(jZ(XZ([e[n],e[a]]),2.3)),o=BZ(i);let l=Ph.cropAndResize(t,[[i.startPoint[1]/r,i.startPoint[0]/r,i.endPoint[1]/r,i.endPoint[0]/r]],[0],[lJ,lJ]);if(s&&iZ.kernels.includes("flipleftright")){const e=Ph.flipLeftRight(l);fl(l),l=e}return{box:i,boxSize:o,crop:l}},AJ=(e,t,n,a=!1)=>{const r=[];for(let s=0;s<mJ;s++){const i=e[3*s],o=e[3*s+1],l=e[3*s+2];r.push([(a?1-i/lJ:i/lJ)*n[0]+t.startPoint[0],o/lJ*n[1]+t.startPoint[1],l])}return{rawCoords:r,iris:r.slice(fJ)}},xJ=(e,t,n)=>{const a=e[_Z[`${n}EyeUpper0`][pJ]][2],r=e[_Z[`${n}EyeLower0`][hJ]][2],s=(a+r)/2;return t.map(((e,t)=>{let n=s;return 2===t?n=a:4===t&&(n=r),[e[0],e[1],n]}))};async function bJ(e,t,n,a){if(!nJ)return n.debug&&h("face mesh iris detection requested, but model is not loaded"),e;const{box:r,boxSize:s,crop:i}=yJ(e,t,dJ.leftBounds[0],dJ.leftBounds[1],a,!0),{box:o,boxSize:l,crop:u}=yJ(e,t,dJ.rightBounds[0],dJ.rightBounds[1],a,!0),c=iu([i,u]);fl(i),fl(u);const d=nJ.execute(c);fl(c);const p=await d.data();fl(d);const f=p.slice(0,3*mJ),{rawCoords:m,iris:g}=AJ(f,r,s,!0),y=p.slice(3*mJ),{rawCoords:A,iris:x}=AJ(y,o,l),b=(e=>e[dJ.leftBounds[0]][2]-e[dJ.rightBounds[0]][2])(e);Math.abs(b)<30?(gJ(e,m,"left",null),gJ(e,A,"right",null)):b<1?gJ(e,m,"left",["EyeUpper0","EyeLower0"]):gJ(e,A,"right",["EyeUpper0","EyeLower0"]);const v=xJ(e,g,"left"),w=xJ(e,x,"right");return e.concat(v).concat(w)}var vJ=[],wJ=null,kJ=0,IJ=Number.MAX_SAFE_INTEGER,SJ=0;var NJ,TJ=WZ,CJ=LZ,EJ=[],RJ=0,FJ=0,$J=Number.MAX_SAFE_INTEGER;function MJ(e){const t=e.image||e.tensor||e;if(!(null==NJ?void 0:NJ.inputs[0].shape))return t;const n=Ph.resizeBilinear(t,[NJ.inputs[0].shape[2],NJ.inputs[0].shape[1]],!1),a=El(n,gZ.tf255);return fl(n),a}async function zJ(e,t,n,a){var r,s,i,o;if(!NJ)return{age:0,gender:"unknown",genderScore:0,descriptor:[]};const l=$J<((null==(r=t.face.description)?void 0:r.skipFrames)||0),u=((null==(s=t.face.description)?void 0:s.skipTime)||0)>m()-RJ;return t.skipAllowed&&l&&u&&FJ===a&&(null==(i=EJ[n])?void 0:i.age)&&(null==(o=EJ[n])?void 0:o.age)>0?($J++,EJ[n]):($J=0,new Promise((async r=>{var s,i;const o={age:0,gender:"unknown",genderScore:0,descriptor:[]};if(null==(s=t.face.description)?void 0:s.enabled){const n=MJ(e),a=null==NJ?void 0:NJ.execute(n);RJ=m(),fl(n);const r=await a.find((e=>1===e.shape[1])),s=await r.data(),l=Math.trunc(200*Math.abs(s[0]-.5))/100;l>((null==(i=t.face.description)?void 0:i.minConfidence)||0)&&(o.gender=s[0]<=.5?"female":"male",o.genderScore=Math.min(.99,l));const u=Ol(a.find((e=>100===e.shape[1])),1),c=(await u.data())[0];fl(u);const d=a.find((e=>100===e.shape[1])),p=await d.data();o.age=Math.round(p[c-1]>p[c+1]?10*c-100*p[c-1]:10*c+100*p[c+1])/10;const h=a.find((e=>1024===e.shape[1])),f=h?await h.data():[];o.descriptor=Array.from(f),a.forEach((e=>fl(e)))}EJ[n]=o,FJ=a,r(o)})))}function _J(e){return[Math.abs(e.endPoint[0]-e.startPoint[0]),Math.abs(e.endPoint[1]-e.startPoint[1])]}function OJ(e){return[e.startPoint[0]+(e.endPoint[0]-e.startPoint[0])/2,e.startPoint[1]+(e.endPoint[1]-e.startPoint[1])/2]}function DJ(e,t,n){const a=t.shape[1],r=t.shape[2],s=[[e.startPoint[1]/a,e.startPoint[0]/r,e.endPoint[1]/a,e.endPoint[0]/r]];return Ph.cropAndResize(t,s,[0],n)}function PJ(e,t){return{startPoint:[e.startPoint[0]*t[0],e.startPoint[1]*t[1]],endPoint:[e.endPoint[0]*t[0],e.endPoint[1]*t[1]],palmLandmarks:e.palmLandmarks.map((e=>[e[0]*t[0],e[1]*t[1]])),confidence:e.confidence}}function LJ(e,t=1.5){const n=OJ(e),a=_J(e),r=[t*a[0]/2,t*a[1]/2];return{startPoint:[n[0]-r[0],n[1]-r[1]],endPoint:[n[0]+r[0],n[1]+r[1]],palmLandmarks:e.palmLandmarks}}function WJ(e){const t=OJ(e),n=_J(e),a=Math.max(...n)/2;return{startPoint:[t[0]-a,t[1]-a],endPoint:[t[0]+a,t[1]+a],palmLandmarks:e.palmLandmarks}}function BJ(e,t){const n=Math.PI/2-Math.atan2(-(t[1]-e[1]),t[0]-e[0]);return(a=n)-2*Math.PI*Math.floor((a+Math.PI)/(2*Math.PI));var a}var UJ=(e,t)=>[[1,0,e],[0,1,t],[0,0,1]];function VJ(e,t){let n=0;for(let a=0;a<e.length;a++)n+=e[a]*t[a];return n}function GJ(e,t){const n=[];for(let a=0;a<e.length;a++)n.push(e[a][t]);return n}function HJ(e,t){const n=[],a=e.length;for(let r=0;r<a;r++){n.push([]);for(let s=0;s<a;s++)n[r].push(VJ(e[r],GJ(t,s)))}return n}function jJ(e,t){const n=Math.cos(e),a=Math.sin(e),r=[[n,-a,0],[a,n,0],[0,0,1]],s=HJ(UJ(t[0],t[1]),r);return HJ(s,UJ(-t[0],-t[1]))}function qJ(e,t){return[VJ(e,t[0]),VJ(e,t[1])]}var XJ=[{x:.015625,y:.015625},{x:.015625,y:.015625},{x:.046875,y:.015625},{x:.046875,y:.015625},{x:.078125,y:.015625},{x:.078125,y:.015625},{x:.109375,y:.015625},{x:.109375,y:.015625},{x:.140625,y:.015625},{x:.140625,y:.015625},{x:.171875,y:.015625},{x:.171875,y:.015625},{x:.203125,y:.015625},{x:.203125,y:.015625},{x:.234375,y:.015625},{x:.234375,y:.015625},{x:.265625,y:.015625},{x:.265625,y:.015625},{x:.296875,y:.015625},{x:.296875,y:.015625},{x:.328125,y:.015625},{x:.328125,y:.015625},{x:.359375,y:.015625},{x:.359375,y:.015625},{x:.390625,y:.015625},{x:.390625,y:.015625},{x:.421875,y:.015625},{x:.421875,y:.015625},{x:.453125,y:.015625},{x:.453125,y:.015625},{x:.484375,y:.015625},{x:.484375,y:.015625},{x:.515625,y:.015625},{x:.515625,y:.015625},{x:.546875,y:.015625},{x:.546875,y:.015625},{x:.578125,y:.015625},{x:.578125,y:.015625},{x:.609375,y:.015625},{x:.609375,y:.015625},{x:.640625,y:.015625},{x:.640625,y:.015625},{x:.671875,y:.015625},{x:.671875,y:.015625},{x:.703125,y:.015625},{x:.703125,y:.015625},{x:.734375,y:.015625},{x:.734375,y:.015625},{x:.765625,y:.015625},{x:.765625,y:.015625},{x:.796875,y:.015625},{x:.796875,y:.015625},{x:.828125,y:.015625},{x:.828125,y:.015625},{x:.859375,y:.015625},{x:.859375,y:.015625},{x:.890625,y:.015625},{x:.890625,y:.015625},{x:.921875,y:.015625},{x:.921875,y:.015625},{x:.953125,y:.015625},{x:.953125,y:.015625},{x:.984375,y:.015625},{x:.984375,y:.015625},{x:.015625,y:.046875},{x:.015625,y:.046875},{x:.046875,y:.046875},{x:.046875,y:.046875},{x:.078125,y:.046875},{x:.078125,y:.046875},{x:.109375,y:.046875},{x:.109375,y:.046875},{x:.140625,y:.046875},{x:.140625,y:.046875},{x:.171875,y:.046875},{x:.171875,y:.046875},{x:.203125,y:.046875},{x:.203125,y:.046875},{x:.234375,y:.046875},{x:.234375,y:.046875},{x:.265625,y:.046875},{x:.265625,y:.046875},{x:.296875,y:.046875},{x:.296875,y:.046875},{x:.328125,y:.046875},{x:.328125,y:.046875},{x:.359375,y:.046875},{x:.359375,y:.046875},{x:.390625,y:.046875},{x:.390625,y:.046875},{x:.421875,y:.046875},{x:.421875,y:.046875},{x:.453125,y:.046875},{x:.453125,y:.046875},{x:.484375,y:.046875},{x:.484375,y:.046875},{x:.515625,y:.046875},{x:.515625,y:.046875},{x:.546875,y:.046875},{x:.546875,y:.046875},{x:.578125,y:.046875},{x:.578125,y:.046875},{x:.609375,y:.046875},{x:.609375,y:.046875},{x:.640625,y:.046875},{x:.640625,y:.046875},{x:.671875,y:.046875},{x:.671875,y:.046875},{x:.703125,y:.046875},{x:.703125,y:.046875},{x:.734375,y:.046875},{x:.734375,y:.046875},{x:.765625,y:.046875},{x:.765625,y:.046875},{x:.796875,y:.046875},{x:.796875,y:.046875},{x:.828125,y:.046875},{x:.828125,y:.046875},{x:.859375,y:.046875},{x:.859375,y:.046875},{x:.890625,y:.046875},{x:.890625,y:.046875},{x:.921875,y:.046875},{x:.921875,y:.046875},{x:.953125,y:.046875},{x:.953125,y:.046875},{x:.984375,y:.046875},{x:.984375,y:.046875},{x:.015625,y:.078125},{x:.015625,y:.078125},{x:.046875,y:.078125},{x:.046875,y:.078125},{x:.078125,y:.078125},{x:.078125,y:.078125},{x:.109375,y:.078125},{x:.109375,y:.078125},{x:.140625,y:.078125},{x:.140625,y:.078125},{x:.171875,y:.078125},{x:.171875,y:.078125},{x:.203125,y:.078125},{x:.203125,y:.078125},{x:.234375,y:.078125},{x:.234375,y:.078125},{x:.265625,y:.078125},{x:.265625,y:.078125},{x:.296875,y:.078125},{x:.296875,y:.078125},{x:.328125,y:.078125},{x:.328125,y:.078125},{x:.359375,y:.078125},{x:.359375,y:.078125},{x:.390625,y:.078125},{x:.390625,y:.078125},{x:.421875,y:.078125},{x:.421875,y:.078125},{x:.453125,y:.078125},{x:.453125,y:.078125},{x:.484375,y:.078125},{x:.484375,y:.078125},{x:.515625,y:.078125},{x:.515625,y:.078125},{x:.546875,y:.078125},{x:.546875,y:.078125},{x:.578125,y:.078125},{x:.578125,y:.078125},{x:.609375,y:.078125},{x:.609375,y:.078125},{x:.640625,y:.078125},{x:.640625,y:.078125},{x:.671875,y:.078125},{x:.671875,y:.078125},{x:.703125,y:.078125},{x:.703125,y:.078125},{x:.734375,y:.078125},{x:.734375,y:.078125},{x:.765625,y:.078125},{x:.765625,y:.078125},{x:.796875,y:.078125},{x:.796875,y:.078125},{x:.828125,y:.078125},{x:.828125,y:.078125},{x:.859375,y:.078125},{x:.859375,y:.078125},{x:.890625,y:.078125},{x:.890625,y:.078125},{x:.921875,y:.078125},{x:.921875,y:.078125},{x:.953125,y:.078125},{x:.953125,y:.078125},{x:.984375,y:.078125},{x:.984375,y:.078125},{x:.015625,y:.109375},{x:.015625,y:.109375},{x:.046875,y:.109375},{x:.046875,y:.109375},{x:.078125,y:.109375},{x:.078125,y:.109375},{x:.109375,y:.109375},{x:.109375,y:.109375},{x:.140625,y:.109375},{x:.140625,y:.109375},{x:.171875,y:.109375},{x:.171875,y:.109375},{x:.203125,y:.109375},{x:.203125,y:.109375},{x:.234375,y:.109375},{x:.234375,y:.109375},{x:.265625,y:.109375},{x:.265625,y:.109375},{x:.296875,y:.109375},{x:.296875,y:.109375},{x:.328125,y:.109375},{x:.328125,y:.109375},{x:.359375,y:.109375},{x:.359375,y:.109375},{x:.390625,y:.109375},{x:.390625,y:.109375},{x:.421875,y:.109375},{x:.421875,y:.109375},{x:.453125,y:.109375},{x:.453125,y:.109375},{x:.484375,y:.109375},{x:.484375,y:.109375},{x:.515625,y:.109375},{x:.515625,y:.109375},{x:.546875,y:.109375},{x:.546875,y:.109375},{x:.578125,y:.109375},{x:.578125,y:.109375},{x:.609375,y:.109375},{x:.609375,y:.109375},{x:.640625,y:.109375},{x:.640625,y:.109375},{x:.671875,y:.109375},{x:.671875,y:.109375},{x:.703125,y:.109375},{x:.703125,y:.109375},{x:.734375,y:.109375},{x:.734375,y:.109375},{x:.765625,y:.109375},{x:.765625,y:.109375},{x:.796875,y:.109375},{x:.796875,y:.109375},{x:.828125,y:.109375},{x:.828125,y:.109375},{x:.859375,y:.109375},{x:.859375,y:.109375},{x:.890625,y:.109375},{x:.890625,y:.109375},{x:.921875,y:.109375},{x:.921875,y:.109375},{x:.953125,y:.109375},{x:.953125,y:.109375},{x:.984375,y:.109375},{x:.984375,y:.109375},{x:.015625,y:.140625},{x:.015625,y:.140625},{x:.046875,y:.140625},{x:.046875,y:.140625},{x:.078125,y:.140625},{x:.078125,y:.140625},{x:.109375,y:.140625},{x:.109375,y:.140625},{x:.140625,y:.140625},{x:.140625,y:.140625},{x:.171875,y:.140625},{x:.171875,y:.140625},{x:.203125,y:.140625},{x:.203125,y:.140625},{x:.234375,y:.140625},{x:.234375,y:.140625},{x:.265625,y:.140625},{x:.265625,y:.140625},{x:.296875,y:.140625},{x:.296875,y:.140625},{x:.328125,y:.140625},{x:.328125,y:.140625},{x:.359375,y:.140625},{x:.359375,y:.140625},{x:.390625,y:.140625},{x:.390625,y:.140625},{x:.421875,y:.140625},{x:.421875,y:.140625},{x:.453125,y:.140625},{x:.453125,y:.140625},{x:.484375,y:.140625},{x:.484375,y:.140625},{x:.515625,y:.140625},{x:.515625,y:.140625},{x:.546875,y:.140625},{x:.546875,y:.140625},{x:.578125,y:.140625},{x:.578125,y:.140625},{x:.609375,y:.140625},{x:.609375,y:.140625},{x:.640625,y:.140625},{x:.640625,y:.140625},{x:.671875,y:.140625},{x:.671875,y:.140625},{x:.703125,y:.140625},{x:.703125,y:.140625},{x:.734375,y:.140625},{x:.734375,y:.140625},{x:.765625,y:.140625},{x:.765625,y:.140625},{x:.796875,y:.140625},{x:.796875,y:.140625},{x:.828125,y:.140625},{x:.828125,y:.140625},{x:.859375,y:.140625},{x:.859375,y:.140625},{x:.890625,y:.140625},{x:.890625,y:.140625},{x:.921875,y:.140625},{x:.921875,y:.140625},{x:.953125,y:.140625},{x:.953125,y:.140625},{x:.984375,y:.140625},{x:.984375,y:.140625},{x:.015625,y:.171875},{x:.015625,y:.171875},{x:.046875,y:.171875},{x:.046875,y:.171875},{x:.078125,y:.171875},{x:.078125,y:.171875},{x:.109375,y:.171875},{x:.109375,y:.171875},{x:.140625,y:.171875},{x:.140625,y:.171875},{x:.171875,y:.171875},{x:.171875,y:.171875},{x:.203125,y:.171875},{x:.203125,y:.171875},{x:.234375,y:.171875},{x:.234375,y:.171875},{x:.265625,y:.171875},{x:.265625,y:.171875},{x:.296875,y:.171875},{x:.296875,y:.171875},{x:.328125,y:.171875},{x:.328125,y:.171875},{x:.359375,y:.171875},{x:.359375,y:.171875},{x:.390625,y:.171875},{x:.390625,y:.171875},{x:.421875,y:.171875},{x:.421875,y:.171875},{x:.453125,y:.171875},{x:.453125,y:.171875},{x:.484375,y:.171875},{x:.484375,y:.171875},{x:.515625,y:.171875},{x:.515625,y:.171875},{x:.546875,y:.171875},{x:.546875,y:.171875},{x:.578125,y:.171875},{x:.578125,y:.171875},{x:.609375,y:.171875},{x:.609375,y:.171875},{x:.640625,y:.171875},{x:.640625,y:.171875},{x:.671875,y:.171875},{x:.671875,y:.171875},{x:.703125,y:.171875},{x:.703125,y:.171875},{x:.734375,y:.171875},{x:.734375,y:.171875},{x:.765625,y:.171875},{x:.765625,y:.171875},{x:.796875,y:.171875},{x:.796875,y:.171875},{x:.828125,y:.171875},{x:.828125,y:.171875},{x:.859375,y:.171875},{x:.859375,y:.171875},{x:.890625,y:.171875},{x:.890625,y:.171875},{x:.921875,y:.171875},{x:.921875,y:.171875},{x:.953125,y:.171875},{x:.953125,y:.171875},{x:.984375,y:.171875},{x:.984375,y:.171875},{x:.015625,y:.203125},{x:.015625,y:.203125},{x:.046875,y:.203125},{x:.046875,y:.203125},{x:.078125,y:.203125},{x:.078125,y:.203125},{x:.109375,y:.203125},{x:.109375,y:.203125},{x:.140625,y:.203125},{x:.140625,y:.203125},{x:.171875,y:.203125},{x:.171875,y:.203125},{x:.203125,y:.203125},{x:.203125,y:.203125},{x:.234375,y:.203125},{x:.234375,y:.203125},{x:.265625,y:.203125},{x:.265625,y:.203125},{x:.296875,y:.203125},{x:.296875,y:.203125},{x:.328125,y:.203125},{x:.328125,y:.203125},{x:.359375,y:.203125},{x:.359375,y:.203125},{x:.390625,y:.203125},{x:.390625,y:.203125},{x:.421875,y:.203125},{x:.421875,y:.203125},{x:.453125,y:.203125},{x:.453125,y:.203125},{x:.484375,y:.203125},{x:.484375,y:.203125},{x:.515625,y:.203125},{x:.515625,y:.203125},{x:.546875,y:.203125},{x:.546875,y:.203125},{x:.578125,y:.203125},{x:.578125,y:.203125},{x:.609375,y:.203125},{x:.609375,y:.203125},{x:.640625,y:.203125},{x:.640625,y:.203125},{x:.671875,y:.203125},{x:.671875,y:.203125},{x:.703125,y:.203125},{x:.703125,y:.203125},{x:.734375,y:.203125},{x:.734375,y:.203125},{x:.765625,y:.203125},{x:.765625,y:.203125},{x:.796875,y:.203125},{x:.796875,y:.203125},{x:.828125,y:.203125},{x:.828125,y:.203125},{x:.859375,y:.203125},{x:.859375,y:.203125},{x:.890625,y:.203125},{x:.890625,y:.203125},{x:.921875,y:.203125},{x:.921875,y:.203125},{x:.953125,y:.203125},{x:.953125,y:.203125},{x:.984375,y:.203125},{x:.984375,y:.203125},{x:.015625,y:.234375},{x:.015625,y:.234375},{x:.046875,y:.234375},{x:.046875,y:.234375},{x:.078125,y:.234375},{x:.078125,y:.234375},{x:.109375,y:.234375},{x:.109375,y:.234375},{x:.140625,y:.234375},{x:.140625,y:.234375},{x:.171875,y:.234375},{x:.171875,y:.234375},{x:.203125,y:.234375},{x:.203125,y:.234375},{x:.234375,y:.234375},{x:.234375,y:.234375},{x:.265625,y:.234375},{x:.265625,y:.234375},{x:.296875,y:.234375},{x:.296875,y:.234375},{x:.328125,y:.234375},{x:.328125,y:.234375},{x:.359375,y:.234375},{x:.359375,y:.234375},{x:.390625,y:.234375},{x:.390625,y:.234375},{x:.421875,y:.234375},{x:.421875,y:.234375},{x:.453125,y:.234375},{x:.453125,y:.234375},{x:.484375,y:.234375},{x:.484375,y:.234375},{x:.515625,y:.234375},{x:.515625,y:.234375},{x:.546875,y:.234375},{x:.546875,y:.234375},{x:.578125,y:.234375},{x:.578125,y:.234375},{x:.609375,y:.234375},{x:.609375,y:.234375},{x:.640625,y:.234375},{x:.640625,y:.234375},{x:.671875,y:.234375},{x:.671875,y:.234375},{x:.703125,y:.234375},{x:.703125,y:.234375},{x:.734375,y:.234375},{x:.734375,y:.234375},{x:.765625,y:.234375},{x:.765625,y:.234375},{x:.796875,y:.234375},{x:.796875,y:.234375},{x:.828125,y:.234375},{x:.828125,y:.234375},{x:.859375,y:.234375},{x:.859375,y:.234375},{x:.890625,y:.234375},{x:.890625,y:.234375},{x:.921875,y:.234375},{x:.921875,y:.234375},{x:.953125,y:.234375},{x:.953125,y:.234375},{x:.984375,y:.234375},{x:.984375,y:.234375},{x:.015625,y:.265625},{x:.015625,y:.265625},{x:.046875,y:.265625},{x:.046875,y:.265625},{x:.078125,y:.265625},{x:.078125,y:.265625},{x:.109375,y:.265625},{x:.109375,y:.265625},{x:.140625,y:.265625},{x:.140625,y:.265625},{x:.171875,y:.265625},{x:.171875,y:.265625},{x:.203125,y:.265625},{x:.203125,y:.265625},{x:.234375,y:.265625},{x:.234375,y:.265625},{x:.265625,y:.265625},{x:.265625,y:.265625},{x:.296875,y:.265625},{x:.296875,y:.265625},{x:.328125,y:.265625},{x:.328125,y:.265625},{x:.359375,y:.265625},{x:.359375,y:.265625},{x:.390625,y:.265625},{x:.390625,y:.265625},{x:.421875,y:.265625},{x:.421875,y:.265625},{x:.453125,y:.265625},{x:.453125,y:.265625},{x:.484375,y:.265625},{x:.484375,y:.265625},{x:.515625,y:.265625},{x:.515625,y:.265625},{x:.546875,y:.265625},{x:.546875,y:.265625},{x:.578125,y:.265625},{x:.578125,y:.265625},{x:.609375,y:.265625},{x:.609375,y:.265625},{x:.640625,y:.265625},{x:.640625,y:.265625},{x:.671875,y:.265625},{x:.671875,y:.265625},{x:.703125,y:.265625},{x:.703125,y:.265625},{x:.734375,y:.265625},{x:.734375,y:.265625},{x:.765625,y:.265625},{x:.765625,y:.265625},{x:.796875,y:.265625},{x:.796875,y:.265625},{x:.828125,y:.265625},{x:.828125,y:.265625},{x:.859375,y:.265625},{x:.859375,y:.265625},{x:.890625,y:.265625},{x:.890625,y:.265625},{x:.921875,y:.265625},{x:.921875,y:.265625},{x:.953125,y:.265625},{x:.953125,y:.265625},{x:.984375,y:.265625},{x:.984375,y:.265625},{x:.015625,y:.296875},{x:.015625,y:.296875},{x:.046875,y:.296875},{x:.046875,y:.296875},{x:.078125,y:.296875},{x:.078125,y:.296875},{x:.109375,y:.296875},{x:.109375,y:.296875},{x:.140625,y:.296875},{x:.140625,y:.296875},{x:.171875,y:.296875},{x:.171875,y:.296875},{x:.203125,y:.296875},{x:.203125,y:.296875},{x:.234375,y:.296875},{x:.234375,y:.296875},{x:.265625,y:.296875},{x:.265625,y:.296875},{x:.296875,y:.296875},{x:.296875,y:.296875},{x:.328125,y:.296875},{x:.328125,y:.296875},{x:.359375,y:.296875},{x:.359375,y:.296875},{x:.390625,y:.296875},{x:.390625,y:.296875},{x:.421875,y:.296875},{x:.421875,y:.296875},{x:.453125,y:.296875},{x:.453125,y:.296875},{x:.484375,y:.296875},{x:.484375,y:.296875},{x:.515625,y:.296875},{x:.515625,y:.296875},{x:.546875,y:.296875},{x:.546875,y:.296875},{x:.578125,y:.296875},{x:.578125,y:.296875},{x:.609375,y:.296875},{x:.609375,y:.296875},{x:.640625,y:.296875},{x:.640625,y:.296875},{x:.671875,y:.296875},{x:.671875,y:.296875},{x:.703125,y:.296875},{x:.703125,y:.296875},{x:.734375,y:.296875},{x:.734375,y:.296875},{x:.765625,y:.296875},{x:.765625,y:.296875},{x:.796875,y:.296875},{x:.796875,y:.296875},{x:.828125,y:.296875},{x:.828125,y:.296875},{x:.859375,y:.296875},{x:.859375,y:.296875},{x:.890625,y:.296875},{x:.890625,y:.296875},{x:.921875,y:.296875},{x:.921875,y:.296875},{x:.953125,y:.296875},{x:.953125,y:.296875},{x:.984375,y:.296875},{x:.984375,y:.296875},{x:.015625,y:.328125},{x:.015625,y:.328125},{x:.046875,y:.328125},{x:.046875,y:.328125},{x:.078125,y:.328125},{x:.078125,y:.328125},{x:.109375,y:.328125},{x:.109375,y:.328125},{x:.140625,y:.328125},{x:.140625,y:.328125},{x:.171875,y:.328125},{x:.171875,y:.328125},{x:.203125,y:.328125},{x:.203125,y:.328125},{x:.234375,y:.328125},{x:.234375,y:.328125},{x:.265625,y:.328125},{x:.265625,y:.328125},{x:.296875,y:.328125},{x:.296875,y:.328125},{x:.328125,y:.328125},{x:.328125,y:.328125},{x:.359375,y:.328125},{x:.359375,y:.328125},{x:.390625,y:.328125},{x:.390625,y:.328125},{x:.421875,y:.328125},{x:.421875,y:.328125},{x:.453125,y:.328125},{x:.453125,y:.328125},{x:.484375,y:.328125},{x:.484375,y:.328125},{x:.515625,y:.328125},{x:.515625,y:.328125},{x:.546875,y:.328125},{x:.546875,y:.328125},{x:.578125,y:.328125},{x:.578125,y:.328125},{x:.609375,y:.328125},{x:.609375,y:.328125},{x:.640625,y:.328125},{x:.640625,y:.328125},{x:.671875,y:.328125},{x:.671875,y:.328125},{x:.703125,y:.328125},{x:.703125,y:.328125},{x:.734375,y:.328125},{x:.734375,y:.328125},{x:.765625,y:.328125},{x:.765625,y:.328125},{x:.796875,y:.328125},{x:.796875,y:.328125},{x:.828125,y:.328125},{x:.828125,y:.328125},{x:.859375,y:.328125},{x:.859375,y:.328125},{x:.890625,y:.328125},{x:.890625,y:.328125},{x:.921875,y:.328125},{x:.921875,y:.328125},{x:.953125,y:.328125},{x:.953125,y:.328125},{x:.984375,y:.328125},{x:.984375,y:.328125},{x:.015625,y:.359375},{x:.015625,y:.359375},{x:.046875,y:.359375},{x:.046875,y:.359375},{x:.078125,y:.359375},{x:.078125,y:.359375},{x:.109375,y:.359375},{x:.109375,y:.359375},{x:.140625,y:.359375},{x:.140625,y:.359375},{x:.171875,y:.359375},{x:.171875,y:.359375},{x:.203125,y:.359375},{x:.203125,y:.359375},{x:.234375,y:.359375},{x:.234375,y:.359375},{x:.265625,y:.359375},{x:.265625,y:.359375},{x:.296875,y:.359375},{x:.296875,y:.359375},{x:.328125,y:.359375},{x:.328125,y:.359375},{x:.359375,y:.359375},{x:.359375,y:.359375},{x:.390625,y:.359375},{x:.390625,y:.359375},{x:.421875,y:.359375},{x:.421875,y:.359375},{x:.453125,y:.359375},{x:.453125,y:.359375},{x:.484375,y:.359375},{x:.484375,y:.359375},{x:.515625,y:.359375},{x:.515625,y:.359375},{x:.546875,y:.359375},{x:.546875,y:.359375},{x:.578125,y:.359375},{x:.578125,y:.359375},{x:.609375,y:.359375},{x:.609375,y:.359375},{x:.640625,y:.359375},{x:.640625,y:.359375},{x:.671875,y:.359375},{x:.671875,y:.359375},{x:.703125,y:.359375},{x:.703125,y:.359375},{x:.734375,y:.359375},{x:.734375,y:.359375},{x:.765625,y:.359375},{x:.765625,y:.359375},{x:.796875,y:.359375},{x:.796875,y:.359375},{x:.828125,y:.359375},{x:.828125,y:.359375},{x:.859375,y:.359375},{x:.859375,y:.359375},{x:.890625,y:.359375},{x:.890625,y:.359375},{x:.921875,y:.359375},{x:.921875,y:.359375},{x:.953125,y:.359375},{x:.953125,y:.359375},{x:.984375,y:.359375},{x:.984375,y:.359375},{x:.015625,y:.390625},{x:.015625,y:.390625},{x:.046875,y:.390625},{x:.046875,y:.390625},{x:.078125,y:.390625},{x:.078125,y:.390625},{x:.109375,y:.390625},{x:.109375,y:.390625},{x:.140625,y:.390625},{x:.140625,y:.390625},{x:.171875,y:.390625},{x:.171875,y:.390625},{x:.203125,y:.390625},{x:.203125,y:.390625},{x:.234375,y:.390625},{x:.234375,y:.390625},{x:.265625,y:.390625},{x:.265625,y:.390625},{x:.296875,y:.390625},{x:.296875,y:.390625},{x:.328125,y:.390625},{x:.328125,y:.390625},{x:.359375,y:.390625},{x:.359375,y:.390625},{x:.390625,y:.390625},{x:.390625,y:.390625},{x:.421875,y:.390625},{x:.421875,y:.390625},{x:.453125,y:.390625},{x:.453125,y:.390625},{x:.484375,y:.390625},{x:.484375,y:.390625},{x:.515625,y:.390625},{x:.515625,y:.390625},{x:.546875,y:.390625},{x:.546875,y:.390625},{x:.578125,y:.390625},{x:.578125,y:.390625},{x:.609375,y:.390625},{x:.609375,y:.390625},{x:.640625,y:.390625},{x:.640625,y:.390625},{x:.671875,y:.390625},{x:.671875,y:.390625},{x:.703125,y:.390625},{x:.703125,y:.390625},{x:.734375,y:.390625},{x:.734375,y:.390625},{x:.765625,y:.390625},{x:.765625,y:.390625},{x:.796875,y:.390625},{x:.796875,y:.390625},{x:.828125,y:.390625},{x:.828125,y:.390625},{x:.859375,y:.390625},{x:.859375,y:.390625},{x:.890625,y:.390625},{x:.890625,y:.390625},{x:.921875,y:.390625},{x:.921875,y:.390625},{x:.953125,y:.390625},{x:.953125,y:.390625},{x:.984375,y:.390625},{x:.984375,y:.390625},{x:.015625,y:.421875},{x:.015625,y:.421875},{x:.046875,y:.421875},{x:.046875,y:.421875},{x:.078125,y:.421875},{x:.078125,y:.421875},{x:.109375,y:.421875},{x:.109375,y:.421875},{x:.140625,y:.421875},{x:.140625,y:.421875},{x:.171875,y:.421875},{x:.171875,y:.421875},{x:.203125,y:.421875},{x:.203125,y:.421875},{x:.234375,y:.421875},{x:.234375,y:.421875},{x:.265625,y:.421875},{x:.265625,y:.421875},{x:.296875,y:.421875},{x:.296875,y:.421875},{x:.328125,y:.421875},{x:.328125,y:.421875},{x:.359375,y:.421875},{x:.359375,y:.421875},{x:.390625,y:.421875},{x:.390625,y:.421875},{x:.421875,y:.421875},{x:.421875,y:.421875},{x:.453125,y:.421875},{x:.453125,y:.421875},{x:.484375,y:.421875},{x:.484375,y:.421875},{x:.515625,y:.421875},{x:.515625,y:.421875},{x:.546875,y:.421875},{x:.546875,y:.421875},{x:.578125,y:.421875},{x:.578125,y:.421875},{x:.609375,y:.421875},{x:.609375,y:.421875},{x:.640625,y:.421875},{x:.640625,y:.421875},{x:.671875,y:.421875},{x:.671875,y:.421875},{x:.703125,y:.421875},{x:.703125,y:.421875},{x:.734375,y:.421875},{x:.734375,y:.421875},{x:.765625,y:.421875},{x:.765625,y:.421875},{x:.796875,y:.421875},{x:.796875,y:.421875},{x:.828125,y:.421875},{x:.828125,y:.421875},{x:.859375,y:.421875},{x:.859375,y:.421875},{x:.890625,y:.421875},{x:.890625,y:.421875},{x:.921875,y:.421875},{x:.921875,y:.421875},{x:.953125,y:.421875},{x:.953125,y:.421875},{x:.984375,y:.421875},{x:.984375,y:.421875},{x:.015625,y:.453125},{x:.015625,y:.453125},{x:.046875,y:.453125},{x:.046875,y:.453125},{x:.078125,y:.453125},{x:.078125,y:.453125},{x:.109375,y:.453125},{x:.109375,y:.453125},{x:.140625,y:.453125},{x:.140625,y:.453125},{x:.171875,y:.453125},{x:.171875,y:.453125},{x:.203125,y:.453125},{x:.203125,y:.453125},{x:.234375,y:.453125},{x:.234375,y:.453125},{x:.265625,y:.453125},{x:.265625,y:.453125},{x:.296875,y:.453125},{x:.296875,y:.453125},{x:.328125,y:.453125},{x:.328125,y:.453125},{x:.359375,y:.453125},{x:.359375,y:.453125},{x:.390625,y:.453125},{x:.390625,y:.453125},{x:.421875,y:.453125},{x:.421875,y:.453125},{x:.453125,y:.453125},{x:.453125,y:.453125},{x:.484375,y:.453125},{x:.484375,y:.453125},{x:.515625,y:.453125},{x:.515625,y:.453125},{x:.546875,y:.453125},{x:.546875,y:.453125},{x:.578125,y:.453125},{x:.578125,y:.453125},{x:.609375,y:.453125},{x:.609375,y:.453125},{x:.640625,y:.453125},{x:.640625,y:.453125},{x:.671875,y:.453125},{x:.671875,y:.453125},{x:.703125,y:.453125},{x:.703125,y:.453125},{x:.734375,y:.453125},{x:.734375,y:.453125},{x:.765625,y:.453125},{x:.765625,y:.453125},{x:.796875,y:.453125},{x:.796875,y:.453125},{x:.828125,y:.453125},{x:.828125,y:.453125},{x:.859375,y:.453125},{x:.859375,y:.453125},{x:.890625,y:.453125},{x:.890625,y:.453125},{x:.921875,y:.453125},{x:.921875,y:.453125},{x:.953125,y:.453125},{x:.953125,y:.453125},{x:.984375,y:.453125},{x:.984375,y:.453125},{x:.015625,y:.484375},{x:.015625,y:.484375},{x:.046875,y:.484375},{x:.046875,y:.484375},{x:.078125,y:.484375},{x:.078125,y:.484375},{x:.109375,y:.484375},{x:.109375,y:.484375},{x:.140625,y:.484375},{x:.140625,y:.484375},{x:.171875,y:.484375},{x:.171875,y:.484375},{x:.203125,y:.484375},{x:.203125,y:.484375},{x:.234375,y:.484375},{x:.234375,y:.484375},{x:.265625,y:.484375},{x:.265625,y:.484375},{x:.296875,y:.484375},{x:.296875,y:.484375},{x:.328125,y:.484375},{x:.328125,y:.484375},{x:.359375,y:.484375},{x:.359375,y:.484375},{x:.390625,y:.484375},{x:.390625,y:.484375},{x:.421875,y:.484375},{x:.421875,y:.484375},{x:.453125,y:.484375},{x:.453125,y:.484375},{x:.484375,y:.484375},{x:.484375,y:.484375},{x:.515625,y:.484375},{x:.515625,y:.484375},{x:.546875,y:.484375},{x:.546875,y:.484375},{x:.578125,y:.484375},{x:.578125,y:.484375},{x:.609375,y:.484375},{x:.609375,y:.484375},{x:.640625,y:.484375},{x:.640625,y:.484375},{x:.671875,y:.484375},{x:.671875,y:.484375},{x:.703125,y:.484375},{x:.703125,y:.484375},{x:.734375,y:.484375},{x:.734375,y:.484375},{x:.765625,y:.484375},{x:.765625,y:.484375},{x:.796875,y:.484375},{x:.796875,y:.484375},{x:.828125,y:.484375},{x:.828125,y:.484375},{x:.859375,y:.484375},{x:.859375,y:.484375},{x:.890625,y:.484375},{x:.890625,y:.484375},{x:.921875,y:.484375},{x:.921875,y:.484375},{x:.953125,y:.484375},{x:.953125,y:.484375},{x:.984375,y:.484375},{x:.984375,y:.484375},{x:.015625,y:.515625},{x:.015625,y:.515625},{x:.046875,y:.515625},{x:.046875,y:.515625},{x:.078125,y:.515625},{x:.078125,y:.515625},{x:.109375,y:.515625},{x:.109375,y:.515625},{x:.140625,y:.515625},{x:.140625,y:.515625},{x:.171875,y:.515625},{x:.171875,y:.515625},{x:.203125,y:.515625},{x:.203125,y:.515625},{x:.234375,y:.515625},{x:.234375,y:.515625},{x:.265625,y:.515625},{x:.265625,y:.515625},{x:.296875,y:.515625},{x:.296875,y:.515625},{x:.328125,y:.515625},{x:.328125,y:.515625},{x:.359375,y:.515625},{x:.359375,y:.515625},{x:.390625,y:.515625},{x:.390625,y:.515625},{x:.421875,y:.515625},{x:.421875,y:.515625},{x:.453125,y:.515625},{x:.453125,y:.515625},{x:.484375,y:.515625},{x:.484375,y:.515625},{x:.515625,y:.515625},{x:.515625,y:.515625},{x:.546875,y:.515625},{x:.546875,y:.515625},{x:.578125,y:.515625},{x:.578125,y:.515625},{x:.609375,y:.515625},{x:.609375,y:.515625},{x:.640625,y:.515625},{x:.640625,y:.515625},{x:.671875,y:.515625},{x:.671875,y:.515625},{x:.703125,y:.515625},{x:.703125,y:.515625},{x:.734375,y:.515625},{x:.734375,y:.515625},{x:.765625,y:.515625},{x:.765625,y:.515625},{x:.796875,y:.515625},{x:.796875,y:.515625},{x:.828125,y:.515625},{x:.828125,y:.515625},{x:.859375,y:.515625},{x:.859375,y:.515625},{x:.890625,y:.515625},{x:.890625,y:.515625},{x:.921875,y:.515625},{x:.921875,y:.515625},{x:.953125,y:.515625},{x:.953125,y:.515625},{x:.984375,y:.515625},{x:.984375,y:.515625},{x:.015625,y:.546875},{x:.015625,y:.546875},{x:.046875,y:.546875},{x:.046875,y:.546875},{x:.078125,y:.546875},{x:.078125,y:.546875},{x:.109375,y:.546875},{x:.109375,y:.546875},{x:.140625,y:.546875},{x:.140625,y:.546875},{x:.171875,y:.546875},{x:.171875,y:.546875},{x:.203125,y:.546875},{x:.203125,y:.546875},{x:.234375,y:.546875},{x:.234375,y:.546875},{x:.265625,y:.546875},{x:.265625,y:.546875},{x:.296875,y:.546875},{x:.296875,y:.546875},{x:.328125,y:.546875},{x:.328125,y:.546875},{x:.359375,y:.546875},{x:.359375,y:.546875},{x:.390625,y:.546875},{x:.390625,y:.546875},{x:.421875,y:.546875},{x:.421875,y:.546875},{x:.453125,y:.546875},{x:.453125,y:.546875},{x:.484375,y:.546875},{x:.484375,y:.546875},{x:.515625,y:.546875},{x:.515625,y:.546875},{x:.546875,y:.546875},{x:.546875,y:.546875},{x:.578125,y:.546875},{x:.578125,y:.546875},{x:.609375,y:.546875},{x:.609375,y:.546875},{x:.640625,y:.546875},{x:.640625,y:.546875},{x:.671875,y:.546875},{x:.671875,y:.546875},{x:.703125,y:.546875},{x:.703125,y:.546875},{x:.734375,y:.546875},{x:.734375,y:.546875},{x:.765625,y:.546875},{x:.765625,y:.546875},{x:.796875,y:.546875},{x:.796875,y:.546875},{x:.828125,y:.546875},{x:.828125,y:.546875},{x:.859375,y:.546875},{x:.859375,y:.546875},{x:.890625,y:.546875},{x:.890625,y:.546875},{x:.921875,y:.546875},{x:.921875,y:.546875},{x:.953125,y:.546875},{x:.953125,y:.546875},{x:.984375,y:.546875},{x:.984375,y:.546875},{x:.015625,y:.578125},{x:.015625,y:.578125},{x:.046875,y:.578125},{x:.046875,y:.578125},{x:.078125,y:.578125},{x:.078125,y:.578125},{x:.109375,y:.578125},{x:.109375,y:.578125},{x:.140625,y:.578125},{x:.140625,y:.578125},{x:.171875,y:.578125},{x:.171875,y:.578125},{x:.203125,y:.578125},{x:.203125,y:.578125},{x:.234375,y:.578125},{x:.234375,y:.578125},{x:.265625,y:.578125},{x:.265625,y:.578125},{x:.296875,y:.578125},{x:.296875,y:.578125},{x:.328125,y:.578125},{x:.328125,y:.578125},{x:.359375,y:.578125},{x:.359375,y:.578125},{x:.390625,y:.578125},{x:.390625,y:.578125},{x:.421875,y:.578125},{x:.421875,y:.578125},{x:.453125,y:.578125},{x:.453125,y:.578125},{x:.484375,y:.578125},{x:.484375,y:.578125},{x:.515625,y:.578125},{x:.515625,y:.578125},{x:.546875,y:.578125},{x:.546875,y:.578125},{x:.578125,y:.578125},{x:.578125,y:.578125},{x:.609375,y:.578125},{x:.609375,y:.578125},{x:.640625,y:.578125},{x:.640625,y:.578125},{x:.671875,y:.578125},{x:.671875,y:.578125},{x:.703125,y:.578125},{x:.703125,y:.578125},{x:.734375,y:.578125},{x:.734375,y:.578125},{x:.765625,y:.578125},{x:.765625,y:.578125},{x:.796875,y:.578125},{x:.796875,y:.578125},{x:.828125,y:.578125},{x:.828125,y:.578125},{x:.859375,y:.578125},{x:.859375,y:.578125},{x:.890625,y:.578125},{x:.890625,y:.578125},{x:.921875,y:.578125},{x:.921875,y:.578125},{x:.953125,y:.578125},{x:.953125,y:.578125},{x:.984375,y:.578125},{x:.984375,y:.578125},{x:.015625,y:.609375},{x:.015625,y:.609375},{x:.046875,y:.609375},{x:.046875,y:.609375},{x:.078125,y:.609375},{x:.078125,y:.609375},{x:.109375,y:.609375},{x:.109375,y:.609375},{x:.140625,y:.609375},{x:.140625,y:.609375},{x:.171875,y:.609375},{x:.171875,y:.609375},{x:.203125,y:.609375},{x:.203125,y:.609375},{x:.234375,y:.609375},{x:.234375,y:.609375},{x:.265625,y:.609375},{x:.265625,y:.609375},{x:.296875,y:.609375},{x:.296875,y:.609375},{x:.328125,y:.609375},{x:.328125,y:.609375},{x:.359375,y:.609375},{x:.359375,y:.609375},{x:.390625,y:.609375},{x:.390625,y:.609375},{x:.421875,y:.609375},{x:.421875,y:.609375},{x:.453125,y:.609375},{x:.453125,y:.609375},{x:.484375,y:.609375},{x:.484375,y:.609375},{x:.515625,y:.609375},{x:.515625,y:.609375},{x:.546875,y:.609375},{x:.546875,y:.609375},{x:.578125,y:.609375},{x:.578125,y:.609375},{x:.609375,y:.609375},{x:.609375,y:.609375},{x:.640625,y:.609375},{x:.640625,y:.609375},{x:.671875,y:.609375},{x:.671875,y:.609375},{x:.703125,y:.609375},{x:.703125,y:.609375},{x:.734375,y:.609375},{x:.734375,y:.609375},{x:.765625,y:.609375},{x:.765625,y:.609375},{x:.796875,y:.609375},{x:.796875,y:.609375},{x:.828125,y:.609375},{x:.828125,y:.609375},{x:.859375,y:.609375},{x:.859375,y:.609375},{x:.890625,y:.609375},{x:.890625,y:.609375},{x:.921875,y:.609375},{x:.921875,y:.609375},{x:.953125,y:.609375},{x:.953125,y:.609375},{x:.984375,y:.609375},{x:.984375,y:.609375},{x:.015625,y:.640625},{x:.015625,y:.640625},{x:.046875,y:.640625},{x:.046875,y:.640625},{x:.078125,y:.640625},{x:.078125,y:.640625},{x:.109375,y:.640625},{x:.109375,y:.640625},{x:.140625,y:.640625},{x:.140625,y:.640625},{x:.171875,y:.640625},{x:.171875,y:.640625},{x:.203125,y:.640625},{x:.203125,y:.640625},{x:.234375,y:.640625},{x:.234375,y:.640625},{x:.265625,y:.640625},{x:.265625,y:.640625},{x:.296875,y:.640625},{x:.296875,y:.640625},{x:.328125,y:.640625},{x:.328125,y:.640625},{x:.359375,y:.640625},{x:.359375,y:.640625},{x:.390625,y:.640625},{x:.390625,y:.640625},{x:.421875,y:.640625},{x:.421875,y:.640625},{x:.453125,y:.640625},{x:.453125,y:.640625},{x:.484375,y:.640625},{x:.484375,y:.640625},{x:.515625,y:.640625},{x:.515625,y:.640625},{x:.546875,y:.640625},{x:.546875,y:.640625},{x:.578125,y:.640625},{x:.578125,y:.640625},{x:.609375,y:.640625},{x:.609375,y:.640625},{x:.640625,y:.640625},{x:.640625,y:.640625},{x:.671875,y:.640625},{x:.671875,y:.640625},{x:.703125,y:.640625},{x:.703125,y:.640625},{x:.734375,y:.640625},{x:.734375,y:.640625},{x:.765625,y:.640625},{x:.765625,y:.640625},{x:.796875,y:.640625},{x:.796875,y:.640625},{x:.828125,y:.640625},{x:.828125,y:.640625},{x:.859375,y:.640625},{x:.859375,y:.640625},{x:.890625,y:.640625},{x:.890625,y:.640625},{x:.921875,y:.640625},{x:.921875,y:.640625},{x:.953125,y:.640625},{x:.953125,y:.640625},{x:.984375,y:.640625},{x:.984375,y:.640625},{x:.015625,y:.671875},{x:.015625,y:.671875},{x:.046875,y:.671875},{x:.046875,y:.671875},{x:.078125,y:.671875},{x:.078125,y:.671875},{x:.109375,y:.671875},{x:.109375,y:.671875},{x:.140625,y:.671875},{x:.140625,y:.671875},{x:.171875,y:.671875},{x:.171875,y:.671875},{x:.203125,y:.671875},{x:.203125,y:.671875},{x:.234375,y:.671875},{x:.234375,y:.671875},{x:.265625,y:.671875},{x:.265625,y:.671875},{x:.296875,y:.671875},{x:.296875,y:.671875},{x:.328125,y:.671875},{x:.328125,y:.671875},{x:.359375,y:.671875},{x:.359375,y:.671875},{x:.390625,y:.671875},{x:.390625,y:.671875},{x:.421875,y:.671875},{x:.421875,y:.671875},{x:.453125,y:.671875},{x:.453125,y:.671875},{x:.484375,y:.671875},{x:.484375,y:.671875},{x:.515625,y:.671875},{x:.515625,y:.671875},{x:.546875,y:.671875},{x:.546875,y:.671875},{x:.578125,y:.671875},{x:.578125,y:.671875},{x:.609375,y:.671875},{x:.609375,y:.671875},{x:.640625,y:.671875},{x:.640625,y:.671875},{x:.671875,y:.671875},{x:.671875,y:.671875},{x:.703125,y:.671875},{x:.703125,y:.671875},{x:.734375,y:.671875},{x:.734375,y:.671875},{x:.765625,y:.671875},{x:.765625,y:.671875},{x:.796875,y:.671875},{x:.796875,y:.671875},{x:.828125,y:.671875},{x:.828125,y:.671875},{x:.859375,y:.671875},{x:.859375,y:.671875},{x:.890625,y:.671875},{x:.890625,y:.671875},{x:.921875,y:.671875},{x:.921875,y:.671875},{x:.953125,y:.671875},{x:.953125,y:.671875},{x:.984375,y:.671875},{x:.984375,y:.671875},{x:.015625,y:.703125},{x:.015625,y:.703125},{x:.046875,y:.703125},{x:.046875,y:.703125},{x:.078125,y:.703125},{x:.078125,y:.703125},{x:.109375,y:.703125},{x:.109375,y:.703125},{x:.140625,y:.703125},{x:.140625,y:.703125},{x:.171875,y:.703125},{x:.171875,y:.703125},{x:.203125,y:.703125},{x:.203125,y:.703125},{x:.234375,y:.703125},{x:.234375,y:.703125},{x:.265625,y:.703125},{x:.265625,y:.703125},{x:.296875,y:.703125},{x:.296875,y:.703125},{x:.328125,y:.703125},{x:.328125,y:.703125},{x:.359375,y:.703125},{x:.359375,y:.703125},{x:.390625,y:.703125},{x:.390625,y:.703125},{x:.421875,y:.703125},{x:.421875,y:.703125},{x:.453125,y:.703125},{x:.453125,y:.703125},{x:.484375,y:.703125},{x:.484375,y:.703125},{x:.515625,y:.703125},{x:.515625,y:.703125},{x:.546875,y:.703125},{x:.546875,y:.703125},{x:.578125,y:.703125},{x:.578125,y:.703125},{x:.609375,y:.703125},{x:.609375,y:.703125},{x:.640625,y:.703125},{x:.640625,y:.703125},{x:.671875,y:.703125},{x:.671875,y:.703125},{x:.703125,y:.703125},{x:.703125,y:.703125},{x:.734375,y:.703125},{x:.734375,y:.703125},{x:.765625,y:.703125},{x:.765625,y:.703125},{x:.796875,y:.703125},{x:.796875,y:.703125},{x:.828125,y:.703125},{x:.828125,y:.703125},{x:.859375,y:.703125},{x:.859375,y:.703125},{x:.890625,y:.703125},{x:.890625,y:.703125},{x:.921875,y:.703125},{x:.921875,y:.703125},{x:.953125,y:.703125},{x:.953125,y:.703125},{x:.984375,y:.703125},{x:.984375,y:.703125},{x:.015625,y:.734375},{x:.015625,y:.734375},{x:.046875,y:.734375},{x:.046875,y:.734375},{x:.078125,y:.734375},{x:.078125,y:.734375},{x:.109375,y:.734375},{x:.109375,y:.734375},{x:.140625,y:.734375},{x:.140625,y:.734375},{x:.171875,y:.734375},{x:.171875,y:.734375},{x:.203125,y:.734375},{x:.203125,y:.734375},{x:.234375,y:.734375},{x:.234375,y:.734375},{x:.265625,y:.734375},{x:.265625,y:.734375},{x:.296875,y:.734375},{x:.296875,y:.734375},{x:.328125,y:.734375},{x:.328125,y:.734375},{x:.359375,y:.734375},{x:.359375,y:.734375},{x:.390625,y:.734375},{x:.390625,y:.734375},{x:.421875,y:.734375},{x:.421875,y:.734375},{x:.453125,y:.734375},{x:.453125,y:.734375},{x:.484375,y:.734375},{x:.484375,y:.734375},{x:.515625,y:.734375},{x:.515625,y:.734375},{x:.546875,y:.734375},{x:.546875,y:.734375},{x:.578125,y:.734375},{x:.578125,y:.734375},{x:.609375,y:.734375},{x:.609375,y:.734375},{x:.640625,y:.734375},{x:.640625,y:.734375},{x:.671875,y:.734375},{x:.671875,y:.734375},{x:.703125,y:.734375},{x:.703125,y:.734375},{x:.734375,y:.734375},{x:.734375,y:.734375},{x:.765625,y:.734375},{x:.765625,y:.734375},{x:.796875,y:.734375},{x:.796875,y:.734375},{x:.828125,y:.734375},{x:.828125,y:.734375},{x:.859375,y:.734375},{x:.859375,y:.734375},{x:.890625,y:.734375},{x:.890625,y:.734375},{x:.921875,y:.734375},{x:.921875,y:.734375},{x:.953125,y:.734375},{x:.953125,y:.734375},{x:.984375,y:.734375},{x:.984375,y:.734375},{x:.015625,y:.765625},{x:.015625,y:.765625},{x:.046875,y:.765625},{x:.046875,y:.765625},{x:.078125,y:.765625},{x:.078125,y:.765625},{x:.109375,y:.765625},{x:.109375,y:.765625},{x:.140625,y:.765625},{x:.140625,y:.765625},{x:.171875,y:.765625},{x:.171875,y:.765625},{x:.203125,y:.765625},{x:.203125,y:.765625},{x:.234375,y:.765625},{x:.234375,y:.765625},{x:.265625,y:.765625},{x:.265625,y:.765625},{x:.296875,y:.765625},{x:.296875,y:.765625},{x:.328125,y:.765625},{x:.328125,y:.765625},{x:.359375,y:.765625},{x:.359375,y:.765625},{x:.390625,y:.765625},{x:.390625,y:.765625},{x:.421875,y:.765625},{x:.421875,y:.765625},{x:.453125,y:.765625},{x:.453125,y:.765625},{x:.484375,y:.765625},{x:.484375,y:.765625},{x:.515625,y:.765625},{x:.515625,y:.765625},{x:.546875,y:.765625},{x:.546875,y:.765625},{x:.578125,y:.765625},{x:.578125,y:.765625},{x:.609375,y:.765625},{x:.609375,y:.765625},{x:.640625,y:.765625},{x:.640625,y:.765625},{x:.671875,y:.765625},{x:.671875,y:.765625},{x:.703125,y:.765625},{x:.703125,y:.765625},{x:.734375,y:.765625},{x:.734375,y:.765625},{x:.765625,y:.765625},{x:.765625,y:.765625},{x:.796875,y:.765625},{x:.796875,y:.765625},{x:.828125,y:.765625},{x:.828125,y:.765625},{x:.859375,y:.765625},{x:.859375,y:.765625},{x:.890625,y:.765625},{x:.890625,y:.765625},{x:.921875,y:.765625},{x:.921875,y:.765625},{x:.953125,y:.765625},{x:.953125,y:.765625},{x:.984375,y:.765625},{x:.984375,y:.765625},{x:.015625,y:.796875},{x:.015625,y:.796875},{x:.046875,y:.796875},{x:.046875,y:.796875},{x:.078125,y:.796875},{x:.078125,y:.796875},{x:.109375,y:.796875},{x:.109375,y:.796875},{x:.140625,y:.796875},{x:.140625,y:.796875},{x:.171875,y:.796875},{x:.171875,y:.796875},{x:.203125,y:.796875},{x:.203125,y:.796875},{x:.234375,y:.796875},{x:.234375,y:.796875},{x:.265625,y:.796875},{x:.265625,y:.796875},{x:.296875,y:.796875},{x:.296875,y:.796875},{x:.328125,y:.796875},{x:.328125,y:.796875},{x:.359375,y:.796875},{x:.359375,y:.796875},{x:.390625,y:.796875},{x:.390625,y:.796875},{x:.421875,y:.796875},{x:.421875,y:.796875},{x:.453125,y:.796875},{x:.453125,y:.796875},{x:.484375,y:.796875},{x:.484375,y:.796875},{x:.515625,y:.796875},{x:.515625,y:.796875},{x:.546875,y:.796875},{x:.546875,y:.796875},{x:.578125,y:.796875},{x:.578125,y:.796875},{x:.609375,y:.796875},{x:.609375,y:.796875},{x:.640625,y:.796875},{x:.640625,y:.796875},{x:.671875,y:.796875},{x:.671875,y:.796875},{x:.703125,y:.796875},{x:.703125,y:.796875},{x:.734375,y:.796875},{x:.734375,y:.796875},{x:.765625,y:.796875},{x:.765625,y:.796875},{x:.796875,y:.796875},{x:.796875,y:.796875},{x:.828125,y:.796875},{x:.828125,y:.796875},{x:.859375,y:.796875},{x:.859375,y:.796875},{x:.890625,y:.796875},{x:.890625,y:.796875},{x:.921875,y:.796875},{x:.921875,y:.796875},{x:.953125,y:.796875},{x:.953125,y:.796875},{x:.984375,y:.796875},{x:.984375,y:.796875},{x:.015625,y:.828125},{x:.015625,y:.828125},{x:.046875,y:.828125},{x:.046875,y:.828125},{x:.078125,y:.828125},{x:.078125,y:.828125},{x:.109375,y:.828125},{x:.109375,y:.828125},{x:.140625,y:.828125},{x:.140625,y:.828125},{x:.171875,y:.828125},{x:.171875,y:.828125},{x:.203125,y:.828125},{x:.203125,y:.828125},{x:.234375,y:.828125},{x:.234375,y:.828125},{x:.265625,y:.828125},{x:.265625,y:.828125},{x:.296875,y:.828125},{x:.296875,y:.828125},{x:.328125,y:.828125},{x:.328125,y:.828125},{x:.359375,y:.828125},{x:.359375,y:.828125},{x:.390625,y:.828125},{x:.390625,y:.828125},{x:.421875,y:.828125},{x:.421875,y:.828125},{x:.453125,y:.828125},{x:.453125,y:.828125},{x:.484375,y:.828125},{x:.484375,y:.828125},{x:.515625,y:.828125},{x:.515625,y:.828125},{x:.546875,y:.828125},{x:.546875,y:.828125},{x:.578125,y:.828125},{x:.578125,y:.828125},{x:.609375,y:.828125},{x:.609375,y:.828125},{x:.640625,y:.828125},{x:.640625,y:.828125},{x:.671875,y:.828125},{x:.671875,y:.828125},{x:.703125,y:.828125},{x:.703125,y:.828125},{x:.734375,y:.828125},{x:.734375,y:.828125},{x:.765625,y:.828125},{x:.765625,y:.828125},{x:.796875,y:.828125},{x:.796875,y:.828125},{x:.828125,y:.828125},{x:.828125,y:.828125},{x:.859375,y:.828125},{x:.859375,y:.828125},{x:.890625,y:.828125},{x:.890625,y:.828125},{x:.921875,y:.828125},{x:.921875,y:.828125},{x:.953125,y:.828125},{x:.953125,y:.828125},{x:.984375,y:.828125},{x:.984375,y:.828125},{x:.015625,y:.859375},{x:.015625,y:.859375},{x:.046875,y:.859375},{x:.046875,y:.859375},{x:.078125,y:.859375},{x:.078125,y:.859375},{x:.109375,y:.859375},{x:.109375,y:.859375},{x:.140625,y:.859375},{x:.140625,y:.859375},{x:.171875,y:.859375},{x:.171875,y:.859375},{x:.203125,y:.859375},{x:.203125,y:.859375},{x:.234375,y:.859375},{x:.234375,y:.859375},{x:.265625,y:.859375},{x:.265625,y:.859375},{x:.296875,y:.859375},{x:.296875,y:.859375},{x:.328125,y:.859375},{x:.328125,y:.859375},{x:.359375,y:.859375},{x:.359375,y:.859375},{x:.390625,y:.859375},{x:.390625,y:.859375},{x:.421875,y:.859375},{x:.421875,y:.859375},{x:.453125,y:.859375},{x:.453125,y:.859375},{x:.484375,y:.859375},{x:.484375,y:.859375},{x:.515625,y:.859375},{x:.515625,y:.859375},{x:.546875,y:.859375},{x:.546875,y:.859375},{x:.578125,y:.859375},{x:.578125,y:.859375},{x:.609375,y:.859375},{x:.609375,y:.859375},{x:.640625,y:.859375},{x:.640625,y:.859375},{x:.671875,y:.859375},{x:.671875,y:.859375},{x:.703125,y:.859375},{x:.703125,y:.859375},{x:.734375,y:.859375},{x:.734375,y:.859375},{x:.765625,y:.859375},{x:.765625,y:.859375},{x:.796875,y:.859375},{x:.796875,y:.859375},{x:.828125,y:.859375},{x:.828125,y:.859375},{x:.859375,y:.859375},{x:.859375,y:.859375},{x:.890625,y:.859375},{x:.890625,y:.859375},{x:.921875,y:.859375},{x:.921875,y:.859375},{x:.953125,y:.859375},{x:.953125,y:.859375},{x:.984375,y:.859375},{x:.984375,y:.859375},{x:.015625,y:.890625},{x:.015625,y:.890625},{x:.046875,y:.890625},{x:.046875,y:.890625},{x:.078125,y:.890625},{x:.078125,y:.890625},{x:.109375,y:.890625},{x:.109375,y:.890625},{x:.140625,y:.890625},{x:.140625,y:.890625},{x:.171875,y:.890625},{x:.171875,y:.890625},{x:.203125,y:.890625},{x:.203125,y:.890625},{x:.234375,y:.890625},{x:.234375,y:.890625},{x:.265625,y:.890625},{x:.265625,y:.890625},{x:.296875,y:.890625},{x:.296875,y:.890625},{x:.328125,y:.890625},{x:.328125,y:.890625},{x:.359375,y:.890625},{x:.359375,y:.890625},{x:.390625,y:.890625},{x:.390625,y:.890625},{x:.421875,y:.890625},{x:.421875,y:.890625},{x:.453125,y:.890625},{x:.453125,y:.890625},{x:.484375,y:.890625},{x:.484375,y:.890625},{x:.515625,y:.890625},{x:.515625,y:.890625},{x:.546875,y:.890625},{x:.546875,y:.890625},{x:.578125,y:.890625},{x:.578125,y:.890625},{x:.609375,y:.890625},{x:.609375,y:.890625},{x:.640625,y:.890625},{x:.640625,y:.890625},{x:.671875,y:.890625},{x:.671875,y:.890625},{x:.703125,y:.890625},{x:.703125,y:.890625},{x:.734375,y:.890625},{x:.734375,y:.890625},{x:.765625,y:.890625},{x:.765625,y:.890625},{x:.796875,y:.890625},{x:.796875,y:.890625},{x:.828125,y:.890625},{x:.828125,y:.890625},{x:.859375,y:.890625},{x:.859375,y:.890625},{x:.890625,y:.890625},{x:.890625,y:.890625},{x:.921875,y:.890625},{x:.921875,y:.890625},{x:.953125,y:.890625},{x:.953125,y:.890625},{x:.984375,y:.890625},{x:.984375,y:.890625},{x:.015625,y:.921875},{x:.015625,y:.921875},{x:.046875,y:.921875},{x:.046875,y:.921875},{x:.078125,y:.921875},{x:.078125,y:.921875},{x:.109375,y:.921875},{x:.109375,y:.921875},{x:.140625,y:.921875},{x:.140625,y:.921875},{x:.171875,y:.921875},{x:.171875,y:.921875},{x:.203125,y:.921875},{x:.203125,y:.921875},{x:.234375,y:.921875},{x:.234375,y:.921875},{x:.265625,y:.921875},{x:.265625,y:.921875},{x:.296875,y:.921875},{x:.296875,y:.921875},{x:.328125,y:.921875},{x:.328125,y:.921875},{x:.359375,y:.921875},{x:.359375,y:.921875},{x:.390625,y:.921875},{x:.390625,y:.921875},{x:.421875,y:.921875},{x:.421875,y:.921875},{x:.453125,y:.921875},{x:.453125,y:.921875},{x:.484375,y:.921875},{x:.484375,y:.921875},{x:.515625,y:.921875},{x:.515625,y:.921875},{x:.546875,y:.921875},{x:.546875,y:.921875},{x:.578125,y:.921875},{x:.578125,y:.921875},{x:.609375,y:.921875},{x:.609375,y:.921875},{x:.640625,y:.921875},{x:.640625,y:.921875},{x:.671875,y:.921875},{x:.671875,y:.921875},{x:.703125,y:.921875},{x:.703125,y:.921875},{x:.734375,y:.921875},{x:.734375,y:.921875},{x:.765625,y:.921875},{x:.765625,y:.921875},{x:.796875,y:.921875},{x:.796875,y:.921875},{x:.828125,y:.921875},{x:.828125,y:.921875},{x:.859375,y:.921875},{x:.859375,y:.921875},{x:.890625,y:.921875},{x:.890625,y:.921875},{x:.921875,y:.921875},{x:.921875,y:.921875},{x:.953125,y:.921875},{x:.953125,y:.921875},{x:.984375,y:.921875},{x:.984375,y:.921875},{x:.015625,y:.953125},{x:.015625,y:.953125},{x:.046875,y:.953125},{x:.046875,y:.953125},{x:.078125,y:.953125},{x:.078125,y:.953125},{x:.109375,y:.953125},{x:.109375,y:.953125},{x:.140625,y:.953125},{x:.140625,y:.953125},{x:.171875,y:.953125},{x:.171875,y:.953125},{x:.203125,y:.953125},{x:.203125,y:.953125},{x:.234375,y:.953125},{x:.234375,y:.953125},{x:.265625,y:.953125},{x:.265625,y:.953125},{x:.296875,y:.953125},{x:.296875,y:.953125},{x:.328125,y:.953125},{x:.328125,y:.953125},{x:.359375,y:.953125},{x:.359375,y:.953125},{x:.390625,y:.953125},{x:.390625,y:.953125},{x:.421875,y:.953125},{x:.421875,y:.953125},{x:.453125,y:.953125},{x:.453125,y:.953125},{x:.484375,y:.953125},{x:.484375,y:.953125},{x:.515625,y:.953125},{x:.515625,y:.953125},{x:.546875,y:.953125},{x:.546875,y:.953125},{x:.578125,y:.953125},{x:.578125,y:.953125},{x:.609375,y:.953125},{x:.609375,y:.953125},{x:.640625,y:.953125},{x:.640625,y:.953125},{x:.671875,y:.953125},{x:.671875,y:.953125},{x:.703125,y:.953125},{x:.703125,y:.953125},{x:.734375,y:.953125},{x:.734375,y:.953125},{x:.765625,y:.953125},{x:.765625,y:.953125},{x:.796875,y:.953125},{x:.796875,y:.953125},{x:.828125,y:.953125},{x:.828125,y:.953125},{x:.859375,y:.953125},{x:.859375,y:.953125},{x:.890625,y:.953125},{x:.890625,y:.953125},{x:.921875,y:.953125},{x:.921875,y:.953125},{x:.953125,y:.953125},{x:.953125,y:.953125},{x:.984375,y:.953125},{x:.984375,y:.953125},{x:.015625,y:.984375},{x:.015625,y:.984375},{x:.046875,y:.984375},{x:.046875,y:.984375},{x:.078125,y:.984375},{x:.078125,y:.984375},{x:.109375,y:.984375},{x:.109375,y:.984375},{x:.140625,y:.984375},{x:.140625,y:.984375},{x:.171875,y:.984375},{x:.171875,y:.984375},{x:.203125,y:.984375},{x:.203125,y:.984375},{x:.234375,y:.984375},{x:.234375,y:.984375},{x:.265625,y:.984375},{x:.265625,y:.984375},{x:.296875,y:.984375},{x:.296875,y:.984375},{x:.328125,y:.984375},{x:.328125,y:.984375},{x:.359375,y:.984375},{x:.359375,y:.984375},{x:.390625,y:.984375},{x:.390625,y:.984375},{x:.421875,y:.984375},{x:.421875,y:.984375},{x:.453125,y:.984375},{x:.453125,y:.984375},{x:.484375,y:.984375},{x:.484375,y:.984375},{x:.515625,y:.984375},{x:.515625,y:.984375},{x:.546875,y:.984375},{x:.546875,y:.984375},{x:.578125,y:.984375},{x:.578125,y:.984375},{x:.609375,y:.984375},{x:.609375,y:.984375},{x:.640625,y:.984375},{x:.640625,y:.984375},{x:.671875,y:.984375},{x:.671875,y:.984375},{x:.703125,y:.984375},{x:.703125,y:.984375},{x:.734375,y:.984375},{x:.734375,y:.984375},{x:.765625,y:.984375},{x:.765625,y:.984375},{x:.796875,y:.984375},{x:.796875,y:.984375},{x:.828125,y:.984375},{x:.828125,y:.984375},{x:.859375,y:.984375},{x:.859375,y:.984375},{x:.890625,y:.984375},{x:.890625,y:.984375},{x:.921875,y:.984375},{x:.921875,y:.984375},{x:.953125,y:.984375},{x:.953125,y:.984375},{x:.984375,y:.984375},{x:.984375,y:.984375},{x:.03125,y:.03125},{x:.03125,y:.03125},{x:.09375,y:.03125},{x:.09375,y:.03125},{x:.15625,y:.03125},{x:.15625,y:.03125},{x:.21875,y:.03125},{x:.21875,y:.03125},{x:.28125,y:.03125},{x:.28125,y:.03125},{x:.34375,y:.03125},{x:.34375,y:.03125},{x:.40625,y:.03125},{x:.40625,y:.03125},{x:.46875,y:.03125},{x:.46875,y:.03125},{x:.53125,y:.03125},{x:.53125,y:.03125},{x:.59375,y:.03125},{x:.59375,y:.03125},{x:.65625,y:.03125},{x:.65625,y:.03125},{x:.71875,y:.03125},{x:.71875,y:.03125},{x:.78125,y:.03125},{x:.78125,y:.03125},{x:.84375,y:.03125},{x:.84375,y:.03125},{x:.90625,y:.03125},{x:.90625,y:.03125},{x:.96875,y:.03125},{x:.96875,y:.03125},{x:.03125,y:.09375},{x:.03125,y:.09375},{x:.09375,y:.09375},{x:.09375,y:.09375},{x:.15625,y:.09375},{x:.15625,y:.09375},{x:.21875,y:.09375},{x:.21875,y:.09375},{x:.28125,y:.09375},{x:.28125,y:.09375},{x:.34375,y:.09375},{x:.34375,y:.09375},{x:.40625,y:.09375},{x:.40625,y:.09375},{x:.46875,y:.09375},{x:.46875,y:.09375},{x:.53125,y:.09375},{x:.53125,y:.09375},{x:.59375,y:.09375},{x:.59375,y:.09375},{x:.65625,y:.09375},{x:.65625,y:.09375},{x:.71875,y:.09375},{x:.71875,y:.09375},{x:.78125,y:.09375},{x:.78125,y:.09375},{x:.84375,y:.09375},{x:.84375,y:.09375},{x:.90625,y:.09375},{x:.90625,y:.09375},{x:.96875,y:.09375},{x:.96875,y:.09375},{x:.03125,y:.15625},{x:.03125,y:.15625},{x:.09375,y:.15625},{x:.09375,y:.15625},{x:.15625,y:.15625},{x:.15625,y:.15625},{x:.21875,y:.15625},{x:.21875,y:.15625},{x:.28125,y:.15625},{x:.28125,y:.15625},{x:.34375,y:.15625},{x:.34375,y:.15625},{x:.40625,y:.15625},{x:.40625,y:.15625},{x:.46875,y:.15625},{x:.46875,y:.15625},{x:.53125,y:.15625},{x:.53125,y:.15625},{x:.59375,y:.15625},{x:.59375,y:.15625},{x:.65625,y:.15625},{x:.65625,y:.15625},{x:.71875,y:.15625},{x:.71875,y:.15625},{x:.78125,y:.15625},{x:.78125,y:.15625},{x:.84375,y:.15625},{x:.84375,y:.15625},{x:.90625,y:.15625},{x:.90625,y:.15625},{x:.96875,y:.15625},{x:.96875,y:.15625},{x:.03125,y:.21875},{x:.03125,y:.21875},{x:.09375,y:.21875},{x:.09375,y:.21875},{x:.15625,y:.21875},{x:.15625,y:.21875},{x:.21875,y:.21875},{x:.21875,y:.21875},{x:.28125,y:.21875},{x:.28125,y:.21875},{x:.34375,y:.21875},{x:.34375,y:.21875},{x:.40625,y:.21875},{x:.40625,y:.21875},{x:.46875,y:.21875},{x:.46875,y:.21875},{x:.53125,y:.21875},{x:.53125,y:.21875},{x:.59375,y:.21875},{x:.59375,y:.21875},{x:.65625,y:.21875},{x:.65625,y:.21875},{x:.71875,y:.21875},{x:.71875,y:.21875},{x:.78125,y:.21875},{x:.78125,y:.21875},{x:.84375,y:.21875},{x:.84375,y:.21875},{x:.90625,y:.21875},{x:.90625,y:.21875},{x:.96875,y:.21875},{x:.96875,y:.21875},{x:.03125,y:.28125},{x:.03125,y:.28125},{x:.09375,y:.28125},{x:.09375,y:.28125},{x:.15625,y:.28125},{x:.15625,y:.28125},{x:.21875,y:.28125},{x:.21875,y:.28125},{x:.28125,y:.28125},{x:.28125,y:.28125},{x:.34375,y:.28125},{x:.34375,y:.28125},{x:.40625,y:.28125},{x:.40625,y:.28125},{x:.46875,y:.28125},{x:.46875,y:.28125},{x:.53125,y:.28125},{x:.53125,y:.28125},{x:.59375,y:.28125},{x:.59375,y:.28125},{x:.65625,y:.28125},{x:.65625,y:.28125},{x:.71875,y:.28125},{x:.71875,y:.28125},{x:.78125,y:.28125},{x:.78125,y:.28125},{x:.84375,y:.28125},{x:.84375,y:.28125},{x:.90625,y:.28125},{x:.90625,y:.28125},{x:.96875,y:.28125},{x:.96875,y:.28125},{x:.03125,y:.34375},{x:.03125,y:.34375},{x:.09375,y:.34375},{x:.09375,y:.34375},{x:.15625,y:.34375},{x:.15625,y:.34375},{x:.21875,y:.34375},{x:.21875,y:.34375},{x:.28125,y:.34375},{x:.28125,y:.34375},{x:.34375,y:.34375},{x:.34375,y:.34375},{x:.40625,y:.34375},{x:.40625,y:.34375},{x:.46875,y:.34375},{x:.46875,y:.34375},{x:.53125,y:.34375},{x:.53125,y:.34375},{x:.59375,y:.34375},{x:.59375,y:.34375},{x:.65625,y:.34375},{x:.65625,y:.34375},{x:.71875,y:.34375},{x:.71875,y:.34375},{x:.78125,y:.34375},{x:.78125,y:.34375},{x:.84375,y:.34375},{x:.84375,y:.34375},{x:.90625,y:.34375},{x:.90625,y:.34375},{x:.96875,y:.34375},{x:.96875,y:.34375},{x:.03125,y:.40625},{x:.03125,y:.40625},{x:.09375,y:.40625},{x:.09375,y:.40625},{x:.15625,y:.40625},{x:.15625,y:.40625},{x:.21875,y:.40625},{x:.21875,y:.40625},{x:.28125,y:.40625},{x:.28125,y:.40625},{x:.34375,y:.40625},{x:.34375,y:.40625},{x:.40625,y:.40625},{x:.40625,y:.40625},{x:.46875,y:.40625},{x:.46875,y:.40625},{x:.53125,y:.40625},{x:.53125,y:.40625},{x:.59375,y:.40625},{x:.59375,y:.40625},{x:.65625,y:.40625},{x:.65625,y:.40625},{x:.71875,y:.40625},{x:.71875,y:.40625},{x:.78125,y:.40625},{x:.78125,y:.40625},{x:.84375,y:.40625},{x:.84375,y:.40625},{x:.90625,y:.40625},{x:.90625,y:.40625},{x:.96875,y:.40625},{x:.96875,y:.40625},{x:.03125,y:.46875},{x:.03125,y:.46875},{x:.09375,y:.46875},{x:.09375,y:.46875},{x:.15625,y:.46875},{x:.15625,y:.46875},{x:.21875,y:.46875},{x:.21875,y:.46875},{x:.28125,y:.46875},{x:.28125,y:.46875},{x:.34375,y:.46875},{x:.34375,y:.46875},{x:.40625,y:.46875},{x:.40625,y:.46875},{x:.46875,y:.46875},{x:.46875,y:.46875},{x:.53125,y:.46875},{x:.53125,y:.46875},{x:.59375,y:.46875},{x:.59375,y:.46875},{x:.65625,y:.46875},{x:.65625,y:.46875},{x:.71875,y:.46875},{x:.71875,y:.46875},{x:.78125,y:.46875},{x:.78125,y:.46875},{x:.84375,y:.46875},{x:.84375,y:.46875},{x:.90625,y:.46875},{x:.90625,y:.46875},{x:.96875,y:.46875},{x:.96875,y:.46875},{x:.03125,y:.53125},{x:.03125,y:.53125},{x:.09375,y:.53125},{x:.09375,y:.53125},{x:.15625,y:.53125},{x:.15625,y:.53125},{x:.21875,y:.53125},{x:.21875,y:.53125},{x:.28125,y:.53125},{x:.28125,y:.53125},{x:.34375,y:.53125},{x:.34375,y:.53125},{x:.40625,y:.53125},{x:.40625,y:.53125},{x:.46875,y:.53125},{x:.46875,y:.53125},{x:.53125,y:.53125},{x:.53125,y:.53125},{x:.59375,y:.53125},{x:.59375,y:.53125},{x:.65625,y:.53125},{x:.65625,y:.53125},{x:.71875,y:.53125},{x:.71875,y:.53125},{x:.78125,y:.53125},{x:.78125,y:.53125},{x:.84375,y:.53125},{x:.84375,y:.53125},{x:.90625,y:.53125},{x:.90625,y:.53125},{x:.96875,y:.53125},{x:.96875,y:.53125},{x:.03125,y:.59375},{x:.03125,y:.59375},{x:.09375,y:.59375},{x:.09375,y:.59375},{x:.15625,y:.59375},{x:.15625,y:.59375},{x:.21875,y:.59375},{x:.21875,y:.59375},{x:.28125,y:.59375},{x:.28125,y:.59375},{x:.34375,y:.59375},{x:.34375,y:.59375},{x:.40625,y:.59375},{x:.40625,y:.59375},{x:.46875,y:.59375},{x:.46875,y:.59375},{x:.53125,y:.59375},{x:.53125,y:.59375},{x:.59375,y:.59375},{x:.59375,y:.59375},{x:.65625,y:.59375},{x:.65625,y:.59375},{x:.71875,y:.59375},{x:.71875,y:.59375},{x:.78125,y:.59375},{x:.78125,y:.59375},{x:.84375,y:.59375},{x:.84375,y:.59375},{x:.90625,y:.59375},{x:.90625,y:.59375},{x:.96875,y:.59375},{x:.96875,y:.59375},{x:.03125,y:.65625},{x:.03125,y:.65625},{x:.09375,y:.65625},{x:.09375,y:.65625},{x:.15625,y:.65625},{x:.15625,y:.65625},{x:.21875,y:.65625},{x:.21875,y:.65625},{x:.28125,y:.65625},{x:.28125,y:.65625},{x:.34375,y:.65625},{x:.34375,y:.65625},{x:.40625,y:.65625},{x:.40625,y:.65625},{x:.46875,y:.65625},{x:.46875,y:.65625},{x:.53125,y:.65625},{x:.53125,y:.65625},{x:.59375,y:.65625},{x:.59375,y:.65625},{x:.65625,y:.65625},{x:.65625,y:.65625},{x:.71875,y:.65625},{x:.71875,y:.65625},{x:.78125,y:.65625},{x:.78125,y:.65625},{x:.84375,y:.65625},{x:.84375,y:.65625},{x:.90625,y:.65625},{x:.90625,y:.65625},{x:.96875,y:.65625},{x:.96875,y:.65625},{x:.03125,y:.71875},{x:.03125,y:.71875},{x:.09375,y:.71875},{x:.09375,y:.71875},{x:.15625,y:.71875},{x:.15625,y:.71875},{x:.21875,y:.71875},{x:.21875,y:.71875},{x:.28125,y:.71875},{x:.28125,y:.71875},{x:.34375,y:.71875},{x:.34375,y:.71875},{x:.40625,y:.71875},{x:.40625,y:.71875},{x:.46875,y:.71875},{x:.46875,y:.71875},{x:.53125,y:.71875},{x:.53125,y:.71875},{x:.59375,y:.71875},{x:.59375,y:.71875},{x:.65625,y:.71875},{x:.65625,y:.71875},{x:.71875,y:.71875},{x:.71875,y:.71875},{x:.78125,y:.71875},{x:.78125,y:.71875},{x:.84375,y:.71875},{x:.84375,y:.71875},{x:.90625,y:.71875},{x:.90625,y:.71875},{x:.96875,y:.71875},{x:.96875,y:.71875},{x:.03125,y:.78125},{x:.03125,y:.78125},{x:.09375,y:.78125},{x:.09375,y:.78125},{x:.15625,y:.78125},{x:.15625,y:.78125},{x:.21875,y:.78125},{x:.21875,y:.78125},{x:.28125,y:.78125},{x:.28125,y:.78125},{x:.34375,y:.78125},{x:.34375,y:.78125},{x:.40625,y:.78125},{x:.40625,y:.78125},{x:.46875,y:.78125},{x:.46875,y:.78125},{x:.53125,y:.78125},{x:.53125,y:.78125},{x:.59375,y:.78125},{x:.59375,y:.78125},{x:.65625,y:.78125},{x:.65625,y:.78125},{x:.71875,y:.78125},{x:.71875,y:.78125},{x:.78125,y:.78125},{x:.78125,y:.78125},{x:.84375,y:.78125},{x:.84375,y:.78125},{x:.90625,y:.78125},{x:.90625,y:.78125},{x:.96875,y:.78125},{x:.96875,y:.78125},{x:.03125,y:.84375},{x:.03125,y:.84375},{x:.09375,y:.84375},{x:.09375,y:.84375},{x:.15625,y:.84375},{x:.15625,y:.84375},{x:.21875,y:.84375},{x:.21875,y:.84375},{x:.28125,y:.84375},{x:.28125,y:.84375},{x:.34375,y:.84375},{x:.34375,y:.84375},{x:.40625,y:.84375},{x:.40625,y:.84375},{x:.46875,y:.84375},{x:.46875,y:.84375},{x:.53125,y:.84375},{x:.53125,y:.84375},{x:.59375,y:.84375},{x:.59375,y:.84375},{x:.65625,y:.84375},{x:.65625,y:.84375},{x:.71875,y:.84375},{x:.71875,y:.84375},{x:.78125,y:.84375},{x:.78125,y:.84375},{x:.84375,y:.84375},{x:.84375,y:.84375},{x:.90625,y:.84375},{x:.90625,y:.84375},{x:.96875,y:.84375},{x:.96875,y:.84375},{x:.03125,y:.90625},{x:.03125,y:.90625},{x:.09375,y:.90625},{x:.09375,y:.90625},{x:.15625,y:.90625},{x:.15625,y:.90625},{x:.21875,y:.90625},{x:.21875,y:.90625},{x:.28125,y:.90625},{x:.28125,y:.90625},{x:.34375,y:.90625},{x:.34375,y:.90625},{x:.40625,y:.90625},{x:.40625,y:.90625},{x:.46875,y:.90625},{x:.46875,y:.90625},{x:.53125,y:.90625},{x:.53125,y:.90625},{x:.59375,y:.90625},{x:.59375,y:.90625},{x:.65625,y:.90625},{x:.65625,y:.90625},{x:.71875,y:.90625},{x:.71875,y:.90625},{x:.78125,y:.90625},{x:.78125,y:.90625},{x:.84375,y:.90625},{x:.84375,y:.90625},{x:.90625,y:.90625},{x:.90625,y:.90625},{x:.96875,y:.90625},{x:.96875,y:.90625},{x:.03125,y:.96875},{x:.03125,y:.96875},{x:.09375,y:.96875},{x:.09375,y:.96875},{x:.15625,y:.96875},{x:.15625,y:.96875},{x:.21875,y:.96875},{x:.21875,y:.96875},{x:.28125,y:.96875},{x:.28125,y:.96875},{x:.34375,y:.96875},{x:.34375,y:.96875},{x:.40625,y:.96875},{x:.40625,y:.96875},{x:.46875,y:.96875},{x:.46875,y:.96875},{x:.53125,y:.96875},{x:.53125,y:.96875},{x:.59375,y:.96875},{x:.59375,y:.96875},{x:.65625,y:.96875},{x:.65625,y:.96875},{x:.71875,y:.96875},{x:.71875,y:.96875},{x:.78125,y:.96875},{x:.78125,y:.96875},{x:.84375,y:.96875},{x:.84375,y:.96875},{x:.90625,y:.96875},{x:.90625,y:.96875},{x:.96875,y:.96875},{x:.96875,y:.96875},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.0625,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.1875,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.3125,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.4375,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.5625,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.6875,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.8125,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.9375,y:.0625},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.0625,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.1875,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.3125,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.4375,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.5625,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.6875,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.8125,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.9375,y:.1875},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.0625,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.1875,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.3125,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.4375,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.5625,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.6875,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.8125,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.9375,y:.3125},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.0625,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.1875,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.3125,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.4375,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.5625,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.6875,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.8125,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.9375,y:.4375},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.0625,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.1875,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.3125,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.4375,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.5625,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.6875,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.8125,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.9375,y:.5625},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.0625,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.1875,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.3125,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.4375,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.5625,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.6875,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.8125,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.9375,y:.6875},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.0625,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.1875,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.3125,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.4375,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.5625,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.6875,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.8125,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.9375,y:.8125},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.0625,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.1875,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.3125,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.4375,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.5625,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.6875,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.8125,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375},{x:.9375,y:.9375}],KJ=[0,5,9,13,17,1,2],ZJ=0,YJ={thumb:0,index:1,middle:2,ring:3,pinky:4,all:[0,1,2,3,4],nameMapping:{0:"thumb",1:"index",2:"middle",3:"ring",4:"pinky"},pointsMapping:{0:[[0,1],[1,2],[2,3],[3,4]],1:[[0,5],[5,6],[6,7],[7,8]],2:[[0,9],[9,10],[10,11],[11,12]],3:[[0,13],[13,14],[14,15],[15,16]],4:[[0,17],[17,18],[18,19],[19,20]]},getName:e=>YJ.nameMapping[e],getPoints:e=>YJ.pointsMapping[e]},JJ={none:0,half:1,full:2,nameMapping:{0:"none",1:"half",2:"full"},getName:e=>JJ.nameMapping[e]},QJ={verticalUp:0,verticalDown:1,horizontalLeft:2,horizontalRight:3,diagonalUpRight:4,diagonalUpLeft:5,diagonalDownRight:6,diagonalDownLeft:7,nameMapping:{0:"verticalUp",1:"verticalDown",2:"horizontalLeft",3:"horizontalRight",4:"diagonalUpRight",5:"diagonalUpLeft",6:"diagonalDownRight",7:"diagonalDownLeft"},getName:e=>QJ.nameMapping[e]},eQ=class{constructor(e){l(this,"name"),l(this,"curls"),l(this,"directions"),l(this,"weights"),l(this,"weightsRelative"),this.name=e,this.curls={},this.directions={},this.weights=[1,1,1,1,1],this.weightsRelative=[1,1,1,1,1]}curl(e,t,n){"undefined"===typeof this.curls[e]&&(this.curls[e]=[]),this.curls[e].push([t,n])}direction(e,t,n){this.directions[e]||(this.directions[e]=[]),this.directions[e].push([t,n])}weight(e,t){this.weights[e]=t;const n=this.weights.reduce(((e,t)=>e+t),0);this.weightsRelative=this.weights.map((e=>5*e/n))}matchAgainst(e,t){let n=0;for(const a in e){const t=e[a],r=this.curls[a];if("undefined"!==typeof r){for(const[e,s]of r)if(t===e){n+=s*this.weightsRelative[a];break}}else n+=this.weightsRelative[a]}for(const a in t){const e=t[a],r=this.directions[a];if("undefined"!==typeof r){for(const[t,s]of r)if(e===t){n+=s*this.weightsRelative[a];break}}else n+=this.weightsRelative[a]}return n/10}},{thumb:tQ,index:nQ,middle:aQ,ring:rQ,pinky:sQ}=YJ,{none:iQ,half:oQ,full:lQ}=JJ,{verticalUp:uQ,verticalDown:cQ,horizontalLeft:dQ,horizontalRight:pQ,diagonalUpRight:hQ,diagonalUpLeft:fQ,diagonalDownRight:mQ,diagonalDownLeft:gQ}=QJ,yQ=new eQ("thumbs up");yQ.curl(tQ,iQ,1),yQ.direction(tQ,uQ,1),yQ.direction(tQ,fQ,.25),yQ.direction(tQ,hQ,.25);for(const B0 of[YJ.index,YJ.middle,YJ.ring,YJ.pinky])yQ.curl(B0,lQ,1),yQ.direction(B0,dQ,1),yQ.direction(B0,pQ,1);var AQ=new eQ("victory");AQ.curl(tQ,oQ,.5),AQ.curl(tQ,iQ,.5),AQ.direction(tQ,uQ,1),AQ.direction(tQ,fQ,1),AQ.curl(nQ,iQ,1),AQ.direction(nQ,uQ,.75),AQ.direction(nQ,fQ,1),AQ.curl(aQ,iQ,1),AQ.direction(aQ,uQ,1),AQ.direction(aQ,fQ,.75),AQ.curl(rQ,lQ,1),AQ.direction(rQ,uQ,.2),AQ.direction(rQ,fQ,1),AQ.direction(rQ,dQ,.2),AQ.curl(sQ,lQ,1),AQ.direction(sQ,uQ,.2),AQ.direction(sQ,fQ,1),AQ.direction(sQ,dQ,.2),AQ.weight(nQ,2),AQ.weight(aQ,2);var xQ=new eQ("point");xQ.curl(tQ,lQ,1),xQ.curl(nQ,iQ,.5),xQ.curl(aQ,lQ,.5),xQ.curl(rQ,lQ,.5),xQ.curl(sQ,lQ,.5),xQ.weight(nQ,2),xQ.weight(aQ,2);var bQ=new eQ("middle finger");bQ.curl(tQ,iQ,1),bQ.curl(nQ,lQ,.5),bQ.curl(aQ,lQ,.5),bQ.curl(rQ,lQ,.5),bQ.curl(sQ,lQ,.5),bQ.weight(nQ,2),bQ.weight(aQ,2);var vQ=new eQ("open palm");vQ.curl(tQ,iQ,.75),vQ.curl(nQ,iQ,.75),vQ.curl(aQ,iQ,.75),vQ.curl(rQ,iQ,.75),vQ.curl(sQ,iQ,.75);var wQ=[yQ,AQ,xQ,bQ,vQ],kQ=60,IQ=130,SQ=1.1,NQ=.9,TQ=1.6;function CQ(e,t,n,a){const r=(t-a)/(e-n);let s=180*Math.atan(r)/Math.PI;return s<=0?s=-s:s>0&&(s=180-s),s}function EQ(e,t){if(!e||!t)return[0,0];const n=CQ(e[0],e[1],t[0],t[1]);if(2===e.length)return n;return[n,CQ(e[1],e[2],t[1],t[2])]}function RQ(e,t=1){let n=0,a=0,r=0;return e>=75&&e<=105?n=1*t:e>=25&&e<=155?a=1*t:r=1*t,[n,a,r]}function FQ(e,t,n){const a=e[0]-t[0],r=e[0]-n[0],s=t[0]-n[0],i=e[1]-t[1],o=e[1]-n[1],l=t[1]-n[1],u=e[2]-t[2],c=e[2]-n[2],d=t[2]-n[2],p=Math.sqrt(a*a+i*i+u*u),h=Math.sqrt(r*r+o*o+c*c),f=Math.sqrt(s*s+l*l+d*d);let m=(f*f+p*p-h*h)/(2*f*p);m>1?m=1:m<-1&&(m=-1);let g,y=Math.acos(m);return y=57.2958*y%180,g=y>IQ?JJ.none:y>kQ?JJ.half:JJ.full,g}function $Q(e,t,n,a){let r;return r=a===Math.abs(e)?e>0?QJ.horizontalLeft:QJ.horizontalRight:a===Math.abs(t)?t>0?QJ.horizontalLeft:QJ.horizontalRight:n>0?QJ.horizontalLeft:QJ.horizontalRight,r}function MQ(e,t,n,a){let r;return r=a===Math.abs(e)?e<0?QJ.verticalDown:QJ.verticalUp:a===Math.abs(t)?t<0?QJ.verticalDown:QJ.verticalUp:n<0?QJ.verticalDown:QJ.verticalUp,r}function zQ(e,t,n,a){const r=e[0]-t[0],s=e[0]-n[0],i=t[0]-n[0],o=e[1]-t[1],l=e[1]-n[1],u=t[1]-n[1],c=Math.max(Math.abs(r),Math.abs(s),Math.abs(i)),d=Math.max(Math.abs(o),Math.abs(l),Math.abs(u));let p=0,h=0,f=0;const m=d/(c+1e-5);m>1.5?p+=SQ:m>.66?h+=SQ:f+=SQ;const g=Math.sqrt(r*r+o*o),y=Math.sqrt(s*s+l*l),A=Math.sqrt(i*i+u*u),x=Math.max(g,y,A);let b=e[0],v=e[1],w=n[0],k=n[1];x===g?(w=n[0],k=n[1]):x===A&&(b=t[0],v=t[1]);const I=RQ(EQ([b,v],[w,k]),TQ);p+=I[0],h+=I[1],f+=I[2];for(const N of a){const e=RQ(N,NQ);p+=e[0],h+=e[1],f+=e[2]}let S;return S=p===Math.max(p,h,f)?MQ(l,o,u,d):f===Math.max(h,f)?$Q(s,r,i,c):function(e,t,n,a,r,s,i,o){let l;const u=MQ(e,t,n,a),c=$Q(r,s,i,o);return l=u===QJ.verticalUp?c===QJ.horizontalLeft?QJ.diagonalUpLeft:QJ.diagonalUpRight:c===QJ.horizontalLeft?QJ.diagonalDownLeft:QJ.diagonalDownRight,l}(l,o,u,d,s,r,i,c),S}function _Q(e){const t=[],n=[],a=[],r=[];if(!e)return{curls:a,directions:r};for(const s of YJ.all){const a=YJ.getPoints(s),r=[],i=[];for(const t of a){const n=EQ(e[t[0]],e[t[1]]),a=n[0],s=n[1];r.push(a),i.push(s)}t.push(r),n.push(i)}for(const s of YJ.all){const n=s===YJ.thumb?1:0,i=YJ.getPoints(s),o=e[i[n][0]],l=e[i[n+1][1]],u=e[i[3][1]],c=FQ(o,l,u),d=zQ(o,l,u,t[s].slice(n));a[s]=c,r[s]=d}return{curls:a,directions:r}}function OQ(e){if(!e||0===e.length)return null;const t=_Q(e),n={};for(const a of YJ.all)n[YJ.getName(a)]={curl:JJ.getName(t.curls[a]),direction:QJ.getName(t.directions[a])};return n}function DQ(e){const t=[];if(!e||0===e.length)return t;const n=_Q(e);for(const a of wQ){const e=a.matchAgainst(n.curls,n.directions);e>=.7&&t.push({name:a.name,confidence:e})}return t}var PQ,LQ,WQ,BQ={thumb:[1,2,3,4],index:[5,6,7,8],middle:[9,10,11,12],ring:[13,14,15,16],pinky:[17,18,19,20],palm:[0]};async function UQ(e,t){const n=await WQ.estimateHands(e,t);if(!n)return[];const a=[];for(let r=0;r<n.length;r++){const t={};if(n[r].landmarks)for(const e of Object.keys(BQ))t[e]=BQ[e].map((e=>n[r].landmarks[e]));const s=n[r].landmarks;let i=[Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER,0,0],o=[0,0,0,0];if(s&&s.length>0){for(const e of s)e[0]<i[0]&&(i[0]=e[0]),e[1]<i[1]&&(i[1]=e[1]),e[0]>i[2]&&(i[2]=e[0]),e[1]>i[3]&&(i[3]=e[1]);i[2]-=i[0],i[3]-=i[1],o=[i[0]/(e.shape[2]||0),i[1]/(e.shape[1]||0),i[2]/(e.shape[2]||0),i[3]/(e.shape[1]||0)]}else i=n[r].box?[Math.trunc(Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.max(0,n[r].box.topLeft[1])),Math.trunc(Math.min(e.shape[2]||0,n[r].box.bottomRight[0])-Math.max(0,n[r].box.topLeft[0])),Math.trunc(Math.min(e.shape[1]||0,n[r].box.bottomRight[1])-Math.max(0,n[r].box.topLeft[1]))]:[0,0,0,0],o=[n[r].box.topLeft[0]/(e.shape[2]||0),n[r].box.topLeft[1]/(e.shape[1]||0),(n[r].box.bottomRight[0]-n[r].box.topLeft[0])/(e.shape[2]||0),(n[r].box.bottomRight[1]-n[r].box.topLeft[1])/(e.shape[1]||0)];const l=OQ(s);a.push({id:r,score:Math.round(100*n[r].confidence)/100,boxScore:Math.round(100*n[r].boxConfidence)/100,fingerScore:Math.round(100*n[r].fingerConfidence)/100,label:"hand",box:i,boxRaw:o,keypoints:s,annotations:t,landmarks:l})}return a}async function VQ(e){var t,n,a,r,s,i;iZ.initial&&(PQ=null,LQ=null),PQ&&LQ?(e.debug&&h("cached model:",PQ.modelUrl),e.debug&&h("cached model:",LQ.modelUrl)):([PQ,LQ]=await Promise.all([e.hand.enabled?jS(f(e.modelBasePath,(null==(t=e.hand.detector)?void 0:t.modelPath)||""),{fromTFHub:((null==(n=e.hand.detector)?void 0:n.modelPath)||"").includes("tfhub.dev")}):null,e.hand.landmarks?jS(f(e.modelBasePath,(null==(a=e.hand.skeleton)?void 0:a.modelPath)||""),{fromTFHub:((null==(r=e.hand.skeleton)?void 0:r.modelPath)||"").includes("tfhub.dev")}):null]),e.hand.enabled&&(PQ&&PQ.modelUrl?e.debug&&h("load model:",PQ.modelUrl):h("load model failed:",(null==(s=e.hand.detector)?void 0:s.modelPath)||""),LQ&&LQ.modelUrl?e.debug&&h("load model:",LQ.modelUrl):h("load model failed:",(null==(i=e.hand.skeleton)?void 0:i.modelPath)||"")));const o=new class{constructor(e){l(this,"model"),l(this,"anchors"),l(this,"anchorsTensor"),l(this,"inputSize"),l(this,"inputSizeTensor"),l(this,"doubleInputSizeTensor"),this.model=e,this.anchors=XJ.map((e=>[e.x,e.y])),this.anchorsTensor=ip(this.anchors),this.inputSize=this.model&&this.model.inputs&&this.model.inputs[0].shape?this.model.inputs[0].shape[2]:0,this.inputSizeTensor=sp([this.inputSize,this.inputSize]),this.doubleInputSizeTensor=sp([2*this.inputSize,2*this.inputSize])}normalizeBoxes(e){const t={};t.boxOffsets=lu(e,[0,0],[-1,2]),t.boxSizes=lu(e,[0,2],[-1,2]),t.div=Cl(t.boxOffsets,this.inputSizeTensor),t.boxCenterPoints=Nl(t.div,this.anchorsTensor),t.halfBoxSizes=Cl(t.boxSizes,this.doubleInputSizeTensor),t.sub=Nc(t.boxCenterPoints,t.halfBoxSizes),t.startPoints=El(t.sub,this.inputSizeTensor),t.add=Nl(t.boxCenterPoints,t.halfBoxSizes),t.endPoints=El(t.add,this.inputSizeTensor);const n=wu([t.startPoints,t.endPoints],1);return Object.keys(t).forEach((e=>fl(t[e]))),n}normalizeLandmarks(e,t){const n={};n.reshape=au(e,[-1,7,2]),n.div=Cl(n.reshape,this.inputSizeTensor),n.landmarks=Nl(n.div,this.anchors[t]);const a=El(n.landmarks,this.inputSizeTensor);return Object.keys(n).forEach((e=>fl(n[e]))),a}async predict(e,t){const n={};n.resize=Ph.resizeBilinear(e,[this.inputSize,this.inputSize]),n.div=Cl(n.resize,gZ.tf127),n.image=Nc(n.div,gZ.tf1),n.batched=this.model.execute(n.image),n.predictions=ep(n.batched),n.slice=lu(n.predictions,[0,0],[-1,1]),n.sigmoid=ou(n.slice),n.scores=ep(n.sigmoid);const a=await n.scores.data();n.boxes=lu(n.predictions,[0,1],[-1,4]),n.norm=this.normalizeBoxes(n.boxes),n.nms=await Ph.nonMaxSuppressionAsync(n.norm,n.scores,3*t.hand.maxDetected,t.hand.iouThreshold,t.hand.minConfidence);const r=await n.nms.array(),s=[];for(const i of r){const t={};t.box=lu(n.norm,[i,0],[1,-1]),t.slice=lu(n.predictions,[i,5],[1,14]),t.norm=this.normalizeLandmarks(t.slice,i),t.palmLandmarks=au(t.norm,[-1,2]);const r=await t.box.data(),o=PJ({startPoint:r.slice(0,2),endPoint:r.slice(2,4),palmLandmarks:await t.palmLandmarks.array(),confidence:a[i]},[e.shape[2]/this.inputSize,e.shape[1]/this.inputSize]);s.push(o),Object.keys(t).forEach((e=>fl(t[e])))}return Object.keys(n).forEach((e=>fl(n[e]))),s}}(PQ);return WQ=new class{constructor(e,t){l(this,"handDetector"),l(this,"handPoseModel"),l(this,"inputSize"),l(this,"storedBoxes"),l(this,"skipped"),l(this,"detectedHands"),this.handDetector=e,this.handPoseModel=t,this.inputSize=this.handPoseModel&&this.handPoseModel.inputs[0].shape?this.handPoseModel.inputs[0].shape[2]:0,this.storedBoxes=[],this.skipped=Number.MAX_SAFE_INTEGER,this.detectedHands=0}calculateLandmarksBoundingBox(e){const t=e.map((e=>e[0])),n=e.map((e=>e[1]));return{startPoint:[Math.min(...t),Math.min(...n)],endPoint:[Math.max(...t),Math.max(...n)]}}getBoxForPalmLandmarks(e,t){const n=e.map((e=>qJ([...e,1],t)));return LJ(WJ(this.calculateLandmarksBoundingBox(n)),5)}getBoxForHandLandmarks(e){const t=LJ(WJ(this.calculateLandmarksBoundingBox(e)),1.65);t.palmLandmarks=[];for(let n=0;n<KJ.length;n++)t.palmLandmarks.push(e[KJ[n]].slice(0,2));return t}transformRawCoords(e,t,n,a){const r=_J(t),s=[r[0]/this.inputSize,r[1]/this.inputSize,(r[0]+r[1])/this.inputSize/2],i=e.map((e=>[s[0]*(e[0]-this.inputSize/2),s[1]*(e[1]-this.inputSize/2),s[2]*e[2]])),o=jJ(n,[0,0]),l=i.map((e=>[...qJ(e,o),e[2]])),u=function(e){const t=[[e[0][0],e[1][0]],[e[0][1],e[1][1]]],n=[e[0][2],e[1][2]],a=[-VJ(t[0],n),-VJ(t[1],n)];return[t[0].concat(a[0]),t[1].concat(a[1]),[0,0,1]]}(a),c=[...OJ(t),1],d=[VJ(c,u[0]),VJ(c,u[1])];return l.map((e=>[Math.trunc(e[0]+d[0]),Math.trunc(e[1]+d[1]),Math.trunc(e[2])]))}async estimateHands(e,t){let n,a=!1;const r=(t.hand.skipTime||0)>m()-ZJ,s=this.skipped<(t.hand.skipFrames||0);t.skipAllowed&&r&&s&&(n=await this.handDetector.predict(e,t),this.skipped=0),t.skipAllowed&&this.skipped++,n&&n.length>0&&(n.length!==this.detectedHands&&this.detectedHands!==t.hand.maxDetected||!t.hand.landmarks)&&(this.detectedHands=0,this.storedBoxes=[...n],this.storedBoxes.length>0&&(a=!0));const i=[];for(let o=0;o<this.storedBoxes.length;o++){const n=this.storedBoxes[o];if(n)if(t.hand.landmarks){const r=t.hand.rotation?BJ(n.palmLandmarks[0],n.palmLandmarks[2]):0,s=OJ(n),l=[s[0]/e.shape[2],s[1]/e.shape[1]],u=t.hand.rotation&&iZ.kernels.includes("rotatewithoffset")?Ph.rotateWithOffset(e,r,0,l):e.clone(),c=jJ(-r,s),d=a?this.getBoxForPalmLandmarks(n.palmLandmarks,c):n,p=DJ(d,u,[this.inputSize,this.inputSize]),h=Cl(p,gZ.tf255);fl(p),fl(u);const[f,g]=this.handPoseModel.execute(h);ZJ=m(),fl(h);const y=(await f.data())[0];if(fl(f),y>=t.hand.minConfidence/4){const e=au(g,[-1,3]),t=await e.array();fl(g),fl(e);const a=this.transformRawCoords(t,d,r,c),s=this.getBoxForHandLandmarks(a);this.storedBoxes[o]={...s,confidence:y};const l={landmarks:a,confidence:y,boxConfidence:n.confidence,fingerConfidence:y,box:{topLeft:s.startPoint,bottomRight:s.endPoint}};i.push(l)}else this.storedBoxes[o]=null;fl(g)}else{const e=LJ(WJ(n),1.65),t={confidence:n.confidence,boxConfidence:n.confidence,fingerConfidence:0,box:{topLeft:e.startPoint,bottomRight:e.endPoint},landmarks:[]};i.push(t)}}return this.storedBoxes=this.storedBoxes.filter((e=>null!==e)),this.detectedHands=i.length,i.length>t.hand.maxDetected&&(i.length=t.hand.maxDetected),i}}(o,LQ),[PQ,LQ]}var GQ,HQ=[null,null],jQ=["StatefulPartitionedCall/Postprocessor/Slice","StatefulPartitionedCall/Postprocessor/ExpandDims_1"],qQ=[[0,0],[0,0]],XQ=["hand","fist","pinch","point","face","tip","pinchtip"],KQ=Number.MAX_SAFE_INTEGER,ZQ=0,YQ=[0,0],JQ={boxes:[],hands:[]},QQ={thumb:[0,1,2,3,4],index:[0,5,6,7,8],middle:[0,9,10,11,12],ring:[0,13,14,15,16],pinky:[0,17,18,19,20],palm:[0]};async function e1(e,t,n){const a={id:t.id,score:Math.round(100*t.score)/100,boxScore:Math.round(100*t.score)/100,fingerScore:0,box:t.box,boxRaw:t.boxRaw,label:t.label,keypoints:[],landmarks:{},annotations:{}};if(e&&HQ[1]&&n.hand.landmarks&&t.score>(n.hand.minConfidence||0)){const r={};r.crop=Ph.cropAndResize(e,[t.boxCrop],[0],[qQ[1][0],qQ[1][1]],"bilinear"),r.div=Cl(r.crop,gZ.tf255),[r.score,r.keypoints]=HQ[1].execute(r.div,["Identity_1","Identity"]);const s=(await r.score.data())[0],i=(100-Math.trunc(100/(1+Math.exp(s))))/100;if(i>=(n.hand.minConfidence||0)){a.fingerScore=i,r.reshaped=au(r.keypoints,[-1,3]);const e=(await r.reshaped.array()).map((e=>[e[0]/qQ[1][1],e[1]/qQ[1][0],e[2]||0])).map((e=>[e[0]*t.boxRaw[2],e[1]*t.boxRaw[3],e[2]||0]));a.keypoints=e.map((e=>[YQ[0]*(e[0]+t.boxRaw[0]),YQ[1]*(e[1]+t.boxRaw[1]),e[2]||0])),a.landmarks=OQ(a.keypoints);for(const t of Object.keys(QQ))a.annotations[t]=QQ[t].map((e=>a.landmarks&&a.keypoints[e]?a.keypoints[e]:null))}Object.keys(r).forEach((e=>fl(r[e])))}return a}async function t1(e,t){var n,a;if(!HQ[0]||!HQ[1]||!(null==(n=HQ[0])?void 0:n.inputs[0].shape)||!(null==(a=HQ[1])?void 0:a.inputs[0].shape))return[];YQ=[e.shape[2]||0,e.shape[1]||0],KQ++;const r=(t.hand.skipTime||0)>m()-ZQ,s=KQ<(t.hand.skipFrames||0);return t.skipAllowed&&r&&s?JQ.hands:new Promise((async n=>{const a=3*(t.hand.skipTime||0)>m()-ZQ,r=KQ<3*(t.hand.skipFrames||0);t.skipAllowed&&JQ.hands.length===t.hand.maxDetected||t.skipAllowed&&a&&r&&JQ.hands.length>0?JQ.hands=await Promise.all(JQ.boxes.map((n=>e1(e,n,t)))):(JQ.boxes=await async function(e,t){const n=[];if(!e||!HQ[0])return n;const a={},r=(e.shape[2]||1)/(e.shape[1]||1),s=Math.min(8*Math.round((e.shape[1]||0)/8),512),i=8*Math.round(s*r/8);a.resize=Ph.resizeBilinear(e,[s,i]),a.cast=zi(a.resize,"int32"),[a.rawScores,a.rawBoxes]=await HQ[0].executeAsync(a.cast,jQ),a.boxes=ep(a.rawBoxes,[0,2]),a.scores=ep(a.rawScores,[0]);const o=fp(a.scores,1);fl(o[4]),o.splice(4,1),a.filtered=tp(o,1),fl(o),a.max=Sc(a.filtered,1),a.argmax=Ol(a.filtered,1);let l=0;a.nms=await Ph.nonMaxSuppressionAsync(a.boxes,a.max,t.hand.maxDetected,t.hand.iouThreshold,t.hand.minConfidence);const u=await a.nms.data(),c=await a.max.data(),d=await a.argmax.data();for(const p of Array.from(u)){const e=lu(a.boxes,p,1),t=await e.data();fl(e);const r=[t[1],t[0],t[3]-t[1],t[2]-t[0]],s=AY(r,1.4),i=xY(s),o=[Math.trunc(r[0]*YQ[0]),Math.trunc(r[1]*YQ[1]),Math.trunc(r[2]*YQ[0]),Math.trunc(r[3]*YQ[1])],u={id:l++,score:c[p],box:o,boxRaw:s,boxCrop:i,label:XQ[d[p]]};n.push(u)}return Object.keys(a).forEach((e=>fl(a[e]))),n.sort(((e,t)=>t.score-e.score)),n.length>(t.hand.maxDetected||1)&&(n.length=t.hand.maxDetected||1),n}(e,t),ZQ=m(),JQ.hands=await Promise.all(JQ.boxes.map((n=>e1(e,n,t)))),KQ=0);const s=[...JQ.boxes];if(JQ.boxes.length=0,t.cacheSensitivity>0)for(let i=0;i<JQ.hands.length;i++){const n=yY(JQ.hands[i].keypoints,YQ);if(n.box[2]/(e.shape[2]||1)>.05&&n.box[3]/(e.shape[1]||1)>.05&&JQ.hands[i].fingerScore&&JQ.hands[i].fingerScore>(t.hand.minConfidence||0)){const e=AY(n.box,1.6),t=AY(n.boxRaw,1.6),a=xY(t);JQ.boxes.push({...s[i],box:e,boxRaw:t,boxCrop:a})}}for(let e=0;e<JQ.hands.length;e++){const t=gY(JQ.hands[e].keypoints,YQ);JQ.hands[e].box=t.box,JQ.hands[e].boxRaw=t.boxRaw}n(JQ.hands)}))}var n1=[],a1=Number.MAX_SAFE_INTEGER,r1=0,s1=0;async function i1(e,t,n,a){var r,s;if(!GQ)return 0;const i=((null==(r=t.face.liveness)?void 0:r.skipTime)||0)>m()-s1,o=a1<((null==(s=t.face.liveness)?void 0:s.skipFrames)||0);return t.skipAllowed&&i&&o&&r1===a&&n1[n]?(a1++,n1[n]):(a1=0,new Promise((async t=>{const r=Ph.resizeBilinear(e,[(null==GQ?void 0:GQ.inputs[0].shape)?GQ.inputs[0].shape[2]:0,(null==GQ?void 0:GQ.inputs[0].shape)?GQ.inputs[0].shape[1]:0],!1),s=null==GQ?void 0:GQ.execute(r),i=(await s.data())[0];n1[n]=Math.round(100*i)/100,r1=a,s1=m(),fl([r,s]),t(n1[n])})))}var o1={};o(o1,{connected:()=>h1,horizontal:()=>c1,kpt:()=>u1,relative:()=>p1,vertical:()=>d1});var l1,u1=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],c1=[["leftEye","rightEye"],["leftEar","rightEar"],["leftShoulder","rightShoulder"],["leftElbow","rightElbow"],["leftWrist","rightWrist"],["leftHip","rightHip"],["leftKnee","rightKnee"],["leftAnkle","rightAnkle"]],d1=[["leftKnee","leftShoulder"],["rightKnee","rightShoulder"],["leftAnkle","leftKnee"],["rightAnkle","rightKnee"]],p1=[[["leftHip","rightHip"],["leftShoulder","rightShoulder"]],[["leftElbow","rightElbow"],["leftShoulder","rightShoulder"]]],h1={leftLeg:["leftHip","leftKnee","leftAnkle"],rightLeg:["rightHip","rightKnee","rightAnkle"],torso:["leftShoulder","rightShoulder","rightHip","leftHip","leftShoulder"],leftArm:["leftShoulder","leftElbow","leftWrist"],rightArm:["rightShoulder","rightElbow","rightWrist"],head:[]},f1={keypoints:[],padding:[[0,0],[0,0],[0,0],[0,0]]};function m1(e){for(const t of c1){const n=e.keypoints.findIndex((e=>e.part===t[0])),a=e.keypoints.findIndex((e=>e.part===t[1]));if(e.keypoints[n]&&e.keypoints[a]&&e.keypoints[n].position[0]<e.keypoints[a].position[0]){const t=e.keypoints[n];e.keypoints[n]=e.keypoints[a],e.keypoints[a]=t}}for(const t of d1){const n=e.keypoints.findIndex((e=>e&&e.part===t[0])),a=e.keypoints.findIndex((e=>e&&e.part===t[1]));e.keypoints[n]&&e.keypoints[a]&&e.keypoints[n].position[1]<e.keypoints[a].position[1]&&e.keypoints.splice(n,1)}for(const[t,n]of p1){const a=e.keypoints.findIndex((e=>e&&e.part===t[0])),r=e.keypoints.findIndex((e=>e&&e.part===t[1])),s=e.keypoints.findIndex((e=>e&&e.part===n[0])),i=e.keypoints.findIndex((e=>e&&e.part===n[1]));if(!e.keypoints[s]||!e.keypoints[i])continue;const o=e.keypoints[a]?[Math.abs(e.keypoints[s].position[0]-e.keypoints[a].position[0]),Math.abs(e.keypoints[i].position[0]-e.keypoints[a].position[0])]:[0,0],l=e.keypoints[r]?[Math.abs(e.keypoints[i].position[0]-e.keypoints[r].position[0]),Math.abs(e.keypoints[s].position[0]-e.keypoints[r].position[0])]:[0,0];if(o[0]>o[1]||l[0]>l[1]){const t=e.keypoints[a];e.keypoints[a]=e.keypoints[r],e.keypoints[r]=t}}}function g1(e){for(let t=0;t<e.length;t++)if(e[t]&&f1.keypoints[t]){const n=[Math.abs(e[t].positionRaw[0]-f1.keypoints[t].positionRaw[0]),Math.abs(e[t].positionRaw[1]-f1.keypoints[t].positionRaw[1])];n[0]<.005&&n[1]<.005?e[t]=f1.keypoints[t]:f1.keypoints[t]=e[t]}else f1.keypoints[t]=e[t];return e}function y1(e,t){e.keypoints=e.keypoints.filter((e=>e&&e.position));for(const a of e.keypoints)a.position=[a.position[0]*(t[0]+f1.padding[2][0]+f1.padding[2][1])/t[0]-f1.padding[2][0],a.position[1]*(t[1]+f1.padding[1][0]+f1.padding[1][1])/t[1]-f1.padding[1][0]],a.positionRaw=[a.position[0]/t[0],a.position[1]/t[1]];const n=gY(e.keypoints.map((e=>e.position)),t);return e.box=n.box,e.boxRaw=n.boxRaw,e}var A1,x1=0,b1=Number.MAX_SAFE_INTEGER,v1={boxes:[],bodies:[],last:0};async function w1(e,t){if(!l1||!(null==l1?void 0:l1.inputs[0].shape))return[];t.skipAllowed||(v1.boxes.length=0),b1++;const n=(t.body.skipTime||0)>m()-v1.last,a=b1<(t.body.skipFrames||0);return t.skipAllowed&&n&&a?v1.bodies:new Promise((async n=>{const a={};b1=0,a.input=function(e,t){const n={};if(!e.shape||!e.shape[1]||!e.shape[2])return e;f1.padding=[[0,0],[e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0,e.shape[2]>e.shape[1]?Math.trunc((e.shape[2]-e.shape[1])/2):0],[e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0,e.shape[1]>e.shape[2]?Math.trunc((e.shape[1]-e.shape[2])/2):0],[0,0]],n.pad=od(e,f1.padding),n.resize=Ph.resizeBilinear(n.pad,[t,t]);const a=zi(n.resize,"int32");return Object.keys(n).forEach((e=>fl(n[e]))),a}(e,x1),a.res=null==l1?void 0:l1.execute(a.input),v1.last=m();const r=await a.res.array();v1.bodies=17===a.res.shape[2]?await async function(e,t,n){const a=e[0][0],r=[];let s=0;for(let c=0;c<a.length;c++)if(s=a[c][2],s>t.body.minConfidence){const e=[a[c][1],a[c][0]];r.push({score:Math.round(100*s)/100,part:u1[c],positionRaw:e,position:[Math.round((n.shape[2]||0)*e[0]),Math.round((n.shape[1]||0)*e[1])]})}s=r.reduce(((e,t)=>t.score>e?t.score:e),0);const i=[],o=gY(r.map((e=>e.position)),[n.shape[2],n.shape[1]]),l={};for(const[c,d]of Object.entries(h1)){const e=[];for(let n=0;n<d.length-1;n++){const a=r.find((e=>e.part===d[n])),s=r.find((e=>e.part===d[n+1]));a&&s&&a.score>(t.body.minConfidence||0)&&s.score>(t.body.minConfidence||0)&&e.push([a.position,s.position])}l[c]=e}const u={id:0,score:s,box:o.box,boxRaw:o.boxRaw,keypoints:r,annotations:l};return m1(u),i.push(u),i}(r,t,e):await async function(e,t,n){const a=[];for(let r=0;r<e[0].length;r++){const s=e[0][r],i=Math.round(100*s[55])/100;if(i>t.body.minConfidence){const e=[];for(let a=0;a<17;a++){const r=s[3*a+2];if(r>t.body.minConfidence){const t=[s[3*a+1],s[3*a+0]];e.push({part:u1[a],score:Math.round(100*r)/100,positionRaw:t,position:[Math.round((n.shape[2]||0)*t[0]),Math.round((n.shape[1]||0)*t[1])]})}}const o=gY(e.map((e=>e.position)),[n.shape[2],n.shape[1]]),l={};for(const[n,a]of Object.entries(h1)){const r=[];for(let n=0;n<a.length-1;n++){const s=e.find((e=>e.part===a[n])),i=e.find((e=>e.part===a[n+1]));s&&i&&s.score>(t.body.minConfidence||0)&&i.score>(t.body.minConfidence||0)&&r.push([s.position,i.position])}l[n]=r}const u={id:r,score:i,box:o.box,boxRaw:o.boxRaw,keypoints:[...e],annotations:l};m1(u),a.push(u)}}return a.sort(((e,t)=>t.score-e.score)),a.length>t.body.maxDetected&&(a.length=t.body.maxDetected),a}(r,t,e);for(const t of v1.bodies)y1(t,[e.shape[2]||1,e.shape[1]||1]),g1(t.keypoints);Object.keys(a).forEach((e=>fl(a[e]))),n(v1.bodies)}))}var k1=[],I1=0,S1=Number.MAX_SAFE_INTEGER,N1=2.5;async function T1(e,t){const n=(t.object.skipTime||0)>m()-I1,a=S1<(t.object.skipFrames||0);return t.skipAllowed&&n&&a&&k1.length>0?(S1++,k1):(S1=0,iZ.kernels.includes("mod")&&iZ.kernels.includes("sparsetodense")?new Promise((async n=>{const a=[e.shape[2],e.shape[1]],r=Ph.resizeBilinear(e,[A1.inputSize,A1.inputSize],!1),s=Cl(r,gZ.tf255),i=s.transpose([0,3,1,2]);let o;fl(s),fl(r),t.object.enabled&&(o=A1.execute(i)),I1=m(),fl(i);const l=await async function(e,t,n,a){let r=0,s=[];for(const u of[1,2,4])hl((async()=>{var i,o;const l=13*u,c=null==(i=e.find((e=>e.shape[1]===l**2&&e.shape[2]===MY.length)))?void 0:i.squeeze(),d=null==(o=e.find((e=>e.shape[1]===l**2&&e.shape[2]<MY.length)))?void 0:o.squeeze(),p=d.reshape([-1,4,d.shape[1]/4]),h=await p.argMax(2).array(),f=await c.array();for(let e=0;e<c.shape[0];e++)for(let i=0;i<c.shape[1];i++){const o=f[e][i];if(o>a.object.minConfidence&&61!==i){const a=(.5+Math.trunc(e%l))/l,c=(.5+Math.trunc(e/l))/l,d=h[e].map((e=>e*(l/u/t))),[p,f]=[a-N1/u*d[0],c-N1/u*d[1]],[m,g]=[a+N1/u*d[2]-p,c+N1/u*d[3]-f];let y=[p,f,m,g];y=y.map((e=>Math.max(0,Math.min(e,1))));const A=[y[0]*n[0],y[1]*n[1],y[2]*n[0],y[3]*n[1]],x={id:r++,score:Math.round(100*o)/100,class:i+1,label:MY[i].label,box:A.map((e=>Math.trunc(e))),boxRaw:y};s.push(x)}}}));e.forEach((e=>fl(e)));const i=s.map((e=>[e.boxRaw[1],e.boxRaw[0],e.boxRaw[3],e.boxRaw[2]])),o=s.map((e=>e.score));let l=[];if(i&&i.length>0){const e=await Ph.nonMaxSuppressionAsync(i,o,a.object.maxDetected,a.object.iouThreshold,a.object.minConfidence);l=await e.data(),fl(e)}return s=s.filter(((e,t)=>l.includes(t))).sort(((e,t)=>t.score-e.score)),s}(o,A1.inputSize,a,t);k1=l,n(l)})):k1)}var C1=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],E1=C1.length,R1=C1.reduce(((e,t,n)=>(e[t]=n,e)),{}),F1=([["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map((([e,t])=>[R1[e],R1[t]])),[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]]);function $1(e){const t=e.reduce((({maxX:e,maxY:t,minX:n,minY:a},{position:{x:r,y:s}})=>({maxX:Math.max(e,r),maxY:Math.max(t,s),minX:Math.min(n,r),minY:Math.min(a,s)})),{maxX:Number.NEGATIVE_INFINITY,maxY:Number.NEGATIVE_INFINITY,minX:Number.POSITIVE_INFINITY,minY:Number.POSITIVE_INFINITY});return[t.minX,t.minY,t.maxX-t.minX,t.maxY-t.minY]}function M1(e,[t,n],[a,r]){const s=t/a,i=n/r;return e.map(((e,t)=>((e,t)=>({id:t,score:e.score,boxRaw:[e.box[0]/r,e.box[1]/a,e.box[2]/r,e.box[3]/a],box:[Math.trunc(e.box[0]*i),Math.trunc(e.box[1]*s),Math.trunc(e.box[2]*i),Math.trunc(e.box[3]*s)],keypoints:e.keypoints.map((({score:e,part:t,position:n})=>({score:e,part:t,position:[Math.trunc(n.x*i),Math.trunc(n.y*s)],positionRaw:[n.x/a,n.y/a]}))),annotations:{}}))(e,t)))}var z1;function _1(e,t,n,a){return{y:a.get(e,t,n),x:a.get(e,t,n+E1)}}function O1(e,t,n){const{heatmapY:a,heatmapX:r,id:s}=e,{y:i,x:o}=_1(a,r,s,n);return{x:e.heatmapX*t+o,y:e.heatmapY*t+i}}function D1(e,t,n){return e<t?t:e>n?n:e}function P1(e,t){return{x:e.x+t.x,y:e.y+t.y}}var L1,W1=["MobilenetV1/offset_2/BiasAdd","MobilenetV1/heatmap_2/BiasAdd","MobilenetV1/displacement_fwd_2/BiasAdd","MobilenetV1/displacement_bwd_2/BiasAdd"],B1=16;function U1(e,t,n,a,r,s,i=2){const o=(e,t,n)=>({y:D1(Math.round(e.y/B1),0,t-1),x:D1(Math.round(e.x/B1),0,n-1)}),[l,u]=a.shape,c=o(t.position,l,u),d=(p=c,{y:s.get(p.y,p.x,e),x:s.get(p.y,p.x,s.shape[2]/2+e)});var p;let h=P1(t.position,d);for(let g=0;g<i;g++){const e=o(h,l,u),t=_1(e.y,e.x,n,r);h=P1({x:e.x*B1,y:e.y*B1},{x:t.x,y:t.y})}const f=o(h,l,u),m=a.get(f.y,f.x,n);return{position:h,part:C1[n],score:m}}function V1(e,t,n,a,r){const s=F1.map((([e,t])=>[R1[e],R1[t]])),i=s.map((([,e])=>e)),o=s.map((([e])=>e)),l=t.shape[2],u=i.length,c=new Array(l),d=O1(e.part,B1,n);c[e.part.id]={score:e.score,part:C1[e.part.id],position:d};for(let p=u-1;p>=0;--p){const e=i[p],a=o[p];c[e]&&!c[a]&&(c[a]=U1(p,c[e],a,t,n,r))}for(let p=0;p<u;++p){const e=o[p],r=i[p];c[e]&&!c[r]&&(c[r]=U1(p,c[e],r,t,n,a))}return c}function G1(e,t,n,a,r){const[s,i]=r.shape;let o=!0;const l=Math.max(n-1,0),u=Math.min(n+1+1,s);for(let c=l;c<u;++c){const n=Math.max(a-1,0),s=Math.min(a+1+1,i);for(let a=n;a<s;++a)if(r.get(c,a,e)>t){o=!1;break}if(!o)break}return o}function H1(e,t){const[n,a,r]=t.shape,s=new class{constructor(e,t){l(this,"priorityQueue"),l(this,"numberOfElements"),l(this,"getElementValue"),this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}enqueue(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)}dequeue(){const e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e}empty(){return-1===this.numberOfElements}size(){return this.numberOfElements+1}all(){return this.priorityQueue.slice(0,this.numberOfElements+1)}max(){return this.priorityQueue[0]}swim(e){for(;e>0&&this.less(Math.floor(e/2),e);)this.exchange(e,Math.floor(e/2)),e=Math.floor(e/2)}sink(e){for(;2*e<=this.numberOfElements;){let t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}}getValueAt(e){return this.getElementValue(this.priorityQueue[e])}less(e,t){return this.getValueAt(e)<this.getValueAt(t)}exchange(e,t){const n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n}}(n*a*r,(({score:e})=>e));for(let i=0;i<n;++i)for(let n=0;n<a;++n)for(let a=0;a<r;++a){const r=t.get(i,n,a);r<e||G1(a,r,i,n,t)&&s.enqueue({score:r,part:{heatmapY:i,heatmapX:n,id:a}})}return s}function j1(e,{x:t,y:n},a){return e.some((({keypoints:e})=>{var r;const s=null==(r=e[a])?void 0:r.position;return!!s&&function(e,t,n,a){const r=n-e,s=a-t;return r*r+s*s}(n,t,s.y,s.x)<=2500}))}function q1(e,t){return t.reduce(((t,{position:n,score:a},r)=>(j1(e,n,r)||(t+=a),t)),0)/t.length}async function X1(e,t){const n=hl((()=>{if(!z1.inputs[0].shape)return[];const t=Ph.resizeBilinear(e,[z1.inputs[0].shape[2],z1.inputs[0].shape[1]]),n=Nc(Cl(zi(t,"float32"),127.5),1),a=z1.execute(n,W1).map((e=>ep(e,[0])));return a[1]=a[1].sigmoid(),a})),a=await Promise.all(n.map((e=>e.buffer())));for(const s of n)fl(s);const r=await function(e,t,n,a,r,s){const i=[],o=H1(s,t);for(;i.length<r&&!o.empty();){const r=o.dequeue();if(j1(i,O1(r.part,B1,e),r.part.id))continue;let l=V1(r,t,e,n,a);l=l.filter((e=>e.score>s));const u=q1(i,l),c=$1(l);u>s&&i.push({keypoints:l,box:c,score:Math.round(100*u)/100})}return i}(a[0],a[1],a[2],a[3],t.body.maxDetected,t.body.minConfidence);if(!z1.inputs[0].shape)return[];return M1(r,[e.shape[1],e.shape[2]],[z1.inputs[0].shape[2],z1.inputs[0].shape[1]])}var K1=!1;async function Z1(e){return!L1||iZ.initial?(L1=await jS(f(e.modelBasePath,e.segmentation.modelPath||"")))&&L1.modelUrl?e.debug&&h("load model:",L1.modelUrl):h("load model failed:",e.segmentation.modelPath):e.debug&&h("cached model:",L1.modelUrl),L1}function Y1(e){for(const t of Object.keys(e.models))e.models[t]=null}async function J1(e){var t,n,a,r,s,i,o,l,u,c,d,p,m,g,y,A,x,b,v,w,k,I,S,N,T,C,E,R,F,$;iZ.initial&&Y1(e),e.config.hand.enabled&&(!e.models.handpose&&(null==(n=null==(t=e.config.hand.detector)?void 0:t.modelPath)?void 0:n.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await VQ(e.config)),!e.models.handskeleton&&e.config.hand.landmarks&&(null==(r=null==(a=e.config.hand.detector)?void 0:a.modelPath)?void 0:r.includes("handdetect"))&&([e.models.handpose,e.models.handskeleton]=await VQ(e.config))),e.config.body.enabled&&!e.models.blazepose&&(null==(i=null==(s=e.config.body)?void 0:s.modelPath)?void 0:i.includes("blazepose"))&&(e.models.blazepose=async function(e){if(bY&&(vY.landmarks=null),vY.landmarks)e.debug&&h("cached model:",vY.landmarks.modelUrl);else{vY.landmarks=await jS(f(e.modelBasePath,e.body.modelPath||""));const t=Object.values(vY.landmarks.modelSignature.inputs);wY.landmarks[0]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[1].size):0,wY.landmarks[1]=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,vY.landmarks&&vY.landmarks.modelUrl?e.debug&&h("load model:",vY.landmarks.modelUrl):h("load model failed:",e.body.modelPath)}return vY.landmarks}(e.config)),e.config.body.enabled&&!e.models.blazeposedetect&&e.config.body.detector&&e.config.body.detector.modelPath&&(e.models.blazeposedetect=EY(e.config)),e.config.body.enabled&&!e.models.efficientpose&&(null==(l=null==(o=e.config.body)?void 0:o.modelPath)?void 0:l.includes("efficientpose"))&&(e.models.efficientpose=async function(e){return iZ.initial&&(WY=null),WY?e.debug&&h("cached model:",WY.modelUrl):(WY=await jS(f(e.modelBasePath,e.body.modelPath||"")))&&WY.modelUrl?e.debug&&h("load model:",WY.modelUrl):h("load model failed:",e.body.modelPath),WY}(e.config)),e.config.body.enabled&&!e.models.movenet&&(null==(c=null==(u=e.config.body)?void 0:u.modelPath)?void 0:c.includes("movenet"))&&(e.models.movenet=async function(e){return iZ.initial&&(l1=null),l1?e.debug&&h("cached model:",l1.modelUrl):(n0(["size"],e),(l1=await jS(f(e.modelBasePath,e.body.modelPath||"")))&&l1.modelUrl?e.debug&&h("load model:",l1.modelUrl):h("load model failed:",e.body.modelPath)),x1=l1.inputs[0].shape?l1.inputs[0].shape[2]:0,l1}(e.config)),e.config.body.enabled&&!e.models.posenet&&(null==(p=null==(d=e.config.body)?void 0:d.modelPath)?void 0:p.includes("posenet"))&&(e.models.posenet=async function(e){return!z1||iZ.initial?(z1=await jS(f(e.modelBasePath,e.body.modelPath||"")))&&z1.modelUrl?e.debug&&h("load model:",z1.modelUrl):h("load model failed:",e.body.modelPath):e.debug&&h("cached model:",z1.modelUrl),z1}(e.config)),e.config.face.enabled&&!e.models.facedetect&&(e.models.facedetect=cY(e.config)),e.config.face.enabled&&(null==(m=e.config.face.antispoof)?void 0:m.enabled)&&!e.models.antispoof&&(e.models.antispoof=async function(e){var t,n;return iZ.initial&&(kZ=null),kZ?e.debug&&h("cached model:",kZ.modelUrl):(kZ=await jS(f(e.modelBasePath,(null==(t=e.face.antispoof)?void 0:t.modelPath)||"")))&&kZ.modelUrl?e.debug&&h("load model:",kZ.modelUrl):h("load model failed:",null==(n=e.face.antispoof)?void 0:n.modelPath),kZ}(e.config)),e.config.face.enabled&&(null==(g=e.config.face.liveness)?void 0:g.enabled)&&!e.models.liveness&&(e.models.liveness=async function(e){var t,n;return iZ.initial&&(GQ=null),GQ?e.debug&&h("cached model:",GQ.modelUrl):(GQ=await jS(f(e.modelBasePath,(null==(t=e.face.liveness)?void 0:t.modelPath)||"")))&&GQ.modelUrl?e.debug&&h("load model:",GQ.modelUrl):h("load model failed:",null==(n=e.face.liveness)?void 0:n.modelPath),GQ}(e.config)),e.config.face.enabled&&(null==(y=e.config.face.description)?void 0:y.enabled)&&!e.models.faceres&&(e.models.faceres=async function(e){var t,n;const a=f(e.modelBasePath,(null==(t=e.face.description)?void 0:t.modelPath)||"");return iZ.initial&&(NJ=null),NJ?e.debug&&h("cached model:",a):(NJ=await jS(a))?e.debug&&h("load model:",a):h("load model failed:",(null==(n=e.face.description)?void 0:n.modelPath)||""),NJ}(e.config)),e.config.face.enabled&&(null==(A=e.config.face.emotion)?void 0:A.enabled)&&!e.models.emotion&&(e.models.emotion=async function(e){var t,n;return iZ.initial&&(XY=null),XY?e.debug&&h("cached model:",XY.modelUrl):(XY=await jS(f(e.modelBasePath,(null==(t=e.face.emotion)?void 0:t.modelPath)||"")))&&XY.modelUrl?e.debug&&h("load model:",XY.modelUrl):h("load model failed:",null==(n=e.face.emotion)?void 0:n.modelPath),XY}(e.config)),e.config.face.enabled&&(null==(x=e.config.face.iris)?void 0:x.enabled)&&!e.models.faceiris&&(e.models.faceiris=async function(e){var t,n;return iZ.initial&&(nJ=null),nJ?e.debug&&h("cached model:",nJ.modelUrl):(nJ=await jS(f(e.modelBasePath,(null==(t=e.face.iris)?void 0:t.modelPath)||"")))&&nJ.modelUrl?e.debug&&h("load model:",nJ.modelUrl):h("load model failed:",null==(n=e.face.iris)?void 0:n.modelPath),-1===(lJ=nJ.inputs[0].shape?nJ.inputs[0].shape[2]:0)&&(lJ=64),nJ}(e.config)),e.config.face.enabled&&(null==(b=e.config.face.mesh)?void 0:b.enabled)&&!e.models.facemesh&&(e.models.facemesh=async function(e){var t,n;return iZ.initial&&(wJ=null),wJ?e.debug&&h("cached model:",wJ.modelUrl):(wJ=await jS(f(e.modelBasePath,(null==(t=e.face.mesh)?void 0:t.modelPath)||"")))&&wJ.modelUrl?e.debug&&h("load model:",wJ.modelUrl):h("load model failed:",null==(n=e.face.mesh)?void 0:n.modelPath),kJ=wJ.inputs[0].shape?wJ.inputs[0].shape[2]:0,wJ}(e.config)),e.config.face.enabled&&(null==(v=e.config.face.gear)?void 0:v.enabled)&&!e.models.gear&&(e.models.gear=async function(e){return iZ.initial&&(sZ=null),sZ?e.debug&&h("cached model:",sZ.modelUrl):(sZ=await jS(f(e.modelBasePath,e.face.gear.modelPath)))&&sZ.modelUrl?e.debug&&h("load model:",sZ.modelUrl):h("load model failed:",e.face.gear.modelPath),sZ}(e.config)),e.config.face.enabled&&(null==(w=e.config.face.ssrnet)?void 0:w.enabled)&&!e.models.ssrnetage&&(e.models.ssrnetage=async function(e){return iZ.initial&&(mZ=null),mZ?e.debug&&h("cached model:",mZ.modelUrl):(mZ=await jS(f(e.modelBasePath,e.face.ssrnet.modelPathAge)))&&mZ.modelUrl?e.debug&&h("load model:",mZ.modelUrl):h("load model failed:",e.face.ssrnet.modelPathAge),mZ}(e.config)),e.config.face.enabled&&(null==(k=e.config.face.ssrnet)?void 0:k.enabled)&&!e.models.ssrnetgender&&(e.models.ssrnetgender=async function(e){return iZ.initial&&(yZ=null),yZ?e.debug&&h("cached model:",yZ.modelUrl):(yZ=await jS(f(e.modelBasePath,e.face.ssrnet.modelPathGender)))&&yZ.modelUrl?e.debug&&h("load model:",yZ.modelUrl):h("load model failed:",e.face.ssrnet.modelPathGender),yZ}(e.config)),e.config.face.enabled&&(null==(I=e.config.face.mobilefacenet)?void 0:I.enabled)&&!e.models.mobilefacenet&&(e.models.mobilefacenet=async function(e){const t=f(e.modelBasePath,e.face.mobilefacenet.modelPath);return iZ.initial&&(KY=null),KY?e.debug&&h("cached model:",t):(KY=await jS(t))?e.debug&&h("load model:",t):h("load model failed:",e.face.mobilefacenet.modelPath),KY}(e.config)),e.config.hand.enabled&&!e.models.handtrack&&(null==(N=null==(S=e.config.hand.detector)?void 0:S.modelPath)?void 0:N.includes("handtrack"))&&(e.models.handtrack=async function(e){var t,n;if(iZ.initial&&(HQ[0]=null),HQ[0])e.debug&&h("cached model:",HQ[0].modelUrl);else{n0(["tensorlistreserve","enter","tensorlistfromtensor","merge","loopcond","switch","exit","tensorliststack","nextiteration","tensorlistsetitem","tensorlistgetitem","reciprocal","shape","split","where"],e),HQ[0]=await jS(f(e.modelBasePath,(null==(t=e.hand.detector)?void 0:t.modelPath)||""));const a=Object.values(HQ[0].modelSignature.inputs);qQ[0][0]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[1].size):0,qQ[0][1]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[2].size):0,HQ[0]&&HQ[0].modelUrl?e.debug&&h("load model:",HQ[0].modelUrl):h("load model failed:",null==(n=e.hand.detector)?void 0:n.modelPath)}return HQ[0]}(e.config)),e.config.hand.enabled&&e.config.hand.landmarks&&!e.models.handskeleton&&(null==(C=null==(T=e.config.hand.detector)?void 0:T.modelPath)?void 0:C.includes("handtrack"))&&(e.models.handskeleton=async function(e){var t,n;if(iZ.initial&&(HQ[1]=null),HQ[1])e.debug&&h("cached model:",HQ[1].modelUrl);else{HQ[1]=await jS(f(e.modelBasePath,(null==(t=e.hand.skeleton)?void 0:t.modelPath)||""));const a=Object.values(HQ[1].modelSignature.inputs);qQ[1][0]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[1].size):0,qQ[1][1]=Array.isArray(a)?parseInt(a[0].tensorShape.dim[2].size):0,HQ[1]&&HQ[1].modelUrl?e.debug&&h("load model:",HQ[1].modelUrl):h("load model failed:",null==(n=e.hand.skeleton)?void 0:n.modelPath)}return HQ[1]}(e.config)),e.config.object.enabled&&!e.models.centernet&&(null==(R=null==(E=e.config.object)?void 0:E.modelPath)?void 0:R.includes("centernet"))&&(e.models.centernet=async function(e){if(iZ.initial&&($Y=null),$Y)e.debug&&h("cached model:",$Y.modelUrl);else{$Y=await jS(f(e.modelBasePath,e.object.modelPath||""));const t=Object.values($Y.modelSignature.inputs);zY=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):0,$Y&&$Y.modelUrl?e.debug&&h("load model:",$Y.modelUrl):h("load model failed:",e.object.modelPath)}return $Y}(e.config)),e.config.object.enabled&&!e.models.nanodet&&(null==($=null==(F=e.config.object)?void 0:F.modelPath)?void 0:$.includes("nanodet"))&&(e.models.nanodet=async function(e){if(!A1||iZ.initial){A1=await jS(f(e.modelBasePath,e.object.modelPath||""));const t=Object.values(A1.modelSignature.inputs);A1.inputSize=Array.isArray(t)?parseInt(t[0].tensorShape.dim[2].size):null,A1&&A1.modelUrl?e.debug&&h("load model:",A1.modelUrl):h("load model failed:",e.object.modelPath)}else e.debug&&h("cached model:",A1.modelUrl);return A1}(e.config)),e.config.segmentation.enabled&&!e.models.segmentation&&(e.models.segmentation=Z1(e.config));for await(const h of Object.keys(e.models))e.models[h]&&"undefined"!==typeof e.models[h]&&(e.models[h]=await e.models[h])}var Q1={name:"humangl",priority:999,canvas:null,gl:null,extensions:[],webGLattr:{alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!1,desynchronized:!0}};async function e0(e){var t;if("humangl"===e.config.backend&&(!(Q1.name in cl().registry)||Q1.gl&&Q1.gl.getParameter(Q1.gl.VERSION)||(h("error: humangl backend invalid context"),Y1(e)),!vl(Q1.name))){try{Q1.canvas=await nZ(100,100)}catch(W0){return void h("error: cannot create canvas:",W0)}try{Q1.gl=null==(t=Q1.canvas)?void 0:t.getContext("webgl2",Q1.webGLattr);if(!Q1.gl.getParameter(Q1.gl.VERSION).includes("2.0"))return h("override: using fallback webgl backend as webgl 2.0 is not detected"),void(e.config.backend="webgl");Q1.canvas&&(Q1.canvas.addEventListener("webglcontextlost",(async t=>{throw h("error: humangl:",t.type),h("possible browser memory leak using webgl or conflict with multiple backend registrations"),e.emit("error"),new Error("backend error: webgl context lost")})),Q1.canvas.addEventListener("webglcontextrestored",(e=>{h("error: humangl context restored:",e)})),Q1.canvas.addEventListener("webglcontextcreationerror",(e=>{h("error: humangl context create:",e)})))}catch(W0){return void h("error: cannot get WebGL context:",W0)}try{mM(2,Q1.gl)}catch(W0){return void h("error: cannot set WebGL context:",W0)}try{const e=new m_(Q1.gl);kl(Q1.name,(()=>new AO(e)),Q1.priority)}catch(W0){return void h("error: cannot register WebGL backend:",W0)}try{hr("webgl").forEach((e=>{fr({...e,backendName:Q1.name})}))}catch(W0){return void h("error: cannot update WebGL backend registration:",W0)}const n=Il().getGPGPUContext?Il().getGPGPUContext().gl:null;if(!n)return void h("error: no current gl context:",n,Q1.gl);h(`humangl webgl version:${n.getParameter(n.VERSION)} renderer:${n.getParameter(n.RENDERER)}`);try{Je.set("WEBGL_VERSION",2)}catch(W0){return void h("error: cannot set WebGL backend flags:",W0)}!function(){const e=Q1.gl;e&&(Q1.extensions=e.getSupportedExtensions())}(),h("backend registered:",Q1.name)}}async function t0(e,t=!1){if(e.state="backend",t||iZ.initial||e.config.backend&&e.config.backend.length>0&&xl()!==e.config.backend){const t=m();if(e.config.backend&&e.config.backend.length>0){if("undefined"===typeof window&&"undefined"!==typeof WorkerGlobalScope&&e.config.debug&&e.config.debug&&h("running inside web worker"),iZ.browser&&"tensorflow"===e.config.backend&&(e.config.debug&&h("override: backend set to tensorflow while running in browser"),e.config.backend="humangl"),!iZ.node||"webgl"!==e.config.backend&&"humangl"!==e.config.backend||(e.config.debug&&h(`override: backend set to ${e.config.backend} while running in nodejs`),e.config.backend="tensorflow"),iZ.browser&&"webgpu"===e.config.backend)if("undefined"===typeof navigator||"undefined"===typeof navigator.gpu)h("override: backend set to webgpu but browser does not support webgpu"),e.config.backend="humangl";else{const t=await navigator.gpu.requestAdapter();e.config.debug&&h("enumerated webgpu adapter:",t)}"humangl"===e.config.backend&&await e0(e);const t=Object.keys(cl().registryFactory);if(e.config.debug&&h("available backends:",t),t.includes(e.config.backend)||(h(`error: backend ${e.config.backend} not found in registry`),e.config.backend=iZ.node?"tensorflow":"webgl",e.config.debug&&h(`override: setting backend ${e.config.backend}`)),e.config.debug&&h("setting backend:",e.config.backend),"wasm"===e.config.backend){if(e.config.debug&&h("wasm path:",e.config.wasmPath),"undefined"===typeof(null==x?void 0:x.setWasmPaths))throw new Error("backend error: attempting to use wasm backend but wasm path is not set");await LK(e.config.wasmPath);const t=await Ze().getAsync("WASM_HAS_SIMD_SUPPORT"),n=await Ze().getAsync("WASM_HAS_MULTITHREAD_SUPPORT");e.config.debug&&h(`wasm execution: ${t?"SIMD":"no SIMD"} ${n?"multithreaded":"singlethreaded"}`),e.config.debug&&!t&&h("warning: wasm simd support is not enabled")}try{await yl(e.config.backend),await Al(),gZ.tf255=_d(255,"float32"),gZ.tf1=_d(1,"float32"),gZ.tf2=_d(2,"float32"),gZ.tf05=_d(.5,"float32"),gZ.tf127=_d(127.5,"float32"),gZ.rgb=sp([.2989,.587,.114],"float32")}catch(W0){return h("error: cannot set backend:",e.config.backend,W0),!1}}if("humangl"===xl()&&(Je.set("CHECK_COMPUTATION_FOR_ERRORS",!1),Je.set("WEBGL_CPU_FORWARD",!0),Je.set("WEBGL_USE_SHAPES_UNIFORMS",!0),Je.set("CPU_HANDOFF_SIZE_THRESHOLD",256),"undefined"!==typeof e.config.deallocate&&e.config.deallocate&&(h("changing webgl: WEBGL_DELETE_TEXTURE_THRESHOLD:",!0),Je.set("WEBGL_DELETE_TEXTURE_THRESHOLD",0)),Il().getGPGPUContext)){const t=await Il().getGPGPUContext().gl;e.config.debug&&h(`gl version:${t.getParameter(t.VERSION)} renderer:${t.getParameter(t.RENDERER)}`)}xl(),sl(),await Al(),e.performance.initBackend=Math.trunc(m()-t),e.config.backend=xl(),await iZ.updateBackend(),function(){iZ.kernels.includes("mod")||(fr({kernelName:"Mod",backendName:xl(),kernelFunc:e=>hl((()=>Nc(e.inputs.a,El(Cl(e.inputs.a,e.inputs.b),e.inputs.b))))}),iZ.kernels.push("mod"));iZ.kernels.includes("floormod")||(fr({kernelName:"FloorMod",backendName:xl(),kernelFunc:e=>hl((()=>Tl(e.inputs.a/e.inputs.b)*e.inputs.b+Qc(e.inputs.a,e.inputs.b)))}),iZ.kernels.push("floormod"))}()}return!0}function n0(e,t){for(const n of e){fr({kernelName:n,backendName:t.backend,kernelFunc:()=>{t.debug&&h("kernelFunc",n,t.backend)}})}iZ.kernels=hr(xl()).map((e=>e.kernelName.toLowerCase()))}var a0={color:"rgba(173, 216, 230, 0.6)",labelColor:"rgba(173, 216, 230, 1)",shadowColor:"black",font:'small-caps 16px "Segoe UI"',lineHeight:18,lineWidth:4,pointSize:2,roundRect:8,drawPoints:!1,drawLabels:!0,drawBoxes:!0,drawGestures:!0,drawPolygons:!0,drawGaze:!0,fillPolygons:!1,useDepth:!0,useCurves:!1},r0=0,s0=e=>{if(e)if(e.getContext){const t=e.getContext("2d");if(t)return t;h("draw error: cannot get canvas context")}else h("draw error: canvas context not defined");else h("draw error: invalid canvas");return null},i0=e=>Math.round(180*e/Math.PI);function o0(e,t,n,a,r){a=a||0,e.fillStyle=r.useDepth&&a?`rgba(${127.5+2*a}, ${127.5-2*a}, 255, 0.3)`:r.color,e.beginPath(),e.arc(t,n,r.pointSize,0,2*Math.PI),e.fill()}function l0(e,t,n,a,r,s){if(e.beginPath(),s.useCurves){const s=(t+t+a)/2,i=(n+n+r)/2;e.ellipse(s,i,a/2,r/2,0,0,2*Math.PI)}else e.lineWidth=s.lineWidth,e.moveTo(t+s.roundRect,n),e.lineTo(t+a-s.roundRect,n),e.quadraticCurveTo(t+a,n,t+a,n+s.roundRect),e.lineTo(t+a,n+r-s.roundRect),e.quadraticCurveTo(t+a,n+r,t+a-s.roundRect,n+r),e.lineTo(t+s.roundRect,n+r),e.quadraticCurveTo(t,n+r,t,n+r-s.roundRect),e.lineTo(t,n+s.roundRect),e.quadraticCurveTo(t,n,t+s.roundRect,n),e.closePath();e.stroke()}function u0(e,t,n){if(!(t.length<2)){e.beginPath(),e.moveTo(t[0][0],t[0][1]);for(const a of t){const t=a[2]||0;e.strokeStyle=n.useDepth&&0!==t?`rgba(${127.5+2*t}, ${127.5-2*t}, 255, 0.3)`:n.color,e.fillStyle=n.useDepth&&0!==t?`rgba(${127.5+2*t}, ${127.5-2*t}, 255, 0.3)`:n.color,e.lineTo(a[0],Math.round(a[1]))}e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function c0(e,t,n){if(!(t.length<2))if(!n.useCurves||t.length<=2)u0(e,t,n);else{e.moveTo(t[0][0],t[0][1]);for(let n=0;n<t.length-2;n++){const a=(t[n][0]+t[n+1][0])/2,r=(t[n][1]+t[n+1][1])/2;e.quadraticCurveTo(t[n][0],t[n][1],a,r)}e.quadraticCurveTo(t[t.length-2][0],t[t.length-2][1],t[t.length-1][0],t[t.length-1][1]),e.stroke(),n.fillPolygons&&(e.closePath(),e.fill())}}function d0(e,t,n,a=5){let r,s,i;e.beginPath(),e.moveTo(t[0],t[1]),e.lineTo(n[0],n[1]),r=Math.atan2(n[1]-t[1],n[0]-t[0]),s=a*Math.cos(r)+n[0],i=a*Math.sin(r)+n[1],e.moveTo(s,i),r+=1/3*(2*Math.PI),s=a*Math.cos(r)+n[0],i=a*Math.sin(r)+n[1],e.lineTo(s,i),r+=1/3*(2*Math.PI),s=a*Math.cos(r)+n[0],i=a*Math.sin(r)+n[1],e.lineTo(s,i),e.closePath(),e.stroke(),e.fill()}async function p0(e,t,n){const a=y(a0,n);if(t&&e&&a.drawGestures){const n=s0(e);if(!n)return;n.font=a.font,n.fillStyle=a.color;let r=1;for(let e=0;e<t.length;e++){let s=[],i=[];if([s,i]=Object.entries(t[e]),i.length>1&&i[1].length>0){const e=s[1]>0?`#${s[1]}`:"",t=`${s[0]} ${e}: ${i[1]}`;a.shadowColor&&""!==a.shadowColor&&(n.fillStyle=a.shadowColor,n.fillText(t,8,2+r*a.lineHeight)),n.fillStyle=a.labelColor,n.fillText(t,6,0+r*a.lineHeight),r+=1}}}}async function h0(e,t,n){var a,r,s,i,o;const l=y(a0,n);if(!t||!e)return;const u=s0(e);if(u)for(const c of t){if(u.font=l.font,u.strokeStyle=l.color,u.fillStyle=l.color,l.drawBoxes&&l0(u,c.box[0],c.box[1],c.box[2],c.box[3],l),l.drawLabels){const e=[];if(e.push(`face: ${Math.trunc(100*c.score)}%`),c.genderScore&&e.push(`${c.gender||""} ${Math.trunc(100*c.genderScore)}%`),c.age&&e.push(`age: ${c.age||""}`),c.iris&&e.push(`distance: ${c.iris}`),c.real&&e.push(`real: ${Math.trunc(100*c.real)}%`),c.live&&e.push(`live: ${Math.trunc(100*c.live)}%`),c.emotion&&c.emotion.length>0){const t=c.emotion.map((e=>`${Math.trunc(100*e.score)}% ${e.emotion}`));t.length>3&&(t.length=3),e.push(t.join(" "))}c.rotation&&c.rotation.angle&&c.rotation.gaze&&(c.rotation.angle.roll&&e.push(`roll: ${i0(c.rotation.angle.roll)}\xb0 yaw:${i0(c.rotation.angle.yaw)}\xb0 pitch:${i0(c.rotation.angle.pitch)}\xb0`),c.rotation.gaze.bearing&&e.push(`gaze: ${i0(c.rotation.gaze.bearing)}\xb0`)),0===e.length&&e.push("face"),u.fillStyle=l.color;for(let t=e.length-1;t>=0;t--){const n=Math.max(c.box[0],0),a=t*l.lineHeight+c.box[1];l.shadowColor&&""!==l.shadowColor&&(u.fillStyle=l.shadowColor,u.fillText(e[t],n+5,a+16)),u.fillStyle=l.labelColor,u.fillText(e[t],n+4,a+15)}}if(u.lineWidth=1,c.mesh&&c.mesh.length>0){if(l.drawPoints)for(const e of c.mesh)o0(u,e[0],e[1],e[2],l);if(l.drawPolygons){if(u.lineWidth=1,c.mesh.length>450)for(let e=0;e<WZ.length/3;e++){u0(u,[WZ[3*e+0],WZ[3*e+1],WZ[3*e+2]].map((e=>c.mesh[e])),l)}if(c.annotations&&c.annotations.leftEyeIris&&c.annotations.leftEyeIris[0]){u.strokeStyle=l.useDepth?"rgba(255, 200, 255, 0.3)":l.color,u.beginPath();const e=Math.abs(c.annotations.leftEyeIris[3][0]-c.annotations.leftEyeIris[1][0])/2,t=Math.abs(c.annotations.leftEyeIris[4][1]-c.annotations.leftEyeIris[2][1])/2;u.ellipse(c.annotations.leftEyeIris[0][0],c.annotations.leftEyeIris[0][1],e,t,0,0,2*Math.PI),u.stroke(),l.fillPolygons&&(u.fillStyle=l.useDepth?"rgba(255, 255, 200, 0.3)":l.color,u.fill())}if(c.annotations&&c.annotations.rightEyeIris&&c.annotations.rightEyeIris[0]){u.strokeStyle=l.useDepth?"rgba(255, 200, 255, 0.3)":l.color,u.beginPath();const e=Math.abs(c.annotations.rightEyeIris[3][0]-c.annotations.rightEyeIris[1][0])/2,t=Math.abs(c.annotations.rightEyeIris[4][1]-c.annotations.rightEyeIris[2][1])/2;u.ellipse(c.annotations.rightEyeIris[0][0],c.annotations.rightEyeIris[0][1],e,t,0,0,2*Math.PI),u.stroke(),l.fillPolygons&&(u.fillStyle=l.useDepth?"rgba(255, 255, 200, 0.3)":l.color,u.fill())}if(l.drawGaze&&(null==(a=c.rotation)?void 0:a.angle)&&"undefined"!==typeof Path2D){u.strokeStyle="pink";const e=c.box[0]+c.box[2]/2-c.box[3]*i0(c.rotation.angle.yaw)/90,t=c.box[1]+c.box[3]/2+c.box[2]*i0(c.rotation.angle.pitch)/90,n=new Path2D(`\n            M ${c.box[0]+c.box[2]/2} ${c.box[1]}\n            C\n              ${e} ${c.box[1]},\n              ${e} ${c.box[1]+c.box[3]},\n              ${c.box[0]+c.box[2]/2} ${c.box[1]+c.box[3]}\n          `),a=new Path2D(`\n            M ${c.box[0]} ${c.box[1]+c.box[3]/2}\n            C \n              ${c.box[0]} ${t},\n              ${c.box[0]+c.box[2]} ${t},\n              ${c.box[0]+c.box[2]} ${c.box[1]+c.box[3]/2}\n          `);u.stroke(a),u.stroke(n)}if(l.drawGaze&&(null==(s=null==(r=c.rotation)?void 0:r.gaze)?void 0:s.strength)&&(null==(o=null==(i=c.rotation)?void 0:i.gaze)?void 0:o.bearing)&&c.annotations.leftEyeIris&&c.annotations.rightEyeIris&&c.annotations.leftEyeIris[0]&&c.annotations.rightEyeIris[0]){u.strokeStyle="pink",u.fillStyle="pink";const e=[c.annotations.leftEyeIris[0][0]+Math.sin(c.rotation.gaze.bearing)*c.rotation.gaze.strength*c.box[3],c.annotations.leftEyeIris[0][1]+Math.cos(c.rotation.gaze.bearing)*c.rotation.gaze.strength*c.box[2]];d0(u,[c.annotations.leftEyeIris[0][0],c.annotations.leftEyeIris[0][1]],[e[0],e[1]],4);const t=[c.annotations.rightEyeIris[0][0]+Math.sin(c.rotation.gaze.bearing)*c.rotation.gaze.strength*c.box[3],c.annotations.rightEyeIris[0][1]+Math.cos(c.rotation.gaze.bearing)*c.rotation.gaze.strength*c.box[2]];d0(u,[c.annotations.rightEyeIris[0][0],c.annotations.rightEyeIris[0][1]],[t[0],t[1]],4)}}}}}async function f0(e,t,n){var a;const r=y(a0,n);if(!t||!e)return;const s=s0(e);if(s){s.lineJoin="round";for(let e=0;e<t.length;e++){if(s.strokeStyle=r.color,s.fillStyle=r.color,s.lineWidth=r.lineWidth,s.font=r.font,r.drawBoxes&&t[e].box&&4===(null==(a=t[e].box)?void 0:a.length)&&(l0(s,t[e].box[0],t[e].box[1],t[e].box[2],t[e].box[3],r),r.drawLabels&&(r.shadowColor&&""!==r.shadowColor&&(s.fillStyle=r.shadowColor,s.fillText(`body ${100*t[e].score}%`,t[e].box[0]+3,1+t[e].box[1]+r.lineHeight,t[e].box[2])),s.fillStyle=r.labelColor,s.fillText(`body ${100*t[e].score}%`,t[e].box[0]+2,0+t[e].box[1]+r.lineHeight,t[e].box[2]))),r.drawPoints&&t[e].keypoints)for(let n=0;n<t[e].keypoints.length;n++)t[e].keypoints[n].score&&0!==t[e].keypoints[n].score&&(s.fillStyle=r.useDepth&&t[e].keypoints[n].position[2]?`rgba(${127.5+2*(t[e].keypoints[n].position[2]||0)}, ${127.5-2*(t[e].keypoints[n].position[2]||0)}, 255, 0.5)`:r.color,o0(s,t[e].keypoints[n].position[0],t[e].keypoints[n].position[1],0,r));if(r.drawLabels&&t[e].keypoints){s.font=r.font;for(const n of t[e].keypoints)n.score&&0!==n.score&&(s.fillStyle=r.useDepth&&n.position[2]?`rgba(${127.5+2*n.position[2]}, ${127.5-2*n.position[2]}, 255, 0.5)`:r.color,s.fillText(`${n.part} ${Math.trunc(100*n.score)}%`,n.position[0]+4,n.position[1]+4))}if(r.drawPolygons&&t[e].keypoints&&t[e].annotations)for(const n of Object.values(t[e].annotations))for(const e of n)c0(s,e,r)}}}async function m0(e,t,n){const a=y(a0,n);if(!t||!e)return;const r=s0(e);if(r){r.lineJoin="round",r.font=a.font;for(const e of t){if(a.drawBoxes&&(r.strokeStyle=a.color,r.fillStyle=a.color,l0(r,e.box[0],e.box[1],e.box[2],e.box[3],a),a.drawLabels&&(a.shadowColor&&""!==a.shadowColor&&(r.fillStyle=a.shadowColor,r.fillText(`hand:${Math.trunc(100*e.score)}%`,e.box[0]+3,1+e.box[1]+a.lineHeight,e.box[2])),r.fillStyle=a.labelColor,r.fillText(`hand:${Math.trunc(100*e.score)}%`,e.box[0]+2,0+e.box[1]+a.lineHeight,e.box[2])),r.stroke()),a.drawPoints&&e.keypoints&&e.keypoints.length>0)for(const t of e.keypoints)r.fillStyle=a.useDepth?`rgba(${127.5+2*(t[2]||0)}, ${127.5-2*(t[2]||0)}, 255, 0.5)`:a.color,o0(r,t[0],t[1],0,a);if(a.drawLabels&&e.annotations){const t=(e,t)=>{e&&0!==e.length&&e[0]&&(r.fillStyle=a.useDepth?`rgba(${127.5+2*e[e.length-1][2]}, ${127.5-2*e[e.length-1][2]}, 255, 0.5)`:a.color,r.fillText(t,e[e.length-1][0]+4,e[e.length-1][1]+4))};r.font=a.font,t(e.annotations.index,"index"),t(e.annotations.middle,"middle"),t(e.annotations.ring,"ring"),t(e.annotations.pinky,"pinky"),t(e.annotations.thumb,"thumb"),t(e.annotations.palm,"palm")}if(a.drawPolygons&&e.annotations){const t=e=>{if(e&&0!==e.length&&e[0])for(let t=0;t<e.length;t++)r.beginPath(),r.strokeStyle=a.useDepth?`rgba(${127.5+t*e[t][2]}, ${127.5-t*e[t][2]}, 255, 0.5)`:a.color,r.moveTo(e[t>0?t-1:0][0],e[t>0?t-1:0][1]),r.lineTo(e[t][0],e[t][1]),r.stroke()};r.lineWidth=a.lineWidth,t(e.annotations.index),t(e.annotations.middle),t(e.annotations.ring),t(e.annotations.pinky),t(e.annotations.thumb)}}}}async function g0(e,t,n){const a=y(a0,n);if(!t||!e)return;const r=s0(e);if(r){r.lineJoin="round",r.font=a.font;for(const e of t)if(a.drawBoxes){if(r.strokeStyle=a.color,r.fillStyle=a.color,l0(r,e.box[0],e.box[1],e.box[2],e.box[3],a),a.drawLabels){const t=`${e.label} ${Math.round(100*e.score)}%`;a.shadowColor&&""!==a.shadowColor&&(r.fillStyle=a.shadowColor,r.fillText(t,e.box[0]+3,1+e.box[1]+a.lineHeight,e.box[2])),r.fillStyle=a.labelColor,r.fillText(t,e.box[0]+2,0+e.box[1]+a.lineHeight,e.box[2])}r.stroke()}}}var y0=.1;function A0(e,t,n){let a=!1,r=n.length-1;for(let s=0;s<n.length;r=s++)n[s].y>t!==n[r].y>t&&e<(n[r].x-n[s].x)*(t-n[s].y)/(n[r].y-n[s].y)+n[s].x&&(a=!a);return a}async function x0(e){if(!e.tensor)return e.tensor;if(!e.mesh||e.mesh.length<100)return e.tensor;const t=e.tensor.shape[2]||0,n=e.tensor.shape[1]||0,a=await e.tensor.buffer();let r=[];for(const i of _Z.silhouette)r.push({x:(e.mesh[i][0]-e.box[0])/e.box[2],y:(e.mesh[i][1]-e.box[1])/e.box[3]});r=r.map((e=>({x:e.x>.5?e.x+y0:e.x-y0,y:e.y>.5?e.y+y0:e.y-y0})));for(let i=0;i<t;i++)for(let e=0;e<n;e++){A0(i/t,e/t,r)||(a.set(.5*a.get(0,e,i,0),0,e,i,0),a.set(.5*a.get(0,e,i,1),0,e,i,1),a.set(.5*a.get(0,e,i,2),0,e,i,2))}const s=a.toTensor();return fl(a),s}var b0=(e,t)=>{const n=e=>{const t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return e[0]/=t,e[1]/=t,e[2]/=t,e},a=(e,t)=>[e[0]-t[0],e[1]-t[1],e[2]-t[2]],r=(e,t)=>[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]],s=e.meshRaw;if(!s||s.length<300)return{angle:{pitch:0,yaw:0,roll:0},matrix:[1,0,0,0,1,0,0,0,1],gaze:{bearing:0,strength:0}};const i=Math.max(e.boxRaw[2]*t[0],e.boxRaw[3]*t[1])/1.5,o=[s[10],s[152],s[234],s[454]].map((e=>[e[0]*t[0]/i,e[1]*t[1]/i,e[2]])),l=n(a(o[1],o[0]));let u=n(a(o[3],o[2]));const c=n(r(u,l));u=r(l,c);const d=[u[0],u[1],u[2],l[0],l[1],l[2],c[0],c[1],c[2]];return{angle:(e=>{const[t,n,a,r,s,i,o,l,u]=e;let c,d,p;return r<1?r>-1?(p=Math.asin(r),d=Math.atan2(-o,t),c=Math.atan2(-i,s)):(p=-Math.PI/2,d=-Math.atan2(l,u),c=0):(p=Math.PI/2,d=Math.atan2(l,u),c=0),isNaN(c)&&(c=0),isNaN(d)&&(d=0),isNaN(p)&&(p=0),{pitch:2*-c,yaw:2*-d,roll:2*-p}})(d),matrix:d,gaze:478===s.length?(e=>{if(!e.annotations.rightEyeIris||!e.annotations.leftEyeIris)return{bearing:0,strength:0};const t=[0,-.1],n=e.mesh[33][2]>e.mesh[263][2],a=n?e.mesh[473]:e.mesh[468],r=n?[(e.mesh[133][0]+e.mesh[33][0])/2,(e.mesh[133][1]+e.mesh[33][1])/2]:[(e.mesh[263][0]+e.mesh[362][0])/2,(e.mesh[263][1]+e.mesh[362][1])/2],s=n?[e.mesh[133][0]-e.mesh[33][0],e.mesh[23][1]-e.mesh[27][1]]:[e.mesh[263][0]-e.mesh[362][0],e.mesh[253][1]-e.mesh[257][1]],i=[(r[0]-a[0])/s[0]-t[0],1*(a[1]-r[1])/s[1]-t[1]];let o=Math.sqrt(i[0]**2+i[1]**2);var l,u;return o=Math.min(o,e.boxRaw[2]/2,e.boxRaw[3]/2),{bearing:(l=[0,0],u=i,(Math.atan2(l[1]-u[1],l[0]-u[0])+Math.PI/2)%Math.PI),strength:o}})(e):{bearing:0,strength:0}}},v0=async(e,t)=>{var n,a,r,s,i,o,l,u,c,d,p,f,g,y,A,x,b,v,w,k,I,S;let N,T,C,E,R,F,$,M,z;const _=[];e.state="run:face",N=m();const O=await async function(e,t){var n,a,r,s,i,o,l,u,c,d,p;const f=((null==(n=t.face.detector)?void 0:n.skipTime)||0)>m()-SJ,g=IJ<((null==(a=t.face.detector)?void 0:a.skipFrames)||0);if(t.skipAllowed&&f&&g&&0!==vJ.length)IJ++;else{const n=await dY(e,t);SJ=m(),vJ=[];for(const a of n.boxes){const s=(y=a,A=n.scaleFactor,{startPoint:[y.startPoint[0]*A[0],y.startPoint[1]*A[1]],endPoint:[y.endPoint[0]*A[0],y.endPoint[1]*A[1]],landmarks:y.landmarks,confidence:y.confidence}),i=(s.endPoint[0]-s.startPoint[0])/(e.shape[2]||1e3),o=((null==(r=t.face.detector)?void 0:r.cropFactor)||1.6)/(i+.75)/1.34,l=jZ(s,o),u=qZ(l);vJ.push(u)}IJ=0}var y,A;const x=[],b=[];let v=0;for(let m=0;m<vJ.length;m++){let n,a=vJ[m],r=0;const f={id:v++,mesh:[],meshRaw:[],box:[0,0,0,0],boxRaw:[0,0,0,0],score:0,boxScore:0,faceScore:0,annotations:{}};if([r,n,f.tensor]=rY(null==(s=t.face.detector)?void 0:s.rotation,a,e,(null==(i=t.face.mesh)?void 0:i.enabled)?kJ:uY()),null==(o=null==t?void 0:t.filter)?void 0:o.equalization){const e=await KK(f.tensor);fl(f.tensor),f.tensor=e}if(f.boxScore=Math.round(100*a.confidence)/100,null==(l=t.face.mesh)?void 0:l.enabled)if(wJ){const[s,i,o]=wJ.execute(f.tensor),l=await i.data();f.faceScore=Math.round(100*l[0])/100;const h=au(o,[-1,3]);let m=await h.array();if(fl([o,h,i,s]),f.faceScore<((null==(u=t.face.detector)?void 0:u.minConfidence)||1))a.confidence=f.faceScore;else{(null==(c=t.face.iris)?void 0:c.enabled)&&(m=await bJ(m,f.tensor,t,kJ)),f.mesh=aY(m,a,r,n,kJ),f.meshRaw=f.mesh.map((t=>[t[0]/(e.shape[2]||0),t[1]/(e.shape[1]||0),(t[2]||0)/kJ]));for(const e of Object.keys(_Z))f.annotations[e]=_Z[e].map((e=>f.mesh[e]));const s=XZ(f.mesh),i=jZ(s,(null==(d=t.face.detector)?void 0:d.cropFactor)||1.6),o=qZ(i);a={...o,confidence:a.confidence},f.box=VZ(a,e),f.boxRaw=GZ(a,e),f.score=f.faceScore,b.push(a),fl(f.tensor),[r,n,f.tensor]=rY(null==(p=t.face.detector)?void 0:p.rotation,a,e,kJ)}}else t.debug&&h("face mesh detection requested, but model is not loaded");else{f.box=VZ(a,e),f.boxRaw=GZ(a,e),f.score=f.boxScore,f.mesh=a.landmarks.map((e=>[(a.startPoint[0]+a.endPoint[0])/2+(a.endPoint[0]+a.startPoint[0])*e[0]/uY(),(a.startPoint[1]+a.endPoint[1])/2+(a.endPoint[1]+a.startPoint[1])*e[1]/uY()])),f.meshRaw=f.mesh.map((t=>[t[0]/(e.shape[2]||0),t[1]/(e.shape[1]||0),(t[2]||0)/kJ]));for(const e of Object.keys(DZ))f.annotations[e]=[f.mesh[DZ[e]]]}x.push(f)}return vJ=[...b],x}(t,e.config);if(e.performance.face=iZ.perfadd?(e.performance.face||0)+Math.trunc(m()-N):Math.trunc(m()-N),!t.shape||4!==t.shape.length)return[];if(!O)return[];for(let D=0;D<O.length;D++){if(e.analyze("Get Face"),!O[D].tensor||O[D].tensor.isDisposedInternal){h("Face object is disposed:",O[D].tensor);continue}if(null==(n=e.config.face.detector)?void 0:n.mask){const e=await x0(O[D]);fl(O[D].tensor),O[D].tensor=e}const P=O[D].mesh&&O[D].mesh.length>200?b0(O[D],[t.shape[2],t.shape[1]]):null;e.analyze("Start Emotion:"),e.config.async?R=(null==(a=e.config.face.emotion)?void 0:a.enabled)?tJ(O[D].tensor||Ws([]),e.config,D,O.length):null:(e.state="run:emotion",N=m(),R=(null==(r=e.config.face.emotion)?void 0:r.enabled)?await tJ(O[D].tensor||Ws([]),e.config,D,O.length):null,e.performance.emotion=iZ.perfadd?(e.performance.emotion||0)+Math.trunc(m()-N):Math.trunc(m()-N)),e.analyze("End Emotion:"),e.analyze("Start AntiSpoof:"),e.config.async?$=(null==(s=e.config.face.antispoof)?void 0:s.enabled)?zZ(O[D].tensor||Ws([]),e.config,D,O.length):null:(e.state="run:antispoof",N=m(),$=(null==(i=e.config.face.antispoof)?void 0:i.enabled)?await zZ(O[D].tensor||Ws([]),e.config,D,O.length):null,e.performance.antispoof=iZ.perfadd?(e.performance.antispoof||0)+Math.trunc(m()-N):Math.trunc(m()-N)),e.analyze("End AntiSpoof:"),e.analyze("Start Liveness:"),e.config.async?M=(null==(o=e.config.face.liveness)?void 0:o.enabled)?i1(O[D].tensor||Ws([]),e.config,D,O.length):null:(e.state="run:liveness",N=m(),M=(null==(l=e.config.face.liveness)?void 0:l.enabled)?await i1(O[D].tensor||Ws([]),e.config,D,O.length):null,e.performance.liveness=iZ.perfadd?(e.performance.antispoof||0)+Math.trunc(m()-N):Math.trunc(m()-N)),e.analyze("End Liveness:"),e.analyze("Start GEAR:"),e.config.async?C=(null==(u=e.config.face.gear)?void 0:u.enabled)?fZ(O[D].tensor||Ws([]),e.config,D,O.length):{}:(e.state="run:gear",N=m(),C=(null==(c=e.config.face.gear)?void 0:c.enabled)?await fZ(O[D].tensor||Ws([]),e.config,D,O.length):{},e.performance.gear=Math.trunc(m()-N)),e.analyze("End GEAR:"),e.analyze("Start SSRNet:"),e.config.async?(T=(null==(d=e.config.face.ssrnet)?void 0:d.enabled)?wZ(O[D].tensor||Ws([]),e.config,D,O.length):{},E=(null==(p=e.config.face.ssrnet)?void 0:p.enabled)?EZ(O[D].tensor||Ws([]),e.config,D,O.length):{}):(e.state="run:ssrnet",N=m(),T=(null==(f=e.config.face.ssrnet)?void 0:f.enabled)?await wZ(O[D].tensor||Ws([]),e.config,D,O.length):{},E=(null==(g=e.config.face.ssrnet)?void 0:g.enabled)?await EZ(O[D].tensor||Ws([]),e.config,D,O.length):{},e.performance.ssrnet=Math.trunc(m()-N)),e.analyze("End SSRNet:"),e.analyze("Start MobileFaceNet:"),e.config.async?F=(null==(y=e.config.face.mobilefacenet)?void 0:y.enabled)?oJ(O[D].tensor||Ws([]),e.config,D,O.length):{}:(e.state="run:mobilefacenet",N=m(),F=(null==(A=e.config.face.mobilefacenet)?void 0:A.enabled)?await oJ(O[D].tensor||Ws([]),e.config,D,O.length):{},e.performance.mobilefacenet=Math.trunc(m()-N)),e.analyze("End MobileFaceNet:"),e.analyze("Start Description:"),e.config.async?z=(null==(x=e.config.face.description)?void 0:x.enabled)?zJ(O[D].tensor||Ws([]),e.config,D,O.length):null:(e.state="run:description",N=m(),z=(null==(b=e.config.face.description)?void 0:b.enabled)?await zJ(O[D].tensor||Ws([]),e.config,D,O.length):null,e.performance.description=iZ.perfadd?(e.performance.description||0)+Math.trunc(m()-N):Math.trunc(m()-N)),e.analyze("End Description:"),e.config.async&&([T,E,R,F,z,C,$,M]=await Promise.all([T,E,R,F,z,C,$,M])),e.analyze("Finish Face:"),(null==(v=e.config.face.ssrnet)?void 0:v.enabled)&&T&&E&&(z={age:T.age,gender:E.gender,genderScore:E.genderScore}),(null==(w=e.config.face.gear)?void 0:w.enabled)&&C&&(z={age:C.age,gender:C.gender,genderScore:C.genderScore,race:C.race}),(null==(k=e.config.face.mobilefacenet)?void 0:k.enabled)&&F&&(z.descriptor=F),null==(I=e.config.face.iris)||I.enabled;const L=O[D].annotations&&O[D].annotations.leftEyeIris&&O[D].annotations.leftEyeIris[0]&&O[D].annotations.rightEyeIris&&O[D].annotations.rightEyeIris[0]&&O[D].annotations.leftEyeIris.length>0&&O[D].annotations.rightEyeIris.length>0&&null!==O[D].annotations.leftEyeIris[0]&&null!==O[D].annotations.rightEyeIris[0]?Math.max(Math.abs(O[D].annotations.leftEyeIris[3][0]-O[D].annotations.leftEyeIris[1][0]),Math.abs(O[D].annotations.rightEyeIris[4][1]-O[D].annotations.rightEyeIris[2][1]))/t.shape[2]:0,W=(null==(S=e.config.face.detector)?void 0:S.return)?ep(O[D].tensor):null;fl(O[D].tensor),O[D].tensor&&delete O[D].tensor;const B={...O[D],id:D};(null==z?void 0:z.age)&&(B.age=z.age),(null==z?void 0:z.gender)&&(B.gender=z.gender),(null==z?void 0:z.genderScore)&&(B.genderScore=null==z?void 0:z.genderScore),(null==z?void 0:z.descriptor)&&(B.embedding=null==z?void 0:z.descriptor),(null==z?void 0:z.race)&&(B.race=null==z?void 0:z.race),R&&(B.emotion=R),$&&(B.real=$),M&&(B.live=M),L&&0!==L&&(B.iris=Math.trunc(500/L/11.7)/100),P&&(B.rotation=P),W&&(B.tensor=W),_.push(B),e.analyze("End Face")}return e.analyze("End FaceMesh:"),e.config.async&&(e.performance.face&&delete e.performance.face,e.performance.age&&delete e.performance.age,e.performance.gender&&delete e.performance.gender,e.performance.emotion&&delete e.performance.emotion),_},w0=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++){const a=e[n].keypoints.find((e=>"leftWrist"===e.part)),r=e[n].keypoints.find((e=>"rightWrist"===e.part)),s=e[n].keypoints.find((e=>"nose"===e.part));s&&a&&r&&a.position[1]<s.position[1]&&r.position[1]<s.position[1]?t.push({body:n,gesture:"i give up"}):s&&a&&a.position[1]<s.position[1]?t.push({body:n,gesture:"raise left hand"}):s&&r&&r.position[1]<s.position[1]&&t.push({body:n,gesture:"raise right hand"});const i=e[n].keypoints.find((e=>"leftShoulder"===e.part)),o=e[n].keypoints.find((e=>"rightShoulder"===e.part));i&&o&&Math.abs(i.positionRaw[1]-o.positionRaw[1])>.1&&t.push({body:n,gesture:"leaning "+(i.position[1]>o.position[1]?"left":"right")})}return t},k0=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++)if(e[n].mesh&&e[n].mesh.length>450){const a=(e[n].mesh[33][2]||0)-(e[n].mesh[263][2]||0),r=e[n].mesh[33][0]-e[n].mesh[263][0];Math.abs(a/r)<=.15?t.push({face:n,gesture:"facing center"}):t.push({face:n,gesture:"facing "+(a<0?"left":"right")});Math.abs(e[n].mesh[374][1]-e[n].mesh[386][1])/Math.abs(e[n].mesh[443][1]-e[n].mesh[450][1])<.2&&t.push({face:n,gesture:"blink left eye"});Math.abs(e[n].mesh[145][1]-e[n].mesh[159][1])/Math.abs(e[n].mesh[223][1]-e[n].mesh[230][1])<.2&&t.push({face:n,gesture:"blink right eye"});const s=Math.min(100,500*Math.abs(e[n].mesh[13][1]-e[n].mesh[14][1])/Math.abs(e[n].mesh[10][1]-e[n].mesh[152][1]));s>10&&t.push({face:n,gesture:`mouth ${Math.trunc(s)}% open`});const i=e[n].mesh[152][2]||0;Math.abs(i)>10&&t.push({face:n,gesture:"head "+(i<0?"up":"down")})}return t},I0=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++){if(!e[n].annotations||!e[n].annotations.leftEyeIris||!e[n].annotations.leftEyeIris[0]||!e[n].annotations.rightEyeIris||!e[n].annotations.rightEyeIris[0])continue;const a=e[n].annotations.leftEyeIris[3][0]-e[n].annotations.leftEyeIris[1][0],r=e[n].annotations.leftEyeIris[4][1]-e[n].annotations.leftEyeIris[2][1],s=Math.abs(a*r),i=e[n].annotations.rightEyeIris[3][0]-e[n].annotations.rightEyeIris[1][0],o=e[n].annotations.rightEyeIris[4][1]-e[n].annotations.rightEyeIris[2][1],l=Math.abs(i*o);let u=!1;Math.abs(s-l)/Math.max(s,l)<.25&&(u=!0,t.push({iris:n,gesture:"facing center"}));const c=Math.abs(e[n].mesh[263][0]-e[n].annotations.leftEyeIris[0][0])/e[n].box[2],d=Math.abs(e[n].mesh[33][0]-e[n].annotations.rightEyeIris[0][0])/e[n].box[2];(c>.06||d>.06)&&(u=!1),c>d?c>.05&&t.push({iris:n,gesture:"looking right"}):d>.05&&t.push({iris:n,gesture:"looking left"});const p=Math.abs(e[n].mesh[145][1]-e[n].annotations.rightEyeIris[0][1])/e[n].box[3],h=Math.abs(e[n].mesh[374][1]-e[n].annotations.leftEyeIris[0][1])/e[n].box[3];(h<.01||p<.01||h>.022||p>.022)&&(u=!1),(h<.01||p<.01)&&t.push({iris:n,gesture:"looking down"}),(h>.022||p>.022)&&t.push({iris:n,gesture:"looking up"}),u&&t.push({iris:n,gesture:"looking center"})}return t},S0=e=>{if(!e)return[];const t=[];for(let n=0;n<e.length;n++){const a=[];if(e[n].annotations)for(const[t,r]of Object.entries(e[n].annotations))"palmBase"!==t&&Array.isArray(r)&&r[0]&&a.push({name:t.toLowerCase(),position:r[0]});if(a&&a.length>0){const e=a.reduce(((e,t)=>(e.position[2]||0)<(t.position[2]||0)?e:t));t.push({hand:n,gesture:`${e.name} forward`});const r=a.reduce(((e,t)=>e.position[1]<t.position[1]?e:t));t.push({hand:n,gesture:`${r.name} up`})}if(e[n].keypoints){const a=DQ(e[n].keypoints);for(const e of a)t.push({hand:n,gesture:e.name})}}return t},N0={face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null},T0=0;function C0(e,t,n={order:2,multiplier:25}){let a=0;for(let r=0;r<e.length;r++){const s=n.order&&2!==n.order?Math.abs(e[r]-t[r]):e[r]-t[r];a+=n.order&&2!==n.order?s**n.order:s*s}return(n.multiplier||20)*a}var E0=(e,t,n,a)=>{if(0===e)return 1;const r=(1-(2===t?Math.sqrt(e):e**(1/t))/100-n)/(a-n);return Math.max(Math.min(r,1),0)};function R0(e,t,n={order:2,multiplier:25,min:.2,max:.8}){const a=C0(e,t,n);return E0(a,n.order||2,n.min||0,n.max||1)}function F0(e,t,n={order:2,multiplier:25,threshold:0,min:.2,max:.8}){if(!Array.isArray(e)||!Array.isArray(t)||e.length<64||0===t.length||e.length!==t[0].length)return{index:-1,distance:Number.POSITIVE_INFINITY,similarity:0};let a=Number.MAX_SAFE_INTEGER,r=-1;for(let s=0;s<t.length;s++){const i=C0(e,t[s],n);if(i<a&&(a=i,r=s),a<(n.threshold||0))break}return{index:r,distance:a,similarity:E0(a,n.order||2,n.min||0,n.max||1)}}var $0,M0,z0,_0,O0="\n/9j/4AAQSkZJRgABAQEAYABgAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUA\nAAABAAAARgEoAAMAAAABAAIAAAExAAIAAAARAAAATgAAAAAAAABgAAAAAQAAAGAAAAABcGFpbnQu\nbmV0IDQuMi4xMwAA/9sAQwAGBAUGBQQGBgUGBwcGCAoQCgoJCQoUDg8MEBcUGBgXFBYWGh0lHxob\nIxwWFiAsICMmJykqKRkfLTAtKDAlKCko/9sAQwEHBwcKCAoTCgoTKBoWGigoKCgoKCgoKCgoKCgo\nKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo/8AAEQgBAAEAAwEhAAIRAQMRAf/E\nAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAE\nEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZH\nSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1\ntre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEB\nAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXET\nIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla\nY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG\nx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A+qaKACigApGOKAML\nXp8xlF5A7V4X8RtYs7PzfNImnx8sa8Kp9z3q2tEgp6angWs62ZZ5CTGoJ6DArGNz5p+UrID6EUrF\nPUlW1EuN0XNW7PQ2L5j3JnoKXN0KijqNP0eYoqXBdgPuuo+ZPeupisWn2Jd4+0r924XgsQOCff3/\nAJ1FzRKxDqGii6m3siiQ8F1XGfXI6YNWLfRbiRQMkcZI9fpTDluT2/h6Qy8gDPbtmtG38JeY480Z\n5zSLUTZg8M28YwYxjAArXtdPt402qgHbpSaLWhma3o0Uqk7Nx9DWLaaVblgPs6qRyds2M/gRSQp9\nzZOni2iWS2hlQ+kjYz9OMGrdjq89vIPPVhj+8M/lQyDq9P1WOYBlMZz1AOD+VdDaTiReOKulK0jO\ntHmi0WDTlr0TyxRVhT8tJjIX+9SUxHXUV553BRQAVBcPhSBTSuxPY86+IGti0s5I7dsORy9fM3i6\n8e8mfDO5P90ZrWWiJicNPpZZtxV/xrW0jQt4DOv6Vk2dEEdTY6BHuB25rpbPSo0QARjP0qTRI17W\nwA/hFaMWmoQMgflQXYsDS142rU9tpqqenfNA7GgtihxkdKuRW6qMY/GkDZY8sY4Ap4hXbyB+VArk\nEtuH4wPyrk/EGkOm+a3jw3suRQLc5i38SX9hJ9nnY+XnBUdPyNdFY6pa3KkkAE9l6f8AfJ/pSJT6\nGhDmI+Zb4ZRycdv6ium0nUhKFydrelTsNnS2829RnrVgV6NKXNG55lWPLIM81Op+WrZkRMfmNNzT\nA7GivPO4KKAEY4XNYWt3vkwPg4OK0giJdjw/xrqhm87Zs8tc7pX5A+leSajf6aHYJ50kn4AZpTep\nrBWRm2Vobm4BXfyehPFdnpmnBFUY5rI2SN63tlToK0YI+KZpFF+3QdavwoKTLtoW0Toaswpk5pCb\nLCxipAhoIuP2dKevHXoaYDylRyxhlwRQI4nxVoCXWZI1GfpXGtbSWjYPGP73+NIGupt6TqMsLruZ\nih4xnP5V09mQ+JLd8gn0xSYJnVaVdkook69K34zuUGunDS3Rx4qOzHVIp4rrOMY3NJQI7GivPO8K\nKAILt9kZrz3xlebYiu8KCCWb0XvW0NFch6ysfO3jLVjfXLIn+pQkKorl7WxNxIPl71g2dUUdpo+l\npBGvHPet23iC8ihFosrxirkHQUFo0IF4FXI1O726CpKLacCrMJoJLYHAPpTwucHpSRJJ5e4AZI9x\nUqpxzVpCuOC8cUpQUMRnXttuB4rjNdsYyeVwfXpmpGmcvcQyafMCFJjPY10eg34BUg4DcZP8jUO4\nHaRq3lLNF+IHet7R7jz7c56rwa2wz9+xhiVeFy/T1PFegeaNPWigDsc0ZrzzvDNIaAM7VpNqdegr\nxL4l6kywyRhseZ19lrdfAZL4jxYg3Fw20d63tJsdrDI5rm3Z3R0R0Mce1eKnQYAplIkWrMJ45oZS\nNO3PHbNXIyfpSGWowSOasxLUiZdjFSqtNEMkUemKlAGKsRJjAppFAiORMjmsTVrNZEO4cfSoZSOD\n1eJ7WXBUzQZ+7nkfSo7e2Ei+ZaMzxntjBX2NSU1Y6/wxqojiEFzkA8KTXYaUoWRyv3W5rSjpNHPX\n+BmpSg8V6J5gUUAdhRXnneFFAGHrTfu5PpXzj8S70/aZtxzztXFbv4DKHxHI+H4GZiz9zxXXW8G3\nGBXMjvLRXAx0oPGPSmMVeOnWrMTYpFI0bcg1fh54xmgovRcD3qxETSIZcRvzp+/BpEkqsBUqsM9K\nq4Em4Gkxk0yRGXrVW6i8yFhkg+tJjRxGsWrxllkUMh9eK5uMz6bcebbnfG33kPcVkay2OntPKuo0\nnhXI67c8qa7Lw3c+adjcEDGK1paSRhVV4s6A0or0jyRRQ1AHX0V553hRQBz+vNtt5z3xXzX8Qbdm\nuic5YnOMdK3l8JnTXvlbwpYl+WySOgrp5YfLOOB9O1c62O7qQkc+9RsKChFPWp4DluOlSykaNruH\nArUgHShFNF2NT1qxGO3NBmyxGcE1N2560CFzjrUysO9JAPDDjFOVuKoQuSRTWouBkazbCa3cd8cV\nwF7IISQccHBzUSWpV9C3o1x5b5GAjdQD1rs9DjC3kckbEhqKfxIzn8LOupRXqnkPccBSkUAzraK8\n87wooA5rxMSI3HqK8B8bQl9Q8sffY5b/AAraXwkUviNrw9pH2W1ViMMRTdRjw4HpWNtDti9TPc4P\nFQs2M5qdyyMHLcfjV63HTAoBGtap0wK0YxigpsuRDtVhVYd6GQydVwwIqdRnqKCR23I5pCMUW6gD\nYNKuetAEise9KTxQBWuFyhrznxNZkXjFeN3I+tTIZg2OqmzmxNF0PO3vXp/g2+hukVl4zyPanTXv\nJmVR+60dpThXpnlPceopWFAbnV0V553hSGgRynjC5FujOey14Ssp1HxNmTnc+a3kvcIpv37HoEYQ\nQmMdVHSsnVbYJF5jVk0dsNzlruVIsl2wKxbjWrVHILjg1CRbZJb+ILHPzyhfStODWLQgFJFYd+el\nUJM27HUIXxhga1Y5lLVLKLkMnoauxnPPrSEx7ShF+Y/n2qrc6xBbhizDAqkK1zJuvG9nbg8ZA681\nly/Ei052RO3uKAsZlx8QGd8xxvt9Aa1NH8dK7AXMcip64zigdkdrZX8F7EJLdwwNXMkrz1qRMRly\nCK4TxmpidWI49felPYSOMmi80NIoOV6qRzXYeA5SskYPfirpfEjGr8LPWVHyD6U4CvQPL3ZItOYc\nUDOoNFeed4Uhpks4H4iE/Z5MeleMeGULeLgjds10S+BGdL+Jc9OSBU2Huc5Nc74yvUtrcDBrJnZF\n63PJdXvLy/lKWw46bvQVz82jXhkLO5Y+9ZlsYthcRnbIjY9R3q3awTRkEM3WmJI6C0ea3dGRsr1x\nXY6TqW9FLHnjrUs0izpLK5DDjofSta3ckH09KRUkZuuTvFGdvPauE1Y3U6Mqbssf/rUxHPTaJPK2\nZmJPbBqzY6DCZh5xJC9s9aBJHU6dpemJjfEmfetJtI0+VPkUr/unFOxdiextHs33W07YHQHk11mk\nXb3KbZ1xIvcd6LEyWho4Nct41sTPYb16ipexCPPZN+wYGCvH1rrPAEJmvkPoc1VL4kZVvgZ6yFwK\ncBXoHkkqinFaVyzo80GuE7WJRQSziPiGdthK5HQV4x4J/wBI8WPIewNdEvgRNL42emO/yj1UHNef\neNpRczbC+I17DvWT2OqJxc0sMK4TCisy41q0hfEkqj8aixdwTXNOlwvmqD9anS9tXH7uVG+hosO4\n/wC0oOhrR0+6G4YNIEzsNEuCxAPNdjZruA4xxUmjINSjURksOlcbqFykbnjFA1sYGoassaknCqO5\nrl7rxhGm7yBnBxuJq0rkSlYpw+NLlsfd5P8AerVsvHEqSBHwPVgcgVpyMyVXU3rXxcHYETAk+hru\n/DWti6ZSTyOKzZqndHaxvvUGq2rQ+dYyqR24qWI8dvbr7LqDxyDAzXpvw6FvIxePGSM06Xxoyr/A\nzviKFHNegeX1J41zUhXioGbuaSuM6wpCaBHG/EcA6HN/exxXjXw2jL67cv8A3Qa6H8CFR+NnoWpO\nI4XI44rxLxrqjQzSEsQM1gdSPM9U1uR1YbmWIdXHf2rmpIb67YS28UrRlsLI3c/jW0VZGUpO5pW1\njfLNOjahawzwReYI5cjzMkDavHJ5/SrVv9uhtPtVxCPLBwzxnlT9KGghLU3tKvvPjHzbl7EGuisJ\nGRxWLOg7nRXJEbDjmvSNK+aFSfSoZr0KutRkphc4NcRrdkVjL9aVio7Hk3iqS8ubhrWzUlsZY9kG\ncZNc5D4aee5MclzJIFTzHAO0MfatqSOWu7bFS1srDUZEis0vIZoUxPvfcC+4/dx2xjr712XiTwXb\nWmlQ6hol3cRhoFd4rlg3zY5wR0GelavQwjq7GD4etdVvSnk2wAB+9v8A8mvcfA2kXiRo0/UdcDis\nZnTTulqeoWqbUAJqWUb42X1FZlnjfjSwlGrr5S/eNdD4RkvLAAQ4yRyaUZcruVKl7TQ9I0G+mnzH\nckFwM8VuIK7ac3KF2eXiKapz5UWYxipNtMyNejNch0jSar3cjR27uoyQCRVRWom9DxTx54gu5fMi\nlbKdMVjfCZPNlv5v9rFbVHpYqjGzbOn8SzFI9o715L4u0r7arYzk+lYdTqSujy7U/C0u4vHk+WwO\nxuh9q3J9dgvbdVukMV1EwbDDgn04rZMwlHoZ+orZ6hfQ3RWVnQYCgZAq+8U0ln5NtBsV2yxYcfgK\nJtW0CnB31LlroVwJ1nQLGDjeP7w+lb0dsFxjrWB0tHS6NuWPJ6A16ToUm63T3Gallr4S7cxiTjrX\nPaxaF7dlVeSMUhxZ5jd+H7qCa4eF3DSE5x3zXN3Wk6jbyeaiFWUY6ZyPStYS5SalPmVipFbX0E4c\nW0alvmPHJrag0rVvEE6LdljGpG2NRtQD+tW5XMI0uU9M8NeFo9PiQhecDIIrtrOMIoG3H4VlJm9t\nC6CB06VPGM1IHLeItGS6uw+ORT7e3jsbQvj7gzUNam0JaWE+HN7NqOqX80n3FO1RXo8YzXdS+BHk\n4z+KyzGPapcU2YIv7qQtiuaxvcaWqG4O6FwfSrS1JbPnrxoxkv7qIfejcitj4V2f2exumI+8+aKn\nxHTT+G5d8Txlm4rjLxMsQwzWT3OiK0Mm6sEkVsAcjFc1d+FEmlGwEDPQVopaEuOpr6f4ZWNAu3tW\nvHpAj5ZQcUFIWaDjGMVUMQ3cVDBmvbhY7QAV2nh+T/R1yeKhlrY31+b61FcQK6nIoJMi401WblRi\nqr6PCw5UYq9y+YgOgWzNkRrx3xWjp+nx2v3FQcelAbmko9anQ4GBUNisPHWr1qMrQhS2K11HvmYV\nhamcxSRZ5xRIqluS/DKAQQXZxyXrvo2FdlL4EeZjH+/ZbjNSZpswLNBrE1Gt7VE4ODVIlnh/j61F\nj4lmeTGyUbq6LwdEqWbeX0YbhSqfEddP4Bddj4JIrhL5d8h7VjI6oLQqKNzelWre3yc4/ClFjaL6\nwqBxxUUxwCKu5BmXRA6c+9ZjP83FSBoQuPs4BrsNBlUW659KmRrDY6G1lyQtW3Hy0lqQ1qVJnAbm\noy3b9KYJCqRj3o4zRctIlhjLHmpSuOBRbQOpLGpPFaES7UqkZzKN1KsEc87/AHUUmvPLTVGv72aQ\nk7WJwKmRrQ3ud74Ltilgz4++2a6iNDXdS0gjyMU71my7GpqTbxSbMki3SViajTTHqkSeR/GeyZmg\nnQHkEE1S+F+oPPavBL96I4/Cia1udVF+4dVrkW+Fq8+v4tjMDWUkdVJ6WM0cNV+F+MVmjUcZgqnP\n1qpNNnkcVRLiZtxIS1UzzIF7mghlxUZpVQdq6nTVdAoAOKzkbQWhvwM6gMM1twOJYx3NOJE11Kt1\nH1/pVVlwBkk+9NocXoOQ45FPj+fkUJFF2NSB700v/hTEty5ZpkjvVyUgcCq6GM9zC14/8Se6GcZQ\n1574Xs5WkI2HBPHFQ1dm1KSSZ7Rotn9l0+KPHIHNacae1dy0Vjxaj5ptlhVp+2s2CJ9ppCKzuWNx\nzSFc1SYrHNeNdIGpaYw25ZeRXmvheyk0jVpEdcLJ0q3ZxNKTa0O3vQHg/DNcHrsJDmsmjspnNzNt\nfFIJ24GazOhC+azDmgZIOOKBsp3J2qSaZodubq58yQ4QAnmhGT3NO18pb7BORmu205LfYpyKVkWp\nOxr5gKYWoIZWgfGfloFq1qTPLubnGO1RPtxg4P0oBAkY/hBz6VNDDkZ6AU0W2WSdqkdKr9ZOaGSj\nVtcLHmnOcgmmYvcz7mBLy3MbdD1q9ouiRK6bUAVeelOC1InPlidSsWMDFOCEdq3uefykqrinYqGy\nrFvApMVka2DAowKAsMkRXQqwyDXn/iWyitNQ3qPl6itIvRoF8RXinW4tQ6HI6GuW8SIVBPalc6qe\n5x9x97r3qruwTjrWZ0ksZ9TUmcDNAmZ9/wAoao63rR0+w22MLPtAzt6mghmfofiB76LdJBJBIp5D\nd/oa7bSdWLIPnpDi9TM8TeKdas51XTbIyxd3J/pXS+E/EFxqNoFu7do5OmD60maHWrnZyDRkn/69\nMlEyOR0xntVoNx+FUgYjPxg4FLCuWDZyKQr2RoRnP0qO+nEFpJITgAUzLqZnhu6+0rknOTXpOmwJ\nFbrt5yMmnHYyr6Oxb2ijaKLnPYMClwKQWK3n0hn+lachHOJ9pNNN0apQFzsY10a4v4hXQh0xpieQ\nMA1XLZNjhK80cT8OdV+3Wl3A7ZZJCw+hrR1qLcjZ/CsbnfHRnFXseHJArOYYbrUs1uPhYbuatqFP\nByfSkMq3UIINYkto+87Tx6GkSxfsDbflGD7CtTw/pk4nzITtPIFMFudsukh4Rxz71paTpKwP5jcn\n0qTRy0NORMDgVCqewoJTJgAoxjntTiTu7fWmFxAcnn1q3EPl+X8KZMi4gKqB1Peob/Tv7Us5bfeU\nyOoq4R5nYxqT5I8xieH9J1DTbvyJELRg8ODwa9Ms5mSFV9BWiptbnNVrKdmif7Q1KLg96XIZc5Is\npNL5pqeUrmMtZs0jzV08phchaY00zH1p2ZNxjS1g+LdJOt6U9ssmxjyGp2urDjLlaZzng/wUPDqz\nTSTmWeTrjpVjVk3Rvjr2rnqQ5dDvo1XUd2cTqSNk9OKxXGCeKxZ1DAxHTr2q5C/y8GokUhsz54qu\nuCxzSQjQ0+FZblR2ro4bZYiMVQ0dBb7Qi5x0qzuG5QOh71LYErDufpSeWrHnimIXbjkUjLkH1Hem\ngGxryc+tXI19KYmWegq9YLiLJ7mtqS945cS7QsWehqxA9dEjz4krPSxyZqbFFhGxUm6smjRM55Lk\nHvSvNxXTY57kLT+9MNwKdhXGm5FIbkU7Bca1wMEVhaiuQcVhXWiZ14R6tHGanGBI2OtYkqEHjgVy\ns9ErEeo6UBsHipKEZs5qpPdRxcbhx70NCSuybTNWihc5brW9Fq6vjMnFSdEIdDRi8RRKygZbHFbu\nm6nb3RA3gMegNJhOm0jbXGOoxTuCc1Rz3FyoGKawz9KaAVcZqeMgCmIkB4FaUTbYwB6V00Fuzixb\n0SFMuDU8Mlbs4UPeXHeiOXkUrDuXYnyKk3cVk0ap6HMxxketSMhrcwRC0dMMZFMQ3yzSeVQAeUaz\n9Vj8uPd271nVV4m+GdpnHX67pCeKyLtBtNcR6xlk9RVeWTb3qRnO6trgttyIfm71z7ai8j7/AJmN\nDNqUVa5Yi1AnjynHuBV+11YJhWWXcP8AZNSzqgmaEerSsf3NtIQP4mGKtRavdRgMIpVI9KjU0a7n\nR6T43uYQI7qN2Tpkqciu503VVuQGAYZHQjFVc4alPlZrpKGAznpTwxOc9+lWjIlUACnM4XApiLNk\nnmvnsK0NvpXZRVonmYqV52GsmanhXitTmFkSiJTSAvwrxUxXIrJ7miOfjf1pzNWxkRlqYWpgJupu\n6gQbuahvIxPA6eo4pNXVioS5WmefakGhndH4INZs5DJXA10PaTurmLO21uKpSZqGMoXGnRzBiyjd\n9Kx5rcQS428fSkjanLoaOliHGZFB56VswW+mtPufcBsGOAfmxz+tFkd8HpoaUx09FAtFY8DO71qb\nSms/Nb7RbecG6AEjFLS5c78t+p0djpVs9wsyQiJAdyr1rW+zqjErzSe559Sbk9S3C+MA1bjbgE1S\nMSXzMVG0vNUI2tPKrAuCMnrVzNd0PhR49W/O2xrHmp4TxVMzQshpIzzQBehqesnuaI5VGzT2bitz\nFEbNTC1ADS1JupgG6l3UAc14s04yR/aYRll+8BXCtLncDXFWjys9TCz5oW7GddH5qqNzWDOgQnC8\nVSuo1kHzAGkPYopEY2+RWxV23Vzj5G/Kg3jWaNazhZuqNXS6TaKhB2c0jR1nJWOlhOxRxU4YkCgx\nY0OQatQyDbyaaFYe8uF4NY3iC9ltbVGj43NTIL3h7WzMihjzXVQXYYDdW9Cf2WcOJpfaRZ3g9KsQ\nmupnCLIabGeaAL0LcVY3cVmzRHIxtUhetzEjZqjLUAIWpN1ArhupwagAfDKQ3Q1594v0c2bm6tx+\n5Y8j+6ayrR5onThp8s7dzkZjuqAAmuBnqC7c0iwgtzSA0rWzjfGRW3ZadDu4AoNYo2rfS4v7orSh\n05UA2r0pDbsTm29KRottBNyJ0wpJ9KhD7f6U0ikNWffIFBz60zVUW52ow4UcUN6EPcx44WsbgOmd\nua7TT5Bd24KHnFKnLlZFSN4koluLdueRWvp14swweG9DXoxldHlTjYtzGoo25qzEvwtUxas2jRPQ\n5CNqkLVsYoYzUzdQA3dSFqBBmnqaBhuqhriCXTpVIzxUz+Fl03aSPI9QTypW2/dz0qKNw3SvOPZR\nMqin8VLKRcs3O4Cuk0w/MDjt1NBtHY6O2IIHY1pxgFaETIRwMkjtVSUEk4570MlFW5bap6dKzWm8\n1tqH8aY+hp2FvGoGayNevVt7/ap4xzUvYjqTLtvLPcvJxSaVcyWsxTnFZlnT2t15xHmCtOBYwQy4\nB9q7cPO+jPPxFO2qLEj5HWo42+aus4HpoX4W4FTF+KlotbHII9SFuK0MUNZqiLUDE3UbqBBupwag\nBc1DefPbyD/ZND2KjujyPWlKzuPesRZjHJXms9lMuw3StjnmphKDSLTJ7OfE3JrpbO4GQc9qlnRA\n3LO82k5NbFvdADkjBoCSHyXIIIzgVQvdRigT7wzjgUzO1jHknlvG7qnp61etYFQDIpCZoqVijzXn\n3iC8EmsOuaCGb/heR/s0ijkVv6fbxy3QMg5xmsnuX0Ldzut3+UYTPWk+2GJSe+M1pFtamcldalmx\n1eO4XaThhWnC+TXqR2PHqL3maUJ4qRjxSEjj42qXdxVmaGs1MJoATfSbqBAG5p6mgAzTJTmNvpQU\ntzzHXY83D/U1zF5FhjgV5r3Pa6FMsV5HWnLe7RhqBRdmTwagN2d2K2rPU1C5LAnPrUs6Iysbdrq6\nf3gK0BrUKj/WClY05iM6xLOcQAj3NT29uznfKSzHuadzNu7NSBFjHNSm5VO9IRnajqoWMhTzXFtA\nbvUfMduSeg702Qz0rS7FbTToQFwzjJqaGTFyfK5PQViyzUuFmuIdgGABya5u/vTaN5cnUHFUmLoZ\nzyskwlgJweSK6zQdUEwVJeGr0aUrxPLxEfe0OrhPAqVjxWhznGRtUwatDK4jNxURbmkAm6jNABup\n6tQAFqhupNtu59qUnZFwV5JHnWsHdIx96w5lz15rzT2uhRmt85xWbcxMnUGmZlB0bdxmrNvFIcfM\n350mWjbs7YkDJY/jW5ZWW4jikWkdNp9mqYJFaJdEHHakUULu/VB1rLn1Ld/FgetMGYd/qWSQmSa0\n/AemS32pfa7piLeLkg9z6UmQtz0W7uQ2cZx0A9BVzR7cAea6j2rPqX0L99KRat5A6Dk1wOoKZ52a\nYfMORTYRLujiGWEq6/NWza2yKQVHNdOHerRy4laJo6TTnbbtb8KuM3Fdh5z3OJjbmpt3FaMxAtUZ\nagBN1GaQBzTwaAAms3VbjERUGsa07RsdeFpuUuY4jUjljWTKK4j02RE4IpJYFk6imQkVl0xWarsO\nmAEcUi0bNnZBR0rWtoguMCkUi21wI161mXuocEKaYXMS4u+pY/hVCSWSY4HT0pEmlouiSahdpEBl\nmOceleiwWcNjClvHgJH97Hc1EmVFFi3Czy7mwIl/WtJbjP7uLgd/apQ2VNVvtsBhiPzdK5S4nAuR\nnqOCaTGi9pcytPlU+XpmumtWII44rah8ZjiNIXRuWeNvvViQ/LXpJWPJbu7nCRvVkNxVsxBmqJmo\nEPiXca0YLMuOlJsuKuPlsSi5IrNuG8s4HWs5VEkbwoOTKsk+FJY4rC1K53k1xTk5O7PSpwVNWRzt\n4cms+WpKICtSLTETQj5q0YeBSGiys23pUguGxQMq3E59ayrm4x3yaAKiRtO2WPHcmhruKFxFajzZ\nScA44qRHoXhuMaLpxaUg6hcDLMf4F9KlhuDeXGASIl+8azZslYma68y48m1+7nFW5rtbRNhb5z1p\niMKbUg0zuW4A4rPgb7VdKXOMmpA7HRbMS7nUYiUda0lkQOBngVrS+JGdbWLRt2bAx5BqeQ/LXpnj\nPQ4GJ+ashuK0MhWaoWcA0AaOmASMK7jRNPWYBmHyiuepO2x10qfcv6vYxCzYqoGK4HVYVTJrmb5l\nc6oaM5TUJ8EgGsG4kLNUHT0M64OaqMMikSRsuKbnFMRLG3zVehOaGNE445NNlnVFpDMu6uie9Vo1\n8z5mOAOST2pDK91cNN+5tsrH3PrW54a06KxT7fdrlh/q1Pc+tJ6IUdZGvHPLezMcnBOWbsPap5r3\nylFtbdT1xUWNWzU0/Zbwlgfmx8zGsHWtRHmMqE59aAMyNifvHPc1f0gtPdqkY5JosJHeNci2tktY\neuPnNY+oXWZEVJNrZ9aun8SIq/CzodHuriIokhDIR1ronbKZr0o6o8ipoz//2Q==",D0="\n/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAsICAoIBwsKCQoNDAsNERwSEQ8PESIZGhQcKSQrKigk\nJyctMkA3LTA9MCcnOEw5PUNFSElIKzZPVU5GVEBHSEX/2wBDAQwNDREPESESEiFFLicuRUVFRUVF\nRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUVFRUX/wAARCASwBLADASIA\nAhEBAxEB/8QAGwABAAIDAQEAAAAAAAAAAAAAAAEDAgQFBgf/xABDEAEAAgECBAMECQIDBgUFAQAA\nAQIDBBEFEiExE0FRBiJhcRQjMkJSgZGhsWLBJDNyFSVTY3OSNEPR4fAHFjWCokT/xAAYAQEAAwEA\nAAAAAAAAAAAAAAAAAQIDBP/EACARAQEBAQADAQEBAQEBAAAAAAABAhEDITFBEjJRIhP/2gAMAwEA\nAhEDEQA/APqYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAKNTq8OkxzfNkisQC8eb1XtRNbzXT4q7eU2nu0MntRq/D8StMccvW29ZmdvgjsTyvZjxOLj\n+s8WLxn8TFPXs6Oj9oct7c14rkxz22nrB2I49KOdTjelmszfmpMeUxv/AA28OqwZ4icWWtt/SUi4\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmdo3nsPNe0Pt\nFh09Z0+DNWL7+9O/7A3eJcZppsV5raI27esvH6jX5ddM25p79Ilo59VbUZOe2Tm/PeGvfPfT2iKR\nPLv1+DO678XmW/a97U6TtOyzTbTF538/T9WjTNecm9a7126tqk3rSYxY5ta1plRZqZNXGjyZcPXl\nmZmsx+qjBrsuO16xM7eXRt04JrdTltk5OWJnfaWf0a2lty5MdZnfzSn+WOHiOutFpjHa9e8bQ2fp\n+alYy462pk7zXbuxjPesbRS0f6ZZV1ET1tErzXFLHo+A+1ddZf6NrI8PJHa1vN6iJi0bxMTHwfOa\nzhzd61v1846utwniM6DUdb3nBaNrVmd9vjC/ZVePYirBqMWppz4rxaPgtEAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAItaK1m09ojcHnvarjM8P0vh49+a/eY8ng9D\nh1fGM1rxjtGPfvbzdbjuTJxHX48cTPNltM/KsS9Dw7S49Jp6UpHaGe2vjz1y9J7LYK13vHWe7bj2\nex1tvM80ekuxW3RnW3Vm6P5jRx8H0+OYmMcb+bapo8GKPdpC6bQwtdHU8JpWkdJ/JweL6e23iU67\nd4dubSqyVi9Zi0bwIs68XGp36TtEq7ZJmZmevzdbifCKWtbJinkt6eTgZPFw32t+sRurbWVzxs1y\nRv6T8V1NZNPtfq0seTm+Kevr+SZuxXjvaPiV8N4viycto9HseG6+uu08W6Rkj7UPmFck1tE1nlmP\nLd3eA8V8HVVi1pjq6Ma/pnqce/ERMTETHaUrKgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAADW19+TQ5p/p2bLS4v04Zmt5VjeQeJ4bjnLqsupv+Ka1+ERLv4reTmcNxcuC\nvy3l0qdI2hlr66sT02ot0ZV7qqrInruzrVZLGSZ37JjqgYTG0K5lbaFVhDT1Ub456RPweY4hixWi\neSdpjvD1eWejz3FNHWYtkpvFo9EIseb3tS3SerOms22rfpPqZKzvvHSYUz70TExG6Gdbs2rljeJ/\nMx5L0vEzPaelnOi98c9J2bFNTFpit47+a+PVUvx9T9nOIfT+GV5p3yY/ds67wvsXqpxau+G09Lx+\nr3TqrEAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADV4ljnLw3U0jvO\nO0fs2lWqyUw6XLkyfYrWZkHldBEV09eveG3Fq1mI3jd4vPrOIaid8G9MP3Y38k6fNrt/rMk9Ou8s\ntfXXn49rGWInuy8SO/k5Gl1E3rG/fzbOe94wTy99mbRvTrMOOvNfJWsesywniukrG/jU6fF43WYN\nTmtEeJtEQ06aSmK2+bNtEd+qfSO17unF9Hmvy1y13XWyVmN4tExLxVK8PmNq5NrT58zawam+m/yc\n0Xj8NpRYSvQZ7xEOdqI3rPozxayNRXe0ct/ON03jmrKB5nV4q1yTO20Obmv4c+cx8HoeI6WZpNoj\nq83niYmYscU0r8aJ6T1n49zeJ+Meqm1drb9J+Kd5p136StGVem9l9TbHxLDFp7W7+sS+q1nesT6w\n+PcAzVjiGHftzQ+v4f8AJpv6On8jH9ZgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAABp8VrW/C9TW0ztOO3b5Nxp8VmI4bn37TWYB8f1HFtTfUfR9FWJmsdZ9I7MtJxDX5s\nd8ta1y0xzteaR2277rcuhycP12SceLxMeWNpjttHwlu8I0mfQ1y+D7k5YmJmY36T36Ka43z/AF1t\ncI1ds+qxVj7/AEej19PCw9HJ4NoK4OIU5Y35YmZdzVTGebVZabx5jJS+Tmns81rNLm1Wrzc9rVw4\nYibbem72mXTTS0w0M3BvEta1bWrM95ie5EanY87wXgNOL6XPfxraXLhra/W28bR/dzYzarBqJxRe\nbzE7Rt5vWU9n8mPHOGmS0Ypnea1naJb+k9ncNLR7u2y/WcxXO4TOoyUrN6zD0FaW5Y3hu49FiwUi\nKxCvLMR0hlW0jn6ukWw3iXjOJzbDlneOj3GaN6zDzfFOH+LE7SRGo83XNSZ2lbG2/WfdlvaT2cy6\nrNFInlrv1mfJ37cK4PwTTxOoidRm2+/2/KFuyMp47XB4LivXiunrH2b2iH2qn2K/J8x4fGDNxTSZ\n9Nh8OviRvTyfT6xtWI+DeXs9MNZubypASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAOZx6/LoOWPvWiHTcf2hiZ0e8fc2mf1E5+vP/AEeuSd7RC2uKtI6QjHfeINTfwtPf\nJvty9WPfbt/lucP03gxfJf7d/wBoReYpm97zaNeLb4Ims9Nt94auDjem1Wo5PFi1onylS+1o7l8V\nbxvtupjDMdNkYtXS1+Stt+m63xImEJ4xjHER2ZxMUjeUTO3VRmydBbjLJqPi08mbeVOXJPq1sl5Q\nVbkz9+rRy35rxHqzmZlVEe/Ez5LRlW5iyfR6zffaIjq1OSNZps2a21rZInafSPJhxGMl9LStLRWM\nlorM/A4dkrWbYfLZC2W/7K6eubX6b4RzT+W76K8b7G6X62cu3Sten59nsm3j+OXz3/0ANGIAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0OIYfpOHPijvNNo+fdvtXJO18k/\n/OwPFYbz2ls3jx8VqW6xMdWPEdP9D4lkx/dt79flLLHbkxTPwY6nt2512ORTRzE2x4/dpE7cvkme\nE4IrW3hRMxO8THRtU1FKWtvtvK2upx22rzRCtXkqzh2jtF7ZbT122b01ndnpuWuP3Z3+Ky20qDVv\nfauzVy3mejZzNK8dVjqi87KLRLYtXruqvXzkQp7Qoid88R6rcl+WGlW0/Sa22mfhCZOq2x082ix6\njkm822pO8VrPdr4dNObVeDo8XW3uzMbzK+mvxT7szE27cvnu9j7PcNjSaXx8mOIzZevbrEeic5tN\n+SZnpt8J4fHD9HXHO3PPW0x/DeBtJxx29vaAJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAKNRim9Z5e89Nl4DzXtVh5babURHrSf7f3ec1+qnDorWrvvt5Pccb0n0zhmWk\nRvevv1+cPE2rGTFNZU26PFfxwa5dVkjelI2772nZnX6bbrEUq3o0d678u8wmuDL2ittvVjXdneeK\ncGv4jpJ6U56+kS7+j118+GLXpakzHaWlp9NNY3tv+bbiYiNoQy1y30uyZJlrWmZnuym6q1iIJnop\nyW2Te8bdWnnypQqzZOadokiIpSZntWN5lrxki19vNRxrUeBwnNNd+fJEY6/OejXLn3Xe/wDp9wyn\nE8uo4lqqxblv7lJ26T6vpD5X7G8QycKzeBMbzMRM1/FH/wA/h9QwZ6ajDXLitvWzRgsAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeL45w+dDrZvWv1OWd4+E+j2jX\n12jx67TWw5Y6T2nzifU+rZ1y9eHwzDYxxEy18+DJodXfT5o96vafWPVbjyxDn1OOzHudbM0rt2UW\niI69mVtRXZq5tREb9VUoy2iIlRbJ0UX1VZ6btTLrI7V6yk62M2oisT1c7JmtkttVMUyZp6x0beDS\nRWOvdKijDimvWd3G9pNRMfRcNfvZOb9Hpb0itJeP47k/3hgjaZnbaP1XxWW3T0movbNS0W645nbf\n0nrMPpXs3xamoxdJiLbe/X1n8Uf3fKsOTw4jbaXo+EarJhtGTHMxeJ6xH7Sti9Zaj6x3HM4NxXFx\nDS1mtoi8dJrv2l011QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAGjxLhODieOIye7kr9m8d4eM4to9RwjPXFa0ZIvG9bR0fQXmPbDFvTTZPOJmEWS/V8bs9R43NxLL\nG8eFbePg1bajU5/s0l1ceKLx1hbjwRE9mOpx0y2uRTSZsm3PMw2aaKtIjo6kYo9EXpET0hVLXxYK\nxC6MZvyx1lFs0RHfaPiCnU12pLyHGNDbUajBekWma2npWN3p8+opa20e9LSyZLxExTlpM+vdOdcZ\na9tPS8MyUvFrzWlI6727u1pYxYrbVmb7x+TQx6au3Nqcl7/0rcmW9axGnwZJj1novmxnZXV0fFp4\nZxLBPgTGK8xzXr5fOH0bFlpmxVyY7Rato3iYfNuG2x56Wrqa8s2jz+7Lu8O12bS6jkwzN6THNNI6\ntvrN68Y4rxlx1vHa0bskAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAA4XtTTm0OKfTJ/aXdcL2pyRGjwU362yb7fkJz9eTxxyZJjyltRXzUZK7TFtl9Lbwy06YzrHwa+\nfJFd/wCVt8m0bQ0eS2qzcm+1K/an+zNZFL5M1pjFXeI72ky48eGnPkvNp27+TPU6nHpMfLXaIjpE\nerk5dRMxOfN1mPeisfshW1ne1a1577Y6x5R3U0zze31FOWI6ze0byU098kRlzbxM9qrMlPDpyRMR\nMd5Vt/Ihp5898mWZm1pjftE91uCt7fCI7dWeHDEW3t723l6rslqxWZnasR+SYhFbzhnfxJ2jyeq9\nlcGXWZcmW0zWKxHLaI7794eJx5fpfEKabT8t8l5isddo3l9S4VjrwrRUwzSJt3tav3pdOL6Y6dXD\nj8HFWm+/KsU4NRXPvtWazHquWVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAa+fXYNP9u8b+kdZBsDkZOO135cWOZn4y5Wu4xqctbe9y19Kp4njt6vi+PDm8DFMWybbzPlV\n5PiGtz67UxbNbeKTtWIjaIXYpnwuaftT5tXJT3vmi1pMsrU5qIrG1V1a+5DCa7b9GFbRr5J6Wnbt\nCu+Wmk0m8956z8ZWZNorbfzcbX5rZslazPux3hUt41NTntktObJ13+zX1bek01r4/HzVm0bxPXy/\n+bNfDgjVa2uOY92kdfg6ufJOKvLXtttVVSqbcta2vM7zXtHpLQy5ZtMd+vWd+7Zy3mdJHXra3f0c\nvUarw7zFY5rT2hH1Lavnrgx81p3U49Pk4nE5L35MO/StfNRXR5tXnrS8W67WvfyiPSPi7uLHFK1p\njrtSsbR5Lc4RzsXBaYreP4l45esRD2HD9fnw6evvWvO3Tfr0aGk0U55ra0TFInv6uzgrXFXlx0i0\n77RPlC83Yj+JW7oddqr6vHzTTw9/f6dod+L1t9m0T8pcbFSmPHER3892W0zPuz+jSbVvidkcqmfP\nSel7bekrI4n4dZnPWIrHeYnZee2Wpy8dEaml4npNZblw5qzb8M9JbYgAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAABEzFYmZnaI7yCXL1XGa0jJXT0571nbee27DiXEprp8nhbxG20W8\n5cbD0ikfnKO+urTPvjoZdXqctdsmTaPSvRpWmsdZ6yztfaGplvv3lWW1tyRlz1x0vkn7Vo5atTNe\nY0+1o79V2KsZsvX7Ne5mwxnyTNvsx2iGneM/rCdRSuOsTasTt5kRFtpjqmOH4t4nk7estiMNa97R\nHwhna0iuKTEdmGWa4672nZtRele1N59Zlq6vLOSsYorEc07qcW65euzRvtXvPZy52naZ7ujr6fXV\nrWdukREK8+njHgmZmPc67bq6ivVWhxxgxZLztNrT1mZ/SP4VZs0zaOvfp84WUtNsXLvtv3699+rU\nz7+Jtt5qURqMnPpctaR1rMSw4ZoK57eNk6xHaJRh97Ltt7lo5Z+L1HAPZvVauZ2nFTSzMTzeJEz8\nto6xPfvsZntPZ9rXxabmxzefdrv0j1dXh/BcmstW1qxTHHasR3+b0GPhGl+kWmd64dNEVjf73T7X\ny8vy+Ddx6O3iRakxTH5RXrMw1/lX+3Itw2MFIraN48qRHdZi0cUjmmPen9noox1iO0fNzdXEYrTt\nstcmd9aX0bJ+HePmiKTitO8TMLZ1cVjrMfqpz6ys4pjfrPRWZ9rXXptUit6zO+23VyaRHEc05L1/\nw9J9ys/en1ljqdVbwYw452tlnl3jyjzbmmiMeKtYjpEbLeTXPUU8ee/+qjJpsV5rbkrFqzE1tEbT\nDpYNbW21Mnu29fKWna0KbqTdjXXjld0cvQ63ltGHNPSfs2n+HUbS9c2s2UASqAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAOVxPWe99HpP8ArmP4b+r1EabT3yT3iOkesvMVtN7za07zad5l\nXV5GmM9vVfEstvDx0jtaVVMlq+UJ18b5cMRvPeSuK87bUt+i2Z3PtG7zXpjkzXt6R+TXyTMzvM7t\nydHqZ+zhv1+Cv/ZuqvPTHMfOYaTMil1a1K2vHSLTELq2v+KWzThGo84rH5rq8JzedqR+ZeI7WnOS\n34pYTafWXR/2Pln/AMyrKOCWnvmiPyR6O1y9585lhWJvl557Q6eo4T4dYiMvW3b3UanhldHpJtGX\ne09unmjsT7eb1l4trI2t0hsZfrdNO0bzy+nzU20/+NmkzO9esz+TZxWis9dttvPv+Tn21jjaW8zn\n26bTG3mp1M/Wzv3t0jyWXiKZJmsTERaZhXXDbNl8WaztWenxZLstPp5pau8frDtVrNMM5cfTfpMf\n3aunxxbes9d/R09Dp8ebJi09ptFr3jtt2WyrW9wy1Jx132mK+Xq9PotT0iIU19ntLtExa3T47T+q\n6nBaYvsZstZ+cT/LeMnUi0TXffo1s2m8Ws2/OIMWk5Jib5L328rS2t94Sh5TV4ppklpW6PT6rh+P\nNbebTHyas8E081mZy5P2W6OFhjxNTE/hr/LoRO0Kvo9dPqctKzMxEx1la5t3tdnjnMs4noievcrO\nyZjeFF1OSnNV0OG62cn1GWffj7Mz5w05joovzY7xes7TE7w0xrjPeex6Ua+j1UarBFu1o6Wj0lsN\n3JfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACrU5o0+nvlt92P3BxuM6nxNRGCs+7Tv8\n2hToxm1r3m9utrTvMsonqyt7XTmcja0u3O6FMfi5t/u0/lzdJM81p9O3zdvHTwsUR5+bfPqOfX1h\ndqV+3O7bs1+T31oqmI3TEM4rvCdkDGIIhlFd2daboS0NXG2bD6bufxXU1vlmu/u4us/N0+L1tTSx\nkr9qk7w89j1FNZMV3jxLzvaJ8mer+LSOZqK2xZotbvljfr/89U453rXt9lse081xZtNjx7TGKu0t\nDHlrevSevaN5Y6+tJ8c7VRNMt63n3ub+6/R54rERMztDYy4a5omclYmfxKcenrjtHLvtPrCnVmdb\neFe3JXmjy6eS/DrMuLVYsta9Mdt++6qLxO+0dEc8UmInr18iUfReHcXrqccb9Z27Q61Lb13eJ9nc\n1Z35rTvE9avY4bTkpG8xEfB05vYxqybc07R281naGMREdoT5JQqy9mply7Q3bV3iXG1eXw7TWSka\nc258t7+tpT5/BjT7MfHqndz12Z+M4lMMKyziUJJiN1WSu9fku23RaOgKNJqbaTU1t9yelo+D0cTE\nxEx1iXmM1Nt3W4PqvFweDaffx9vjDbGvxz+TP66QDRiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAOJxzU73rp6z296zsZMkYsdr2naKxvLyObNOfNfJbvad1dXkaeOdpvsc2yuZVzfbfqybutwu\ns5s8R92J3dvJb3tnO4HSMegtmt3nfZvYp8SZl0z45NfSK7onH1bNcfRFqnUKJr0Y7dVtq7prjEsK\n0XVpEM6028mW20IHK41aPo3J6zs4ODhdcvPnvExFevNXpMOrxi/PlrTee7PLX6Pwa09uaNlKtHg9\ndM3z5d7ReOu02nu0JzZMfblrv5R5uvrcdImZ26T1mYhxs1Os7RH93PZ7axuafNfLitvbaYU3yZYt\nPXs9NwHhui1HBa5LVicsb81onrEuVqNNSuS8Y67dZ6xPZa59Il9uX41vEitImZme3q2Kxbxora0T\nMd/ROSa4Ztkj7c9OafL5LuGYubmyX3iu/TfbdSfVnpvZLT/XZK233+Mbbva1xRXyiPk8pwbH4N6T\nadq5a71n0tD1WDL4tPe6Xr0tDpz8YVnJHWEXYxbqlBedoef4tW0XraO09HdyztSZcbUz43C+ee9b\nSVMaeOfqq7+jGckQ1Yz7+7v2RN/WXPXZPjci2+2yyJaVMuy+uSJlA2d+pNoVRbeDcSxyTE+TDDlt\npdRXLTynrHrDOyiyZeVFnY9TjvXJjres71tG8MnJ4Nqt4tp7T1jrV1nRL1x2cvABKAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAHJ49qfD09cNZ97JPX5PPw2uI6j6Vrsl/ux7tfk1mWr7dOM8iLdm\nvfebREefRsWldw7SxqNbWbR7lPesrn3Vteo7dYjDpMGCvfbeXQ0uLlxRLRxROfUc34p6fCHYrXlr\nEejqrjY8uzCYW7MZjdVKqK9VlaxCYrsnYExBMRMJRPZA8/xPHtmpP9W2xx76vhWOInvt/C7ike7N\nvwzE9kcapGfhlevTaFbFo8RqJ5vy8/RoW09ek0msxHfp3dzNoLzp4zUmZpMbT8HJyYJi20X2n0lh\nZY1li/RaidBF4w2mK3jrHaFGp1lN+tptPp5IjBkid5mIp16TKu0abBPv33vPlM7z+iPdFNcWXU5I\ntkrNce/b1W5db1nTaf3ax9q0fxDW1ebNk2phty1mOu09VOm8W19orEz23j1TwfSeERFuEYMddptW\nd43dvBn21eKJ75KbW+cf/JcTgMxXTb3nbljz+TpcPmc2uyZO1KRtVtGVdi0bx07qJnllsRO6rNTe\nN4XVamsy8mnvPwc3R2jPwe8TPbdlxXNOPSZfhWWpwO85OFzv57qrODkzeHntSe8Sn6Rv0a3EZ218\n8nXekfr1a0ZLVnqx19dWb6demXybOO7lYMvNMdW9S/VVLo0us7tPHdtUtEwJiZU3jq2Jhham8CVG\nPNODNTJXvWd3qcWSubFXJWd4tG8PK3pPd1OB6veLaa89Y61/u2xfxh5c/rsgNHOAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAANLimq+i6O0xPv392rdeZ4rq/pOqnlnelOkIt5F8Z7Wj27I2I6sb25YY\nV1ImY3dbQ08LRc23vZp2j5OJG+XJWle9p2h6HHtbJXFT7OOIpX+7TxT31j5rycdTh+Dpz+XaG/sw\nw18PHWseULN2trBE9UcrJKBhFU7JAQi0dEomegNDUYovM7x3jb5tO1ZvpbaTLtzRExWfWPJ08kbT\nEx5NXWYYyV5omYtHWJieyeDzuizfRs19Jn6TM7Ru1uMcJxZqTkw+5f4ebqa7SV1MR4tdrx2vEfy1\naxqsNOTLjnLXytVXi3Xj8+nmsxTLM16d5npPyUzpekTtSK+U7vS6vQ/SYmK1vWPS1HOn2dvvvvE/\ntDO5XlcO+LbfHSd/W3o6/BdDOXPTnj3Kz38rS6Wm4FNrRyRzTH3p6RH/AKvR8L4dXSzE3jmtHn5I\nmbfqLV+m4dbLSsZInHjr3iI6zLpYaxS01rHuxHRHiT9mv6s67Vj1aqL6326MrWiYa+/Q54BxPaGe\nXRZpj8MquB4+Xg8zPnB7SX30to379GxpK1xcHiKz5IS8xr8PLPixH2bftLTy05o6dHYyVjLhy0t1\nizjZa3pMVv3iO/qz1G2L+NbSajbNyW7xLsY8kTDz+fJXFqKZN4iZnafi6WHL0iYlStI7OO+7axW2\ncrFl7dW9jvE9ULN+J3ZbdFGOy+AYWpEqN7afNXLj+1Wd23KrJVMvCzseh0+auow1yU7WhY4fCdV4\nOadPefcvPuz6S7jol649Tl4AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV581NPhtkvO0R+4NPi2\nr8DB4dJ9+/7Q83Po2NTqLanNbLfvPaPSFDHV66sZ5ET0hRknyW2lTtMyouz0c8usx2n7s7vScKwx\nzc1vu/y85p+maJh6Th+SOWeveXR4/wDLm8v+nX5mUWa9bbrInolmu5jdTNkxYFk2Isr3TuCzeGMz\n+THdEyDDJO9Ja823rt2XWnya946pGvktDXta0ztWu/ybvLE9dkcoOf4GbJPWK1j49VmLh9JtE33v\nMevb9G7WsW8l1ccREISophiJ2jpDYpijbaOjOuOJ8ujOdqxsgVcsUjaETYvbaFFrgu5lVsm0yUtu\nryg43H5m+GIj1XcJzePoL4pnrWGtxmfchr8JvfHS1622if3QljzTTLes+qrNjrkiYtCzPMxnm095\nYZJ6boS5teB49Tqscza97VtvWvlv8V/FOF34RrIxTM2xXjelp/eHoeA6XnzReY3ivX/0dfivDcfE\n9HbDbaLx1pb0lOs+jO7K8Lis3cN+0NKcd9PmthzV5clJ2mF9J9GHHVL108dm1SznYr/Ft0tuhLb8\nmNohFbMhLWy0mJ3rPXvDvcO1karBG8/WV6Wj+7kWrvDDBlvpdRGSnbzj1hpjX4z8mOx6UYYstc2O\nuSk71tG7Ns5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeXneJ62dVl5KT9VTt8Z9W9xbWclPo+O\nfft9qfSHEU1pv48ftYST23ZTDC/p0YtlVuvVjMbM5+LCZjYGWGdrTPxiHY4ffaf3cjTxz1v6xMS6\nOlty2iXVj/Dk8n+ndrkhnGRo1v8AFdW3RCrZ5uiYsqrboncSu508yjmZRYQt50TfowYTbYGVrKrT\nuTZjvukQnYhMIGVY2ZxPVWyrHVCWzXpVXkt3TE7Va+W4K7X3jv1auTNy3jdba0RZpamfroQN7Hk3\n6wr1GTaN2OOJiu6Mu98NvgDi8Wy74d/yZ8PiPAiO2zU4nb6qIn1bugjfFE/ASp1ke9u15mbbRDZ1\nMb823kx0Ontn1OOkedoJCvT8I03gaKsz9q/WW+isRWsVjtHRKyrhe0XCfpWL6Vgr9fjjrEfeh5fF\nfeH0V5Dj3DPoOo+k4a/U5J6xH3ZZ7z3228evytOk7NvFbo0cdols47bSybt7HbddHVqUs2aW3Qnq\nxVeu8LILR3SlZw3V/R8nhXn6u0/pLuPMXjeHT4Zruf6jLPvR9mZ8/g1xrvpz+TH7HUAaMAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAABRq9VXSYJyW79qx6yvmdo3l5viGs+maqYrO+OnSvx+KLeLZz2te1rZL2v\ned7WneZYWnZl5K72YV1xEyxmeqJljzIEWlVkszvbZp5soN3h2SJz3pP3odCnuWmPRxuERfJrZmtZ\nmtY96fR28kbX3dXj/wAuTyf6bmK+9YX1s0cNtm3Sd4LFY2K23W1s16StiUJW7bp22RW3RluBuruz\nmWEgrmCGWyNkoExKE1QlPmsqRDKeyBjaejWy2W3ttDUyz1QKslvehVqKTNosyyTvELabXptIJpaP\nB39Ia2mz+JGpr51jdZefDx2hzuHZObNq58poJaGtjxJ2+LoaKP8ADRPo5+T3skx5OhpOmC0fBNQ0\n5yTbn+bt8A0u9raiY6RHLVwY62mI6zMvaaHBGn0mPHt1iN5+aYVsACBXqMFNTgviyxvW0bSsAeE1\nmkvw7V2w5Ote9besJx2er4rw2nEdNNekZa9aW9JeQjnxZLYskTW9Z2mJY7zz26fHrrdpbZsY7NGt\nmxjvso1b9NmUwpx33XRO4K7VUTE1nmrvEx1bVo2VWiJE/XY4frY1WPlt0y17x6/FuPM0m+HJGTHO\n1qu9pNVXVYt46Xj7VfRtnXXL5MfzexsALsgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHM4jxOMFJphmJv529Dq\nZLfjDjPEIx450+K3v2+1MeUOHSOWFc3nJkmZnf4yujpVlqunOeFpV2nctLCZUXRM7MJtsWlRkv3Q\nky5NmpWt9RnrixVm17TtEQnJabXisRMzPSIew9n+CRoccajURvqLx5/chfOest642OGcIpoOG2w7\nROW9d72+LQvXevyejcPUU5M+SvpLeOataraw2a0dLbLqTtK1G3Es4lVWWUSoldFtmcXUbpidgXzK\nGEW3TuCUSncnsDFMMLSms9EC6J6FpVzbZE5ALy0809ZbFr9GtfrEoFMzuuwz0Ueey3HbaBLDXe7i\ntMOfwWnP9I+NZbuttvhs1uBRtXPb4SDm3iIvf57N7Dbl0VrS5+XrltEd+Z1Jx7cNms9N4TURRw3T\n+PrcO3WszEvZOD7P6aYiMlvu16S7y1QAIAABxOPcLnUY/pWCv1tI96I+9DtgmXl68Biy7/NtUu3+\nO8HnFa2s0tfd75KR5fFyMWTdhrPHVnX9R0cd21S3Rzsdm1iuqs256wrmGcT0RYSx5d047X02SMmO\nesd49YRE9WcdSXhZ2O1p89NRji9J+cei1xMc3wXi+KZj1j1dTTaqmor06WjvWW+ddcu8XK8BZmAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAMMmWmKu952UZ9XFZmuP3revlDTtzWnmvO8q3XGmfHb9ZanV3yxtWeWn7y4es\nvPNtDqZJ6Ts5mppvdl/XXRMyfGvSNlu/RVvtOzLfoipLT1VTKbSpvfogRkvtDVyZOhkyvQcA4Dzz\nXV6yvTvTHMfvK+c9U3rkW+zvA/D21urr789cdZ8vi9KDb45rejl8Rry6iJ/FV1HP4vXbBTJEfYt1\n+UpiHM295bXsqrO9l8QkZ0lZEqqLeyBZHZLGvZkhIndADKJ3TMoqWQMZ6pjsxll2jsCLSrmU2lFY\n36gieyu0LJk3jbsga0wdqzK20QpyztQGprL/AFMrOE05NLkt6qdVWZxNrSe5o9vWBLiUjnzXn0vL\nq555dHt8HOwV928/1z/LpzXxbYccRvzTB+jucOwxh0dI22mY3ltIrHLWIjyjZKyoAAAAACJiJjaY\n3iXleM8InR5J1GniZw2n3oj7s/8Ao9Wi9a3rNbRE1mNpifNFnVs65XhcWTdt47bnFuF24dm8TFEz\np7T0/pn0a+HJux1OOrOux08d1ndqY7tillVkzExLOk7yd4YxGwluViJhE45raL0na0dtlWO0+bZr\n1TKi+2zptZGTamT3b/tLacvJjiY3XaTWdYxZZ6/dtPm1zrv1z78fPcbwC7EAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhkyV\nxUm152iAZWtFazNp2iGhm1Vss8uP3aevnKrNntqLdelI7VRHRnrX/HRjx/tZREVjZXeybW6KbWZt\npCZ6S08tN7Nmbb7zCrJtyoS5145bSx5mWafelr3tsKmS/o08uXyhlly7RPV2+AcBnPNdZrK+53pS\nfP4ytnPVda4y4BwHxOXV6uvu96Unz+MvVxG0bQRG0bR2G0nHLb2gCUDX12LxtFmpHeazt82wT1gH\nmMN4tWs+rcr2aEV8DU5sM/cvO3yb+O0csLUTSdrLphRE8tlkZI7Atr2ZMazDJVKTYSCawi7Ksq7z\n1QERvLK3ZGPrKbyCrbdnMcsbeaa18/RhvvM7oGEwTG0JmYYTIML22a2e28xELM19oURPNO4lOem+\nn3ZY5+prVnMc2GYU4/L4A0a15cNf6rz/AC6fC6+NxCPOuOu/5tHJTbHj+F5/l1+BYumXJMd9o3/d\nMRXYASgAAAAAAABhlxUz4rY8lYtS0bTEvH8R4ffhmo6bzhtPu29Pg9mq1Gnx6rDbFmrzVsizq2df\nzXkMWTeIbNL7tbXaHLwzUctvexWn3bmPL8WFnHVL326VZ91MfFVjvvVlz79kLrcf2m7j7bNHH3bl\nJ2SirLQoy4t1++7G0dBC/RanxI8PJPv18/WG241+alovSdrV6w6mDNGfFF4/OPSW2b1zeTPL1aAs\nzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAVZ9RXBTe3WZ7R6iZOpzZq4ac1p+UermZMl89+a/byj0Ra9815ted59PQ32hlrXXRjH\nDpCLX6ML5NlNsm/ZRqstfdXzbsZt06sLZNvNB1Za8RDWyZdo7q8udq5Mu/mIMt4md2lmy7JzZuWJ\ndHgfBL8RvGo1MTXTxPSPx/8AstJ1XWpIs4BwSdbeNVqq/URPu0n73/s9hEREbRG0QUpWlYrWIisR\ntER5JbSccur2gCUAAAAPM8Sry8Uyz67fwuxbzVPGsE49XGbvF42V4M0TEL33ERnktsxpk3sumK2j\nadmFdPFZ33VS2Mdui2J3UU6LYlFSsN2O5NkCyJ6K7T1TEsbAsxdpReerKkTFGMxvYEz0rsqtbbpC\nb2VT1QEzuwtbaGUxspuJU3neWdKoiu8rq12gCI92YatLcublnzbEz1aOptyZqTuDHLfxN6R0+t5X\nqdJhjBp6UiPLeXl9NSMnEKxHa1+bb8nrlvxUAAAAAAAAAAABTqtNj1eC2LLXeto/R43VabJw/VTh\nydY+7b1h7ho8V4dXiGlmvbJXrS3xRZ1fGv5rzeHN02bEW3cys3xZJx5ImtqztMS3MeTeGFjqlb2O\n8btql3NpbZtYsnSBLeiWfdTjtutid+ghherHS5p0+f3vsX6T8Fkw181d4lMvEWdnHaGnw/UeNh5L\nT7+PpPxbjdyWcvAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAo1Oprgr63ntAmTqdRqK4K9etp7Q5d7Wy2m953lNrWyWm953mVd77R0\nZa1104xxlN9lV8qnJl2a9s3xUXX2ybsJyRDWtl3YWydEC+2VRkzeW6q+T4tbJm+KRdfK1cmWZnlr\nvNp7RC/R6HU8SycmCk7ed57Q9ZwvgOn4fEXtHi5/O9o7fJaZ6z1uRyOEezVstq6jiEbV71xevzer\nrWtKxWsRFY6REeSRrJxz22gCUAAAAAANbX6aNVpL0npMRvWfSXlKamsRMVvXm+EvZXjmpaPWHzfL\noNRjzXicfWJ8phfPxFejx72x7xMzK+sXiNoiXlq+Pi6fWV/VfTNqfLJl/WTg9Pji8R70LqvMV1Gq\nj/zcv6yz+lanzzZP1lWpelTET6S81Gp1P/Gyf90s412rjtnyfqql6asREdWM9+jz9eJ6yP8Az7uh\nodZqMt458tpB1JvEViI3/RhzRt13/R1MNaziiZiJn5K9ZNceKZiIiQcu/WekT+iYrWI3lzdTrs+8\n8uW0fJzcur1Np/zsn6g79phVaIeetqNR/wAXJ/3SwnUaj/i5P+6UD0ldonum161h5mNRqP8Ai5P1\nlNtRqJjacuT9Qd22WN5aGeZyZd/KHJy59RHbLf8AVq31Gp/4uT9ZEvS8Lr/vSs2npzRtL1z53wK+\noza/HW2XJNd99pmX0Rb8VAAAAAAAAAAAAAAcHj/C5yV+l4I9+v24jzj1cLFk8nu5jeNpeW41wmdL\nknU6ev1Vp96sfdn/ANFdTrXG+eq1q5F2LLtbZoY8m8d11bbSydErsYsm+zZrO/zcnBm226uhiyRK\nEtrvCrJDOJTeu8A1MWX6Lqq5N/dnpb5O5ExMbx2cPNTeJb/DM/iYPDtPvY+nzhri/jDy5/W6AuwA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAa2p1UYo5adbz+xbxMlvqJ1OqjDHLXree0ejmzNrWm953tPmTPWbWneZ7yoy5YhjrXXTjH8s75N\nmtkyxt0VZM2/m175N1V03yTKubMLXVXybeYLLX2VXy7eam+b0bOg4VquJW+rry4/O9uyZOq3UjVm\n9r25axMzPaIdvhns1kzbZddM0p5Y47z8/R2+HcF03Doi1a8+Xzvbv+TotJnjDXkt+K8ODHp8cY8N\nIpSO0RCwF2YAAAAAAAAACvUZYw6fJkntWN3k8dfHz2vLucdz8mkjFE9bz1+UOZosX1UzPm0nqI/W\nMYo9FlcPNklfFGeH/NshLGun+Cz6PtHZtVZWlRLS+jxPkRpIn7rdoupHTdA5s6SI+7H6Mfo+32Y2\n+To3neSIiZ7A0IjPXpXLePlMotGW3272t85datKzHZjbTVnsDj+FG/2Y/RlGP4R+jo20u7H6N1Ql\no+H8I/REY957R+jpfReiK6eOYHLtj2tttH6KrY/6Y/R2c+kjeJiFVtLG24hxpw7/AHY/RRkw9O37\nO99Hrt1YX0tfOBLjcGp4XF8c+u8fs9c4dcVcGemSI61nd3IneN1orQAAAAAAAAAAAAABFqxes1tE\nTE9JiUgPKcX4RbRXnNgiZwWnrH4XPi28PdXpW9JraImsxtMS8pxXhF9DecuGJtgmf+1TWW2N/la1\nL7N7T5e3Vy6W3hsYcvLbqzbO9jvvCzvDR0+XeO7crO6FmGSvRThy/RtVXJ92elvk2rRvDUzU7pl4\nizsd2J3jeBpcNz+Lg5LT7+Pp+Xk3W7js5eAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADs0NTrN96Yp6edkW8Wzm6+LNTq4pvTHO9vOfRoWtt\n1mes95YWvs1s2fZldddOczLPLn2ju0MmebT3YZc2/mpm3qqllN1drsbZIhr3yzvtHf4AsvlYYseb\nV5Yx4KTe0+UQ6nDvZ3UazbJqd8OKeu33peq0eh0+hxcmnxxWPOfOfm0mP+steT/ji8N9mKY9suum\nL37+HHaPm9DSlaVitKxWsdohI0Y22gAgAAAAAAAAAABXnyRhw3yT92Nwef4xm8bVzET0rPJH5d12\nCvLhho3rN9RWs9Z23n5y6O21YhrVYbdGOCfrrLPJRpv863zVS6FS09SvZj3lVZZRdPSqmnSWdrIE\nebOkK4ldTsgW1WKqd1oMZhEVZyRAImOjGI6rJ7IiATNd46qL02bHkiaxaoNGY2n4ImPgtyV2n0Vo\nGvlx7x2beiyTk08RPevSVUxux00+Fn2n7N+n5rRFb4AAAAAAAAAAAAAAACLVres1tETWekxKQHlu\nL8InR2nPp43wz3j8P/s5dLveWrFqzW0bxPeJeV4xwmdFec+CJnDM9Y/CrY1xv8qvTZ+WYdbDk5oh\n5zHk283U0eo3jaZZ2N5XYjrCnLSJhOK+8d1kxvCqzSwZvousrb7k9LfJ3nB1OLeJdLhufx9LEWn3\n6e7LXN9Ofy5/W4AuxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAETaKxMzO0Qi9646Ta07RDmZ9VbPbaOlI7Qi3i+c3TPUaqcu9adKfy0722ZXvFa9\nXO1OrjrESxt66ZJmcjPUanlidmhkzTZVfLN5VWvsC2b7R3U3yqrZZtO1esz2h2+F+zWTUcuXXTNM\nfeKR3n5+iZLVbqRzNJo9TxHLyaekz62ntD1fDOA6fQbZL7Zc/wCKY6R8odLBgxabFGPDSKUjyiFj\nSZkYa3aALKAAAAAAAAAAAAAADQ4pl2pTFH3p3n5Q33E12Tn1eSfKscsLZ+orS00eJqbW+Lfnu1tF\nXaJnZsz3WpCfsyp00fWSvmPdVYOmSUDd8kR3InoQosy7JmUX7MdwZ17ro7KKT1XRPRAsrO0rYndr\n79V1ZBaQiJ6JgCSIJASwrO07MpV2nqBlrv1a1o2bf2qtfLXaQUTO0sb05o3jv3ZXhjS20xEphW5h\nyeJjjf7UdJWNKLziyRePsz0lux1SgAQAAAAAAAAAAAAAADG9K5KTS8Rato2mJZAPIcU4ZbQZuekT\nOC3afT4NXFkmlntc2GmoxWx5K71tG0vHa/RX0GpmlutJ61t6wrY2xr8dXS5uesN+tt4ef0eaa223\n2dnHk3juyreM81OaFGiy/RtZET9jJ7s/2bdutd2jqKeic3iNTsd8a2h1H0jTVtP2o6W+bZbOO+gA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABje9cdJt\nadohGTLXFTmvO0fy52bJfU23t0pHaqLeL5xdK9Rnvqb+cUjtCi94xxvK3JetKuHrdZvaa1ljb10y\ncnIs1Wt3naJc++TmVWvMz1YWybfMGdsm3eWek0mo4jm8PT0mfW3lDf4V7P5tdMZdRviwfvZ6/TaX\nDpMMYsFIpWPTzXmf+steT8jn8L4Dp+HxF77Zc/4pjpHydYGjC3oAAAAAAAAAAAAAAAAADG9opS1p\n7RG7zszN6WtPe0zLua+3Joss/wBOzhzG2OsL5+IrY09dsSyYRijbHEMvOChb7KjF0yS2LQ169Mso\nS24noyrPVXWejNVKbTuw3T3REdQWU6LYlVvsyiUDPfqupPRr79VuOQX1lZEqoZxIMksd0gT2VT0l\nbPZVbuCaW8i8bwr32WxbcGnkjaZa9p2ndv5qbw5+aNugLItF6TEtvTX5sMb969HMpfazc0d9stqe\nvVZDdAQAAAAAAAAAAAAAAAADV1+iprtPOO/2u9bektoB4TJTJpNRbHkja1Z6uto8viVht+0HDvpG\nH6Tjj6zHHvbecONw7Ltfkmeqmo6Ma69DXbbZTkr1mGWO3RneOaGbZRoM30fVzSelMnT83aef1FZ7\nx3h1tBqfpGnjmn369LNc3sc3kzy9bQCzIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAa+q1dNNXr7157VhGp1Xh70x+9f9ocy283m1p5rz3mVbrjXHjt91lz\n5c9+fJ1nyjyhdM8lZlOOIiqrUXikd+kMreunnI5XEdX4dZiZcG+XmtNl/F83PeeWWHDOGanieSKY\nq+5H2rz2hMzWd1Iqx1yajJXHhrNrW6REeb1nCPZumn2z62Ivl7xTyr/6uhwzhGn4Zj2xxzZJ+1kn\nvLoNJnjHW7TbbsAszAAAAAAAAAAAAAAAAAAAAaPFrbaSK/itEOXt0rDf4xb/ACa/GZacRvaF58Q2\nIjasQnzPIhCU92tMbZGzHmotG10C6nZkwpPRmipIllEbMIZIE7solgmJBnCyk9VMM6z1BtVllEqK\nz0WRILYlluriWcSDJVbusV27gwInaSWM9ECyZ3hqamnSWxFmOSOaqRx725bNnSZNs9J+OynVY+WZ\nYYr7TE+nVaIr0Ais81Yn1hKAAAAAAAAAAAAAAAAAABExvG09peU4nov9n66L0j6q/WPg9Y1OJaON\nZpL0+9HWs/EWzeVz9PbmrEtnyc3h9reHy26TWdnSr2YX6657ijLXpLX0+onSamL/AHJ6W+Tbv2aW\nekTv16JzeI1Ox6KJiYiY7Slz+E6jxdN4dp3vj6fl5Og2clnKACAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZ2jeQRMxEbzO0Q08uqtkma4ulfO3r8lefUePMxWf\ncjy9WvlzVxV6T1Z61/x0Y8f7Wc7Ur1lqVy+LqOWJ2hp6rXddon5rOF1tfmz5OkT0qzb8dWbxjp1c\nbiuuilJ5Z6r+IcQrixzEy8zl1E6rNt1tMztFY81sztU1eRucN4ffi2p5esRM72n0h7rS6XFo8FcO\nCkVpX082nwXh3+z9FWLxHi36328vg6TZyW9ABAAAAAAAAAAAAAAAAAAAAAADj8Unm1tK/hqppHvw\ny1k8/EMk+m0GOPeafiFpCZYwolnXspvHvLa9mF46gmnZmwozRUiUCBKYYsoBLOFbKAX0llEqqyzi\nQXRLOJVRLOOwLIljZMEgrlhKyYYTAK5nZPN0RZjugUanHzVlz6xtLq361c+9eXItPpXX0dubTU+E\nbL2lw2++O1fSW6m/VYAISAAAAAAAAAAAAAAAAAp1GbwcfTreelYEydcuMcRrM/L9nnlsV6wqpi2r\ntv133mfWVkRyRtEdGFva7MzkYZNoamWN4bV4mYa9qztKIujhVppxGI8r1mJegeZpknBqKZY+7L0t\nLRekWrO8TG8Ns/HJ5ZypAWZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAADS12fp4VJ6z9qVuq1HgUiI+3bpDl589cOKZmevqprXPTbx477rDJlrhr1nq4+s182tMRP\nRqaziXiZJrWekNG17ZbxWJ336M5LXRbI3dLTJrs07RMY6fan1dHLrowY+X7MVjt6N3R6Kul0EbWm\ns7bz8Z+LnabQX43r7Y53php/mXj+Dnv0f1JO1x/8ZxbUzj02O15mfLtD13AvZqnDds+pmMmo26el\nXX0Wh0/D8EYtNjilY7+s/NstpOOTW7QBKgAAAAAAAAAAAAAAAAAAAAAADG88tLW9I3BwJtz6nNf1\nvK/DHVqYJ3pzT5y3MPZeojOWMQylEKpTVjZnDCwkqzYQyRRICATCITAJZQxhMAshnEq4ZQC2srKq\nqrIBZCWNZZgwswmFloVyCu0dFcx1WyrtCBhv5NTPHXds2U5o3hIz4ffbPt+KHUcTSW5c9Jme0u2v\nVYAKpAAAAAAAAAAAAAAAAYZctcVOa35R6tLrltN795/YvknNqrfhpPLH92V5isd9mWq6fHjk6rn0\nZxG8KK5Jm/wbVZiYZtqrmkqL023bkxvCiY3lJHNyRG81mHS4Rn5sNsNp64+3yaWaNrzOzHBl+i6q\nmT7s9J+S+ay8mex6EIneN47SNXKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAImYiJme0JafEs3h6fkidrZOn5eaLeJk7eOdm1Hi2vmtPTry/CHmOJcUvmvOPF1n09Pm\n6HF9ZGm01qxO3R5vSY7XwzmzTy47zzTEd7en5Mfvt2/PURWdo3tvPrPlKymbktFqTtMTvHzbOLDG\nf63JXbFX7FdnoODcDprZpq9TjiMMTvSn4vj8l5fxnrk91saPSa7i2hpOfbTVt5x1m0fLydzR6PDo\ndPGHBXasd585n1lsRERG0dIF5OOe6tAEqgAAAAAAAAAAAAAAAAAAAAAAADX11+TRZrf0y2Gjxe22\ngtH4piP3TPpXKwxtjhuYo9xq442iIblI2pC1RET2ILd9kxCqRjZmwlCSEohIJAQAAJZISDKGUd2M\nMoBnVbVVCyAWVWeSuqyOwIlXZZKue4MJV2WWYT2QKbKL9YlfdRdIo35b7/Hd3KTzUrPrDh27uxpb\nc2mpPwX/ABX9XAKpAAAAAAAAAAAAAACekTIp1eTwtJmv+GkyJn1oafeazbfpMzLR4jq/o8b823zX\n6XNF8ERCvTcNpxLV5LauvPhx9Irv3lhztdtv8TtaWLicXrt03jzjzb2k1nid56ty3s/w+a7Uwzjn\n1raejlarhmbhl/FpbxMO/fzj5p/ixSeXOvTtRfeI280ZI26tfDm3pWe63LaZx7qtGvniJ6tPLvOK\nfOa9WzbJvTbza02jl3n5SSljscK1MajSxWZ96nSW88xw/VfQ9XMT9nfa3yemid43jtLeXsce88qQ\nEqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADia3UTm1l4j7OP3Y/u\n7Vp2rM+kPJW1PhYcmS0+9MzKm/jbwz31weMzbV8UppazPL9q0/BF4rk1GLDSNqxPWPhCnHmnNrtT\nqPKteWPm6U6OdHaZvO+SaRNvhv12Ub/q3FhtrNVj0uKOt56z6R5y9zix1w4qY6RtWsREOJ7L6OKa\nS2rvX6zNM7T6Vh3mmZyOfya7eACzIAAAAAAAAAAAAAAAAAAAAAAAAAAczjVvqMVfW/8AZ03I41bf\nLp6/OVs/UVrY47NyOzUxd4bUJpEbb3Z7IiOrKIVSjZhMLJYyhKIgmGUQSDESIEbJEgQmCITEAmGU\nIiGUAyhZVhDOoM4Wx2VQtqBKuyyWEgqlhKyyuyBVaGtkbNmvk7A15l1eH2300R6TMORPSXT4ZO+O\n8fFefEX63gEAAAAAAAAAAAAAAAq1WPxdLlp+Kkx+y1Fvsz8gjhaDauGK8sx07y3OE3m1tT6RaP4c\nvU6yMNKUx73zT0ilY3l2eF6a+m0kRl/zbzz3+Ez5M8z26fJruW6wzYq5sV8d43raNpZjRzPPaTmx\n5b6bJ9rHO3zb2WJ8GWPEscY9bgzxH2t62n19GWW0eHOzHU5XbjXZ1x8WTnz2iZ7S2M1IjH2+LX0V\nKTqs8zO9ot0j8nUthi1J3UaOFMTfLFo6xMbS9BwHWTqdHOO8+/hnln5eTjYMFo1WTH5VnePzXcIm\n2k4zlpPSmXy/hfF5eMfJns69OA2cgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAADG/2LfJ874rW845mubliY7bPoto5qzHrDz0+yePNF41OotaJ7RWNtpV1OtfHqZ715fhu\nj8adNpcVfeyzE2/vLuanhOu1nEctIxTTFa/+ZPbZ3eHcF0vDbTfFE2yzG03t32+DokynXl9+leDB\nTTYKYccbUpWIhYCzEAAAAAAAAAAAAAAAAAAAAAAAAAAAAcXjE/4zDH9M/wAu04XF5/3jj/0f3Wz9\nRUYmzDWxS2I7FSyjuzY1ZKpRKEygEwiWUIkGIk2QJNhKQhMIhkCYZQxhlAMoZwwZwgWQshVCyATL\nCWc9ldpBhZXLOVdpQK7NfJPRdaWvknoDVvPvOnwuel4+TlXn3nS4VPvXj4QtEV0wAAAAAAAAAAAA\nAAAAAVV02CmTxK4qRf8AFFeq0AAAanEsfPpZmO9Ji0NDLfkwdOsulrumiyzHlVzJrz4Ovoy26vB8\ncTBa9NffLtMY77Rv8Yegx5ImkKdJoY1HC81Y+3OSbVn0mGGkmbY45u6tnrrTOu2xGO0RxCd+nNVj\nqKxTV1vH2pjaGtnyzXXYdo96ZmGXEMk15b7/AGZiVerWPTYckZcNbx5wzc7hGbnxXxzPWk7x8pdF\n0S9jh1OXgAlUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAcPjEf4/FP9H93ccXjMf4vDP9Mx+62fqKrx+S+GvibEFSsqyYwlVK\nZYsmIMoRKYJQIPIEiQ2ATCUQygCGUIhMAyhnDCGUIFkLIV1ZxIMpVWWSrsCuyqyyyq09ECq8tfJK\n66jJ2Bp5J6upwn7dv9Lk5J951uE/av8AJaIrqAAAAAAAAAAAAAAAAAAAAAAq1Mc2myxPnWf4cmtu\nXT9fR0tffk0WSe28bfq5Wbamm3326MtunwfK6PCv/AxPraZ/dz9PO97/AOqf5dHhdZrw7Dv3mOb9\nXOxRFM+avpe38mvkPHf/AFWlrKba7Tzt99ZxKkfR7euyNXMTrtPHfa0z+zPiM/UR8Zj+Wbdu8HpN\nM2bfzrV13M4dO2pyR61dNvj44/J/oAWZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADj8bj63BPzdhyeNx0wz8ZWz9RWri7Nmv\nVrYu0NmqaRZHZlDGGSiwxZSgCEkCBCQSCQBMJRCYgEsoYx3Z17AlMIhlCBnDOGEM4AlhZZKq4KrK\n7LLKrIFN2vdfZReAaObu6/CO9vk5OePR1uEd7fJeIrqAIAAAAAAAAAAAAAAAAAAAAGtxCk5NFliI\n3mI32+XVyNTyZOHTee946PQKPoeDffw4777eW/yVs60xv+ZxOnr4Okx1t05KRv8Ao41Z5q3yed5m\nXY1szXRZ5jvFJ/hxItP0aOSN9q7yrtr4f2tHFM5+KT16Yq/vK/iGSbXw4vO14UcPx5MGfNbPG18m\n1oj4THRsTw7VanPXVYpi3gzMcnrvCnG11JOupwuN8+a3pEQ6jT4divjxWnJExa09pbjbM5HHu90A\nJUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAHM41H1GOf6nTc/jEf4Ws+lls/UX45uGekNujTwdm5RNIthKIZKLDFlsiQIShIC\nEgCUJ7AmGTGO7IDzZQhMSDJMMYZQgZwzhhDOATuqssmVdgVWVWWyqtCBTeVF19lF+wNLNG7q8I+9\n8nLyupwnt+S8RXUAQAAAAAAAAAAAAAAAAAAAAAAItWL1mto3iY2lyrcLyUxzix2ia2nvPeK+jrCL\nOrTVnxpanhuPPemSs8l6RtE7dJj0ldpNP9GwRSZ3neZmV4cR/Vs4AJQAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANHi1d9H\nM+kt5ra+vPoskfDdOfqK4mn7Q3aNHBPZu0W0RdDOGFWcKLCJZeTGQQlCQSgASBsCYZQxhlAJTAmA\nTsmAgGcM4YQyjsgRLC3VnaVcgwsrt3Z2V2QK7tbJ1bN5a9waeWO7p8Knt8nNyebpcK8vkvlFdQBA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK9RXmwZI+ErEWjesx6wQeZwejeo0cccuW8\nelpblJaaRGxVnCuss4ZrMvJEgCAASISCQIBlCYYpieoM0wx8k7gzIRueYM4Z79FcSy3QEsLJmWFp\nBjaVVpZWlXMoGNmvkXXlr3kGtknu6XCf7OXkl1OEdl8orqgIAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAHmskcmtzV/rls0U62OXiWX4zErcc9GmkRfWVkSqqziWayxCPIANwBIhIJSxS\nCRG6dwZwlhEs4BluMdzfqgZxLLdXuy3AmVdpZTKuZBjaVVpWWV2QlhZRdfZRcGpl7urwfrzfJy8r\nrcH61vPyWitdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHA4nHLxKZ9awnH2ZcY\njbW459aq8fZpfiI2IZwrqzhmsz3Ebm4JN0AMhCQSIASndiAziWUSriWcAyRujc80DM3RCfIETLCW\nUsZEsJYSslXZAwlTddPZTkBp5e7r8Gj6rJPxhx8k9Xa4PG2C8/FaK10QAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAcfjcbZMFvnDWx9m5x2PqcNvS+zSxT7sNPxH62YZQwqzhRZO6UCB\nKUAJTux3SDIRuAncQAmJZRLBMSgZ7iIAZRKd2DICUSlAljLCYWMLIFVukNfI2bNbIDTyT7zu8Ijb\nSz/qcG/2nf4T/wCE/wD2WnxWt4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHL9oL\n+Hw2cm28VvEuPptfgyVj6yIn0no7/FtJfW8NzYMe3PaPd39d3iMug1WktNc2C9dvPbeP1aZ9xF+v\nT471tHu2iflK2HkqWmvaZj5Surqc9Ps5bx+alTHqYHm68S1Vf/NmfnC2vGNTXvyT84Ql6A3cSvHM\nsfaxVn5Ssrxyv3sM/lKB1xza8bwT3pePyWV4tpZ+/MfOEjfGrXiGlt2zV/PotrqcN/s5aT/+wLRj\nFontMSlAlKEgndO6IAZQljDIEgeQljLCzOVdkCu/SGrkbF56NPNeKxMzMRHxENe0+89DwuNtHHzl\n5PJr8NcnLW3Pbf7r1nCZm2gpae8zMrz4i/W6AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAETETG0xukB4HVaeMHEtRi26RedvkyjBSfX9W77QYvC4xz7dMlYlrU7M929dWJLFc6aPK0q\n7YLxPS0S22FlP6q38Zac0yR92s/KVc3tHfFf8tpbcsLRvB/dR/8ALLVnU0r9uL1+dZI1mnmdvGpv\n6TOy6ym+Oto2tWJ+cJ/tW+KLK5KW+zes/KU7tG+h01p64qx8Y6NXNo6Y+uPJlp8rLf0rfG7MXtHa\n0x8pZxqs9e2a8f8A7Oj7HaTHn0+f6RWM23LETfr6vRW4PoL99NT8ui7F4+vEdXXtnt+fVbXjGsr/\nAOZE/OsPS29nuH27YrV+VpeV9pdPXhOtw49NG9Mld55+vXcTPd42I47qo7xSfyWV9oM8d8VJ/VxM\nd8l46xWF9cV7en6o/qLfxp2I9ob+eCv/AHMo9op89P8A/wBORGmyT5R+qfo2X8P7n9Q/jTsx7RR5\n6ef+4/8AuHftg/8A6cWcOSO9J/WEbWr3pY7Efzp2Lcfv5YK/9zWy8d1E/ZpSv5Oba1/+Hb9lc+LP\nbFt87I7E/wAabWbiurvEx4nL/pjZzc2bJkn372t85ZXx55/BX85lucC0vPxnTxlnnjm32mOiZqUu\nLJ2p4TwnVavNWaYbRTfre0bQ99pcH0bT0xb78vmtiIiNojaErMwAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAHnfarF7umzRHaZrLjYrdIen9ocPi8JyTt1xzF4eUw23rCm3R4r6bMy\nwt6kdTaWLdjswmNoZontsCm0K5XWjopnuDC0dGpqG5bs08/daKV672MjbSaif6oh6Z5f2LtvptRX\n0tEvUN3Jfo8f7cYve0eX4zV7B5z20xc/C8eSPuZIRficfXlcPaG7ino08HWIbePpLF2NuiyOyrHK\n3fZFSwuovHVfaVF4QK5YWTM9UT0EKry6Ps1Tn4zjn8NZn9nOtLseydObiWW34cf918fWfk+PYANn\nKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAq1WKM+ly4p+/WYeBxTNd6zG0xO0\nvobw3FcP0bi2em20Tbmj5Srr418V9sa2Z7qKyzi07MXUylhaU7yjqhLCeiq3ddaFNxFYW7NLNG8t\nzya+WO6Va9J7FW66mvwidnrXiPY3Ny8RyUn71Jj9Ht3RPjk19HK9pMHj8D1ER3rHN+jqqtTjjNps\nuOe16zAifXzfTz7kNyndpYazS9qT0mszDdoxrsi6m8LazMq6zDOsq1ZEyrt1WWlXaUCqyq0rbKbi\nFdp6PReyFd8uqv8ACsfy83aXrPZHHto89/xX2/SP/dpj6y8vx6EBq5gAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAB5n2q03LfDqqx39y39npmlxbS/TOG5se29tuavzgWzeV4mtui2\nO3RRSY2hdVhqO2MvI36iu9lUsrSrvDHn6spnmSiq5jooyV6tq1VV69RC32byTh43h8otMx+r6I+Z\naK/g8TwX7bXh9Mid4iW+fjl8n1ICWb57xLBOm4zqse20Tbmj8+qKdnS9q8PhcTw5tumSm0/OHMxz\n0Za+uzx3sX1t0Zxurr1ZxvspWiZYWZbsbT0QK7KLrZVZJFaqt5vbezNOTg9J/FaZeJns93wCvLwb\nT/GJn92uGHldIBowAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADuAPA67F9H4l\nqMW20VvO3yRWW97T4fC4rXJHSMtI/WGhVlue3b473K2KzMML4+62tujG9pnozXaOSOVFMnVbmq1t\ntrJRW5E7wwvUxTvCyY6CHOt7moxz6Wh9PxTzYaT61h8x1MbZK/OH0zTf+Fxf6I/htj45vL9WgLMn\nmvbPFvocGWO9L7fq85p5maw9d7VYvE4JkmPu2if3eW0+PasdFNOnxfF1Y2hlykRsmY+LJ0MZjZXa\neq2eyi8oQTO0KLdZWzPRjWu6VaqtHR73g0bcI0sf0Q8Nkq93wqNuFaWP+XDTDDytwBowAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAef9q8HNpcGaI60vtPyl56k9Iew49j8ThGe\nPwxFv0l4zH2U26fDfTYiyJljvsjf4sm6vJ1hrXjq2MkqLdZEVbgbMx0auGdmzNt6iHN1Ub5af6of\nTdPG2nxx6Vj+HzaaTm1+nx/iyVj930ysbViPRrj45vL9SAuyc7j1efguqj+jd4/T33rD3HEcPj8O\n1GP8WOY/Z4TTT7sKadHhbcsZnaCJ3TPZk6VdrKbTutmP0U2nqgrGOsr8deiuI2X09EqKM1dt3uuG\nf/jdN/06/wAPE546S9rwud+Gaaf+XH8NMMPK2wGjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAABrcRp4nDtRWPPHP8PCYusPoWSvNjtX1iYfPuWaXtX8MzCuvjfw32siu8ptXoxi\n0wy5t4YulReqmazu2skbquURWFInddM7VYRGyL291KFnCcfj8e0le/Lbmn8n0N4b2Ur4nHLWmPsY\n5e5a5+OXyXugBZmiY3iY9Xz7NjnTa3Ph/BeYj5PoTxftFg8Hjk2iOmWkW/Psrr418V5WrWd2faFc\nV2jdnEMXWxntupmN7NiYU27iWML6dVMVnddjgVqMsdHr+CW5uE6f4Rt+7yuSsTDv+zWXn0WTHP3L\n/tK+GHl+O0A1c4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Dn93W56/wDM\nt/L3z59qp24jn+OS38lnpr4r7ZxHQ2TEstt3PXUrt27K57rr1VT0BjKnJPRbMqMs7QlV2fYvHvrd\nVknyrEfu9m8f7FZI8fVU85iJewbT45NfQBKo817W4eulzxHaZrL0rje09ItwqbfhtBVs3leai8RD\nKLw1sduesL606dWFdsZT1jdhNeq6K9DlhCVUU6s4jZnt1YzAhnM71dH2bycmszY/K1d/0c6OzY4R\nfwuK4p8rTstn6z8k7HrwGzkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHz3\nVxvr80/8y38voTwGpj/F5/8AqT/JfjTx/WVeyY6FPspc9dZPVXaOq2WEwIUTVRmjo2rNfLHRI3vZ\nDJycXtX8dZh7t879nsnhcbwz23tt+r6I2nxyb+gCVBzuPY/E4PqI9K7ui19fTxNBnp60n+Aj5/pJ\n3jZu1aOnnltMNussdfXbm+l3ZM9URHREdZVXTuT1Nk7boQiOkJw28PU47/htEp5eivJPLMTCZ9Vv\nx7mJ3iJ9UqNHk8XR4b+tIXuhxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD\nweqjbWZ4/wCZP8vePCaz/wDIaiP+Zb+UX408f0r9lOxWOifJhXWjfyYWllPRXYQxnrCrJHRd3YZI\n6A1NJecHEsN/S0T+76bE7xE+r5dk93LW3pL6ZpMni6PDf8VIn9m2fjm8s9rgFmQxvHNS0esbMiew\nPnHLyai9fS0w2aNfUTtrs3+uf5bGPqy068fF227KtSsdFlKqNGMV6myyY6sbdIQI8tlOWOi6Jhhk\nj3RD0vA8nicMx9etZmHRcT2Zyb6XNT8N9/2dt0T449T2AJVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAHhdfG3E9TH9cvdPEcXjk4zqI/q3L8aeP6xr2TsxpLOekMK6mFo6qpXSrm\nOqBixvHSVmzC4OfqK7S9/wAByeLwbTW9K7fo8Fqo6Paeyl+fglI/Da0NcMPK7QC7AAB8313TiOf/\nAKk/y2MHWrX4jG3E9R/1Lfyv0/aFNOrHxuU7LI7MMayGTVlHWUXhNe6Z6wIUsb9d1m20q7dkDpez\nN9tRqKT5xEvRvKez9+Xis1/FSYerb5+OTyf6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAB43j9eXjN/jWJ/Z7J5L2mry8Upb8VIF8f6aGOey2eynHvOy7bowrrYSxZSwQJ2YXZ\n92N4BoanrEvVexmTm4blr+HJ/aHltRHSXofYm/1Wrp5RaJaYY+X49WA0c4AD51xONuKan/qW/lbp\n+0MOLRtxbU/9SU4J7KadWPjep2WQrr2WRPRk1TvsndXMpiRCb9FNu0rbTuqvKBscCjfi9PhWZeue\nV9n434rafTHL1TfPxy+T/QAszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHmv\navHtfTZfnV6VxPajHzcNrf8ABeJFs/XnMcr4no18c+6vr2YadkY2YM57sEDLyY37Mo7MMnYGlqO0\nvQ+xNfqNVb1tEfs87qZ2rL0/sVX/AHdnt65P7Q0wx8vx6UBo5wAHz/jUbcX1PT78qtO2vaCnJxjP\n8Zif2amnnspp04+OjWejKJ6MKdmcMmyJn4m5ZHzEVPMwtJv0VZLbQDqezcb8RzT6Y/7vUPM+ytZt\nn1OTyiIh6Ztn45N/6AFlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABocbxeLw\nnUR5xXm/Rvq8+OMuDJjntaswEeBxT0bNZ6NatZpNqz3rO0rqsdO3PxlaWEMpY+aqWXkryT0ZT2V3\n7A0dVPuy9f7G124NM/iyT/Z4zWT7sw957MYfB4Fp4/FE2/WWmGHldcBowAAeM9qKcvFeb8VIly9P\n0nq7ntbTbVYL+tJj93CwT76unR4/jo0nozhhTsy3Y1sWljM9Ce7HyQIm3RRlttVbaWrnt0Sh6n2U\nx8vD8mSfv3/h3XN4Bi8Lg2nj8Uc36y6TeOPXugCUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAPD8RxeBxXUU26Tbmj8+quro+02Lw+I4ssdslNvzhzazvDPbq8d7GW7Dfqz2VzG\n0s2qd+iu/Zn5Ksk9BVztX1mI8930zh2LwOHabH+HHWP2fNYp4+vwYvxXiP3fUqxtWIjyjZtj45/L\nfaQFmQADzftfj3w6fJ6WmHmsP23rvaqnNwqLfhvEvIYZ+sV038bo0noy36MK9oZQxrdMyrlnMbMZ\nQKrS1M07zEestq/RRjr4utwY/wAV4j91p9V18fQdJj8LR4ccfdpEfsuREbREJbuMAAAAAAAAAAAA\nBAJAAAAEAJEAJQAJQAJEAJQAJQAJEACUJAQlAJEAJQAJQJAAAEAJEAJBAAAJAABAJEJAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwvanDzaPFmjvjv8A\ntLztJ3h7HjGHx+FainnFeaPnHV4vFbeIU038VbHeGF+kso7Mb9mTdhKnLK3dRm7SIrHhGPxeP6Sv\n9cT/AHfSnz72Zx+J7Q45/BWZ/Z9BbZ+OXyfQBZQABzeP4/E4NqI9Ii36S8Ng/wAx9C4jTxOH6ivr\njn+Hz3B/mQi/GvjdCnWNlsdI2V07LIlg6USrt2ZzZXMoFV+zPhGLxeOaavpbm/RVltEN72Yx+Jxm\nb7dKUmf7L5+s9/HtRA2cqRACRACRACRACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQCQQCRACRACRCQBCQBCQB\nACRACRACRACRACL1i9LVntMbPATTwdRkxT3pea/u+gPE8Xx+DxrPHlaYt+qNfGvjvtXXsi0dOrKk\ndEXjZg6VMtbP2bMtXUdpEV0/Y2nNxbNf8OP+727xvsXH+N1U/wBEfy9k3nxyb+gCVQAGOWvNivX1\nrMPnGGOXNNfOJ2fSZ6w+dZKeHxDPX8N7R+6L8a+L63KdoZ7q6zvEMpnowdKJ6ywmWUyqvIKM0vQ+\nx+D6rU55+9aKx+TzWa36vbezmDwODYenW+95/Nphj5L6dQBo5wAAAAAAAAAAAAAAAAAAAAAAAAAA\nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAEiAAAEoA\nAAAAAAAAAAAAAEAkEAkRuAkQbgkQAkQAkQAkQAl5T2nx8nEMOT8dNv0l6pwfarHvpcGWPu32/WCr\nYvK4mOem6b9mGKd4Z3idmFdka0y1c892zfpMtLPaNpEV6D2Kj/Eauf6YeweQ9ieuTVz8K/3evbT4\n5NfQBKoAA8FxCvJxrUx/XMvevD8Zry8fz/Haf2RfjTx/6RSOnRMyypHu9kXjowrqVSrvPRnZVl6V\nkK0775MsUjvadn0nT4ow6bFijtSsVfPuFYvpPGtNTy54mfy6vorXDm8l9pEC7JIgBIgBIgBIgBIg\nBIgBIhIAgBIhIAgBIgBIIBIAAhIAhIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAAAAAAAAAAAAA\nAAAAAAAAABAJQkAEAAAAAAAAAAjc3BIjdG4Mkbo5kcwMjdhzHMDPc3V8xzAs3N1fMjmBZubq+Y5g\nWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmOYFm5ur5jmBZubq+Y5gWbm6vmTzAz3N2HMnmBlu5ftFTx\nOEZJ/DMW/d0t2rxKni8N1FPWkiZ9eS08e7Cy8dGGn6UhZaJljXZGnmc3UT3dPP2cnUT78xCIV6j2\nH/8A9c/6f7vXPI+w8bU1U+vL/d63du5NfUiDcVSIAS8b7RV5eOb/AIqRL2TyXtNX/e2KfXH/AHlF\n+NPH/pr4+2xcxx0hFpY11K7R16KM32ZWz3UaidqSgrc9kcPicWyZJjfw6T+727y3sXh2xarN+K0V\nh6lvPjj3e0ASqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJQAAAAAkQAkQAkAAAAAAAAAAAAAAA\nEgAAAAAAAAAAAAAAAAAAAAAgAAABKDcAN0bgkY8xzAyRux5kcwM9zdXNkTcFm6OZXzMeYFvMibKu\nZHMC2bo51U2RuC2bom6rc3BZzom6sBZzI52ADPnOdggFnMc6skFnMc6rc3BbznOp3RzAv50c6nml\nHMC/nOf4qOY5wX85zqOc5wbHOc7X5znBsc6edr85zg2ec52vzpi4NjmY5bROG+/bllVzsNTk5dLl\nn0pP8BHmMHWNmzt0aum8obm08vVjfrtnxztR0mXHzTvaZdjVRMTLkZo6yiFen9iZ2pqY/wBP93rN\n3kPY+/LfPX1rE/u9XzN3HfqzdO6vmTuIZ7m7Hc3Bnu8t7TR/vHBP9E/y9Pu837SV31umn+if5Rfi\n/j/01MMb1hjkrtKzBG0bMsmOZY11tOYamr6Und0LUc7XT7u3rJPqL8er9lcPhcFpbzyWm39v7O00\n+FYvA4Zpsc94xxu227jv1IAgAAAAAAAAABKAAAASgASgBIgBIgBIgBIhIAAAAAAAAAAAAAAAAAAC\nUACUJAAAAAAAAAAAABIAAAAAAAAAAAAAAAAAAAAg3AEbomQZbo3YzLGbAz3RNlc3YzcFs2YzdVN2\nM2Bdzom6nmNwW86JurTAMuY3REJ2BB1ZRVMVBhsbSsiqeUFXLucq3lTygp5TlXcpygp5TlXcpygp\n5TlXcqOUFXKjlXcrGYBXysdlswiYBVMdUTCyY6sZBWxlnMMZgGLGZZSwkDdHMiWO4MuY5mEyjcFn\nN1OdVzHMC3nTzqeY5gX85zqOZPMC+Lqdbk20eb/RKOZr8QybaK/XvtH7iZ9aGlp2luzT3fg19NHS\nOjbmPcYX67XH1XSZ9XIzRvMuzrK7zLkZYmYnciunb9lZ5dTk+OP+71cXeP8AZnJ/ip2nf3J/l6iL\n/Fu5L9bMWZczXi6YuIbEWTzKIuyiwLt3nuO25uI4a/hx7/rLuczg8TicvFLbfdpEK6+NPH/phhjo\nstLGkctUWnoxrrU3j1cnWTzZq1jzl1clo5Zcu8c+txR63iP3Tn6pv4+g4o5cVI9IiGe7CJ2iE7t3\nGyN2O6dwSINwSISAlAAlACRAAlAAlACRACRCQAAAAAAAAAASgASISAAAAAAAAAAAAACQAAAAAAAA\nAAAAAASAAAAAAAAAAAAAAAAIAAAQCAJljuljsCJlhMs9mOwMJYys5TkBVsjZdyHICrZPKt5E8oK4\nqmKrOVOwMIqyirPY2Bjyp2ZbAI2NmSARsbMgEbI2ZAMdjZICNkbMkSCNmOzJEgx2YyzljMAwlhKy\nWEwCuWErJhhMArlhLOWEgxljMpljIImWMyTKJA3N0IBO5vux3NwZbnMx3NwZczT4jf3MdPW27a3a\nfJOq1XNP2KdIRfi+J2trSYfcjeF+Wm1OicVeWIiN9kai8xjY12ORqultnI1Ecsujq79XP1FovWYI\nrTgeq+j8QrWZ+3Mx+r2UXeC0WG2Ti2kiN5mL807eUREvbzbaejefHJv62Iv8WUXa0WTFhVtRdlF2\nrz9WUXBtc7jR9dqc2T1ttHyhvZMvJitb0jdq6XHNcNenWVN3028U99WRj6Kb02be3Tq18/SN2Lpc\n3UdN9nOmZrqKX/DaJ/d0svvTLRzV3jomK6+Pd1vvWJj0ZczT0mXxNJht60hfFnQ4qu3N1cWTEgs3\nTur5k7gz3N2O5uDM3Y7m4MtxBuCQASIASIASAAAAAAACRCQAAAAAAAAEoSAAAAAAAAAAAlAAlCQA\nAAAAAAAAAAASAAAAAAAAAAAAIASgAAAEJAQJQCNkbMgGOyOVnsAw5TlZ7GwMOVPKy2NgY7GzIBGx\nskA2AAAAAAAAAAQkBAEghEskAxYzDPZGwK5hjMLJhjMAqmGEwumrCagomFcw2JqqtUFEsLLrV82F\no7gqljKyYYTGwMZRKUSCAQAboJnaN5Bjkneu0d5W4ccViIiOzHFWbTzNumP1Zarr8eeRMbxDW1Mx\nNO67NbkhzNVnmInqzaOZrL93JyZeV0M1++7S02jvxDWxhxx033tPpC8Z6rrezWjmZyazJG2/u03h\n2vFibTHoqvamiwVwY+nLGzV0+SZ1Mx8G0/45tOhzJ5lXMc3UVXRdlF1HP+iYsDPLPPy49/tz1+Te\npSIr0ho6ak5Ms5J8o2q6NImOrHV7XX488ypzTtHXo0s9t6zG7c1G1qz6ubeZiZ3UatXJG3yauSO7\ncvMTEx5tPLb3prPRMVr0HB8vicNxf0+7+kt+LOJwTJyY/Bnz3tH93X36N58cWvq6LSyiyndMSlC7\nmZcymLJiwLosmJVRLKLAtiU7q4lMSCzc3YxJuDMRuAlKAEgAAAlAkAAAAAABKAEgAAAAAJAAAAAA\nAAAAAAAEgAAAAAAAAAAAAAkAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAhIAAACAAAASgAAAAAAEAAAA\nhGzJAImGMwzQDDZjNVuyNgUTVhNGxysZqDVmiu1G5NN2M4waM0+DCaN2cbGcQNGaMZq3JxMJxA1J\nqx2bU4kU09slorWNwa20z02RXHbJbl26QvtFovbHWkxEdJt5y2MOHlr2U1W3jx+1hiw8vSO63lmI\nXRTaEWmtY6snRHO1VpmJ+DjavpSZl2s8b7y4HFcnh0n0gha5ebJN55KRM2mdoiPN6fh+kpwXh0Wy\nRHj5Otp/s5Ps1p62y31+em9aTMYt/OfVfxTiPjZ52naI7fBrI5t66xz5+a1rW7yx0eSL6iZjtEOX\nqNbSletom3lENjh2fbHzbbWt3iVozruc+5ztWubf4M4ybpQ2Oboyrva0Vjza8WdDR4OkXt3n9ldX\nkaePP9VtYqctYhdvt5oivTeCZ2YOxXk6ubqMfV0b9mrljfqlFcq88k7z2U5axeItDa1OPessuC8P\nya7XRWYnwqdbT/ZMilvIu4dpslNdixXja8Y5tt85djZdbDWnGOesRtXFtuw6T27No5Kx2OrKYQlC\nExKJgBnEpiyvdlEgsizKLKollFgWxLKJVRLKJBbEp3VxLKJBnuMWQJEbpBIAAAJAAAABIAAAAAAA\nlAJAAAAAAAAAAAAAASAAAAAAAAAAAAAJAAAABAJABAlAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAA\nAAABAJQAAAAgAABAAI2EoBGyJhkgGPKxmqxAKpownHC+YRMdN5BrTj67R3bOn01o7p01Iv71u89o\nb9a7LfBTfS1vWI2jf12VfQPSW8KX2mas+NC2iv6xMNfJpMnLtEbuuxtMRCtzF55NR5rPps1N/ctP\ny6uHreE6nXZ4pak48X3rT06fB7fNeI33cbX6mI32R/MWu7XF116aDSRhxbRERs8f499bkyZeeKae\nkzE2mdon81/tfxDLGOunwbzlzbx08oaHBvZHJlx48mrvaa94pu04y617576rNGLRRM0397JEd/lu\n9Dw/S3x4qxffo6mm4NjwUiKY4iI9Ib1dHFY6QIaNabbrYrLfrpJtaK1rMzPZb/s+05IpP59OyLeJ\nk7eNfRaOc1ue32I7fGXYpi5Y77M8OGMeOKxHSFsU3Y29deZMzirl6dlVvhLatCjJHeYQv1rXnps1\n8k9/VsW6qLVmZIi1rzitlvFKRvaZ2h6TSaenC9FFY+3brM+sqeG8Prp4+kZ+lvuxPkr1mqm95nfp\nDXM459676a2q1dsV7XietvNno78+CJn1cjX6mOeIm0bR33dfRU5NJjidt9t5afjG/V6JZ7I2QMNh\nnyo2BhsMuVG3wAhMSbbQRAMolnE+iuGUSCyJZRKuGUSCyJZK4llEgyZMYTuCUsYSCQASISAAAlCQ\nAAAAAAEoASCASAAAAAAAAAAAAlACRACQAAAAAAAAAEgCEoASCAAAAAAAAAAAAAAAAAAAAAAABAAA\nAAAAAAAISAIAAAAAAQAAACASgAAAQJAQAAhIDHZhln3do7z0WS18mWsajHjmes7pg3dNi5aRMNqO\nyvDHTpPRaigHZhN4hHRlaVN59JY3zRENLUavaO+yq0iNVlitJ6vNcR1MVi0zO0era1/Ea0rPvbz5\nPM5MWp45qvo2GZrhmfrsnpHpHzTCseEcM/2vrr8Q1Eb4qzy44nziPN63HpYiIiI7LNHoqabBTFii\nIpSNohuVxrKtWMEejPwY9G1FFmHB4mWJn7MdfnIM9JpIx15to5pbUaas/a6rqViI7MxPxqX0UT1r\nO3wVzpbR2hviP5i03Y5s6a879FNtHljydhExCv8AMTPJXBnRZbz0iG5ptFjwe/l96zctMVamTJtE\nyTMibu1VrdTzRMR0j0ed4lr64MVpm0RERvMz5NvX62uOJ69XhOKX1HH9bHDtFvNYnfJeOy0Z2ojX\n6jjnEq6fRUmccTvN/J9H0eKcOnx45neaxEbubwHgOHg+milI3vP2resu3Wu0JQmITsmISDHZHKz2\nJgFc1RMLJhGwK9iIZ7MZgEdgmAEwyiWCdwWRLKJVxKYsC2JTuriWUSDNlEsIlMAySx3SCRCQSIAS\nAAACRACQAAAAAAASIASAAAAAAAAAAAAAAACRACRACQASIAAAAAAAAAAAAAAAAAAAAAAAAQCUAAAA\nAAAAAAIAAAAAAAAQAAAAAACBICBICAAEJAQJQCJcLjuS2ny6fPG/LWdpd1o8T0X07SXx/e7wCdJx\nWa0jmneHQpxPDMdZmJfNtZm49weZrh0/j4o7VtSZ2+Uw0/8A7o49k92vBLc/ntFohFW9PqGXimOI\n6Tu1L8T3eCx6r2t1O3JwvHjifO99v7t/Bwf2l1PXU6rS6eJ8qUm8x+so5TsekzcSjbvs4mt4rzW5\nK2mbT0itesy2cHsvbvqtbmyz5xERWP2jd1tJwrTaONsOKtZ8585+cnDrzmn4Rq+IZObUROHD32n7\nVv8A0ej0uhxaXFGPFSK1j0bkY4jyZRVZVXFGUVWbGwKsk8mObekNrSW3pWf1a2aYjHbm7bNnQ1id\nPW0TvuDdhJEbQABMsLW2R0ZTMQrvfbz2YWzVhpanUxEd0dWkW5c8R5uXxDX1w4pnfr5Q19XxKuOJ\n2neXltVqtVxbV/RdJ715+1bypANfiOu1HENV9C0MTfNeesx2rD1PAeBYuE6aKx72W3W9/WVnBuB4\neF4dqRzZbdb5J72l160WVK02ZxCYhOwI23TsnY2BGxsnYBjsiYZsZBjMMZZSgGEolMsQDdG6NwZ7\npiVe6YkFsSziVMWZRILolMSriWUSCyJTuwhMSDMRCQSI3SAlACRCQAAEoAEoASAAAAAAAAACUACR\nACQAAAAAAAAAAAAASAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAABAAAAAAAAAAAAACBKAAAAAAAQ\nJQAAAhICEbJAYTWJ7wx8KvpC0BV4ceieWGewDHlNmWwCNjZICNhIDmcZredBecdpiY69FXCOLW+i\nUiZidukulmxxlx2paN4mNng+K4+I8Hy2yaTfl37TXetoCPfRxfp1qi3F48ofKMvtvxak8s6LDv61\nrZji9rPaLUf5PC+bfttS0q8q3p9W/wBrRMdpUZuKdN99nzvFqPbTVz7nD8OKs+do2/mW3h4D7Xaq\nZnPrtNpqz35aRaYOHY9Zk4pNt9rR+rl6zi+OnS+WN57Rv1lXp/YrNaYtruL6zNPnGO3hxP6O5w/2\nf0HDuun09Yv55Le9afznqcOvO4tBreMTHu30unnva0bWt8on+70nDuE4OHYYx4Kbesz3tPrMuhGO\nIjpDOKrK9YVpsyiGUQnYGOyUgI2SlAIEmwMWMs9kTAMJYzDOYRMArmGErZhhMArlHmzmGMwDE3Ts\nbAbs4swj5pgFkSziVcM4BZEsolXDKAZwyhjCYBkACQhIAAAAAAAJAAAAAAAAAAAAAAAAAAAShIAA\nAAAAAAJAAAAAAAAAAAAAABAJEAAAAAAAAAAAAAAAIEoBKAAAAAAAAAAAAAAABAlAAAAAAAIAAAAA\nBAkBAkBAkBAlACEgMZjdjbFW8bWrEx8YWANb6Fp+bfwab+vLDKMFK9qxH5L0bAr8OPRPKz2AY7J2\nSbAjYZAI2E7AIEgIEgIEgMdkSy2NgY7MdlmyNoBXsxmFuyNgVTVjNV3KjlBRNTlXTVHKCrlIqt5T\nlBhEMohlFerLlBjEMohMVTEARDKCITsAk2AEgAAAkAAAAAAAAAAAAAAAAAAAAAAAASAAAAAAAAD/\n2Q==";async function P0(e,t){const n=m();if(e.state="warmup",t&&(e.config=y(e.config,t)),!e.config.warmup||0===e.config.warmup.length||"none"===e.config.warmup)return{face:[],body:[],hand:[],gesture:[],object:[],performance:e.performance,timestamp:m(),persons:[],error:null};let a;return new Promise((async t=>{a="function"===typeof createImageBitmap?await async function(e){const t=(e,t="application/octet-stream")=>fetch(`data:${t};base64,${e}`).then((e=>e.blob()));let n,a;switch(e.config.warmup){case"face":n=await t(O0);break;case"body":case"full":n=await t(D0);break;default:n=null}if(n){const t=await createImageBitmap(n);a=await e.detect(t,e.config),t.close()}return a}(e):"undefined"!==typeof Image||void 0!==iZ.Canvas?await async function(e){return new Promise((t=>{let n,a;switch(e.config.warmup){case"face":n="data:image/jpeg;base64,"+O0;break;case"full":case"body":n="data:image/jpeg;base64,"+D0;break;default:n=null}if("undefined"!==typeof Image)a=new Image;else{if(!iZ.Image)return;a=new iZ.Image}a.onload=async()=>{const n=nZ(a.naturalWidth,a.naturalHeight);if(n){const r=n.getContext("2d");r&&r.drawImage(a,0,0);const s=await e.image(n),i=await e.detect(s.tensor,e.config);t(i)}else h("Warmup: Canvas not found"),t({})},n?a.src=n:t(null)}))}(e):await async function(e){const t=e=>s.from(e,"base64");let n,a;return"face"===e.config.warmup&&(n=t(O0)),"body"!==e.config.warmup&&"full"!==e.config.warmup||(n=t(D0)),n?(e.config.debug&&h("Warmup tfjs-node not loaded"),a):null}(e);const r=m();e.config.debug&&h("Warmup",e.config.warmup,Math.round(r-n),"ms"),e.emit("warmup"),t(a)}))}var L0=class{constructor(e){l(this,"version"),l(this,"config"),l(this,"result"),l(this,"state"),l(this,"process"),l(this,"tf"),l(this,"env"),l(this,"draw"),l(this,"models"),l(this,"events"),l(this,"faceTriangulation"),l(this,"faceUVMap"),l(this,"performance"),d(this,$0,void 0),d(this,M0,void 0),d(this,z0,void 0),l(this,"gl"),l(this,"analyze",((...e)=>{if(!c(this,M0))return;const t=this.tf.engine().state.numTensors,n=c(this,$0);p(this,$0,t);const a=t-n;0!==a&&h(...e,a)})),d(this,_0,(e=>{if(!c(this,z0))return null;if(!e)return"input is not defined";if(this.env.node&&!(e instanceof Yr))return"input must be a tensor";try{this.tf.getBackend()}catch(t){return"backend not loaded"}return null})),l(this,"similarity",R0),l(this,"distance",C0),l(this,"match",F0),l(this,"emit",(e=>{var t;this.events&&this.events.dispatchEvent&&(null==(t=this.events)||t.dispatchEvent(new Event(e)))})),this.env=iZ,A.wasmPath=jK["tfjs-core"].includes("-")?"https://vladmandic.github.io/tfjs/dist/":`https://cdn.jsdelivr.net/npm/@tensorflow/tfjs-backend-wasm@${rl}/dist/`,A.modelBasePath=iZ.browser?"../models/":"file://models/",A.backend=iZ.browser?"humangl":"tensorflow",this.version=oZ,Object.defineProperty(this,"version",{value:oZ}),this.config=JSON.parse(JSON.stringify(A)),Object.seal(this.config),e&&(this.config=y(this.config,e)),this.tf=x,this.state="idle",p(this,$0,0),p(this,M0,!1),p(this,z0,!1),this.performance={},this.events="undefined"!==typeof EventTarget?new EventTarget:void 0,this.models=new class{constructor(){l(this,"ssrnetage",null),l(this,"gear",null),l(this,"blazeposedetect",null),l(this,"blazepose",null),l(this,"centernet",null),l(this,"efficientpose",null),l(this,"mobilefacenet",null),l(this,"emotion",null),l(this,"facedetect",null),l(this,"faceiris",null),l(this,"facemesh",null),l(this,"faceres",null),l(this,"ssrnetgender",null),l(this,"handpose",null),l(this,"handskeleton",null),l(this,"handtrack",null),l(this,"liveness",null),l(this,"movenet",null),l(this,"nanodet",null),l(this,"posenet",null),l(this,"segmentation",null),l(this,"antispoof",null)}},this.draw={options:a0,canvas:(e,t)=>async function(e,t){if(!e||!t)return;const n=s0(t);n&&n.drawImage(e,0,0)}(e,t),face:(e,t,n)=>h0(e,t,n),body:(e,t,n)=>f0(e,t,n),hand:(e,t,n)=>m0(e,t,n),gesture:(e,t,n)=>p0(e,t,n),object:(e,t,n)=>g0(e,t,n),person:(e,t,n)=>async function(e,t,n){const a=y(a0,n);if(!t||!e)return;const r=s0(e);if(r){r.lineJoin="round",r.font=a.font;for(let e=0;e<t.length;e++)if(a.drawBoxes){if(r.strokeStyle=a.color,r.fillStyle=a.color,l0(r,t[e].box[0],t[e].box[1],t[e].box[2],t[e].box[3],a),a.drawLabels){const n=`person #${e}`;a.shadowColor&&""!==a.shadowColor&&(r.fillStyle=a.shadowColor,r.fillText(n,t[e].box[0]+3,1+t[e].box[1]+a.lineHeight,t[e].box[2])),r.fillStyle=a.labelColor,r.fillText(n,t[e].box[0]+2,0+t[e].box[1]+a.lineHeight,t[e].box[2])}r.stroke()}}}(e,t,n),all:(e,t,n)=>async function(e,t,n){if(!t||!t.performance||!t||!e)return null;const a=m(),r=y(a0,n),s=Promise.all([h0(e,t.face,r),f0(e,t.body,r),m0(e,t.hand,r),g0(e,t.object,r),p0(e,t.gesture,r)]);return r0=iZ.perfadd?r0+Math.round(m()-a):Math.round(m()-a),t.performance.draw=r0,s}(e,t,n)},this.result={face:[],body:[],hand:[],gesture:[],object:[],performance:{},timestamp:0,persons:[],error:null},this.process={tensor:null,canvas:null},this.faceTriangulation=TJ,this.faceUVMap=CJ,this.gl=Q1,this.emit("create")}reset(){const e=this.config.backend;this.config=JSON.parse(JSON.stringify(A)),this.config.backend=e}validate(e){return g(A,e||this.config)}now(){return m()}image(e,t=!0){return rZ(e,this.config,t)}async segmentation(e,t){return async function(e,t,n){var a,r;if(K1)return{data:[],canvas:null,alpha:null};K1=!0,L1||await Z1(n);const s=await rZ(e,n),i=(null==(a=s.tensor)?void 0:a.shape[2])||0,o=(null==(r=s.tensor)?void 0:r.shape[1])||0;if(!s.tensor)return{data:[],canvas:null,alpha:null};const l={};l.resize=Ph.resizeBilinear(s.tensor,[L1.inputs[0].shape?L1.inputs[0].shape[1]:0,L1.inputs[0].shape?L1.inputs[0].shape[2]:0],!1),fl(s.tensor),l.norm=Cl(l.resize,gZ.tf255),l.res=L1.execute(l.norm),l.squeeze=ep(l.res,0),2===l.squeeze.shape[2]?(l.softmax=jd(l.squeeze),[l.bg,l.fg]=fp(l.softmax,2),l.expand=Ku(l.fg,2),l.pad=Ku(l.expand,0),l.crop=Ph.cropAndResize(l.pad,[[0,0,.5,.5]],[0],[i,o]),l.data=ep(l.crop,0)):l.data=Ph.resizeBilinear(l.squeeze,[o,i]);const u=Array.from(await l.data.data());if(iZ.node&&!iZ.Canvas&&"undefined"===typeof ImageData)return n.debug&&h("canvas support missing"),Object.keys(l).forEach((e=>fl(l[e]))),{data:u,canvas:null,alpha:null};const c=nZ(i,o);await co.toPixels(l.data,c);const d=c.getContext("2d");n.segmentation.blur&&n.segmentation.blur>0&&(d.filter=`blur(${n.segmentation.blur}px)`);const p=d.getImageData(0,0,i,o),f=nZ(i,o),m=f.getContext("2d");s.canvas&&m.drawImage(s.canvas,0,0),m.globalCompositeOperation="darken",n.segmentation.blur&&n.segmentation.blur>0&&(m.filter=`blur(${n.segmentation.blur}px)`),m.drawImage(c,0,0),m.globalCompositeOperation="source-over",m.filter="none";const g=m.getImageData(0,0,i,o);for(let h=0;h<i*o;h++)g.data[4*h+3]=p.data[4*h+0];m.putImageData(g,0,0);let y=null;if(t&&f){y=nZ(i,o);const e=await rZ(t,n);fl(e.tensor);const a=y.getContext("2d");a.drawImage(e.canvas,0,0,y.width,y.height),a.drawImage(f,0,0)}return Object.keys(l).forEach((e=>fl(l[e]))),K1=!1,{data:u,canvas:f,alpha:c}}(e,t,this.config)}enhance(e){return MJ(e)}compare(e,t){return async function(e,t,n){const a={};if(!t||!n||4!==t.shape.length||t.shape.length!==n.shape.length)return e.debug||h("invalid input tensor or tensor shapes do not match:",t.shape,n.shape),0;if(1!==t.shape[0]||1!==n.shape[0]||3!==t.shape[3]||3!==n.shape[3])return e.debug||h("input tensors must be of shape [1, height, width, 3]:",t.shape,n.shape),0;a.input1=_i(t),a.input2=t.shape[1]!==n.shape[1]||t.shape[2]!==n.shape[2]?Ph.resizeBilinear(n,[t.shape[1],t.shape[2]]):_i(n),a.diff=Nc(a.input1,a.input2),a.squared=El(a.diff,a.diff),a.sum=Tc(a.squared);const r=(await a.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;return fl([a.input1,a.input2,a.diff,a.squared,a.sum]),r}(this.config,e,t)}async init(){await t0(this,!0),await this.tf.ready()}async load(e){this.state="load";const t=m(),n=Object.values(this.models).filter((e=>e)).length;e&&(this.config=y(this.config,e)),this.env.initial&&(this.config.debug&&h(`version: ${this.version}`),this.config.debug&&h(`tfjs version: ${this.tf.version["tfjs-core"]}`),await t0(this)||h("error: backend check failed"),await Al(),this.env.browser&&(this.config.debug&&h("configuration:",this.config),this.config.debug&&h("environment:",this.env),this.config.debug&&h("tf flags:",this.tf.ENV.flags))),await J1(this),this.env.initial&&this.config.debug&&h("tf engine state:",this.tf.engine().state.numBytes,"bytes",this.tf.engine().state.numTensors,"tensors"),this.env.initial=!1;Object.values(this.models).filter((e=>e)).length!==n&&(await async function(e){const t=["const","placeholder","noop","pad","squeeze","add","sub","mul","div"];for(const n of Object.keys(e.models))if(e.models[n]){let a=[];a=Array.isArray(e.models[n])?e.models[n].filter((e=>null!==e)).map((e=>e&&e.executor?e:e.model)):[e.models[n]];for(const r of a){if(!r){e.config.debug&&h("model marked as loaded but not defined:",n);continue}const a=[],s=null==r?void 0:r.executor;if(s&&s.graph.nodes)for(const e of Object.values(s.graph.nodes)){const t=e.op.toLowerCase();a.includes(t)||a.push(t)}else!s&&e.config.debug&&h("model signature not determined:",n);const i=[];for(const n of a)t.includes(n)||e.env.kernels.includes(n)||e.env.kernels.includes(n.replace("_",""))||e.env.kernels.includes(n.replace("native",""))||e.env.kernels.includes(n.replace("v2",""))||i.push(n);i.length>0&&e.config.debug&&h("model validation:",n,i)}}}(this),this.emit("load"));const a=Math.trunc(m()-t);a>(this.performance.loadModels||0)&&(this.performance.loadModels=this.env.perfadd?(this.performance.loadModels||0)+a:a)}next(e=this.result){return function(e,t){var n,a,r,s,i,o,l,u,c,d,p,h,f,g,y,A,x,b,v,w,k,I,S,N,T,C,E;const R=m();if(!e)return{face:[],body:[],hand:[],gesture:[],object:[],persons:[],performance:{},timestamp:0,error:null};const F=Date.now()-e.timestamp,$=F<1e3?8-Math.log(F+1):1;if(e.canvas&&(N0.canvas=e.canvas),e.error&&(N0.error=e.error),N0.body&&e.body.length===N0.body.length)for(let m=0;m<e.body.length;m++){const l=e.body[m].box.map(((e,t)=>(($-1)*N0.body[m].box[t]+e)/$)),u=e.body[m].boxRaw.map(((e,t)=>(($-1)*N0.body[m].boxRaw[t]+e)/$)),c=e.body[m].keypoints.map(((e,t)=>({score:e.score,part:e.part,position:[N0.body[m].keypoints[t]?(($-1)*(N0.body[m].keypoints[t].position[0]||0)+(e.position[0]||0))/$:e.position[0],N0.body[m].keypoints[t]?(($-1)*(N0.body[m].keypoints[t].position[1]||0)+(e.position[1]||0))/$:e.position[1],N0.body[m].keypoints[t]?(($-1)*(N0.body[m].keypoints[t].position[2]||0)+(e.position[2]||0))/$:e.position[2]],positionRaw:[N0.body[m].keypoints[t]?(($-1)*(N0.body[m].keypoints[t].positionRaw[0]||0)+(e.positionRaw[0]||0))/$:e.position[0],N0.body[m].keypoints[t]?(($-1)*(N0.body[m].keypoints[t].positionRaw[1]||0)+(e.positionRaw[1]||0))/$:e.position[1],N0.body[m].keypoints[t]?(($-1)*(N0.body[m].keypoints[t].positionRaw[2]||0)+(e.positionRaw[2]||0))/$:e.position[2]]}))),d={};let p={connected:{}};(null==(a=null==(n=t.body)?void 0:n.modelPath)?void 0:a.includes("efficientpose"))?p=LY:(null==(s=null==(r=t.body)?void 0:r.modelPath)?void 0:s.includes("blazepose"))?p=pY:(null==(o=null==(i=t.body)?void 0:i.modelPath)?void 0:o.includes("movenet"))&&(p=o1);for(const[e,t]of Object.entries(p.connected)){const n=[];for(let e=0;e<t.length-1;e++){const a=c.find((n=>n.part===t[e])),r=c.find((n=>n.part===t[e+1]));a&&r&&n.push([a.position,r.position])}d[e]=n}N0.body[m]={...e.body[m],box:l,boxRaw:u,keypoints:c,annotations:d}}else N0.body=JSON.parse(JSON.stringify(e.body));if(N0.hand&&e.hand.length===N0.hand.length)for(let m=0;m<e.hand.length;m++){const t=e.hand[m].box.map(((e,t)=>(($-1)*N0.hand[m].box[t]+e)/$)),n=e.hand[m].boxRaw.map(((e,t)=>(($-1)*N0.hand[m].boxRaw[t]+e)/$));N0.hand[m].keypoints.length!==e.hand[m].keypoints.length&&(N0.hand[m].keypoints=e.hand[m].keypoints);const a=e.hand[m].keypoints&&e.hand[m].keypoints.length>0?e.hand[m].keypoints.map(((e,t)=>e.map(((e,n)=>(($-1)*(N0.hand[m].keypoints[t][n]||1)+(e||0))/$)))):[];let r={};if(Object.keys(N0.hand[m].annotations).length!==Object.keys(e.hand[m].annotations).length)N0.hand[m].annotations=e.hand[m].annotations,r=N0.hand[m].annotations;else if(e.hand[m].annotations)for(const s of Object.keys(e.hand[m].annotations))r[s]=e.hand[m].annotations[s]&&e.hand[m].annotations[s][0]?e.hand[m].annotations[s].map(((e,t)=>e.map(((e,n)=>(($-1)*N0.hand[m].annotations[s][t][n]+e)/$)))):null;N0.hand[m]={...e.hand[m],box:t,boxRaw:n,keypoints:a,annotations:r}}else N0.hand=JSON.parse(JSON.stringify(e.hand));if(N0.face&&e.face.length===N0.face.length)for(let m=0;m<e.face.length;m++){const t=e.face[m].box.map(((e,t)=>(($-1)*N0.face[m].box[t]+e)/$)),n=e.face[m].boxRaw.map(((e,t)=>(($-1)*N0.face[m].boxRaw[t]+e)/$));if(e.face[m].rotation){const a={matrix:[0,0,0,0,0,0,0,0,0],angle:{roll:0,yaw:0,pitch:0},gaze:{bearing:0,strength:0}};a.matrix=null==(l=e.face[m].rotation)?void 0:l.matrix,a.angle={roll:(($-1)*((null==(c=null==(u=N0.face[m].rotation)?void 0:u.angle)?void 0:c.roll)||0)+((null==(p=null==(d=e.face[m].rotation)?void 0:d.angle)?void 0:p.roll)||0))/$,yaw:(($-1)*((null==(f=null==(h=N0.face[m].rotation)?void 0:h.angle)?void 0:f.yaw)||0)+((null==(y=null==(g=e.face[m].rotation)?void 0:g.angle)?void 0:y.yaw)||0))/$,pitch:(($-1)*((null==(x=null==(A=N0.face[m].rotation)?void 0:A.angle)?void 0:x.pitch)||0)+((null==(v=null==(b=e.face[m].rotation)?void 0:b.angle)?void 0:v.pitch)||0))/$},a.gaze={bearing:(($-1)*((null==(k=null==(w=N0.face[m].rotation)?void 0:w.gaze)?void 0:k.bearing)||0)+((null==(S=null==(I=e.face[m].rotation)?void 0:I.gaze)?void 0:S.bearing)||0))/$,strength:(($-1)*((null==(T=null==(N=N0.face[m].rotation)?void 0:N.gaze)?void 0:T.strength)||0)+((null==(E=null==(C=e.face[m].rotation)?void 0:C.gaze)?void 0:E.strength)||0))/$},N0.face[m]={...e.face[m],rotation:a,box:t,boxRaw:n}}N0.face[m]={...e.face[m],box:t,boxRaw:n}}else N0.face=JSON.parse(JSON.stringify(e.face));if(N0.object&&e.object.length===N0.object.length)for(let m=0;m<e.object.length;m++){const t=e.object[m].box.map(((e,t)=>(($-1)*N0.object[m].box[t]+e)/$)),n=e.object[m].boxRaw.map(((e,t)=>(($-1)*N0.object[m].boxRaw[t]+e)/$));N0.object[m]={...e.object[m],box:t,boxRaw:n}}else N0.object=JSON.parse(JSON.stringify(e.object));if(e.persons){const t=e.persons;if(N0.persons&&t.length===N0.persons.length)for(let e=0;e<t.length;e++)N0.persons[e].box=t[e].box.map(((t,n)=>(($-1)*N0.persons[e].box[n]+t)/$));else N0.persons=JSON.parse(JSON.stringify(t))}e.gesture&&(N0.gesture=e.gesture);const M=m();return T0=iZ.perfadd?T0+Math.round(M-R):Math.round(M-R),e.performance&&(N0.performance={...e.performance,interpolate:T0}),N0}(e,this.config)}async warmup(e){const t=m(),n=await P0(this,e),a=m();return this.performance.warmup=Math.trunc(a-t),n}async profile(e,t){const n=await this.tf.profile((()=>this.detect(e,t))),a={};for(const i of n.kernels)a[i.name]?a[i.name]+=i.kernelTimeMs:a[i.name]=i.kernelTimeMs;const r=[];Object.entries(a).forEach((e=>r.push({name:e[0],ms:e[1]}))),r.sort(((e,t)=>t.ms-e.ms)),r.length=20;const s={};for(const i of r)s[i.name]=i.ms;return s}async detect(e,t){return this.state="detect",new Promise((async n=>{var a,r,s,i,o,l,u,d,p,f,g,A,x,b,v,w,k,I,S,N,T,C;let E;this.state="config",this.config=y(this.config,t),this.state="check";const R=c(this,_0).call(this,e);R&&(h(R,e),this.emit("error"),n({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:m(),persons:[],error:R}));const F=m();await t0(this),await this.load(),E=m(),this.state="image";const $=await rZ(e,this.config);if(this.process=$,this.performance.inputProcess=this.env.perfadd?(this.performance.inputProcess||0)+Math.trunc(m()-E):Math.trunc(m()-E),this.analyze("Get Image:"),!$.tensor)return this.config.debug&&h("could not convert input to tensor"),this.emit("error"),void n({face:[],body:[],hand:[],gesture:[],object:[],performance:this.performance,timestamp:m(),persons:[],error:"could not convert input to tensor"});this.emit("image"),E=m(),this.config.skipAllowed=await async function(e,t){let n=!1;if(0===e.cacheSensitivity||!t.shape||4!==t.shape.length||t.shape[1]>2048||t.shape[2]>2048)return n;if(tZ.inputTensor)if(tZ.inputTensor.shape[1]!==t.shape[1]||tZ.inputTensor.shape[2]!==t.shape[2])fl(tZ.inputTensor),tZ.inputTensor=_i(t);else{const a={};a.diff=Nc(t,tZ.inputTensor),a.squared=El(a.diff,a.diff),a.sum=Tc(a.squared);const r=(await a.sum.data())[0]/(t.shape[1]||1)/(t.shape[2]||1)/255/3;fl([tZ.inputTensor,a.diff,a.squared,a.sum]),tZ.inputTensor=_i(t),n=r<=e.cacheSensitivity}else tZ.inputTensor=_i(t);return n}(this.config,$.tensor),this.performance.totalFrames||(this.performance.totalFrames=0),this.performance.cachedFrames||(this.performance.cachedFrames=0),this.performance.totalFrames++,this.config.skipAllowed&&this.performance.cachedFrames++,this.performance.cacheCheck=this.env.perfadd?(this.performance.cacheCheck||0)+Math.trunc(m()-E):Math.trunc(m()-E),this.analyze("Check Changed:");let M=[],z=[],_=[],O=[];this.state="detect:face",this.config.async?(M=this.config.face.enabled?v0(this,$.tensor):[],this.performance.face&&delete this.performance.face):(E=m(),M=this.config.face.enabled?await v0(this,$.tensor):[],this.performance.face=this.env.perfadd?(this.performance.face||0)+Math.trunc(m()-E):Math.trunc(m()-E)),!this.config.async||-1!==this.config.body.maxDetected&&-1!==this.config.hand.maxDetected||(M=await M),this.analyze("Start Body:"),this.state="detect:body";const D=-1===this.config.body.maxDetected?y(this.config,{body:{maxDetected:this.config.face.enabled?1*M.length:1}}):this.config;this.config.async?((null==(a=this.config.body.modelPath)?void 0:a.includes("posenet"))?z=this.config.body.enabled?X1($.tensor,D):[]:(null==(r=this.config.body.modelPath)?void 0:r.includes("blazepose"))?z=this.config.body.enabled?FY($.tensor,D):[]:(null==(s=this.config.body.modelPath)?void 0:s.includes("efficientpose"))?z=this.config.body.enabled?qY($.tensor,D):[]:(null==(i=this.config.body.modelPath)?void 0:i.includes("movenet"))&&(z=this.config.body.enabled?w1($.tensor,D):[]),this.performance.body&&delete this.performance.body):(E=m(),(null==(o=this.config.body.modelPath)?void 0:o.includes("posenet"))?z=this.config.body.enabled?await X1($.tensor,D):[]:(null==(l=this.config.body.modelPath)?void 0:l.includes("blazepose"))?z=this.config.body.enabled?await FY($.tensor,D):[]:(null==(u=this.config.body.modelPath)?void 0:u.includes("efficientpose"))?z=this.config.body.enabled?await qY($.tensor,D):[]:(null==(d=this.config.body.modelPath)?void 0:d.includes("movenet"))&&(z=this.config.body.enabled?await w1($.tensor,D):[]),this.performance.body=this.env.perfadd?(this.performance.body||0)+Math.trunc(m()-E):Math.trunc(m()-E)),this.analyze("End Body:"),this.analyze("Start Hand:"),this.state="detect:hand";const P=-1===this.config.hand.maxDetected?y(this.config,{hand:{maxDetected:this.config.face.enabled?2*M.length:1}}):this.config;this.config.async?((null==(f=null==(p=this.config.hand.detector)?void 0:p.modelPath)?void 0:f.includes("handdetect"))?_=this.config.hand.enabled?UQ($.tensor,P):[]:(null==(A=null==(g=this.config.hand.detector)?void 0:g.modelPath)?void 0:A.includes("handtrack"))&&(_=this.config.hand.enabled?t1($.tensor,P):[]),this.performance.hand&&delete this.performance.hand):(E=m(),(null==(b=null==(x=this.config.hand.detector)?void 0:x.modelPath)?void 0:b.includes("handdetect"))?_=this.config.hand.enabled?await UQ($.tensor,P):[]:(null==(w=null==(v=this.config.hand.detector)?void 0:v.modelPath)?void 0:w.includes("handtrack"))&&(_=this.config.hand.enabled?await t1($.tensor,P):[]),this.performance.hand=this.env.perfadd?(this.performance.hand||0)+Math.trunc(m()-E):Math.trunc(m()-E)),this.analyze("End Hand:"),this.analyze("Start Object:"),this.state="detect:object",this.config.async?((null==(k=this.config.object.modelPath)?void 0:k.includes("nanodet"))?O=this.config.object.enabled?T1($.tensor,this.config):[]:(null==(I=this.config.object.modelPath)?void 0:I.includes("centernet"))&&(O=this.config.object.enabled?PY($.tensor,this.config):[]),this.performance.object&&delete this.performance.object):(E=m(),(null==(S=this.config.object.modelPath)?void 0:S.includes("nanodet"))?O=this.config.object.enabled?await T1($.tensor,this.config):[]:(null==(N=this.config.object.modelPath)?void 0:N.includes("centernet"))&&(O=this.config.object.enabled?await PY($.tensor,this.config):[]),this.performance.object=this.env.perfadd?(this.performance.object||0)+Math.trunc(m()-E):Math.trunc(m()-E)),this.analyze("End Object:"),this.state="detect:await",this.config.async&&([M,z,_,O]=await Promise.all([M,z,_,O])),this.state="detect:gesture";let L=[];this.config.gesture.enabled&&(E=m(),L=[...k0(M),...w0(z),...S0(_),...I0(M)],this.config.async?this.performance.gesture&&delete this.performance.gesture:this.performance.gesture=this.env.perfadd?(this.performance.gesture||0)+Math.trunc(m()-E):Math.trunc(m()-E)),this.performance.total=this.env.perfadd?(this.performance.total||0)+Math.trunc(m()-F):Math.trunc(m()-F);const W=(null==(C=null==(T=this.process)?void 0:T.tensor)?void 0:C.shape)||[];this.result={face:M,body:z,hand:_,gesture:L,object:O,performance:this.performance,canvas:this.process.canvas,timestamp:Date.now(),error:null,get persons(){return function(e,t,n,a,r){var s,i,o,l,u,c,d,p,h,f,m,g,y,A,x,b;let v=0;const w=[];for(const k of e){const e={id:v++,face:k,body:null,hands:{left:null,right:null},gestures:[],box:[0,0,0,0]};for(const n of t)k.box[0]>n.box[0]&&k.box[0]<n.box[0]+n.box[2]&&k.box[1]+k.box[3]>n.box[1]&&k.box[1]+k.box[3]<n.box[1]+n.box[3]&&(e.body=n);if(e.body)for(const t of n)t.box[0]+t.box[2]>e.body.box[0]&&t.box[0]+t.box[2]<e.body.box[0]+e.body.box[2]&&t.box[1]+t.box[3]>e.body.box[1]&&t.box[1]+t.box[3]<e.body.box[1]+e.body.box[3]&&e.hands&&(e.hands.left=t),t.box[0]<e.body.box[0]+e.body.box[2]&&t.box[0]>e.body.box[0]&&t.box[1]+t.box[3]>e.body.box[1]&&t.box[1]+t.box[3]<e.body.box[1]+e.body.box[3]&&e.hands&&(e.hands.right=t);for(const t of a)void 0!==t.face&&t.face===k.id?null==(s=e.gestures)||s.push(t):void 0!==t.iris&&t.iris===k.id?null==(i=e.gestures)||i.push(t):void 0!==t.body&&t.body===(null==(o=e.body)?void 0:o.id)?null==(l=e.gestures)||l.push(t):void 0!==t.hand&&t.hand===(null==(c=null==(u=e.hands)?void 0:u.left)?void 0:c.id)?null==(d=e.gestures)||d.push(t):void 0!==t.hand&&t.hand===(null==(h=null==(p=e.hands)?void 0:p.right)?void 0:h.id)&&(null==(f=e.gestures)||f.push(t));const I=[],S=[],N=e=>{e&&4===e.length&&(I.push(e[0],e[0]+e[2]),S.push(e[1],e[1]+e[3]))};N(null==(m=e.face)?void 0:m.box),N(null==(g=e.body)?void 0:g.box),N(null==(A=null==(y=e.hands)?void 0:y.left)?void 0:A.box),N(null==(b=null==(x=e.hands)?void 0:x.right)?void 0:b.box);const T=Math.min(...I),C=Math.min(...S);e.box=[T,C,Math.max(...I)-T,Math.max(...S)-C],r&&r[1]&&r[2]&&(e.boxRaw=[e.box[0]/r[2],e.box[1]/r[1],e.box[2]/r[2],e.box[3]/r[1]]),w.push(e)}return w}(M,z,_,L,W)}},fl($.tensor),this.emit("detect"),this.state="idle",n(this.result)}))}};$0=new WeakMap,M0=new WeakMap,z0=new WeakMap,_0=new WeakMap}}]);